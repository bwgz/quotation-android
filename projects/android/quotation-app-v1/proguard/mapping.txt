android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> a
    int CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT -> CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT
    int CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION -> CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION
    int CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int CAPABILITY_CAN_FILTER_KEY_EVENTS -> CAPABILITY_CAN_FILTER_KEY_EVENTS
    int FEEDBACK_BRAILLE -> FEEDBACK_BRAILLE
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    int DEFAULT -> DEFAULT
    int FLAG_INCLUDE_NOT_IMPORTANT_VIEWS -> FLAG_INCLUDE_NOT_IMPORTANT_VIEWS
    int FLAG_REQUEST_TOUCH_EXPLORATION_MODE -> FLAG_REQUEST_TOUCH_EXPLORATION_MODE
    int FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY -> FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY
    int FLAG_REPORT_VIEW_IDS -> FLAG_REPORT_VIEW_IDS
    int FLAG_REQUEST_FILTER_KEY_EVENTS -> FLAG_REQUEST_FILTER_KEY_EVENTS
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    java.lang.String capabilityToString(int) -> capabilityToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> a:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> f
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> b:
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> f
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> c:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> f
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> d:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
    int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> f
android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    android.graphics.drawable.Drawable mWrapped -> mWrapped
    float mOffset -> mOffset
    float mOffsetBy -> mOffsetBy
    android.graphics.Rect mTmpRect -> mTmpRect
    void setOffset(float) -> setOffset
    float getOffset() -> getOffset
    void setOffsetBy(float) -> setOffsetBy
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.app.Watson -> android.support.v4.app.Watson:
    java.lang.String TAG -> TAG
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
android.support.v4.app.Watson$OnCreateOptionsMenuListener -> android.support.v4.app.Watson$OnCreateOptionsMenuListener:
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
android.support.v4.app.Watson$OnOptionsItemSelectedListener -> android.support.v4.app.Watson$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
android.support.v4.app.Watson$OnPrepareOptionsMenuListener -> android.support.v4.app.Watson$OnPrepareOptionsMenuListener:
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> a
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> e:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.ContextCompat -> android.support.v4.content.ContextCompat:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
android.support.v4.content.FileProvider$PathStrategy -> f:
    android.net.Uri getUriForFile(java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> g:
    java.lang.String mAuthority -> b
    java.util.HashMap mRoots -> a
    void addRoot(java.lang.String,java.io.File) -> a
    android.net.Uri getUriForFile(java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    java.lang.String EXTRA_HTML_TEXT -> EXTRA_HTML_TEXT
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
    android.content.Intent makeMainActivity(android.content.ComponentName) -> makeMainActivity
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> makeRestartActivityTask
android.support.v4.content.IntentCompat$IntentCompatImpl -> h:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplBase -> i:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplHC -> j:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
    android.content.Intent makeRestartActivityTask(android.content.ComponentName) -> b
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> k:
    android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> a
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    boolean mProcessingChange -> t
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void commitContentChanged() -> commitContentChanged
    void rollbackContentChanged() -> rollbackContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> l:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> m:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> n:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    java.lang.Object postResult(java.lang.Object) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate$1b4f7664() -> b
    void onCancelled() -> a
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> o:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> p:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> q:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> r:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> s:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> t:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> a
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> u:
    java.lang.Object[] mParams -> b
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
    android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
    boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.graphics.drawable.DrawableCompat -> android.support.v4.graphics.drawable.DrawableCompat:
    android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl IMPL -> a
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl -> v:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompat$DrawableImpl -> w:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl -> x:
    void jumpToCurrentState(android.graphics.drawable.Drawable) -> a
android.support.v4.hardware.display.DisplayManagerCompat -> android.support.v4.hardware.display.DisplayManagerCompat:
    java.util.WeakHashMap sInstances -> a
    java.lang.String DISPLAY_CATEGORY_PRESENTATION -> DISPLAY_CATEGORY_PRESENTATION
    android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl -> y:
    java.lang.Object mDisplayManagerObj -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl -> z:
    android.view.WindowManager mWindowManager -> a
    android.view.Display getDisplay(int) -> getDisplay
    android.view.Display[] getDisplays() -> getDisplays
    android.view.Display[] getDisplays(java.lang.String) -> getDisplays
android.support.v4.internal.view.SupportMenu -> android.support.v4.internal.view.SupportMenu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
android.support.v4.internal.view.SupportMenuItem -> android.support.v4.internal.view.SupportMenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    void setShowAsAction(int) -> setShowAsAction
    android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    android.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider) -> setSupportActionProvider
    android.support.v4.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    android.support.v4.internal.view.SupportMenuItem setSupportOnActionExpandListener(android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setSupportOnActionExpandListener
android.support.v4.internal.view.SupportSubMenu -> android.support.v4.internal.view.SupportSubMenu:
android.support.v4.media.TransportController -> android.support.v4.media.TransportController:
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
android.support.v4.media.TransportMediator -> android.support.v4.media.TransportMediator:
    android.content.Context mContext -> a
    android.support.v4.media.TransportPerformer mCallbacks -> b
    android.media.AudioManager mAudioManager -> c
    android.view.View mView -> d
    java.lang.Object mDispatcherState -> e
    android.support.v4.media.TransportMediatorJellybeanMR2 mController -> f
    java.util.ArrayList mListeners -> g
    android.support.v4.media.TransportMediatorCallback mTransportKeyCallback -> h
    int KEYCODE_MEDIA_PLAY -> KEYCODE_MEDIA_PLAY
    int KEYCODE_MEDIA_PAUSE -> KEYCODE_MEDIA_PAUSE
    int KEYCODE_MEDIA_RECORD -> KEYCODE_MEDIA_RECORD
    int FLAG_KEY_MEDIA_PREVIOUS -> FLAG_KEY_MEDIA_PREVIOUS
    int FLAG_KEY_MEDIA_REWIND -> FLAG_KEY_MEDIA_REWIND
    int FLAG_KEY_MEDIA_PLAY -> FLAG_KEY_MEDIA_PLAY
    int FLAG_KEY_MEDIA_PLAY_PAUSE -> FLAG_KEY_MEDIA_PLAY_PAUSE
    int FLAG_KEY_MEDIA_PAUSE -> FLAG_KEY_MEDIA_PAUSE
    int FLAG_KEY_MEDIA_STOP -> FLAG_KEY_MEDIA_STOP
    int FLAG_KEY_MEDIA_FAST_FORWARD -> FLAG_KEY_MEDIA_FAST_FORWARD
    int FLAG_KEY_MEDIA_NEXT -> FLAG_KEY_MEDIA_NEXT
    android.view.KeyEvent$Callback mKeyEventCallback -> i
    boolean isMediaKey(int) -> a
    java.lang.Object getRemoteControlClient() -> getRemoteControlClient
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void registerStateListener(android.support.v4.media.TransportStateListener) -> registerStateListener
    void unregisterStateListener(android.support.v4.media.TransportStateListener) -> unregisterStateListener
    android.support.v4.media.TransportStateListener[] getListeners() -> a
    void reportPlayingChanged() -> b
    void pushControllerState() -> c
    void refreshState() -> refreshState
    void startPlaying() -> startPlaying
    void pausePlaying() -> pausePlaying
    void stopPlaying() -> stopPlaying
    long getDuration() -> getDuration
    long getCurrentPosition() -> getCurrentPosition
    void seekTo(long) -> seekTo
    boolean isPlaying() -> isPlaying
    int getBufferPercentage() -> getBufferPercentage
    int getTransportControlFlags() -> getTransportControlFlags
    void destroy() -> destroy
android.support.v4.media.TransportMediator$1 -> A:
    android.support.v4.media.TransportMediator this$0 -> a
    void handleKey(android.view.KeyEvent) -> a
    void handleAudioFocusChange(int) -> a
    long getPlaybackPosition() -> a
    void playbackPositionUpdate(long) -> a
android.support.v4.media.TransportMediator$2 -> B:
    android.support.v4.media.TransportMediator this$0 -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
android.support.v4.media.TransportMediatorCallback -> C:
    void handleKey(android.view.KeyEvent) -> a
    void handleAudioFocusChange(int) -> a
    long getPlaybackPosition() -> a
    void playbackPositionUpdate(long) -> a
android.support.v4.media.TransportMediatorJellybeanMR2 -> D:
    android.content.Context mContext -> a
    android.media.AudioManager mAudioManager -> b
    android.view.View mTargetView -> c
    android.support.v4.media.TransportMediatorCallback mTransportCallback -> d
    java.lang.String mReceiverAction -> e
    android.content.IntentFilter mReceiverFilter -> f
    android.content.Intent mIntent -> g
    android.view.ViewTreeObserver$OnWindowAttachListener mWindowAttachListener -> h
    android.view.ViewTreeObserver$OnWindowFocusChangeListener mWindowFocusListener -> i
    android.content.BroadcastReceiver mMediaButtonReceiver -> j
    android.media.AudioManager$OnAudioFocusChangeListener mAudioFocusChangeListener -> k
    android.app.PendingIntent mPendingIntent -> l
    android.media.RemoteControlClient mRemoteControl -> m
    boolean mFocused -> n
    int mPlayState -> o
    boolean mAudioFocused -> p
    java.lang.Object getRemoteControlClient() -> a
    void destroy() -> b
    void windowAttached() -> c
    void gainFocus() -> d
    void takeAudioFocus() -> j
    void startPlaying() -> e
    long onGetPlaybackPosition() -> onGetPlaybackPosition
    void onPlaybackPositionUpdate(long) -> onPlaybackPositionUpdate
    void refreshState(boolean,long,int) -> a
    void pausePlaying() -> f
    void stopPlaying() -> g
    void dropAudioFocus() -> k
    void loseFocus() -> h
    void windowDetached() -> i
android.support.v4.media.TransportMediatorJellybeanMR2$1 -> E:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onWindowAttached() -> onWindowAttached
    void onWindowDetached() -> onWindowDetached
android.support.v4.media.TransportMediatorJellybeanMR2$2 -> F:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
android.support.v4.media.TransportMediatorJellybeanMR2$3 -> G:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.media.TransportMediatorJellybeanMR2$4 -> H:
    android.support.v4.media.TransportMediatorJellybeanMR2 this$0 -> a
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportPerformer -> android.support.v4.media.TransportPerformer:
    void onStart() -> onStart
    void onPause() -> onPause
    void onStop() -> onStop
    long onGetDuration() -> onGetDuration
    long onGetCurrentPosition() -> onGetCurrentPosition
    void onSeekTo(long) -> onSeekTo
    boolean onIsPlaying() -> onIsPlaying
    int onGetBufferPercentage() -> onGetBufferPercentage
    int onGetTransportControlFlags() -> onGetTransportControlFlags
    boolean onMediaButtonDown(int,android.view.KeyEvent) -> onMediaButtonDown
    boolean onMediaButtonUp(int,android.view.KeyEvent) -> onMediaButtonUp
    void onAudioFocusChange(int) -> onAudioFocusChange
android.support.v4.media.TransportStateListener -> android.support.v4.media.TransportStateListener:
    void onPlayingChanged(android.support.v4.media.TransportController) -> onPlayingChanged
    void onTransportControlsChanged(android.support.v4.media.TransportController) -> onTransportControlsChanged
android.support.v4.net.ConnectivityManagerCompat -> android.support.v4.net.ConnectivityManagerCompat:
    android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl IMPL -> a
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
    android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
android.support.v4.net.ConnectivityManagerCompat$BaseConnectivityManagerCompatImpl -> I:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$ConnectivityManagerCompatImpl -> J:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$GingerbreadConnectivityManagerCompatImpl -> K:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$HoneycombMR2ConnectivityManagerCompatImpl -> L:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.ConnectivityManagerCompat$JellyBeanConnectivityManagerCompatImpl -> M:
    boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> a
android.support.v4.net.TrafficStatsCompat -> android.support.v4.net.TrafficStatsCompat:
    android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl IMPL -> a
    void clearThreadStatsTag() -> clearThreadStatsTag
    int getThreadStatsTag() -> getThreadStatsTag
    void incrementOperationCount(int) -> incrementOperationCount
    void incrementOperationCount(int,int) -> incrementOperationCount
    void setThreadStatsTag(int) -> setThreadStatsTag
    void tagSocket(java.net.Socket) -> tagSocket
    void untagSocket(java.net.Socket) -> untagSocket
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl -> N:
    java.lang.ThreadLocal mThreadSocketTags -> a
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$1 -> O:
    android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl this$0 -> a
    java.lang.Object initialValue() -> initialValue
android.support.v4.net.TrafficStatsCompat$BaseTrafficStatsCompatImpl$SocketTags -> P:
    int statsTag -> a
android.support.v4.net.TrafficStatsCompat$IcsTrafficStatsCompatImpl -> Q:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.net.TrafficStatsCompat$TrafficStatsCompatImpl -> R:
    void clearThreadStatsTag() -> a
    int getThreadStatsTag() -> b
    void incrementOperationCount(int) -> a
    void incrementOperationCount(int,int) -> a
    void setThreadStatsTag(int) -> b
    void tagSocket(java.net.Socket) -> a
    void untagSocket(java.net.Socket) -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> S:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> T:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.text.BidiFormatter -> android.support.v4.text.BidiFormatter:
    android.support.v4.text.TextDirectionHeuristicCompat DEFAULT_TEXT_DIRECTION_HEURISTIC -> a
    java.lang.String LRM_STRING -> b
    java.lang.String RLM_STRING -> c
    android.support.v4.text.BidiFormatter DEFAULT_LTR_INSTANCE -> d
    android.support.v4.text.BidiFormatter DEFAULT_RTL_INSTANCE -> e
    boolean mIsRtlContext -> f
    int mFlags -> g
    android.support.v4.text.TextDirectionHeuristicCompat mDefaultTextDirectionHeuristicCompat -> h
    android.support.v4.text.BidiFormatter getInstance() -> getInstance
    android.support.v4.text.BidiFormatter getInstance(boolean) -> getInstance
    android.support.v4.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    boolean isRtlContext() -> isRtlContext
    boolean getStereoReset() -> getStereoReset
    boolean isRtl(java.lang.String) -> isRtl
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,android.support.v4.text.TextDirectionHeuristicCompat) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    int getExitDir(java.lang.String) -> a
    int getEntryDir(java.lang.String) -> b
    boolean access$000(java.util.Locale) -> a
    android.support.v4.text.TextDirectionHeuristicCompat access$100() -> a
    android.support.v4.text.BidiFormatter access$200() -> b
    android.support.v4.text.BidiFormatter access$300() -> c
android.support.v4.text.BidiFormatter$Builder -> android.support.v4.text.BidiFormatter$Builder:
    boolean mIsRtlContext -> a
    int mFlags -> b
    android.support.v4.text.TextDirectionHeuristicCompat mTextDirectionHeuristicCompat -> c
    void initialize(boolean) -> a
    android.support.v4.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
    android.support.v4.text.BidiFormatter$Builder setTextDirectionHeuristic(android.support.v4.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    android.support.v4.text.BidiFormatter build() -> build
android.support.v4.text.BidiFormatter$DirectionalityEstimator -> U:
    byte[] DIR_TYPE_CACHE -> a
    java.lang.String text -> b
    boolean isHtml -> c
    int length -> d
    int charIndex -> e
    char lastChar -> f
    int getEntryDir() -> a
    int getExitDir() -> b
    byte getCachedDirectionality(char) -> a
    byte dirTypeBackward() -> c
android.support.v4.text.ICUCompat -> android.support.v4.text.ICUCompat:
    android.support.v4.text.ICUCompat$ICUCompatImpl IMPL -> a
    java.lang.String getScript(java.lang.String) -> getScript
    java.lang.String addLikelySubtags(java.lang.String) -> addLikelySubtags
android.support.v4.text.ICUCompat$ICUCompatImpl -> V:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompat$ICUCompatImplBase -> W:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompat$ICUCompatImplIcs -> X:
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.ICUCompatIcs -> Y:
    java.lang.reflect.Method sGetScriptMethod -> a
    java.lang.reflect.Method sAddLikelySubtagsMethod -> b
    java.lang.String getScript(java.lang.String) -> a
    java.lang.String addLikelySubtags(java.lang.String) -> b
android.support.v4.text.TextDirectionHeuristicCompat -> android.support.v4.text.TextDirectionHeuristicCompat:
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat -> android.support.v4.text.TextDirectionHeuristicsCompat:
    android.support.v4.text.TextDirectionHeuristicCompat LTR -> LTR
    android.support.v4.text.TextDirectionHeuristicCompat RTL -> RTL
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_LTR -> FIRSTSTRONG_LTR
    android.support.v4.text.TextDirectionHeuristicCompat FIRSTSTRONG_RTL -> FIRSTSTRONG_RTL
    android.support.v4.text.TextDirectionHeuristicCompat ANYRTL_LTR -> ANYRTL_LTR
    android.support.v4.text.TextDirectionHeuristicCompat LOCALE -> LOCALE
    int access$100(int) -> a
    int access$200(int) -> b
android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong -> Z:
    boolean mLookForRtl -> c
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_RTL -> a
    android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong INSTANCE_LTR -> b
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong -> aa:
    android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong INSTANCE -> a
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm -> ab:
    int checkRtl(java.lang.CharSequence,int,int) -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> ac:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm mAlgorithm -> a
    boolean defaultIsRtl() -> a
    boolean isRtl(char[],int,int) -> isRtl
    boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> ad:
    boolean mDefaultIsRtl -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> ae:
    android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale INSTANCE -> a
    boolean defaultIsRtl() -> a
android.support.v4.text.TextUtilsCompat -> android.support.v4.text.TextUtilsCompat:
    java.util.Locale ROOT -> ROOT
    java.lang.String ARAB_SCRIPT_SUBTAG -> a
    java.lang.String HEBR_SCRIPT_SUBTAG -> b
    java.lang.String htmlEncode(java.lang.String) -> htmlEncode
    int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
android.support.v4.util.AtomicFile -> android.support.v4.util.AtomicFile:
    java.io.File mBaseName -> a
    java.io.File mBackupName -> b
    java.io.File getBaseFile() -> getBaseFile
    void delete() -> delete
    java.io.FileOutputStream startWrite() -> startWrite
    void finishWrite(java.io.FileOutputStream) -> finishWrite
    void failWrite(java.io.FileOutputStream) -> failWrite
    java.io.FileInputStream openRead() -> openRead
    byte[] readFully() -> readFully
    boolean sync(java.io.FileOutputStream) -> a
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LongSparseArray -> android.support.v4.util.LongSparseArray:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    long[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    android.support.v4.util.LongSparseArray clone() -> clone
    java.lang.Object get(long) -> get
    java.lang.Object get(long,java.lang.Object) -> get
    void delete(long) -> delete
    void remove(long) -> remove
    void removeAt(int) -> removeAt
    void gc() -> a
    void put(long,java.lang.Object) -> put
    int size() -> size
    long keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(long) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(long,java.lang.Object) -> append
    int binarySearch(long[],int,int,long) -> a
    int idealByteArraySize(int) -> idealByteArraySize
    int idealLongArraySize(int) -> idealLongArraySize
    java.lang.Object clone() -> clone
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> trimToSize
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.SparseArrayCompat -> android.support.v4.util.SparseArrayCompat:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void removeAtRange(int,int) -> removeAtRange
    void gc() -> a
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> a
    int idealIntArraySize(int) -> a
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> af:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> ag:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> ah:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> ai:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> aj:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> ak:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> al:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean:
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> am:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.ActionProvider -> android.support.v4.view.ActionProvider:
    android.content.Context mContext -> a
    android.support.v4.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> b
    android.support.v4.view.ActionProvider$VisibilityListener mVisibilityListener -> c
    android.content.Context getContext() -> getContext
    android.view.View onCreateActionView() -> onCreateActionView
    android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    boolean overridesItemVisibility() -> overridesItemVisibility
    boolean isVisible() -> isVisible
    void refreshVisibility() -> refreshVisibility
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(android.support.v4.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    void setVisibilityListener(android.support.v4.view.ActionProvider$VisibilityListener) -> setVisibilityListener
android.support.v4.view.ActionProvider$SubUiVisibilityListener -> android.support.v4.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
android.support.v4.view.ActionProvider$VisibilityListener -> android.support.v4.view.ActionProvider$VisibilityListener:
    void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
android.support.v4.view.GestureDetectorCompat -> android.support.v4.view.GestureDetectorCompat:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl mImpl -> a
    boolean isLongpressEnabled() -> isLongpressEnabled
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImpl -> an:
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> ao:
    int mTouchSlopSquare -> a
    int mDoubleTapSlopSquare -> b
    int mMinimumFlingVelocity -> c
    int mMaximumFlingVelocity -> d
    int LONGPRESS_TIMEOUT -> e
    int TAP_TIMEOUT -> f
    int DOUBLE_TAP_TIMEOUT -> g
    android.os.Handler mHandler -> h
    android.view.GestureDetector$OnGestureListener mListener -> i
    android.view.GestureDetector$OnDoubleTapListener mDoubleTapListener -> j
    boolean mStillDown -> k
    boolean mDeferConfirmSingleTap -> l
    boolean mInLongPress -> m
    boolean mAlwaysInTapRegion -> n
    boolean mAlwaysInBiggerTapRegion -> o
    android.view.MotionEvent mCurrentDownEvent -> p
    android.view.MotionEvent mPreviousUpEvent -> q
    boolean mIsDoubleTapping -> r
    float mLastFocusX -> s
    float mLastFocusY -> t
    float mDownFocusX -> u
    float mDownFocusY -> v
    boolean mIsLongpressEnabled -> w
    android.view.VelocityTracker mVelocityTracker -> x
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
    void setIsLongpressEnabled(boolean) -> a
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    android.view.MotionEvent access$000(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> a
    android.view.GestureDetector$OnGestureListener access$100(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> b
    void access$200(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> c
    android.view.GestureDetector$OnDoubleTapListener access$300(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> d
    boolean access$400(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> e
    boolean access$502(android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase,boolean) -> a
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> ap:
    android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplBase this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> aq:
    android.view.GestureDetector mDetector -> a
    boolean isLongpressEnabled() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void setIsLongpressEnabled(boolean) -> a
    void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.GravityCompat:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int RELATIVE_LAYOUT_DIRECTION -> RELATIVE_LAYOUT_DIRECTION
    int START -> START
    int END -> END
    int RELATIVE_HORIZONTAL_GRAVITY_MASK -> RELATIVE_HORIZONTAL_GRAVITY_MASK
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    int getAbsoluteGravity(int,int) -> getAbsoluteGravity
android.support.v4.view.GravityCompat$GravityCompatImpl -> ar:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> as:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> at:
    int getAbsoluteGravity(int,int) -> a
    void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> a
    void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> a
    void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
    void startTracking(android.view.KeyEvent) -> startTracking
    boolean isTracking(android.view.KeyEvent) -> isTracking
    java.lang.Object getKeyDispatcherState(android.view.View) -> getKeyDispatcherState
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> dispatch
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> au:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
    java.lang.Object getKeyDispatcherState(android.view.View) -> a
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> av:
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
    java.lang.Object getKeyDispatcherState(android.view.View) -> a
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> aw:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> ax:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
    boolean isTracking(android.view.KeyEvent) -> b
    java.lang.Object getKeyDispatcherState(android.view.View) -> a
    boolean dispatch(android.view.KeyEvent,android.view.KeyEvent$Callback,java.lang.Object,java.lang.Object) -> a
android.support.v4.view.MarginLayoutParamsCompat -> android.support.v4.view.MarginLayoutParamsCompat:
    android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl IMPL -> a
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImpl -> ay:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> a
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> b
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> c
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> d
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> c
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> d
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase -> az:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> a
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> b
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> c
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> d
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> c
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> d
android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 -> aA:
    int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> a
    int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> b
    void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> a
    void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> b
    boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> c
    int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> d
    void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> c
    void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> d
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    android.view.View getActionView(android.view.MenuItem) -> getActionView
    android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider) -> setActionProvider
    android.support.v4.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    boolean expandActionView(android.view.MenuItem) -> expandActionView
    boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> aB:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean collapseActionView(android.view.MenuItem) -> c
    boolean isActionViewExpanded(android.view.MenuItem) -> d
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> aC:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean collapseActionView(android.view.MenuItem) -> c
    boolean isActionViewExpanded(android.view.MenuItem) -> d
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl -> aD:
    boolean expandActionView(android.view.MenuItem) -> b
    boolean collapseActionView(android.view.MenuItem) -> c
    boolean isActionViewExpanded(android.view.MenuItem) -> d
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl$1 -> aE:
    android.support.v4.view.MenuItemCompat$OnActionExpandListener val$listener -> a
    android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl this$0 -> b
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> aF:
    void setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,int) -> b
    android.view.View getActionView(android.view.MenuItem) -> a
    boolean expandActionView(android.view.MenuItem) -> b
    boolean collapseActionView(android.view.MenuItem) -> c
    boolean isActionViewExpanded(android.view.MenuItem) -> d
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompat$OnActionExpandListener) -> a
android.support.v4.view.MenuItemCompat$OnActionExpandListener -> android.support.v4.view.MenuItemCompat$OnActionExpandListener:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs -> aG:
    android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy) -> a
android.support.v4.view.MenuItemCompatIcs$OnActionExpandListenerWrapper -> aH:
    android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy mWrapped -> a
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
android.support.v4.view.MenuItemCompatIcs$SupportActionExpandProxy -> aI:
    boolean onMenuItemActionExpand(android.view.MenuItem) -> a
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int ACTION_HOVER_ENTER -> ACTION_HOVER_ENTER
    int ACTION_HOVER_EXIT -> ACTION_HOVER_EXIT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
    int getPointerCount(android.view.MotionEvent) -> getPointerCount
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> aJ:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> aK:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> aL:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> aM:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> aN:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> a
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> setTextSize
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> a
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$PageListener -> aO:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> aP:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> aQ:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> aR:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> aS:
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> aT:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> aU:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> aV:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> aW:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int IMPORTANT_FOR_ACCESSIBILITY_AUTO -> IMPORTANT_FOR_ACCESSIBILITY_AUTO
    int IMPORTANT_FOR_ACCESSIBILITY_YES -> IMPORTANT_FOR_ACCESSIBILITY_YES
    int IMPORTANT_FOR_ACCESSIBILITY_NO -> IMPORTANT_FOR_ACCESSIBILITY_NO
    int LAYER_TYPE_NONE -> LAYER_TYPE_NONE
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int LAYOUT_DIRECTION_LTR -> LAYOUT_DIRECTION_LTR
    int LAYOUT_DIRECTION_RTL -> LAYOUT_DIRECTION_RTL
    int LAYOUT_DIRECTION_INHERIT -> LAYOUT_DIRECTION_INHERIT
    int LAYOUT_DIRECTION_LOCALE -> LAYOUT_DIRECTION_LOCALE
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    boolean hasTransientState(android.view.View) -> hasTransientState
    void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    float getAlpha(android.view.View) -> getAlpha
    void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    int getLayerType(android.view.View) -> getLayerType
    int getLabelFor(android.view.View) -> getLabelFor
    void setLabelFor(android.view.View,int) -> setLabelFor
    void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    int getLayoutDirection(android.view.View) -> getLayoutDirection
    void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    boolean isOpaque(android.view.View) -> isOpaque
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> aX:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    int getLabelFor(android.view.View) -> h
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> i
    void setLayoutDirection(android.view.View,int) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> j
    boolean isOpaque(android.view.View) -> k
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> aY:
    boolean isOpaque(android.view.View) -> k
android.support.v4.view.ViewCompat$GBViewCompatImpl -> aZ:
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
android.support.v4.view.ViewCompat$HCViewCompatImpl -> ba:
    long getFrameTime() -> a
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> bb:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> bc:
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> j
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> bd:
    int getLabelFor(android.view.View) -> h
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> i
    void setLayoutDirection(android.view.View,int) -> f
android.support.v4.view.ViewCompat$ViewCompatImpl -> be:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    float getAlpha(android.view.View) -> f
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> g
    int getLabelFor(android.view.View) -> h
    void setLabelFor(android.view.View,int) -> e
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> i
    void setLayoutDirection(android.view.View,int) -> f
    android.view.ViewParent getParentForAccessibility(android.view.View) -> j
    boolean isOpaque(android.view.View) -> k
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> bf:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> bg:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> bh:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> bi:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> bj:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> bk:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> bl:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    long mFakeDragBeginTime -> Q
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> R
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> S
    boolean mFirstLayout -> T
    boolean mNeedCalculatePageOffsets -> U
    boolean mCalledSuper -> V
    int mDecorChildCount -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    void initViewPager() -> d
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    int getClientWidth() -> e
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> setPageTransformer
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> b
    void sortChildDrawingOrder() -> f
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> c
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll(boolean) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> b
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> i
    boolean pageRight() -> j
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> c
android.support.v4.view.ViewPager$1 -> bm:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> bn:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> bo:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> bp:
android.support.v4.view.ViewPager$ItemInfo -> bq:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
    float widthFactor -> a
    boolean needsMeasure -> b
    int position -> c
    int childIndex -> d
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> br:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> bs:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$PageTransformer:
    void transformPage(android.view.View,float) -> transformPage
android.support.v4.view.ViewPager$PagerObserver -> bt:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> bu:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$ViewPositionComparator -> bv:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewParentCompat -> android.support.v4.view.ViewParentCompat:
    android.support.v4.view.ViewParentCompat$ViewParentCompatImpl IMPL -> a
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> bw:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatImpl -> bx:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> by:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewParentCompatICS -> android.support.v4.view.ViewParentCompatICS:
    boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
android.support.v4.view.WindowCompat -> android.support.v4.view.WindowCompat:
    int FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    int FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    int FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int TYPE_ANNOUNCEMENT -> TYPE_ANNOUNCEMENT
    int TYPE_VIEW_ACCESSIBILITY_FOCUSED -> TYPE_VIEW_ACCESSIBILITY_FOCUSED
    int TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED -> TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED
    int TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY -> TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY
    int TYPE_GESTURE_DETECTION_START -> TYPE_GESTURE_DETECTION_START
    int TYPE_GESTURE_DETECTION_END -> TYPE_GESTURE_DETECTION_END
    int TYPE_TOUCH_INTERACTION_START -> TYPE_TOUCH_INTERACTION_START
    int TYPE_TOUCH_INTERACTION_END -> TYPE_TOUCH_INTERACTION_END
    int TYPES_ALL_MASK -> TYPES_ALL_MASK
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> bz:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> bA:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> bB:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> bC:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> bD:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> bE:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> bF:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
    boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> b
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> bG:
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> bH:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> bI:
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    int ACTION_CLICK -> ACTION_CLICK
    int ACTION_LONG_CLICK -> ACTION_LONG_CLICK
    int ACTION_ACCESSIBILITY_FOCUS -> ACTION_ACCESSIBILITY_FOCUS
    int ACTION_CLEAR_ACCESSIBILITY_FOCUS -> ACTION_CLEAR_ACCESSIBILITY_FOCUS
    int ACTION_NEXT_AT_MOVEMENT_GRANULARITY -> ACTION_NEXT_AT_MOVEMENT_GRANULARITY
    int ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY -> ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY
    int ACTION_NEXT_HTML_ELEMENT -> ACTION_NEXT_HTML_ELEMENT
    int ACTION_PREVIOUS_HTML_ELEMENT -> ACTION_PREVIOUS_HTML_ELEMENT
    int ACTION_SCROLL_FORWARD -> ACTION_SCROLL_FORWARD
    int ACTION_SCROLL_BACKWARD -> ACTION_SCROLL_BACKWARD
    int ACTION_COPY -> ACTION_COPY
    int ACTION_PASTE -> ACTION_PASTE
    int ACTION_CUT -> ACTION_CUT
    int ACTION_SET_SELECTION -> ACTION_SET_SELECTION
    java.lang.String ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT -> ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT
    java.lang.String ACTION_ARGUMENT_HTML_ELEMENT_STRING -> ACTION_ARGUMENT_HTML_ELEMENT_STRING
    java.lang.String ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN -> ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN
    java.lang.String ACTION_ARGUMENT_SELECTION_START_INT -> ACTION_ARGUMENT_SELECTION_START_INT
    java.lang.String ACTION_ARGUMENT_SELECTION_END_INT -> ACTION_ARGUMENT_SELECTION_END_INT
    int FOCUS_INPUT -> FOCUS_INPUT
    int FOCUS_ACCESSIBILITY -> FOCUS_ACCESSIBILITY
    int MOVEMENT_GRANULARITY_CHARACTER -> MOVEMENT_GRANULARITY_CHARACTER
    int MOVEMENT_GRANULARITY_WORD -> MOVEMENT_GRANULARITY_WORD
    int MOVEMENT_GRANULARITY_LINE -> MOVEMENT_GRANULARITY_LINE
    int MOVEMENT_GRANULARITY_PARAGRAPH -> MOVEMENT_GRANULARITY_PARAGRAPH
    int MOVEMENT_GRANULARITY_PAGE -> MOVEMENT_GRANULARITY_PAGE
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> getInfo
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    void addChild(android.view.View,int) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    boolean performAction(int,android.os.Bundle) -> performAction
    void setMovementGranularities(int) -> setMovementGranularities
    int getMovementGranularities() -> getMovementGranularities
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void setParent(android.view.View,int) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isVisibleToUser() -> isVisibleToUser
    void setVisibleToUser(boolean) -> setVisibleToUser
    boolean isAccessibilityFocused() -> isAccessibilityFocused
    void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    java.lang.String getViewIdResourceName() -> getViewIdResourceName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> bJ:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> c
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> bK:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    java.lang.Object obtain(android.view.View,int) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void setSource(java.lang.Object,android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    int getWindowId(java.lang.Object) -> i
    int getChildCount(java.lang.Object) -> c
    java.lang.Object getChild(java.lang.Object,int) -> b
    void addChild(java.lang.Object,android.view.View) -> a
    void addChild(java.lang.Object,android.view.View,int) -> b
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    boolean performAction(java.lang.Object,int) -> c
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    java.lang.Object getParent(java.lang.Object) -> g
    void setParent(java.lang.Object,android.view.View,int) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> j
    void setCheckable(java.lang.Object,boolean) -> a
    boolean isChecked(java.lang.Object) -> k
    void setChecked(java.lang.Object,boolean) -> b
    boolean isFocusable(java.lang.Object) -> n
    void setFocusable(java.lang.Object,boolean) -> e
    boolean isFocused(java.lang.Object) -> o
    void setFocused(java.lang.Object,boolean) -> f
    boolean isVisibleToUser(java.lang.Object) -> v
    void setVisibleToUser(java.lang.Object,boolean) -> k
    boolean isAccessibilityFocused(java.lang.Object) -> w
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    boolean isSelected(java.lang.Object) -> s
    void setSelected(java.lang.Object,boolean) -> j
    boolean isClickable(java.lang.Object) -> l
    void setClickable(java.lang.Object,boolean) -> c
    boolean isLongClickable(java.lang.Object) -> p
    void setLongClickable(java.lang.Object,boolean) -> g
    boolean isEnabled(java.lang.Object) -> m
    void setEnabled(java.lang.Object,boolean) -> d
    boolean isPassword(java.lang.Object) -> q
    void setPassword(java.lang.Object,boolean) -> h
    boolean isScrollable(java.lang.Object) -> r
    void setScrollable(java.lang.Object,boolean) -> i
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> h
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> t
    java.lang.String getViewIdResourceName(java.lang.Object) -> x
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> bL:
    java.lang.Object obtain(android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    void addChild(java.lang.Object,android.view.View,int) -> b
    void setSource(java.lang.Object,android.view.View,int) -> a
    boolean isVisibleToUser(java.lang.Object) -> v
    void setVisibleToUser(java.lang.Object,boolean) -> k
    boolean isAccessibilityFocused(java.lang.Object) -> w
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    void setParent(java.lang.Object,android.view.View,int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> bM:
    java.lang.String getViewIdResourceName(java.lang.Object) -> x
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> bN:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(android.view.View,int) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    void addChild(java.lang.Object,android.view.View,int) -> b
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    java.lang.Object getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isVisibleToUser(java.lang.Object) -> v
    boolean isAccessibilityFocused(java.lang.Object) -> w
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> c
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setVisibleToUser(java.lang.Object,boolean) -> k
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setSource(java.lang.Object,android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
    void setParent(java.lang.Object,android.view.View,int) -> c
    java.lang.String getViewIdResourceName(java.lang.Object) -> x
    void setViewIdResourceName(java.lang.Object,java.lang.String) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.accessibility.AccessibilityNodeProviderCompat:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> getProvider
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> bO:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> bP:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> bQ:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> bR:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> bS:
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> bT:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> bU:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    void setSource(android.view.View,int) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getMaxScrollX() -> getMaxScrollX
    void setMaxScrollX(int) -> setMaxScrollX
    int getMaxScrollY() -> getMaxScrollY
    void setMaxScrollY(int) -> setMaxScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> bV:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> bW:
    int getMaxScrollX(java.lang.Object) -> w
    int getMaxScrollY(java.lang.Object) -> x
    void setMaxScrollX(java.lang.Object,int) -> i
    void setMaxScrollY(java.lang.Object,int) -> j
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> bX:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> a
    void setSource(java.lang.Object,android.view.View,int) -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    void setChecked(java.lang.Object,boolean) -> a
    boolean isEnabled(java.lang.Object) -> r
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> t
    void setPassword(java.lang.Object,boolean) -> d
    boolean isFullScreen(java.lang.Object) -> s
    void setFullScreen(java.lang.Object,boolean) -> c
    boolean isScrollable(java.lang.Object) -> u
    void setScrollable(java.lang.Object,boolean) -> e
    int getItemCount(java.lang.Object) -> h
    void setItemCount(java.lang.Object,int) -> d
    int getCurrentItemIndex(java.lang.Object) -> f
    void setCurrentItemIndex(java.lang.Object,int) -> b
    int getFromIndex(java.lang.Object) -> g
    void setFromIndex(java.lang.Object,int) -> c
    int getToIndex(java.lang.Object) -> o
    void setToIndex(java.lang.Object,int) -> h
    int getScrollX(java.lang.Object) -> k
    void setScrollX(java.lang.Object,int) -> f
    int getScrollY(java.lang.Object) -> l
    void setScrollY(java.lang.Object,int) -> g
    int getMaxScrollX(java.lang.Object) -> w
    void setMaxScrollX(java.lang.Object,int) -> i
    int getMaxScrollY(java.lang.Object) -> x
    void setMaxScrollY(java.lang.Object,int) -> j
    int getAddedCount(java.lang.Object) -> b
    void setAddedCount(java.lang.Object,int) -> a
    int getRemovedCount(java.lang.Object) -> j
    void setRemovedCount(java.lang.Object,int) -> e
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    java.util.List getText(java.lang.Object) -> n
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void recycle(java.lang.Object) -> v
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> bY:
    void setSource(java.lang.Object,android.view.View,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> bZ:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    int getMaxScrollX(java.lang.Object) -> w
    int getMaxScrollY(java.lang.Object) -> x
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setMaxScrollX(java.lang.Object,int) -> i
    void setMaxScrollY(java.lang.Object,int) -> j
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setSource(java.lang.Object,android.view.View,int) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$ChangeObserver -> ca:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> cb:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> cc:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> cd:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int LOCK_MODE_UNLOCKED -> LOCK_MODE_UNLOCKED
    int LOCK_MODE_LOCKED_CLOSED -> LOCK_MODE_LOCKED_CLOSED
    int LOCK_MODE_LOCKED_OPEN -> LOCK_MODE_LOCKED_OPEN
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    void setDrawerShadow(int,int) -> setDrawerShadow
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> setDrawerLockMode
    void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    int getDrawerLockMode(int) -> getDrawerLockMode
    int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    void updateDrawerState$5cdeb3e3(int,android.view.View) -> a
    void setDrawerViewOffset(android.view.View,float) -> a
    float getDrawerViewOffset(android.view.View) -> a
    int getDrawerViewGravity(android.view.View) -> c
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> d
    boolean isDrawerView(android.view.View) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> closeDrawers
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> openDrawer
    void openDrawer(int) -> openDrawer
    void closeDrawer(android.view.View) -> closeDrawer
    void closeDrawer(int) -> closeDrawer
    boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    boolean isDrawerOpen(int) -> isDrawerOpen
    boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    boolean isDrawerVisible(int) -> isDrawerVisible
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.View findVisibleDrawer() -> d
    void cancelChildViewTouch() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> c
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> ce:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$DrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> gravity
    float onScreen -> a
    boolean isPeeking -> b
    boolean knownOpen -> c
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> cf:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$SimpleDrawerListener -> android.support.v4.widget.DrawerLayout$SimpleDrawerListener:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$ViewDragCallback -> cg:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> ch:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> ci:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> cj:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> ck:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ExploreByTouchHelper -> android.support.v4.widget.ExploreByTouchHelper:
    int INVALID_ID -> INVALID_ID
    java.lang.String DEFAULT_CLASS_NAME -> b
    android.graphics.Rect mTempScreenRect -> c
    android.graphics.Rect mTempParentRect -> d
    android.graphics.Rect mTempVisibleRect -> e
    int[] mTempGlobalRect -> f
    android.view.accessibility.AccessibilityManager mManager -> g
    android.view.View mView -> h
    android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider mNodeProvider -> i
    int mFocusedVirtualViewId -> j
    int mHoveredVirtualViewId -> k
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    void invalidateRoot() -> invalidateRoot
    void invalidateVirtualView(int) -> invalidateVirtualView
    int getFocusedVirtualView() -> getFocusedVirtualView
    void updateHoveredVirtualView(int) -> a
    boolean intersectVisibleToUser(android.graphics.Rect) -> a
    boolean isAccessibilityFocused(int) -> b
    int getVirtualViewAt(float,float) -> getVirtualViewAt
    void getVisibleVirtualViews(java.util.List) -> getVisibleVirtualViews
    void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    void onPopulateNodeForVirtualView(int,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForVirtualView
    boolean onPerformActionForVirtualView(int,int,android.os.Bundle) -> onPerformActionForVirtualView
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat access$100(android.support.v4.widget.ExploreByTouchHelper,int) -> a
    boolean access$200(android.support.v4.widget.ExploreByTouchHelper,int,int,android.os.Bundle) -> a
android.support.v4.widget.ExploreByTouchHelper$ExploreByTouchNodeProvider -> cl:
    android.support.v4.widget.ExploreByTouchHelper this$0 -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.ScrollerCompat:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context) -> create
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    boolean isFinished() -> isFinished
    int getCurrX() -> getCurrX
    int getCurrY() -> getCurrY
    int getFinalX() -> getFinalX
    int getFinalY() -> getFinalY
    float getCurrVelocity() -> getCurrVelocity
    boolean computeScrollOffset() -> computeScrollOffset
    void startScroll(int,int,int,int) -> startScroll
    void startScroll(int,int,int,int,int) -> startScroll
    void fling(int,int,int,int,int,int,int,int) -> fling
    void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    void abortAnimation() -> abortAnimation
    void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    boolean isOverScrolled() -> isOverScrolled
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> cm:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> cn:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> co:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    float getCurrVelocity(java.lang.Object) -> d
    boolean computeScrollOffset(java.lang.Object) -> e
    void startScroll(java.lang.Object,int,int,int,int) -> a
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> a
    void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> f
    void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> a
    void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> b
    boolean isOverScrolled(java.lang.Object) -> g
    int getFinalX(java.lang.Object) -> h
    int getFinalY(java.lang.Object) -> i
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> cp:
    float getCurrVelocity(java.lang.Object) -> d
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> a
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> setSearchableInfo
    void setImeOptions(android.view.View,int) -> setImeOptions
    void setInputType(android.view.View,int) -> setInputType
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    void setOnCloseListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> setOnCloseListener
    java.lang.CharSequence getQuery(android.view.View) -> getQuery
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(android.view.View,java.lang.CharSequence) -> setQueryHint
    void setIconified(android.view.View,boolean) -> setIconified
    boolean isIconified(android.view.View) -> isIconified
    void setSubmitButtonEnabled(android.view.View,boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled(android.view.View) -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(android.view.View,boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled(android.view.View) -> isQueryRefinementEnabled
    void setMaxWidth(android.view.View,int) -> setMaxWidth
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat -> android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat:
    java.lang.Object mListener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> cq:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> cr:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$2 -> cs:
    android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onClose() -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatIcsImpl -> ct:
    android.view.View newSearchView(android.content.Context) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> cu:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> cv:
    android.view.View newSearchView(android.content.Context) -> a
    void setSearchableInfo(android.view.View,android.content.ComponentName) -> a
    void setImeOptions(android.view.View,int) -> b
    void setInputType(android.view.View,int) -> c
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
    java.lang.Object newOnCloseListener(android.support.v4.widget.SearchViewCompat$OnCloseListenerCompat) -> a
    void setOnCloseListener(java.lang.Object,java.lang.Object) -> b
    java.lang.CharSequence getQuery(android.view.View) -> a
    void setQuery(android.view.View,java.lang.CharSequence,boolean) -> a
    void setQueryHint(android.view.View,java.lang.CharSequence) -> a
    void setIconified(android.view.View,boolean) -> a
    boolean isIconified(android.view.View) -> b
    void setSubmitButtonEnabled(android.view.View,boolean) -> b
    boolean isSubmitButtonEnabled(android.view.View) -> c
    void setQueryRefinementEnabled(android.view.View,boolean) -> c
    boolean isQueryRefinementEnabled(android.view.View) -> d
    void setMaxWidth(android.view.View,int) -> a
android.support.v4.widget.SearchViewCompatHoneycomb -> cw:
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> cx:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$2 -> cy:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge val$listener -> a
    boolean onClose() -> onClose
android.support.v4.widget.SearchViewCompatHoneycomb$OnCloseListenerCompatBridge -> cz:
    boolean onClose() -> a
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> cA:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SearchViewCompatIcs -> android.support.v4.widget.SearchViewCompatIcs:
android.support.v4.widget.SearchViewCompatIcs$MySearchView -> android.support.v4.widget.SearchViewCompatIcs$MySearchView:
    void onActionViewCollapsed() -> onActionViewCollapsed
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> b
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> c
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> d
    java.lang.String[] mOriginalFrom -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelOpened(android.view.View) -> a
    void dispatchOnPanelClosed(android.view.View) -> b
    void updateObscuredViewsVisibility(android.view.View) -> c
    void setAllChildrenVisible() -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane$5359dc96(int) -> a
    void smoothSlideOpen() -> smoothSlideOpen
    boolean openPane() -> openPane
    void smoothSlideClosed() -> smoothSlideClosed
    boolean closePane() -> closePane
    boolean isOpen() -> isOpen
    boolean canSlide() -> canSlide
    boolean isSlideable() -> isSlideable
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> e
    boolean smoothSlideTo$254957c(float) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> b
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean isDimmed(android.view.View) -> d
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> cB:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    boolean filter(android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> cC:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> cD:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> d
    float weight -> weight
    boolean slideable -> a
    boolean dimWhenOffset -> b
    android.graphics.Paint dimPaint -> c
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$PanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SavedState -> cE:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> cF:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$SimplePanelSlideListener:
    void onPanelSlide(android.view.View,float) -> onPanelSlide
    void onPanelOpened(android.view.View) -> onPanelOpened
    void onPanelClosed(android.view.View) -> onPanelClosed
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> cG:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> cH:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> cI:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> cJ:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.ViewDragHelper:
    int INVALID_POINTER -> INVALID_POINTER
    int STATE_IDLE -> STATE_IDLE
    int STATE_DRAGGING -> STATE_DRAGGING
    int STATE_SETTLING -> STATE_SETTLING
    int EDGE_LEFT -> EDGE_LEFT
    int EDGE_RIGHT -> EDGE_RIGHT
    int EDGE_TOP -> EDGE_TOP
    int EDGE_BOTTOM -> EDGE_BOTTOM
    int EDGE_ALL -> EDGE_ALL
    int DIRECTION_HORIZONTAL -> DIRECTION_HORIZONTAL
    int DIRECTION_VERTICAL -> DIRECTION_VERTICAL
    int DIRECTION_ALL -> DIRECTION_ALL
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> create
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> create
    void setMinVelocity(float) -> setMinVelocity
    float getMinVelocity() -> getMinVelocity
    int getViewDragState() -> getViewDragState
    void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    int getEdgeSize() -> getEdgeSize
    void captureChildView(android.view.View,int) -> captureChildView
    android.view.View getCapturedView() -> getCapturedView
    int getActivePointerId() -> getActivePointerId
    int getTouchSlop() -> getTouchSlop
    void cancel() -> cancel
    void abort() -> abort
    boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    void flingCapturedView(int,int,int,int) -> flingCapturedView
    boolean continueSettling(boolean) -> continueSettling
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory(int) -> b
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> a
    boolean isPointerDown(int) -> isPointerDown
    void setDragState(int) -> a
    boolean tryCaptureViewForDrag(android.view.View,int) -> a
    boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> checkTouchSlop
    boolean checkTouchSlop(int,int) -> checkTouchSlop
    boolean isEdgeTouched(int) -> isEdgeTouched
    boolean isEdgeTouched(int,int) -> isEdgeTouched
    void releaseViewForPointerUp() -> a
    boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    android.view.View findTopChildUnder(int,int) -> findTopChildUnder
android.support.v4.widget.ViewDragHelper$1 -> cK:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> cL:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.ViewDragHelper$Callback:
    void onViewDragStateChanged(int) -> onViewDragStateChanged
    void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    void onViewCaptured(android.view.View,int) -> onViewCaptured
    void onViewReleased(android.view.View,float,float) -> onViewReleased
    void onEdgeTouched(int,int) -> onEdgeTouched
    boolean onEdgeLock(int) -> onEdgeLock
    void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    int getOrderedChildIndex(int) -> getOrderedChildIndex
    int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    boolean tryCaptureView(android.view.View,int) -> tryCaptureView
    int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.ActionBarSherlock:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.Class[] CONSTRUCTOR_ARGS -> CONSTRUCTOR_ARGS
    java.util.HashMap IMPLEMENTATIONS -> IMPLEMENTATIONS
    int FLAG_DELEGATE -> FLAG_DELEGATE
    android.app.Activity mActivity -> mActivity
    boolean mIsDelegate -> mIsDelegate
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> mMenuInflater
    void registerImplementation(java.lang.Class) -> registerImplementation
    boolean unregisterImplementation(java.lang.Class) -> unregisterImplementation
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity) -> wrap
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> wrap
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackCreateOptionsMenu
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackPrepareOptionsMenu
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> callbackOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void ensureActionBar() -> ensureActionBar
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.ActionBarSherlock$Implementation:
    int DEFAULT_API -> DEFAULT_API
    int DEFAULT_DPI -> DEFAULT_DPI
    int api() -> api
    int dpi() -> dpi
com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener:
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener:
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
com.actionbarsherlock.R -> com.actionbarsherlock.R:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int verticalDivider -> verticalDivider
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.actionbarsherlock.R$bool -> com.actionbarsherlock.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.actionbarsherlock.R$color -> com.actionbarsherlock.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
com.actionbarsherlock.R$drawable -> com.actionbarsherlock.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
com.actionbarsherlock.R$id -> com.actionbarsherlock.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int listMode -> listMode
    int normal -> normal
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.actionbarsherlock.R$integer -> com.actionbarsherlock.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.actionbarsherlock.R$layout -> com.actionbarsherlock.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
com.actionbarsherlock.R$string -> com.actionbarsherlock.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.actionbarsherlock.R$style -> com.actionbarsherlock.R$style:
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    int NAVIGATION_MODE_STANDARD -> NAVIGATION_MODE_STANDARD
    int NAVIGATION_MODE_LIST -> NAVIGATION_MODE_LIST
    int NAVIGATION_MODE_TABS -> NAVIGATION_MODE_TABS
    int DISPLAY_USE_LOGO -> DISPLAY_USE_LOGO
    int DISPLAY_SHOW_HOME -> DISPLAY_SHOW_HOME
    int DISPLAY_HOME_AS_UP -> DISPLAY_HOME_AS_UP
    int DISPLAY_SHOW_TITLE -> DISPLAY_SHOW_TITLE
    int DISPLAY_SHOW_CUSTOM -> DISPLAY_SHOW_CUSTOM
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int[] ATTRS -> ATTRS
    int gravity -> gravity
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.app.ActionBar$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.app.ActionBar$TabListener -> com.actionbarsherlock.app.ActionBar$TabListener:
    void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockDialogFragment -> com.actionbarsherlock.app.SherlockDialogFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockFragment -> com.actionbarsherlock.app.SherlockFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    java.lang.String TAG -> TAG
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    boolean mIgnoreNativeCreate -> mIgnoreNativeCreate
    boolean mIgnoreNativePrepare -> mIgnoreNativePrepare
    boolean mIgnoreNativeSelected -> mIgnoreNativeSelected
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListFragment -> com.actionbarsherlock.app.SherlockListFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.ActionBarSherlockCompat:
    int DEFAULT_FEATURES -> DEFAULT_FEATURES
    java.lang.String PANELS_TAG -> PANELS_TAG
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.util.HashMap mNativeItemMap -> mNativeItemMap
    android.view.ViewGroup mDecor -> mDecor
    android.view.ViewGroup mContentParent -> mContentParent
    boolean mIsTitleReady -> mIsTitleReady
    boolean mIsDestroyed -> mIsDestroyed
    boolean mClosingActionMenu -> mClosingActionMenu
    boolean mMenuIsPrepared -> mMenuIsPrepared
    boolean mMenuRefreshContent -> mMenuRefreshContent
    android.os.Bundle mMenuFrozenActionViewState -> mMenuFrozenActionViewState
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> aActionBar
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> wActionBar
    int mFeatures -> mFeatures
    int mUiOptions -> mUiOptions
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> mCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar mHorizontalProgressBar -> mHorizontalProgressBar
    com.actionbarsherlock.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> mActionModeView
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    android.content.Context getThemedContext() -> getThemedContext
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean preparePanel() -> preparePanel
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    void reopenMenu(boolean) -> reopenMenu
    boolean initializePanelMenu() -> initializePanelMenu
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> checkCloseActionMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setFeatureInt(int,int) -> setFeatureInt
    void updateInt(int,int,boolean) -> updateInt
    void onIntChanged(int,int) -> onIntChanged
    void updateProgressBars(int) -> updateProgressBars
    void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> showProgressBars
    void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> hideProgressBars
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> getCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean) -> getHorizontalProgressBar
    int getFeatures() -> getFeatures
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void installDecor() -> installDecor
    android.view.ViewGroup generateLayout() -> generateLayout
    boolean isReservingOverflow() -> isReservingOverflow
    int loadUiOptionsFromManifest(android.app.Activity) -> loadUiOptionsFromManifest
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> cleanActivityName
    void ensureActionBar() -> ensureActionBar
    com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$0
    android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$1
    com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$2
    void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode) -> access$3
    boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$4
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$5
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.ActionBarSherlockCompat$1:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mWrapped -> mWrapped
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.ActionBarSherlockNative:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> mActionBar
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper) -> access$0
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$1
    android.app.Activity access$2(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$2
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper:
    android.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.ResourcesCompat:
    java.lang.String TAG -> TAG
    boolean getResources_getBoolean(android.content.Context,int) -> getResources_getBoolean
    int getResources_getInteger(android.content.Context,int) -> getResources_getInteger
    int loadLogoFromManifest(android.app.Activity) -> loadLogoFromManifest
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.app.ActionBarImpl:
    android.content.Context mContext -> mContext
    android.content.Context mThemedContext -> mThemedContext
    android.app.Activity mActivity -> mActivity
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> mContainerView
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> mActionView
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> mContentView
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    java.util.ArrayList mTabs -> mTabs
    com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl mSelectedTab -> mSelectedTab
    int mSavedTabPosition -> mSavedTabPosition
    com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl mActionMode -> mActionMode
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> mDeferredDestroyActionMode
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> mDeferredModeDestroyCallback
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    int CONTEXT_DISPLAY_NORMAL -> CONTEXT_DISPLAY_NORMAL
    int CONTEXT_DISPLAY_SPLIT -> CONTEXT_DISPLAY_SPLIT
    int INVALID_POSITION -> INVALID_POSITION
    int mContextDisplayMode -> mContextDisplayMode
    boolean mHasEmbeddedTabs -> mHasEmbeddedTabs
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> mCurrentShowAnim
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentModeAnim -> mCurrentModeAnim
    boolean mShowHideAnimationEnabled -> mShowHideAnimationEnabled
    boolean mWasHiddenBeforeMode -> mWasHiddenBeforeMode
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> mHideListener
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> mShowListener
    void init(android.view.View) -> init
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    void ensureTabsExist() -> ensureTabsExist
    void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    void setCustomView(int) -> setCustomView
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    void removeAllTabs() -> removeAllTabs
    void cleanupTabs() -> cleanupTabs
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> configureTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    int getHeight() -> getHeight
    void show() -> show
    void show(boolean) -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void animateToMode(boolean) -> animateToMode
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    int getTabCount() -> getTabCount
    void setNavigationMode(int) -> setNavigationMode
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$0
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$1
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$2
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$3
    void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> access$4
    com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$5
    com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$6
    android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$7
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$8
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.app.ActionBarImpl$1:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.app.ActionBarImpl$2:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.lang.ref.WeakReference mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    void finish() -> finish
    void invalidate() -> invalidate
    boolean dispatchOnCreate() -> dispatchOnCreate
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl:
    com.actionbarsherlock.app.ActionBar$TabListener mCallback -> mCallback
    java.lang.Object mTag -> mTag
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mContentDesc -> mContentDesc
    int mPosition -> mPosition
    android.view.View mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    com.actionbarsherlock.app.ActionBar$TabListener getCallback() -> getCallback
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper:
    android.app.Activity mActivity -> mActivity
    android.app.ActionBar mActionBar -> mActionBar
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> mNavigationListener
    java.util.Set mMenuVisibilityListeners -> mMenuVisibilityListeners
    android.support.v4.app.FragmentTransaction mFragmentTransaction -> mFragmentTransaction
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
    android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$0
    android.support.v4.app.FragmentTransaction access$1(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$1
    void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction) -> access$2
com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper:
    android.app.ActionBar$Tab mNativeTab -> mNativeTab
    java.lang.Object mTag -> mTag
    com.actionbarsherlock.app.ActionBar$TabListener mListener -> mListener
    com.actionbarsherlock.internal.app.ActionBarWrapper this$0 -> this$0
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> mListeners
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> mPlayingSet
    java.util.HashMap mNodeMap -> mNodeMap
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mSortedNodes -> mSortedNodes
    boolean mNeedsSort -> mNeedsSort
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> mSetListener
    boolean mTerminated -> mTerminated
    boolean mStarted -> mStarted
    long mStartDelay -> mStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> mDelayAnim
    long mDuration -> mDuration
    void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> sortNodes
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$2
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$3
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$4
    void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> access$5
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$6
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> canceled
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    java.util.ArrayList val$nodesToStart -> val$nodesToStart
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> mCurrentNode
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> with
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> before
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> after
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency:
    int WITH -> WITH
    int AFTER -> AFTER
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> node
    int rule -> rule
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> mNode
    int mRule -> mRule
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> startIfReady
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> animation
    java.util.ArrayList dependencies -> dependencies
    java.util.ArrayList tmpDependencies -> tmpDependencies
    java.util.ArrayList nodeDependencies -> nodeDependencies
    java.util.ArrayList nodeDependents -> nodeDependents
    boolean done -> done
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> firstValue
    float lastValue -> lastValue
    float deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet:
    int firstValue -> firstValue
    int lastValue -> lastValue
    int deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe:
    float mFraction -> mFraction
    java.lang.Class mValueType -> mValueType
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mHasValue -> mHasValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> mValue
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> mValue
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    java.lang.Object mValue -> mValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> mNumKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> mFirstKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> mLastKeyframe
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mKeyframes -> mKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator:
    boolean DBG -> DBG
    java.lang.Object mTarget -> mTarget
    java.lang.String mPropertyName -> mPropertyName
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> mPropertyName
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.Class mValueType -> mValueType
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> mKeyframeSet
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    java.lang.Class[] FLOAT_VARIANTS -> FLOAT_VARIANTS
    java.lang.Class[] INTEGER_VARIANTS -> INTEGER_VARIANTS
    java.lang.Class[] DOUBLE_VARIANTS -> DOUBLE_VARIANTS
    java.util.HashMap sSetterPropertyMap -> sSetterPropertyMap
    java.util.HashMap sGetterPropertyMap -> sGetterPropertyMap
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> mPropertyMapLock
    java.lang.Object[] mTmpValueArray -> mTmpValueArray
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    java.lang.Object mAnimatedValue -> mAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    void setupSetter(java.lang.Class) -> setupSetter
    void setupGetter(java.lang.Class) -> setupGetter
    void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe) -> setupValue
    void setupStartValue(java.lang.Object) -> setupStartValue
    void setupEndValue(java.lang.Object) -> setupEndValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void init() -> init
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> calculateValue
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> mFloatKeyframeSet
    float mFloatAnimatedValue -> mFloatAnimatedValue
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> mIntKeyframeSet
    int mIntAnimatedValue -> mIntAnimatedValue
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator:
    long DEFAULT_FRAME_DELAY -> DEFAULT_FRAME_DELAY
    int ANIMATION_START -> ANIMATION_START
    int ANIMATION_FRAME -> ANIMATION_FRAME
    int STOPPED -> STOPPED
    int RUNNING -> RUNNING
    int SEEKED -> SEEKED
    long mStartTime -> mStartTime
    long mSeekTime -> mSeekTime
    java.lang.ThreadLocal sAnimationHandler -> sAnimationHandler
    java.lang.ThreadLocal sAnimations -> sAnimations
    java.lang.ThreadLocal sPendingAnimations -> sPendingAnimations
    java.lang.ThreadLocal sDelayedAnims -> sDelayedAnims
    java.lang.ThreadLocal sEndingAnims -> sEndingAnims
    java.lang.ThreadLocal sReadyAnims -> sReadyAnims
    android.view.animation.Interpolator sDefaultInterpolator -> sDefaultInterpolator
    boolean mPlayingBackwards -> mPlayingBackwards
    int mCurrentIteration -> mCurrentIteration
    float mCurrentFraction -> mCurrentFraction
    boolean mStartedDelay -> mStartedDelay
    long mDelayStartTime -> mDelayStartTime
    int mPlayingState -> mPlayingState
    boolean mRunning -> mRunning
    boolean mStarted -> mStarted
    boolean mInitialized -> mInitialized
    long mDuration -> mDuration
    long mStartDelay -> mStartDelay
    long sFrameDelay -> sFrameDelay
    int mRepeatCount -> mRepeatCount
    int mRepeatMode -> mRepeatMode
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mUpdateListeners -> mUpdateListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> mValues
    java.util.HashMap mValuesMap -> mValuesMap
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> start
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> endAnimation
    void startAnimation() -> startAnimation
    boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    boolean animationFrame(long) -> animationFrame
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.ThreadLocal access$2() -> access$2
    java.lang.ThreadLocal access$3() -> access$3
    java.lang.ThreadLocal access$4() -> access$4
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$5
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$6
    java.lang.ThreadLocal access$7() -> access$7
    java.lang.ThreadLocal access$8() -> access$8
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> access$9
    void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> access$10
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$11
    long access$12() -> access$12
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> PROXIES
    java.lang.ref.WeakReference mView -> mView
    float mAlpha -> mAlpha
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    android.graphics.RectF mBefore -> mBefore
    android.graphics.RectF mAfter -> mAfter
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    void prepareForUpdate() -> prepareForUpdate
    void invalidateAfterUpdate() -> invalidateAfterUpdate
    void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.ActionProviderWrapper:
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    com.actionbarsherlock.view.ActionProvider unwrap() -> unwrap
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.StandaloneActionMode -> com.actionbarsherlock.internal.view.StandaloneActionMode:
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    boolean mFinished -> mFinished
    boolean mFocusable -> mFocusable
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.View_HasStateListenerSupport:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener:
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.actionbarsherlock.internal.view.menu.ActionMenu -> com.actionbarsherlock.internal.view.menu.ActionMenu:
    android.content.Context mContext -> mContext
    boolean mIsQwerty -> mIsQwerty
    java.util.ArrayList mItems -> mItems
    android.content.Context getContext() -> getContext
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    int findItemIndex(int) -> findItemIndex
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent) -> findItemWithShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.ActionMenuItem:
    int mId -> mId
    int mGroup -> mGroup
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    android.content.Context mContext -> mContext
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> invoke
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    java.lang.CharSequence mTitle -> mTitle
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> mItemInvoker
    android.widget.ImageButton mImageButton -> mImageButton
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> mTextButton
    boolean mAllowTextWithIcon -> mAllowTextWithIcon
    boolean mExpandedFormat -> mExpandedFormat
    int mMinWidth -> mMinWidth
    java.util.Set mListeners -> mListeners
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> updateTextButtonVisibility
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean showsIcon() -> showsIcon
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> mOverflowButton
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    int mWidthLimit -> mWidthLimit
    int mActionItemWidthLimit -> mActionItemWidthLimit
    int mMaxItems -> mMaxItems
    boolean mMaxItemsSet -> mMaxItemsSet
    boolean mStrictWidthLimit -> mStrictWidthLimit
    boolean mWidthLimitSet -> mWidthLimitSet
    boolean mExpandedActionViewsExclusive -> mExpandedActionViewsExclusive
    int mMinCellSize -> mMinCellSize
    android.util.SparseBooleanArray mActionButtonGroups -> mActionButtonGroups
    android.view.View mScrapActionButtonView -> mScrapActionButtonView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> mOverflowPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> mActionButtonPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> mPostedOpenRunnable
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> mPopupPresenterCallback
    int mOpenSubMenuId -> mOpenSubMenuId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    boolean reserveOverflow(android.content.Context) -> reserveOverflow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWidthLimit(int,boolean) -> setWidthLimit
    void setReserveOverflow(boolean) -> setReserveOverflow
    void setItemLimit(int) -> setItemLimit
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void updateMenuView(boolean) -> updateMenuView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> findViewForItem
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean dismissPopupMenus() -> dismissPopupMenus
    boolean hideSubMenus() -> hideSubMenus
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$0
    void access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> access$1
    android.view.View access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$2
    void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> access$3
    void access$4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> access$4
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey:
    boolean get(android.content.Context) -> get
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton:
    java.util.Set mListeners -> mListeners
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> openSubMenuId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> IS_FROYO
    int MIN_CELL_SIZE -> MIN_CELL_SIZE
    int GENERATED_ITEM_PADDING -> GENERATED_ITEM_PADDING
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    boolean mReserveOverflow -> mReserveOverflow
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> mPresenter
    boolean mFormatItems -> mFormatItems
    int mFormatItemsWidth -> mFormatItemsWidth
    int mMinCellSize -> mMinCellSize
    int mGeneratedItemPadding -> mGeneratedItemPadding
    boolean mFirst -> mFirst
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    boolean isExpandedFormat() -> isExpandedFormat
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> isOverflowButton
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    boolean expandable -> expandable
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.BaseMenuPresenter:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.content.Context mSystemContext -> mSystemContext
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> mCallback
    int mMenuLayoutRes -> mMenuLayoutRes
    int mItemLayoutRes -> mItemLayoutRes
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> mMenuView
    int mId -> mId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    android.widget.ImageView mIconView -> mIconView
    android.widget.RadioButton mRadioButton -> mRadioButton
    android.widget.TextView mTitleView -> mTitleView
    android.widget.CheckBox mCheckBox -> mCheckBox
    android.widget.TextView mShortcutView -> mShortcutView
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mTextAppearance -> mTextAppearance
    android.content.Context mTextAppearanceContext -> mTextAppearanceContext
    boolean mPreserveIconSpacing -> mPreserveIconSpacing
    android.view.LayoutInflater mInflater -> mInflater
    boolean mForceShowIcon -> mForceShowIcon
    android.content.Context mContext -> mContext
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> insertIconView
    void insertRadioButton() -> insertRadioButton
    void insertCheckBox() -> insertCheckBox
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.MenuBuilder:
    java.lang.String PRESENTER_KEY -> PRESENTER_KEY
    java.lang.String ACTION_VIEW_STATES_KEY -> ACTION_VIEW_STATES_KEY
    java.lang.String EXPANDED_ACTION_VIEW_ID -> EXPANDED_ACTION_VIEW_ID
    int[] sCategoryToOrder -> sCategoryToOrder
    android.content.Context mContext -> mContext
    android.content.res.Resources mResources -> mResources
    boolean mQwertyMode -> mQwertyMode
    boolean mShortcutsVisible -> mShortcutsVisible
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> mCallback
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mVisibleItems -> mVisibleItems
    boolean mIsVisibleItemsStale -> mIsVisibleItemsStale
    java.util.ArrayList mActionItems -> mActionItems
    java.util.ArrayList mNonActionItems -> mNonActionItems
    boolean mIsActionItemsStale -> mIsActionItemsStale
    int mDefaultShowAsAction -> mDefaultShowAsAction
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> mCurrentMenuInfo
    java.lang.CharSequence mHeaderTitle -> mHeaderTitle
    android.graphics.drawable.Drawable mHeaderIcon -> mHeaderIcon
    android.view.View mHeaderView -> mHeaderView
    boolean mPreventDispatchingItemsChanged -> mPreventDispatchingItemsChanged
    boolean mItemsChangedWhileDispatchPrevented -> mItemsChangedWhileDispatchPrevented
    boolean mOptionalIconsVisible -> mOptionalIconsVisible
    boolean mIsClosing -> mIsClosing
    java.util.ArrayList mTempShortcutItemList -> mTempShortcutItemList
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> mPresenters
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> mExpandedItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> addMenuPresenter
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> removeMenuPresenter
    void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> dispatchSubMenuSelected
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    void savePresenterStates(android.os.Bundle) -> savePresenterStates
    void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> removeItemAtInt
    void removeItemAt(int) -> removeItemAt
    void clearAll() -> clearAll
    void clear() -> clear
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> setExclusiveItemChecked
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> findItemIndex
    int findGroupIndex(int) -> findGroupIndex
    int findGroupIndex(int,int) -> findGroupIndex
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> getOrdering
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.content.res.Resources getResources() -> getResources
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    void changeMenuMode() -> changeMenuMode
    int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> performItemAction
    void close(boolean) -> close
    void close() -> close
    void onItemsChanged(boolean) -> onItemsChanged
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemVisibleChanged
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    java.util.ArrayList getVisibleItems() -> getVisibleItems
    void flagActionItems() -> flagActionItems
    java.util.ArrayList getActionItems() -> getActionItems
    java.util.ArrayList getNonActionItems() -> getNonActionItems
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    android.view.View getHeaderView() -> getHeaderView
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> bindNativeOverflow
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.MenuItemImpl:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_MASK -> SHOW_AS_ACTION_MASK
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    java.lang.Runnable mItemCallback -> mItemCallback
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    int IS_ACTION -> IS_ACTION
    int mShowAsAction -> mShowAsAction
    android.view.View mActionView -> mActionView
    com.actionbarsherlock.view.ActionProvider mActionProvider -> mActionProvider
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> mOnActionExpandListener
    boolean mIsActionViewExpanded -> mIsActionViewExpanded
    int NO_ICON -> NO_ICON
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> mMenuInfo
    java.lang.String sPrependShortcutLabel -> sPrependShortcutLabel
    java.lang.String sEnterShortcutLabel -> sEnterShortcutLabel
    java.lang.String sDeleteShortcutLabel -> sDeleteShortcutLabel
    java.lang.String sSpaceShortcutLabel -> sSpaceShortcutLabel
    boolean invoke() -> invoke
    boolean isEnabled() -> isEnabled
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> getOrdering
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    java.lang.Runnable getCallback() -> getCallback
    com.actionbarsherlock.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> getShortcut
    java.lang.String getShortcutLabel() -> getShortcutLabel
    boolean shouldShowShortcut() -> shouldShowShortcut
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> setSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> getTitleForItemView
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> setCheckedInt
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> setVisibleInt
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> actionFormatChanged
    boolean shouldShowIcon() -> shouldShowIcon
    boolean isActionButton() -> isActionButton
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    void setIsActionButton(boolean) -> setIsActionButton
    boolean showsTextAsAction() -> showsTextAsAction
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    boolean isActionViewExpanded() -> isActionViewExpanded
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper:
    android.view.MenuItem mNativeItem -> mNativeItem
    com.actionbarsherlock.view.SubMenu mSubMenu -> mSubMenu
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> mMenuItemClickListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> mActionExpandListener
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> mNativeActionExpandListener
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper) -> access$0
com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1 -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1:
    com.actionbarsherlock.internal.view.menu.MenuItemWrapper this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper:
    int ITEM_LAYOUT -> ITEM_LAYOUT
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    int mPopupMaxWidth -> mPopupMaxWidth
    android.view.View mAnchorView -> mAnchorView
    boolean mOverflowOnly -> mOverflowOnly
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    boolean mForceShowIcon -> mForceShowIcon
    android.view.ViewGroup mMeasureParent -> mMeasureParent
    void setAnchorView(android.view.View) -> setAnchorView
    void setForceShowIcon(boolean) -> setForceShowIcon
    void show() -> show
    boolean tryShow() -> tryShow
    void dismiss() -> dismiss
    void onDismiss() -> onDismiss
    boolean isShowing() -> isShowing
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> measureContentWidth
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$0
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$1
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$2
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$3
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> mAdapterMenu
    int mExpandedIndex -> mExpandedIndex
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> access$1
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.MenuView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.MenuView$ItemView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setEnabled(boolean) -> setEnabled
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.MenuWrapper:
    android.view.Menu mNativeMenu -> mNativeMenu
    java.util.WeakHashMap mNativeMap -> mNativeMap
    android.view.Menu unwrap() -> unwrap
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> addInternal
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void invalidate() -> invalidate
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.SubMenuBuilder:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> mParentMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> mItem
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    boolean isShortcutsVisible() -> isShortcutsVisible
    com.actionbarsherlock.view.Menu getParentMenu() -> getParentMenu
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.SubMenuWrapper:
    android.view.SubMenu mNativeSubMenu -> mNativeSubMenu
    com.actionbarsherlock.view.MenuItem mItem -> mItem
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> mMenuView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    boolean mSplitActionBar -> mSplitActionBar
    boolean mSplitWhenNarrow -> mSplitWhenNarrow
    int mContentHeight -> mContentHeight
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> animateToVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> showOverflowMenu
    void postShowOverflowMenu() -> postShowOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    void dismissPopupMenus() -> dismissPopupMenus
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    int positionChild(android.view.View,int,int,int) -> positionChild
    int positionChildInverse(android.view.View,int,int,int) -> positionChildInverse
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.AbsActionBarView$1:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> mIsTransitioning
    android.view.View mTabContainer -> mTabContainer
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> mActionBarView
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.graphics.drawable.Drawable mStackedBackground -> mStackedBackground
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mIsSplit -> mIsSplit
    boolean mIsStacked -> mIsStacked
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> mClose
    android.view.View mCustomView -> mCustomView
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> mCurrentAnimation
    boolean mAnimateInOnLayout -> mAnimateInOnLayout
    int mAnimationMode -> mAnimationMode
    int ANIMATE_IDLE -> ANIMATE_IDLE
    int ANIMATE_IN -> ANIMATE_IN
    int ANIMATE_OUT -> ANIMATE_OUT
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> initTitle
    void initForMode(com.actionbarsherlock.view.ActionMode) -> initForMode
    void closeMode() -> closeMode
    void finishAnimation() -> finishAnimation
    void killMode() -> killMode
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> makeInAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation() -> makeOutAnimation
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarContextView$1 -> com.actionbarsherlock.internal.widget.ActionBarContextView$1:
    com.actionbarsherlock.internal.widget.ActionBarContextView this$0 -> this$0
    com.actionbarsherlock.view.ActionMode val$mode -> val$mode
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    java.lang.String TAG -> TAG
    int DISPLAY_DEFAULT -> DISPLAY_DEFAULT
    int DISPLAY_RELAYOUT_MASK -> DISPLAY_RELAYOUT_MASK
    int DEFAULT_CUSTOM_GRAVITY -> DEFAULT_CUSTOM_GRAVITY
    int mNavigationMode -> mNavigationMode
    int mDisplayOptions -> mDisplayOptions
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.graphics.drawable.Drawable mLogo -> mLogo
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> mHomeLayout
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> mExpandedHomeLayout
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    android.view.View mTitleUpView -> mTitleUpView
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> mSpinner
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> mListNavLayout
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    android.view.View mCustomNavView -> mCustomNavView
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> mProgressView
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> mIndeterminateProgressView
    int mProgressBarPadding -> mProgressBarPadding
    int mItemPadding -> mItemPadding
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    int mProgressStyle -> mProgressStyle
    int mIndeterminateProgressStyle -> mIndeterminateProgressStyle
    boolean mUserTitle -> mUserTitle
    boolean mIncludeTabs -> mIncludeTabs
    boolean mIsCollapsable -> mIsCollapsable
    boolean mIsCollapsed -> mIsCollapsed
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> mOptionsMenu
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> mLogoNavItem
    android.widget.SpinnerAdapter mSpinnerAdapter -> mSpinnerAdapter
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> mCallback
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> mExpandedMenuPresenter
    android.view.View mExpandedActionView -> mExpandedActionView
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> mWindowCallback
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> mNavItemSelectedListener
    android.view.View$OnClickListener mExpandedActionViewUpListener -> mExpandedActionViewUpListener
    android.view.View$OnClickListener mUpClickListener -> mUpClickListener
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> isSplitActionBar
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> configPresenters
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> initTitle
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> isCollapsed
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> access$0
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> access$2
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> access$3
    android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> access$4
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> access$5
    android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> access$6
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> access$7
    com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> access$8
    android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> access$9
    int access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> access$10
    void access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> access$11
    int access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> access$12
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.ActionBarView$1:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.ActionBarView$2:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.ActionBarView$3:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> mCurrentExpandedItem
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> mUpView
    android.widget.ImageView mIconView -> mIconView
    int mUpWidth -> mUpWidth
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> expandedMenuItemId
    boolean isOverflowOpen -> isOverflowOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_Button -> R_styleable_Button
    int R_styleable_Button_textAppearance -> R_styleable_Button_textAppearance
    int[] R_styleable_TextAppearance -> R_styleable_TextAppearance
    int R_styleable_TextAppearance_textAllCaps -> R_styleable_TextAppearance_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_TextView -> R_styleable_TextView
    int R_styleable_TextView_textAllCaps -> R_styleable_TextView_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper:
    com.actionbarsherlock.view.CollapsibleActionView child -> child
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> unwrap
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mSpinnerPadding -> mSpinnerPadding
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> mRecycler
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.graphics.Rect mTouchFrame -> mTouchFrame
    void initAbsSpinner() -> initAbsSpinner
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> resetList
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> getChildHeight
    int getChildWidth(android.view.View) -> getChildWidth
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> recycleAllViews
    void setSelection(int,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean) -> setSelectionInt
    void layout(int,boolean) -> layout
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    int pointToPosition(int,int) -> pointToPosition
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> access$2
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin:
    android.util.SparseArray mScrapHeap -> mScrapHeap
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> this$0
    void put(int,android.view.View) -> put
    android.view.View get(int) -> get
    void clear() -> clear
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> selectedId
    int position -> position
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificTop -> mSpecificTop
    int mSyncPosition -> mSyncPosition
    long mSyncRowId -> mSyncRowId
    long mSyncHeight -> mSyncHeight
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutHeight -> mLayoutHeight
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedRowId -> mNextSelectedRowId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedRowId -> mSelectedRowId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedRowId -> mOldSelectedRowId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> isScrollableForAccessibility
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> access$0
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$1
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$2
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> mInstanceState
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void clearSavedState() -> clearSavedState
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener:
    boolean onItemLongClick(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemLongClick
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> com.actionbarsherlock.internal.widget.IcsColorDrawable:
    int color -> color
    android.graphics.Paint paint -> paint
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_divider -> LinearLayout_divider
    int LinearLayout_showDividers -> LinearLayout_showDividers
    int LinearLayout_dividerPadding -> LinearLayout_dividerPadding
    int SHOW_DIVIDER_NONE -> SHOW_DIVIDER_NONE
    int SHOW_DIVIDER_BEGINNING -> SHOW_DIVIDER_BEGINNING
    int SHOW_DIVIDER_MIDDLE -> SHOW_DIVIDER_MIDDLE
    int SHOW_DIVIDER_END -> SHOW_DIVIDER_END
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    int EXPAND_LIST_TIMEOUT -> EXPAND_LIST_TIMEOUT
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.PopupWindowCompat mPopup -> mPopup
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> mDropDownList
    int mDropDownHeight -> mDropDownHeight
    int mDropDownWidth -> mDropDownWidth
    int mDropDownHorizontalOffset -> mDropDownHorizontalOffset
    int mDropDownVerticalOffset -> mDropDownVerticalOffset
    boolean mDropDownVerticalOffsetSet -> mDropDownVerticalOffsetSet
    int mListItemExpandMaximum -> mListItemExpandMaximum
    android.view.View mPromptView -> mPromptView
    int mPromptPosition -> mPromptPosition
    android.database.DataSetObserver mObserver -> mObserver
    android.view.View mDropDownAnchorView -> mDropDownAnchorView
    android.graphics.drawable.Drawable mDropDownListHighlight -> mDropDownListHighlight
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> mItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> mResizePopupRunnable
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> mTouchInterceptor
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> mScrollListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> mHideSelector
    android.os.Handler mHandler -> mHandler
    android.graphics.Rect mTempRect -> mTempRect
    boolean mModal -> mModal
    int POSITION_PROMPT_ABOVE -> POSITION_PROMPT_ABOVE
    int POSITION_PROMPT_BELOW -> POSITION_PROMPT_BELOW
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptPosition(int) -> setPromptPosition
    void setModal(boolean) -> setModal
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setAnchorView(android.view.View) -> setAnchorView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setContentWidth(int) -> setContentWidth
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void show() -> show
    void dismiss() -> dismiss
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInputMethodMode(int) -> setInputMethodMode
    void setSelection(int) -> setSelection
    void clearListSelection() -> clearListSelection
    boolean isShowing() -> isShowing
    boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    android.widget.ListView getListView() -> getListView
    int buildDropDown() -> buildDropDown
    int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    int measureHeightOfChildren(int,int,int,int,int) -> measureHeightOfChildren
    void measureScrapChild(android.view.View,int,int) -> measureScrapChild
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$0
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$1
    com.actionbarsherlock.internal.widget.PopupWindowCompat access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$2
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$3
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$4
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$5
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$1:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView:
    boolean mListSelectionHidden -> mListSelectionHidden
    boolean mHijackFocus -> mHijackFocus
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> access$0
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    int MAX_LEVEL -> MAX_LEVEL
    int ANIMATION_RESOLUTION -> ANIMATION_RESOLUTION
    int TIMEOUT_SEND_ACCESSIBILITY_EVENT -> TIMEOUT_SEND_ACCESSIBILITY_EVENT
    int[] ProgressBar -> ProgressBar
    int ProgressBar_maxWidth -> ProgressBar_maxWidth
    int ProgressBar_maxHeight -> ProgressBar_maxHeight
    int ProgressBar_max -> ProgressBar_max
    int ProgressBar_progress -> ProgressBar_progress
    int ProgressBar_secondaryProgress -> ProgressBar_secondaryProgress
    int ProgressBar_indeterminate -> ProgressBar_indeterminate
    int ProgressBar_indeterminateOnly -> ProgressBar_indeterminateOnly
    int ProgressBar_indeterminateDrawable -> ProgressBar_indeterminateDrawable
    int ProgressBar_progressDrawable -> ProgressBar_progressDrawable
    int ProgressBar_indeterminateDuration -> ProgressBar_indeterminateDuration
    int ProgressBar_indeterminateBehavior -> ProgressBar_indeterminateBehavior
    int ProgressBar_minWidth -> ProgressBar_minWidth
    int ProgressBar_minHeight -> ProgressBar_minHeight
    int ProgressBar_interpolator -> ProgressBar_interpolator
    int ProgressBar_animationResolution -> ProgressBar_animationResolution
    int mMinWidth -> mMinWidth
    int mMaxWidth -> mMaxWidth
    int mMinHeight -> mMinHeight
    int mMaxHeight -> mMaxHeight
    int mProgress -> mProgress
    int mSecondaryProgress -> mSecondaryProgress
    int mMax -> mMax
    int mBehavior -> mBehavior
    int mDuration -> mDuration
    boolean mIndeterminate -> mIndeterminate
    boolean mOnlyIndeterminate -> mOnlyIndeterminate
    android.view.animation.Transformation mTransformation -> mTransformation
    android.view.animation.AlphaAnimation mAnimation -> mAnimation
    android.graphics.drawable.Drawable mIndeterminateDrawable -> mIndeterminateDrawable
    int mIndeterminateRealLeft -> mIndeterminateRealLeft
    int mIndeterminateRealTop -> mIndeterminateRealTop
    android.graphics.drawable.Drawable mProgressDrawable -> mProgressDrawable
    android.graphics.drawable.Drawable mCurrentDrawable -> mCurrentDrawable
    android.graphics.Bitmap mSampleTile -> mSampleTile
    boolean mNoInvalidate -> mNoInvalidate
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> mRefreshProgressRunnable
    long mUiThreadId -> mUiThreadId
    boolean mShouldStartAnimationDrawable -> mShouldStartAnimationDrawable
    long mLastDrawTime -> mLastDrawTime
    boolean mInDrawing -> mInDrawing
    int mAnimationResolution -> mAnimationResolution
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> mAccessibilityEventSender
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
    void initProgressBar() -> initProgressBar
    boolean isIndeterminate() -> isIndeterminate
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> doRefreshProgress
    void onProgressRefresh(float,boolean) -> onProgressRefresh
    void refreshProgress(int,int,boolean) -> refreshProgress
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void incrementProgressBy(int) -> incrementProgressBy
    void incrementSecondaryProgressBy(int) -> incrementSecondaryProgressBy
    void startAnimation() -> startAnimation
    void stopAnimation() -> stopAnimation
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> updateDrawableBounds
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> updateDrawableState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> scheduleAccessibilityEventSender
    void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> access$0
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> access$1
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable:
    int mId -> mId
    int mProgress -> mProgress
    boolean mFromUser -> mFromUser
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
    void setup(int,int,boolean) -> setup
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> progress
    int secondaryProgress -> secondaryProgress
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    int MAX_ITEMS_MEASURED -> MAX_ITEMS_MEASURED
    int MODE_DROPDOWN -> MODE_DROPDOWN
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> mPopup
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> mTempAdapter
    int mDropDownWidth -> mDropDownWidth
    int mGravity -> mGravity
    boolean mDisableChildrenWhenDisabled -> mDisableChildrenWhenDisabled
    android.graphics.Rect mTempRect -> mTempRect
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> layout
    android.view.View makeAndAddView(int) -> makeAndAddView
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> measureContentWidth
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> access$0
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    android.widget.ListAdapter mListAdapter -> mListAdapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup:
    java.lang.CharSequence mHintText -> mHintText
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> this$0
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    java.lang.CharSequence getHintText() -> getHintText
    void setPromptText(java.lang.CharSequence) -> setPromptText
    void show() -> show
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> access$0
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> this$1
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup:
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void show() -> show
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    void setPromptText(java.lang.CharSequence) -> setPromptText
    java.lang.CharSequence getHintText() -> getHintText
com.actionbarsherlock.internal.widget.IcsToast -> com.actionbarsherlock.internal.widget.IcsToast:
    int LENGTH_LONG -> LENGTH_LONG
    int LENGTH_SHORT -> LENGTH_SHORT
    java.lang.String TAG -> TAG
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
    android.widget.Toast makeText(android.content.Context,int,int) -> makeText
    void setText(java.lang.CharSequence) -> setText
com.actionbarsherlock.internal.widget.IcsView -> com.actionbarsherlock.internal.widget.IcsView:
    int getMeasuredStateInt(android.view.View) -> getMeasuredStateInt
com.actionbarsherlock.internal.widget.PopupWindowCompat -> com.actionbarsherlock.internal.widget.PopupWindowCompat:
    java.lang.reflect.Field superListenerField -> superListenerField
    android.view.ViewTreeObserver$OnScrollChangedListener NOP -> NOP
    android.view.ViewTreeObserver$OnScrollChangedListener mSuperScrollListener -> mSuperScrollListener
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    void init() -> init
    void unregisterListener() -> unregisterListener
    void registerListener(android.view.View) -> registerListener
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void update(android.view.View,int,int) -> update
    void showAtLocation(android.view.View,int,int,int) -> showAtLocation
    void dismiss() -> dismiss
com.actionbarsherlock.internal.widget.PopupWindowCompat$1 -> com.actionbarsherlock.internal.widget.PopupWindowCompat$1:
    void onScrollChanged() -> onScrollChanged
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> mTabClickListener
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> mTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> mTabSpinner
    boolean mAllowCollapse -> mAllowCollapse
    android.view.LayoutInflater mInflater -> mInflater
    int mMaxTabWidth -> mMaxTabWidth
    int mContentHeight -> mContentHeight
    int mSelectedTabIndex -> mSelectedTabIndex
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> isCollapsed
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> performCollapse
    boolean performExpand() -> performExpand
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout() -> createTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> createSpinner
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> animateToVisibility
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> createTabView
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void updateTab(int) -> updateTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> access$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> access$1
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> mParent
    com.actionbarsherlock.app.ActionBar$Tab mTab -> mTab
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> mTextView
    android.widget.ImageView mIconView -> mIconView
    android.view.View mCustomView -> mCustomView
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> init
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> bindTab
    void onMeasure(int,int) -> onMeasure
    void update() -> update
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.TabsLinearLayout -> com.actionbarsherlock.internal.widget.TabsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_measureWithLargestChild -> LinearLayout_measureWithLargestChild
    boolean mUseLargestChild -> mUseLargestChild
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> useLargestChildHorizontal
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.view.ActionMode:
    java.lang.Object mTag -> mTag
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.view.ActionMode$Callback:
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.view.ActionProvider:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.view.CollapsibleActionView:
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.view.Menu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
    int NONE -> NONE
    int FIRST -> FIRST
    int CATEGORY_CONTAINER -> CATEGORY_CONTAINER
    int CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    int CATEGORY_SECONDARY -> CATEGORY_SECONDARY
    int CATEGORY_ALTERNATIVE -> CATEGORY_ALTERNATIVE
    int FLAG_APPEND_TO_GROUP -> FLAG_APPEND_TO_GROUP
    int FLAG_PERFORM_NO_CLOSE -> FLAG_PERFORM_NO_CLOSE
    int FLAG_ALWAYS_PERFORM_CLOSE -> FLAG_ALWAYS_PERFORM_CLOSE
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.view.MenuInflater:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String XML_MENU -> XML_MENU
    java.lang.String XML_GROUP -> XML_GROUP
    java.lang.String XML_ITEM -> XML_ITEM
    int NO_ID -> NO_ID
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> ACTION_VIEW_CONSTRUCTOR_SIGNATURE
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
    java.lang.Object[] mActionViewConstructorArguments -> mActionViewConstructorArguments
    java.lang.Object[] mActionProviderConstructorArguments -> mActionProviderConstructorArguments
    android.content.Context mContext -> mContext
    java.lang.Object mRealOwner -> mRealOwner
    void inflate(int,com.actionbarsherlock.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> parseMenu
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> access$0
    java.lang.Class[] access$1() -> access$1
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> access$2
    java.lang.Object access$3(com.actionbarsherlock.view.MenuInflater) -> access$3
    java.lang.Class[] access$4() -> access$4
    java.lang.Object[] access$5(com.actionbarsherlock.view.MenuInflater) -> access$5
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Class[] PARAM_TYPES -> PARAM_TYPES
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.reflect.Method mMethod -> mMethod
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.MenuInflater$MenuState -> com.actionbarsherlock.view.MenuInflater$MenuState:
    com.actionbarsherlock.view.Menu menu -> menu
    int groupId -> groupId
    int groupCategory -> groupCategory
    int groupOrder -> groupOrder
    int groupCheckable -> groupCheckable
    boolean groupVisible -> groupVisible
    boolean groupEnabled -> groupEnabled
    boolean itemAdded -> itemAdded
    int itemId -> itemId
    int itemCategoryOrder -> itemCategoryOrder
    java.lang.CharSequence itemTitle -> itemTitle
    java.lang.CharSequence itemTitleCondensed -> itemTitleCondensed
    int itemIconResId -> itemIconResId
    char itemAlphabeticShortcut -> itemAlphabeticShortcut
    char itemNumericShortcut -> itemNumericShortcut
    int itemCheckable -> itemCheckable
    boolean itemChecked -> itemChecked
    boolean itemVisible -> itemVisible
    boolean itemEnabled -> itemEnabled
    int itemShowAsAction -> itemShowAsAction
    int itemActionViewLayout -> itemActionViewLayout
    java.lang.String itemActionViewClassName -> itemActionViewClassName
    java.lang.String itemActionProviderClassName -> itemActionProviderClassName
    java.lang.String itemListenerMethodName -> itemListenerMethodName
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> itemActionProvider
    int defaultGroupId -> defaultGroupId
    int defaultItemId -> defaultItemId
    int defaultItemCategory -> defaultItemCategory
    int defaultItemOrder -> defaultItemOrder
    int defaultItemCheckable -> defaultItemCheckable
    boolean defaultItemChecked -> defaultItemChecked
    boolean defaultItemVisible -> defaultItemVisible
    boolean defaultItemEnabled -> defaultItemEnabled
    com.actionbarsherlock.view.MenuInflater this$0 -> this$0
    void resetGroup() -> resetGroup
    void readGroup(android.util.AttributeSet) -> readGroup
    void readItem(android.util.AttributeSet) -> readItem
    char getShortcut(java.lang.String) -> getShortcut
    void setItem(com.actionbarsherlock.view.MenuItem) -> setItem
    void addItem() -> addItem
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> addSubMenuItem
    boolean hasAddedItem() -> hasAddedItem
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> access$0
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.view.MenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.view.MenuItem$OnActionExpandListener:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.view.SubMenu:
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.view.Window -> com.actionbarsherlock.view.Window:
    long FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    long FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    long FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    long FEATURE_NO_TITLE -> FEATURE_NO_TITLE
    long FEATURE_PROGRESS -> FEATURE_PROGRESS
    long FEATURE_INDETERMINATE_PROGRESS -> FEATURE_INDETERMINATE_PROGRESS
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.view.Window$Callback:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.widget.ActivityChooserModel -> com.actionbarsherlock.widget.ActivityChooserModel:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TAG_HISTORICAL_RECORDS -> TAG_HISTORICAL_RECORDS
    java.lang.String TAG_HISTORICAL_RECORD -> TAG_HISTORICAL_RECORD
    java.lang.String ATTRIBUTE_ACTIVITY -> ATTRIBUTE_ACTIVITY
    java.lang.String ATTRIBUTE_TIME -> ATTRIBUTE_TIME
    java.lang.String ATTRIBUTE_WEIGHT -> ATTRIBUTE_WEIGHT
    java.lang.String DEFAULT_HISTORY_FILE_NAME -> DEFAULT_HISTORY_FILE_NAME
    int DEFAULT_HISTORY_MAX_LENGTH -> DEFAULT_HISTORY_MAX_LENGTH
    int DEFAULT_ACTIVITY_INFLATION -> DEFAULT_ACTIVITY_INFLATION
    float DEFAULT_HISTORICAL_RECORD_WEIGHT -> DEFAULT_HISTORICAL_RECORD_WEIGHT
    java.lang.String HISTORY_FILE_EXTENSION -> HISTORY_FILE_EXTENSION
    int INVALID_INDEX -> INVALID_INDEX
    java.lang.Object sRegistryLock -> sRegistryLock
    java.util.Map sDataModelRegistry -> sDataModelRegistry
    java.lang.Object mInstanceLock -> mInstanceLock
    java.util.List mActivites -> mActivites
    java.util.List mHistoricalRecords -> mHistoricalRecords
    android.content.Context mContext -> mContext
    java.lang.String mHistoryFileName -> mHistoryFileName
    android.content.Intent mIntent -> mIntent
    com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> mActivitySorter
    int mHistoryMaxSize -> mHistoryMaxSize
    boolean mCanReadHistoricalData -> mCanReadHistoricalData
    boolean mReadShareHistoryCalled -> mReadShareHistoryCalled
    boolean mHistoricalRecordsChanged -> mHistoricalRecordsChanged
    android.os.Handler mHandler -> mHandler
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> mActivityChoserModelPolicy
    java.util.concurrent.Executor SERIAL_EXECUTOR -> SERIAL_EXECUTOR
    com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    void setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    int getActivityCount() -> getActivityCount
    android.content.pm.ResolveInfo getActivity(int) -> getActivity
    int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    android.content.Intent chooseActivity(int) -> chooseActivity
    void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setDefaultActivity(int) -> setDefaultActivity
    void readHistoricalData() -> readHistoricalData
    void persistHistoricalData() -> persistHistoricalData
    void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    void sortActivities() -> sortActivities
    void setHistoryMaxSize(int) -> setHistoryMaxSize
    int getHistoryMaxSize() -> getHistoryMaxSize
    int getHistorySize() -> getHistorySize
    boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord) -> addHisoricalRecord
    void pruneExcessiveHistoricalRecordsLocked() -> pruneExcessiveHistoricalRecordsLocked
    void loadActivitiesLocked() -> loadActivitiesLocked
    android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel) -> access$0
    java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel) -> access$1
    java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel) -> access$2
    java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel) -> access$3
    void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean) -> access$4
    android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel) -> access$5
    void access$6(com.actionbarsherlock.widget.ActivityChooserModel) -> access$6
    void access$7(com.actionbarsherlock.widget.ActivityChooserModel) -> access$7
    java.lang.String access$8() -> access$8
com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient:
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter -> com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter -> com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter:
    float WEIGHT_DECAY_COEFFICIENT -> WEIGHT_DECAY_COEFFICIENT
    java.util.Map mPackageNameToActivityMap -> mPackageNameToActivityMap
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord -> com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
    com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader) -> access$1
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1 -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1:
    com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader this$1 -> this$1
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener -> com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ActivityChooserView -> com.actionbarsherlock.widget.ActivityChooserView:
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> mAdapter
    com.actionbarsherlock.widget.ActivityChooserView$Callbacks mCallbacks -> mCallbacks
    com.actionbarsherlock.internal.widget.IcsLinearLayout mActivityChooserContent -> mActivityChooserContent
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> mActivityChooserContentBackground
    android.widget.FrameLayout mExpandActivityOverflowButton -> mExpandActivityOverflowButton
    android.widget.ImageView mExpandActivityOverflowButtonImage -> mExpandActivityOverflowButtonImage
    android.widget.FrameLayout mDefaultActivityButton -> mDefaultActivityButton
    android.widget.ImageView mDefaultActivityButtonImage -> mDefaultActivityButtonImage
    int mListPopupMaxWidth -> mListPopupMaxWidth
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    android.database.DataSetObserver mModelDataSetOberver -> mModelDataSetOberver
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> mOnGlobalLayoutListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mListPopupWindow -> mListPopupWindow
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mIsSelectingDefaultActivity -> mIsSelectingDefaultActivity
    int mInitialActivityCount -> mInitialActivityCount
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    int mDefaultActionButtonContentDescription -> mDefaultActionButtonContentDescription
    android.content.Context mContext -> mContext
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(com.actionbarsherlock.view.ActionProvider) -> setProvider
    boolean showPopup() -> showPopup
    void showPopupUnchecked(int) -> showPopupUnchecked
    boolean dismissPopup() -> dismissPopup
    boolean isShowingPopup() -> isShowingPopup
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> updateAppearance
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView) -> access$0
    com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView) -> access$1
    void access$2(com.actionbarsherlock.widget.ActivityChooserView,int) -> access$2
    boolean access$3(com.actionbarsherlock.widget.ActivityChooserView) -> access$3
    android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView) -> access$4
    android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView) -> access$5
    android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView) -> access$6
    void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean) -> access$7
    int access$8(com.actionbarsherlock.widget.ActivityChooserView) -> access$8
    android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView) -> access$9
    android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView) -> access$10
    boolean access$11() -> access$11
    void access$12(com.actionbarsherlock.widget.ActivityChooserView) -> access$12
com.actionbarsherlock.widget.ActivityChooserView$1 -> com.actionbarsherlock.widget.ActivityChooserView$1:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.widget.ActivityChooserView$2 -> com.actionbarsherlock.widget.ActivityChooserView$2:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.ActivityChooserView$3 -> com.actionbarsherlock.widget.ActivityChooserView$3:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter -> com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter:
    int MAX_ACTIVITY_COUNT_UNLIMITED -> MAX_ACTIVITY_COUNT_UNLIMITED
    int MAX_ACTIVITY_COUNT_DEFAULT -> MAX_ACTIVITY_COUNT_DEFAULT
    int ITEM_VIEW_TYPE_ACTIVITY -> ITEM_VIEW_TYPE_ACTIVITY
    int ITEM_VIEW_TYPE_FOOTER -> ITEM_VIEW_TYPE_FOOTER
    int ITEM_VIEW_TYPE_COUNT -> ITEM_VIEW_TYPE_COUNT
    com.actionbarsherlock.widget.ActivityChooserModel mDataModel -> mDataModel
    int mMaxActivityCount -> mMaxActivityCount
    boolean mShowDefaultActivity -> mShowDefaultActivity
    boolean mHighlightDefaultActivity -> mHighlightDefaultActivity
    boolean mShowFooterView -> mShowFooterView
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setDataModel
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> measureContentWidth
    void setMaxActivityCount(int) -> setMaxActivityCount
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setShowFooterView(boolean) -> setShowFooterView
    int getActivityCount() -> getActivityCount
    int getHistorySize() -> getHistorySize
    int getMaxActivityCount() -> getMaxActivityCount
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    boolean getShowDefaultActivity() -> getShowDefaultActivity
com.actionbarsherlock.widget.ActivityChooserView$Callbacks -> com.actionbarsherlock.widget.ActivityChooserView$Callbacks:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> notifyOnDismissListener
com.actionbarsherlock.widget.ActivityChooserView$SetActivated -> com.actionbarsherlock.widget.ActivityChooserView$SetActivated:
    void invoke(android.view.View,boolean) -> invoke
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String IME_OPTION_NO_MICROPHONE -> IME_OPTION_NO_MICROPHONE
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> mOnQueryChangeListener
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> mOnCloseListener
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> mOnQueryTextFocusChangeListener
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> mOnSuggestionListener
    android.view.View$OnClickListener mOnSearchClickListener -> mOnSearchClickListener
    boolean mIconifiedByDefault -> mIconifiedByDefault
    boolean mIconified -> mIconified
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> mSuggestionsAdapter
    android.view.View mSearchButton -> mSearchButton
    android.view.View mSubmitButton -> mSubmitButton
    android.view.View mSearchPlate -> mSearchPlate
    android.view.View mSubmitArea -> mSubmitArea
    android.widget.ImageView mCloseButton -> mCloseButton
    android.view.View mSearchEditFrame -> mSearchEditFrame
    android.view.View mVoiceButton -> mVoiceButton
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> mQueryTextView
    android.view.View mDropDownAnchor -> mDropDownAnchor
    android.widget.ImageView mSearchHintIcon -> mSearchHintIcon
    boolean mSubmitButtonEnabled -> mSubmitButtonEnabled
    java.lang.CharSequence mQueryHint -> mQueryHint
    boolean mQueryRefinement -> mQueryRefinement
    boolean mClearingFocus -> mClearingFocus
    int mMaxWidth -> mMaxWidth
    boolean mVoiceButtonEnabled -> mVoiceButtonEnabled
    java.lang.CharSequence mOldQueryText -> mOldQueryText
    java.lang.CharSequence mUserQuery -> mUserQuery
    boolean mExpandedInActionView -> mExpandedInActionView
    int mCollapsedImeOptions -> mCollapsedImeOptions
    android.app.SearchableInfo mSearchable -> mSearchable
    android.os.Bundle mAppSearchData -> mAppSearchData
    java.lang.Runnable mShowImeRunnable -> mShowImeRunnable
    java.lang.Runnable mUpdateDrawableStateRunnable -> mUpdateDrawableStateRunnable
    java.lang.Runnable mReleaseCursorRunnable -> mReleaseCursorRunnable
    android.content.Intent mVoiceWebSearchIntent -> mVoiceWebSearchIntent
    android.content.Intent mVoiceAppSearchIntent -> mVoiceAppSearchIntent
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    android.view.View$OnKeyListener mTextKeyListener -> mTextKeyListener
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> mOnEditorActionListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.text.TextWatcher mTextWatcher -> mTextWatcher
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    boolean isIconfiedByDefault() -> isIconfiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> isIconified
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> updateViewsVisibility
    boolean hasVoiceSearch() -> hasVoiceSearch
    boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    void updateSubmitButton(boolean) -> updateSubmitButton
    void updateSubmitArea() -> updateSubmitArea
    void updateCloseButton() -> updateCloseButton
    void postUpdateFocusedState() -> postUpdateFocusedState
    void updateFocusedState() -> updateFocusedState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    void updateQueryHint() -> updateQueryHint
    void updateSearchAutoComplete() -> updateSearchAutoComplete
    void updateVoiceButton(boolean) -> updateVoiceButton
    void onTextChanged(java.lang.CharSequence) -> onTextChanged
    void onSubmitQuery() -> onSubmitQuery
    void dismissSuggestions() -> dismissSuggestions
    void onCloseClicked() -> onCloseClicked
    void onSearchClicked() -> onSearchClicked
    void onVoiceClicked() -> onVoiceClicked
    void onTextFocusChanged() -> onTextFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    boolean onItemSelected(int) -> onItemSelected
    void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    void launchIntent(android.content.Intent) -> launchIntent
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    void forceSuggestionQuery() -> forceSuggestionQuery
    boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
    void showSoftInputUnchecked(android.view.View,android.view.inputmethod.InputMethodManager,int) -> showSoftInputUnchecked
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> setText
    void access$0(android.view.View,android.view.inputmethod.InputMethodManager,int) -> access$0
    void access$1(com.actionbarsherlock.widget.SearchView) -> access$1
    android.support.v4.widget.CursorAdapter access$2(com.actionbarsherlock.widget.SearchView) -> access$2
    android.view.View access$3(com.actionbarsherlock.widget.SearchView) -> access$3
    void access$4(com.actionbarsherlock.widget.SearchView) -> access$4
    android.widget.ImageView access$5(com.actionbarsherlock.widget.SearchView) -> access$5
    void access$6(com.actionbarsherlock.widget.SearchView) -> access$6
    android.view.View access$7(com.actionbarsherlock.widget.SearchView) -> access$7
    void access$8(com.actionbarsherlock.widget.SearchView) -> access$8
    android.view.View access$9(com.actionbarsherlock.widget.SearchView) -> access$9
    void access$10(com.actionbarsherlock.widget.SearchView) -> access$10
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete access$11(com.actionbarsherlock.widget.SearchView) -> access$11
    void access$12(com.actionbarsherlock.widget.SearchView) -> access$12
    android.app.SearchableInfo access$13(com.actionbarsherlock.widget.SearchView) -> access$13
    boolean access$14(com.actionbarsherlock.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> access$14
    void access$15(com.actionbarsherlock.widget.SearchView,int,java.lang.String,java.lang.String) -> access$15
    boolean access$16(com.actionbarsherlock.widget.SearchView,int,int,java.lang.String) -> access$16
    boolean access$17(com.actionbarsherlock.widget.SearchView,int) -> access$17
    void access$18(com.actionbarsherlock.widget.SearchView,java.lang.CharSequence) -> access$18
    void access$19(android.widget.AutoCompleteTextView,boolean) -> access$19
    void access$20(com.actionbarsherlock.widget.SearchView,boolean) -> access$20
    android.view.View$OnFocusChangeListener access$21(com.actionbarsherlock.widget.SearchView) -> access$21
    void access$22(com.actionbarsherlock.widget.SearchView) -> access$22
com.actionbarsherlock.widget.SearchView$1 -> com.actionbarsherlock.widget.SearchView$1:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$10 -> com.actionbarsherlock.widget.SearchView$10:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.actionbarsherlock.widget.SearchView$11 -> com.actionbarsherlock.widget.SearchView$11:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.actionbarsherlock.widget.SearchView$12 -> com.actionbarsherlock.widget.SearchView$12:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.SearchView$2 -> com.actionbarsherlock.widget.SearchView$2:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$3 -> com.actionbarsherlock.widget.SearchView$3:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$4 -> com.actionbarsherlock.widget.SearchView$4:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.widget.SearchView$5 -> com.actionbarsherlock.widget.SearchView$5:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.actionbarsherlock.widget.SearchView$6 -> com.actionbarsherlock.widget.SearchView$6:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.actionbarsherlock.widget.SearchView$7 -> com.actionbarsherlock.widget.SearchView$7:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.widget.SearchView$8 -> com.actionbarsherlock.widget.SearchView$8:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.widget.SearchView$9 -> com.actionbarsherlock.widget.SearchView$9:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.actionbarsherlock.widget.SearchView$OnCloseListener -> com.actionbarsherlock.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> com.actionbarsherlock.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> com.actionbarsherlock.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> mThreshold
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> isEmpty
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$0(com.actionbarsherlock.widget.SearchView$SearchAutoComplete) -> access$0
com.actionbarsherlock.widget.ShareActionProvider -> com.actionbarsherlock.widget.ShareActionProvider:
    int DEFAULT_INITIAL_ACTIVITY_COUNT -> DEFAULT_INITIAL_ACTIVITY_COUNT
    int mMaxShownActivityCount -> mMaxShownActivityCount
    com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> DEFAULT_SHARE_HISTORY_FILE_NAME
    android.content.Context mContext -> mContext
    java.lang.String mShareHistoryFileName -> mShareHistoryFileName
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> mOnShareTargetSelectedListener
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> mOnChooseActivityListener
    void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    void setShareIntent(android.content.Intent) -> setShareIntent
    void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider) -> access$0
    java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider) -> access$1
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider) -> access$2
com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener -> com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener:
    boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy -> com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.widget.SuggestionsAdapter -> com.actionbarsherlock.widget.SuggestionsAdapter:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    int QUERY_LIMIT -> QUERY_LIMIT
    int REFINE_NONE -> REFINE_NONE
    int REFINE_BY_ENTRY -> REFINE_BY_ENTRY
    int REFINE_ALL -> REFINE_ALL
    android.app.SearchManager mSearchManager -> mSearchManager
    android.app.SearchableInfo mSearchable -> mSearchable
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    android.content.Context mProviderContext -> mProviderContext
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    boolean mClosed -> mClosed
    int mQueryRefinement -> mQueryRefinement
    android.content.res.ColorStateList mUrlColor -> mUrlColor
    int INVALID_INDEX -> INVALID_INDEX
    int mText1Col -> mText1Col
    int mText2Col -> mText2Col
    int mText2UrlCol -> mText2UrlCol
    int mIconName1Col -> mIconName1Col
    int mIconName2Col -> mIconName2Col
    int mFlagsCol -> mFlagsCol
    void setQueryRefinement(int) -> setQueryRefinement
    int getQueryRefinement() -> getQueryRefinement
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getSuggestions(java.lang.String,int) -> getSuggestions
    void close() -> close
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> getTheDrawable
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache:
    android.widget.TextView mText1 -> mText1
    android.widget.TextView mText2 -> mText2
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.ImageView mIconRefine -> mIconRefine
com.fasterxml.jackson.annotation.JacksonAnnotation -> com.fasterxml.jackson.annotation.JacksonAnnotation:
com.fasterxml.jackson.annotation.JacksonAnnotationsInside -> com.fasterxml.jackson.annotation.JacksonAnnotationsInside:
com.fasterxml.jackson.annotation.JacksonInject -> com.fasterxml.jackson.annotation.JacksonInject:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonAnyGetter -> com.fasterxml.jackson.annotation.JsonAnyGetter:
com.fasterxml.jackson.annotation.JsonAnySetter -> com.fasterxml.jackson.annotation.JsonAnySetter:
com.fasterxml.jackson.annotation.JsonAutoDetect -> com.fasterxml.jackson.annotation.JsonAutoDetect:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility getterVisibility() -> getterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility isGetterVisibility() -> isGetterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility setterVisibility() -> setterVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility creatorVisibility() -> creatorVisibility
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility fieldVisibility() -> fieldVisibility
com.fasterxml.jackson.annotation.JsonAutoDetect$1 -> cM:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility -> a
com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility -> com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility:
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility ANY -> ANY
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NON_PRIVATE -> NON_PRIVATE
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC -> PROTECTED_AND_PUBLIC
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility PUBLIC_ONLY -> PUBLIC_ONLY
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility NONE -> NONE
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] $VALUES -> a
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility[] values() -> values
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility valueOf(java.lang.String) -> valueOf
    boolean isVisible(java.lang.reflect.Member) -> isVisible
com.fasterxml.jackson.annotation.JsonBackReference -> com.fasterxml.jackson.annotation.JsonBackReference:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonCreator -> com.fasterxml.jackson.annotation.JsonCreator:
com.fasterxml.jackson.annotation.JsonFilter -> com.fasterxml.jackson.annotation.JsonFilter:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonFormat -> com.fasterxml.jackson.annotation.JsonFormat:
    java.lang.String DEFAULT_LOCALE -> DEFAULT_LOCALE
    java.lang.String DEFAULT_TIMEZONE -> DEFAULT_TIMEZONE
    java.lang.String pattern() -> pattern
    com.fasterxml.jackson.annotation.JsonFormat$Shape shape() -> shape
    java.lang.String locale() -> locale
    java.lang.String timezone() -> timezone
com.fasterxml.jackson.annotation.JsonFormat$Shape -> com.fasterxml.jackson.annotation.JsonFormat$Shape:
    com.fasterxml.jackson.annotation.JsonFormat$Shape ANY -> ANY
    com.fasterxml.jackson.annotation.JsonFormat$Shape SCALAR -> SCALAR
    com.fasterxml.jackson.annotation.JsonFormat$Shape ARRAY -> ARRAY
    com.fasterxml.jackson.annotation.JsonFormat$Shape OBJECT -> OBJECT
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER -> NUMBER
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_FLOAT -> NUMBER_FLOAT
    com.fasterxml.jackson.annotation.JsonFormat$Shape NUMBER_INT -> NUMBER_INT
    com.fasterxml.jackson.annotation.JsonFormat$Shape STRING -> STRING
    com.fasterxml.jackson.annotation.JsonFormat$Shape BOOLEAN -> BOOLEAN
    com.fasterxml.jackson.annotation.JsonFormat$Shape[] $VALUES -> a
    com.fasterxml.jackson.annotation.JsonFormat$Shape[] values() -> values
    com.fasterxml.jackson.annotation.JsonFormat$Shape valueOf(java.lang.String) -> valueOf
    boolean isNumeric() -> isNumeric
    boolean isStructured() -> isStructured
com.fasterxml.jackson.annotation.JsonFormat$Value -> com.fasterxml.jackson.annotation.JsonFormat$Value:
    java.lang.String pattern -> a
    com.fasterxml.jackson.annotation.JsonFormat$Shape shape -> b
    java.util.Locale locale -> c
    java.util.TimeZone timezone -> d
    com.fasterxml.jackson.annotation.JsonFormat$Value withPattern(java.lang.String) -> withPattern
    com.fasterxml.jackson.annotation.JsonFormat$Value withShape(com.fasterxml.jackson.annotation.JsonFormat$Shape) -> withShape
    com.fasterxml.jackson.annotation.JsonFormat$Value withLocale(java.util.Locale) -> withLocale
    com.fasterxml.jackson.annotation.JsonFormat$Value withTimeZone(java.util.TimeZone) -> withTimeZone
    java.lang.String getPattern() -> getPattern
    com.fasterxml.jackson.annotation.JsonFormat$Shape getShape() -> getShape
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
com.fasterxml.jackson.annotation.JsonGetter -> com.fasterxml.jackson.annotation.JsonGetter:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonIdentityInfo -> com.fasterxml.jackson.annotation.JsonIdentityInfo:
    java.lang.String property() -> property
    java.lang.Class generator() -> generator
    java.lang.Class scope() -> scope
com.fasterxml.jackson.annotation.JsonIdentityReference -> com.fasterxml.jackson.annotation.JsonIdentityReference:
    boolean alwaysAsId() -> alwaysAsId
com.fasterxml.jackson.annotation.JsonIgnore -> com.fasterxml.jackson.annotation.JsonIgnore:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonIgnoreProperties -> com.fasterxml.jackson.annotation.JsonIgnoreProperties:
    java.lang.String[] value() -> value
    boolean ignoreUnknown() -> ignoreUnknown
com.fasterxml.jackson.annotation.JsonIgnoreType -> com.fasterxml.jackson.annotation.JsonIgnoreType:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonInclude -> com.fasterxml.jackson.annotation.JsonInclude:
    com.fasterxml.jackson.annotation.JsonInclude$Include value() -> value
com.fasterxml.jackson.annotation.JsonInclude$Include -> com.fasterxml.jackson.annotation.JsonInclude$Include:
    com.fasterxml.jackson.annotation.JsonInclude$Include ALWAYS -> ALWAYS
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_NULL -> NON_NULL
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_DEFAULT -> NON_DEFAULT
    com.fasterxml.jackson.annotation.JsonInclude$Include NON_EMPTY -> NON_EMPTY
    com.fasterxml.jackson.annotation.JsonInclude$Include[] $VALUES -> a
    com.fasterxml.jackson.annotation.JsonInclude$Include[] values() -> values
    com.fasterxml.jackson.annotation.JsonInclude$Include valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.annotation.JsonManagedReference -> com.fasterxml.jackson.annotation.JsonManagedReference:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonProperty -> com.fasterxml.jackson.annotation.JsonProperty:
    java.lang.String USE_DEFAULT_NAME -> USE_DEFAULT_NAME
    java.lang.String value() -> value
    boolean required() -> required
com.fasterxml.jackson.annotation.JsonPropertyOrder -> com.fasterxml.jackson.annotation.JsonPropertyOrder:
    java.lang.String[] value() -> value
    boolean alphabetic() -> alphabetic
com.fasterxml.jackson.annotation.JsonRawValue -> com.fasterxml.jackson.annotation.JsonRawValue:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonRootName -> com.fasterxml.jackson.annotation.JsonRootName:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonSetter -> com.fasterxml.jackson.annotation.JsonSetter:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonSubTypes -> com.fasterxml.jackson.annotation.JsonSubTypes:
    com.fasterxml.jackson.annotation.JsonSubTypes$Type[] value() -> value
com.fasterxml.jackson.annotation.JsonSubTypes$Type -> com.fasterxml.jackson.annotation.JsonSubTypes$Type:
    java.lang.Class value() -> value
    java.lang.String name() -> name
com.fasterxml.jackson.annotation.JsonTypeId -> com.fasterxml.jackson.annotation.JsonTypeId:
com.fasterxml.jackson.annotation.JsonTypeInfo -> com.fasterxml.jackson.annotation.JsonTypeInfo:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id use() -> use
    com.fasterxml.jackson.annotation.JsonTypeInfo$As include() -> include
    java.lang.String property() -> property
    java.lang.Class defaultImpl() -> defaultImpl
    boolean visible() -> visible
com.fasterxml.jackson.annotation.JsonTypeInfo$As -> com.fasterxml.jackson.annotation.JsonTypeInfo$As:
    com.fasterxml.jackson.annotation.JsonTypeInfo$As PROPERTY -> PROPERTY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_OBJECT -> WRAPPER_OBJECT
    com.fasterxml.jackson.annotation.JsonTypeInfo$As WRAPPER_ARRAY -> WRAPPER_ARRAY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As EXTERNAL_PROPERTY -> EXTERNAL_PROPERTY
    com.fasterxml.jackson.annotation.JsonTypeInfo$As[] $VALUES -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$As[] values() -> values
    com.fasterxml.jackson.annotation.JsonTypeInfo$As valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.annotation.JsonTypeInfo$Id -> com.fasterxml.jackson.annotation.JsonTypeInfo$Id:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NONE -> NONE
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CLASS -> CLASS
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id MINIMAL_CLASS -> MINIMAL_CLASS
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id NAME -> NAME
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id CUSTOM -> CUSTOM
    java.lang.String _defaultPropertyName -> a
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] $VALUES -> b
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id[] values() -> values
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id valueOf(java.lang.String) -> valueOf
    java.lang.String getDefaultPropertyName() -> getDefaultPropertyName
com.fasterxml.jackson.annotation.JsonTypeInfo$None -> com.fasterxml.jackson.annotation.JsonTypeInfo$None:
com.fasterxml.jackson.annotation.JsonTypeName -> com.fasterxml.jackson.annotation.JsonTypeName:
    java.lang.String value() -> value
com.fasterxml.jackson.annotation.JsonUnwrapped -> com.fasterxml.jackson.annotation.JsonUnwrapped:
    boolean enabled() -> enabled
    java.lang.String prefix() -> prefix
    java.lang.String suffix() -> suffix
com.fasterxml.jackson.annotation.JsonValue -> com.fasterxml.jackson.annotation.JsonValue:
    boolean value() -> value
com.fasterxml.jackson.annotation.JsonView -> com.fasterxml.jackson.annotation.JsonView:
    java.lang.Class[] value() -> value
com.fasterxml.jackson.annotation.ObjectIdGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerator:
    java.lang.Class getScope() -> getScope
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey -> com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey:
    long serialVersionUID -> serialVersionUID
    java.lang.Class type -> a
    java.lang.Class scope -> b
    java.lang.Object key -> c
    int hashCode -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.annotation.ObjectIdGenerators -> com.fasterxml.jackson.annotation.ObjectIdGenerators:
com.fasterxml.jackson.annotation.ObjectIdGenerators$Base -> cN:
    java.lang.Class _scope -> _scope
    java.lang.Class getScope() -> getScope
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerators$IntSequenceGenerator:
    long serialVersionUID -> serialVersionUID
    int _nextValue -> _nextValue
    int initialValue() -> initialValue
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    java.lang.Integer generateId(java.lang.Object) -> generateId
    java.lang.Object generateId(java.lang.Object) -> generateId
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
com.fasterxml.jackson.annotation.ObjectIdGenerators$None -> com.fasterxml.jackson.annotation.ObjectIdGenerators$None:
com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerators$PropertyGenerator:
    long serialVersionUID -> serialVersionUID
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
com.fasterxml.jackson.annotation.ObjectIdGenerators$UUIDGenerator -> com.fasterxml.jackson.annotation.ObjectIdGenerators$UUIDGenerator:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    java.util.UUID generateId(java.lang.Object) -> generateId
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    java.lang.Object generateId(java.lang.Object) -> generateId
com.fasterxml.jackson.annotation.PropertyAccessor -> com.fasterxml.jackson.annotation.PropertyAccessor:
    com.fasterxml.jackson.annotation.PropertyAccessor GETTER -> GETTER
    com.fasterxml.jackson.annotation.PropertyAccessor SETTER -> SETTER
    com.fasterxml.jackson.annotation.PropertyAccessor CREATOR -> CREATOR
    com.fasterxml.jackson.annotation.PropertyAccessor FIELD -> FIELD
    com.fasterxml.jackson.annotation.PropertyAccessor IS_GETTER -> IS_GETTER
    com.fasterxml.jackson.annotation.PropertyAccessor NONE -> NONE
    com.fasterxml.jackson.annotation.PropertyAccessor ALL -> ALL
    com.fasterxml.jackson.annotation.PropertyAccessor[] $VALUES -> a
    com.fasterxml.jackson.annotation.PropertyAccessor[] values() -> values
    com.fasterxml.jackson.annotation.PropertyAccessor valueOf(java.lang.String) -> valueOf
    boolean creatorEnabled() -> creatorEnabled
    boolean getterEnabled() -> getterEnabled
    boolean isGetterEnabled() -> isGetterEnabled
    boolean setterEnabled() -> setterEnabled
    boolean fieldEnabled() -> fieldEnabled
com.fasterxml.jackson.core.Base64Variant -> com.fasterxml.jackson.core.Base64Variant:
    long serialVersionUID -> serialVersionUID
    int BASE64_VALUE_INVALID -> BASE64_VALUE_INVALID
    int BASE64_VALUE_PADDING -> BASE64_VALUE_PADDING
    int[] _asciiToBase64 -> a
    char[] _base64ToAsciiC -> b
    byte[] _base64ToAsciiB -> c
    java.lang.String _name -> _name
    boolean _usesPadding -> _usesPadding
    char _paddingChar -> _paddingChar
    int _maxLineLength -> _maxLineLength
    java.lang.Object readResolve() -> readResolve
    java.lang.String getName() -> getName
    boolean usesPadding() -> usesPadding
    boolean usesPaddingChar(char) -> usesPaddingChar
    boolean usesPaddingChar(int) -> usesPaddingChar
    char getPaddingChar() -> getPaddingChar
    byte getPaddingByte() -> getPaddingByte
    int getMaxLineLength() -> getMaxLineLength
    int decodeBase64Char(char) -> decodeBase64Char
    int decodeBase64Char(int) -> decodeBase64Char
    int decodeBase64Byte(byte) -> decodeBase64Byte
    char encodeBase64BitsAsChar(int) -> encodeBase64BitsAsChar
    int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    byte encodeBase64BitsAsByte(int) -> encodeBase64BitsAsByte
    int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    java.lang.String encode(byte[]) -> encode
    java.lang.String encode(byte[],boolean) -> encode
    java.lang.String toString() -> toString
com.fasterxml.jackson.core.Base64Variants -> com.fasterxml.jackson.core.Base64Variants:
    com.fasterxml.jackson.core.Base64Variant MIME -> MIME
    com.fasterxml.jackson.core.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    com.fasterxml.jackson.core.Base64Variant PEM -> PEM
    com.fasterxml.jackson.core.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    com.fasterxml.jackson.core.Base64Variant getDefaultVariant() -> getDefaultVariant
    com.fasterxml.jackson.core.Base64Variant valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.FormatSchema -> com.fasterxml.jackson.core.FormatSchema:
    java.lang.String getSchemaType() -> getSchemaType
com.fasterxml.jackson.core.JsonEncoding -> com.fasterxml.jackson.core.JsonEncoding:
    com.fasterxml.jackson.core.JsonEncoding UTF8 -> UTF8
    com.fasterxml.jackson.core.JsonEncoding UTF16_BE -> UTF16_BE
    com.fasterxml.jackson.core.JsonEncoding UTF16_LE -> UTF16_LE
    com.fasterxml.jackson.core.JsonEncoding UTF32_BE -> UTF32_BE
    com.fasterxml.jackson.core.JsonEncoding UTF32_LE -> UTF32_LE
    java.lang.String _javaName -> _javaName
    boolean _bigEndian -> _bigEndian
    com.fasterxml.jackson.core.JsonEncoding[] $VALUES -> a
    com.fasterxml.jackson.core.JsonEncoding[] values() -> values
    com.fasterxml.jackson.core.JsonEncoding valueOf(java.lang.String) -> valueOf
    java.lang.String getJavaName() -> getJavaName
    boolean isBigEndian() -> isBigEndian
com.fasterxml.jackson.core.JsonFactory -> com.fasterxml.jackson.core.JsonFactory:
    long serialVersionUID -> serialVersionUID
    java.lang.String FORMAT_NAME_JSON -> FORMAT_NAME_JSON
    int DEFAULT_FACTORY_FEATURE_FLAGS -> DEFAULT_FACTORY_FEATURE_FLAGS
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR -> a
    java.lang.ThreadLocal _recyclerRef -> _recyclerRef
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols -> _rootCharSymbols
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _rootByteSymbols -> _rootByteSymbols
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    int _factoryFeatures -> _factoryFeatures
    int _parserFeatures -> _parserFeatures
    int _generatorFeatures -> _generatorFeatures
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.io.InputDecorator _inputDecorator -> _inputDecorator
    com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator -> _outputDecorator
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    com.fasterxml.jackson.core.JsonFactory copy() -> copy
    void _checkInvalidCopy(java.lang.Class) -> _checkInvalidCopy
    java.lang.Object readResolve() -> readResolve
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    java.lang.String getFormatName() -> getFormatName
    com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    boolean requiresCustomCodec() -> requiresCustomCodec
    com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonFactory$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonFactory$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonFactory$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.core.io.InputDecorator getInputDecorator() -> getInputDecorator
    com.fasterxml.jackson.core.JsonFactory setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator) -> setInputDecorator
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonFactory setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    com.fasterxml.jackson.core.io.OutputDecorator getOutputDecorator() -> getOutputDecorator
    com.fasterxml.jackson.core.JsonFactory setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator) -> setOutputDecorator
    com.fasterxml.jackson.core.JsonFactory setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    java.lang.String getRootValueSeparator() -> getRootValueSeparator
    com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.File) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.net.URL) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(byte[]) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(byte[],int,int) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createJsonParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _createJsonParser
    com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createJsonParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _createJsonParser
    com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createJsonParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext) -> _createJsonParser
    com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _createGenerator
    com.fasterxml.jackson.core.JsonGenerator _createJsonGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _createUTF8Generator
    com.fasterxml.jackson.core.JsonGenerator _createUTF8JsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _createUTF8JsonGenerator
    java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext) -> _createWriter
    com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    java.io.InputStream _optimizedStreamFromURL(java.net.URL) -> _optimizedStreamFromURL
com.fasterxml.jackson.core.JsonFactory$Feature -> com.fasterxml.jackson.core.JsonFactory$Feature:
    com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES -> CANONICALIZE_FIELD_NAMES
    boolean _defaultState -> a
    com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES -> b
    com.fasterxml.jackson.core.JsonFactory$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
com.fasterxml.jackson.core.JsonGenerationException -> com.fasterxml.jackson.core.JsonGenerationException:
    long serialVersionUID -> serialVersionUID
com.fasterxml.jackson.core.JsonGenerator -> com.fasterxml.jackson.core.JsonGenerator:
    com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter -> _cfgPrettyPrinter
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    com.fasterxml.jackson.core.JsonGenerator configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setPrettyPrinter
    com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> getPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    void writeBinary(byte[],int,int) -> writeBinary
    void writeBinary(byte[]) -> writeBinary
    int writeBinary(java.io.InputStream,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeBooleanField(java.lang.String,boolean) -> writeBooleanField
    void writeNullField(java.lang.String) -> writeNullField
    void writeNumberField(java.lang.String,int) -> writeNumberField
    void writeNumberField(java.lang.String,long) -> writeNumberField
    void writeNumberField(java.lang.String,double) -> writeNumberField
    void writeNumberField(java.lang.String,float) -> writeNumberField
    void writeNumberField(java.lang.String,java.math.BigDecimal) -> writeNumberField
    void writeBinaryField(java.lang.String,byte[]) -> writeBinaryField
    void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    boolean isClosed() -> isClosed
    void close() -> close
com.fasterxml.jackson.core.JsonGenerator$Feature -> com.fasterxml.jackson.core.JsonGenerator$Feature:
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    boolean _defaultState -> a
    int _mask -> b
    com.fasterxml.jackson.core.JsonGenerator$Feature[] $VALUES -> c
    com.fasterxml.jackson.core.JsonGenerator$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.core.JsonLocation -> com.fasterxml.jackson.core.JsonLocation:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonLocation NA -> NA
    long _totalBytes -> a
    long _totalChars -> b
    int _lineNr -> c
    int _columnNr -> d
    java.lang.Object _sourceRef -> e
    java.lang.Object getSourceRef() -> getSourceRef
    int getLineNr() -> getLineNr
    int getColumnNr() -> getColumnNr
    long getCharOffset() -> getCharOffset
    long getByteOffset() -> getByteOffset
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.JsonParseException -> com.fasterxml.jackson.core.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.fasterxml.jackson.core.JsonParser -> com.fasterxml.jackson.core.JsonParser:
    int _features -> _features
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    java.lang.Object getInputSource() -> getInputSource
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    boolean requiresCustomCodec() -> requiresCustomCodec
    com.fasterxml.jackson.core.Version version() -> version
    void close() -> close
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    com.fasterxml.jackson.core.JsonParser configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    int readBinaryValue(java.io.OutputStream) -> readBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    java.lang.Object readValueAs(com.fasterxml.jackson.core.type.TypeReference) -> readValueAs
    java.util.Iterator readValuesAs(java.lang.Class) -> readValuesAs
    java.util.Iterator readValuesAs(com.fasterxml.jackson.core.type.TypeReference) -> readValuesAs
    com.fasterxml.jackson.core.TreeNode readValueAsTree() -> readValueAsTree
    com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String) -> _constructError
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
com.fasterxml.jackson.core.JsonParser$1 -> cO:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.core.JsonParser$Feature -> com.fasterxml.jackson.core.JsonParser$Feature:
    com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> ALLOW_NUMERIC_LEADING_ZEROS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    boolean _defaultState -> a
    com.fasterxml.jackson.core.JsonParser$Feature[] $VALUES -> b
    com.fasterxml.jackson.core.JsonParser$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.core.JsonParser$NumberType -> com.fasterxml.jackson.core.JsonParser$NumberType:
    com.fasterxml.jackson.core.JsonParser$NumberType INT -> INT
    com.fasterxml.jackson.core.JsonParser$NumberType LONG -> LONG
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    com.fasterxml.jackson.core.JsonParser$NumberType FLOAT -> FLOAT
    com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE -> DOUBLE
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES -> a
    com.fasterxml.jackson.core.JsonParser$NumberType[] values() -> values
    com.fasterxml.jackson.core.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.JsonProcessingException -> com.fasterxml.jackson.core.JsonProcessingException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    java.lang.String getOriginalMessage() -> getOriginalMessage
    java.lang.String getMessageSuffix() -> getMessageSuffix
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonStreamContext -> com.fasterxml.jackson.core.JsonStreamContext:
    int TYPE_ROOT -> TYPE_ROOT
    int TYPE_ARRAY -> TYPE_ARRAY
    int TYPE_OBJECT -> TYPE_OBJECT
    int _type -> _type
    int _index -> _index
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
    boolean inArray() -> inArray
    boolean inRoot() -> inRoot
    boolean inObject() -> inObject
    java.lang.String getTypeDesc() -> getTypeDesc
    int getEntryCount() -> getEntryCount
    int getCurrentIndex() -> getCurrentIndex
    java.lang.String getCurrentName() -> getCurrentName
com.fasterxml.jackson.core.JsonToken -> com.fasterxml.jackson.core.JsonToken:
    com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    com.fasterxml.jackson.core.JsonToken START_OBJECT -> START_OBJECT
    com.fasterxml.jackson.core.JsonToken END_OBJECT -> END_OBJECT
    com.fasterxml.jackson.core.JsonToken START_ARRAY -> START_ARRAY
    com.fasterxml.jackson.core.JsonToken END_ARRAY -> END_ARRAY
    com.fasterxml.jackson.core.JsonToken FIELD_NAME -> FIELD_NAME
    com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    com.fasterxml.jackson.core.JsonToken VALUE_STRING -> VALUE_STRING
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    com.fasterxml.jackson.core.JsonToken VALUE_TRUE -> VALUE_TRUE
    com.fasterxml.jackson.core.JsonToken VALUE_FALSE -> VALUE_FALSE
    com.fasterxml.jackson.core.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> a
    char[] _serializedChars -> b
    byte[] _serializedBytes -> c
    com.fasterxml.jackson.core.JsonToken[] $VALUES -> d
    com.fasterxml.jackson.core.JsonToken[] values() -> values
    com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String) -> valueOf
    java.lang.String asString() -> asString
    char[] asCharArray() -> asCharArray
    byte[] asByteArray() -> asByteArray
    boolean isNumeric() -> isNumeric
    boolean isScalarValue() -> isScalarValue
com.fasterxml.jackson.core.ObjectCodec -> com.fasterxml.jackson.core.ObjectCodec:
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
com.fasterxml.jackson.core.PrettyPrinter -> com.fasterxml.jackson.core.PrettyPrinter:
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
com.fasterxml.jackson.core.SerializableString -> com.fasterxml.jackson.core.SerializableString:
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    int appendQuoted(char[],int) -> appendQuoted
    int appendUnquotedUTF8(byte[],int) -> appendUnquotedUTF8
    int appendUnquoted(char[],int) -> appendUnquoted
    int writeQuotedUTF8(java.io.OutputStream) -> writeQuotedUTF8
    int writeUnquotedUTF8(java.io.OutputStream) -> writeUnquotedUTF8
    int putQuotedUTF8(java.nio.ByteBuffer) -> putQuotedUTF8
    int putUnquotedUTF8(java.nio.ByteBuffer) -> putUnquotedUTF8
com.fasterxml.jackson.core.TreeNode -> com.fasterxml.jackson.core.TreeNode:
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    com.fasterxml.jackson.core.JsonParser traverse() -> traverse
com.fasterxml.jackson.core.Version -> com.fasterxml.jackson.core.Version:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.Version UNKNOWN_VERSION -> a
    int _majorVersion -> _majorVersion
    int _minorVersion -> _minorVersion
    int _patchLevel -> _patchLevel
    java.lang.String _groupId -> _groupId
    java.lang.String _artifactId -> _artifactId
    java.lang.String _snapshotInfo -> _snapshotInfo
    com.fasterxml.jackson.core.Version unknownVersion() -> unknownVersion
    boolean isUknownVersion() -> isUknownVersion
    boolean isSnapshot() -> isSnapshot
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
    int getPatchLevel() -> getPatchLevel
    java.lang.String getGroupId() -> getGroupId
    java.lang.String getArtifactId() -> getArtifactId
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.fasterxml.jackson.core.Version) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.core.Versioned -> com.fasterxml.jackson.core.Versioned:
    com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.core.base.GeneratorBase -> com.fasterxml.jackson.core.base.GeneratorBase:
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    int _features -> _features
    boolean _cfgNumbersAsStrings -> _cfgNumbersAsStrings
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> _writeContext
    boolean _closed -> _closed
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext() -> getOutputContext
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    void _releaseBuffers() -> _releaseBuffers
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _reportError(java.lang.String) -> _reportError
    void _cantHappen() -> _cantHappen
    void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
    void _throwInternal() -> _throwInternal
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
com.fasterxml.jackson.core.base.GeneratorBase$1 -> cP:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> a
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> b
com.fasterxml.jackson.core.base.ParserBase -> com.fasterxml.jackson.core.base.ParserBase:
    com.fasterxml.jackson.core.io.IOContext _ioContext -> _ioContext
    boolean _closed -> _closed
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    long _currInputProcessed -> _currInputProcessed
    int _currInputRow -> _currInputRow
    int _currInputRowStart -> _currInputRowStart
    long _tokenInputTotal -> _tokenInputTotal
    int _tokenInputRow -> _tokenInputRow
    int _tokenInputCol -> _tokenInputCol
    com.fasterxml.jackson.core.json.JsonReadContext _parsingContext -> _parsingContext
    com.fasterxml.jackson.core.JsonToken _nextToken -> _nextToken
    com.fasterxml.jackson.core.util.TextBuffer _textBuffer -> _textBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    boolean _nameCopied -> _nameCopied
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder -> _byteArrayBuilder
    byte[] _binaryValue -> _binaryValue
    int NR_UNKNOWN -> NR_UNKNOWN
    int NR_INT -> NR_INT
    int NR_LONG -> NR_LONG
    int NR_BIGINT -> NR_BIGINT
    int NR_DOUBLE -> NR_DOUBLE
    int NR_BIGDECIMAL -> NR_BIGDECIMAL
    java.math.BigInteger BI_MIN_INT -> a
    java.math.BigInteger BI_MAX_INT -> b
    java.math.BigInteger BI_MIN_LONG -> c
    java.math.BigInteger BI_MAX_LONG -> d
    java.math.BigDecimal BD_MIN_LONG -> e
    java.math.BigDecimal BD_MAX_LONG -> f
    java.math.BigDecimal BD_MIN_INT -> g
    java.math.BigDecimal BD_MAX_INT -> h
    int INT_0 -> INT_0
    int INT_1 -> INT_1
    int INT_2 -> INT_2
    int INT_3 -> INT_3
    int INT_4 -> INT_4
    int INT_5 -> INT_5
    int INT_6 -> INT_6
    int INT_7 -> INT_7
    int INT_8 -> INT_8
    int INT_9 -> INT_9
    int INT_MINUS -> INT_MINUS
    int INT_PLUS -> INT_PLUS
    int INT_DECIMAL_POINT -> INT_DECIMAL_POINT
    int INT_e -> INT_e
    int INT_E -> INT_E
    char CHAR_NULL -> CHAR_NULL
    int _numTypesValid -> _numTypesValid
    int _numberInt -> _numberInt
    long _numberLong -> _numberLong
    double _numberDouble -> _numberDouble
    java.math.BigInteger _numberBigInt -> _numberBigInt
    java.math.BigDecimal _numberBigDecimal -> _numberBigDecimal
    boolean _numberNegative -> _numberNegative
    int _intLength -> _intLength
    int _fractLength -> _fractLength
    int _expLength -> _expLength
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.json.JsonReadContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean hasTextCharacters() -> hasTextCharacters
    long getTokenCharacterOffset() -> getTokenCharacterOffset
    int getTokenLineNr() -> getTokenLineNr
    int getTokenColumnNr() -> getTokenColumnNr
    void loadMoreGuaranteed() -> loadMoreGuaranteed
    boolean loadMore() -> loadMore
    void _finishString() -> _finishString
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    void _handleEOF() -> _handleEOF
    void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int) -> reset
    com.fasterxml.jackson.core.JsonToken resetInt(boolean,int) -> resetInt
    com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    java.lang.Number getNumberValue() -> getNumberValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    void _parseNumericValue(int) -> _parseNumericValue
    void convertNumberToInt() -> convertNumberToInt
    void convertNumberToLong() -> convertNumberToLong
    void convertNumberToBigInteger() -> convertNumberToBigInteger
    void convertNumberToDouble() -> convertNumberToDouble
    void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    void reportOverflowInt() -> reportOverflowInt
    void reportOverflowLong() -> reportOverflowLong
    char _decodeEscaped() -> _decodeEscaped
    int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int) -> _decodeBase64Escape
    int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int) -> _decodeBase64Escape
    java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int) -> reportInvalidBase64Char
    java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
com.fasterxml.jackson.core.base.ParserMinimalBase -> com.fasterxml.jackson.core.base.ParserMinimalBase:
    int INT_TAB -> INT_TAB
    int INT_LF -> INT_LF
    int INT_CR -> INT_CR
    int INT_SPACE -> INT_SPACE
    int INT_LBRACKET -> INT_LBRACKET
    int INT_RBRACKET -> INT_RBRACKET
    int INT_LCURLY -> INT_LCURLY
    int INT_RCURLY -> INT_RCURLY
    int INT_QUOTE -> INT_QUOTE
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_SLASH -> INT_SLASH
    int INT_COLON -> INT_COLON
    int INT_COMMA -> INT_COMMA
    int INT_ASTERISK -> INT_ASTERISK
    int INT_APOSTROPHE -> INT_APOSTROPHE
    int INT_b -> INT_b
    int INT_f -> INT_f
    int INT_n -> INT_n
    int INT_r -> INT_r
    int INT_t -> INT_t
    int INT_u -> INT_u
    com.fasterxml.jackson.core.JsonToken _currToken -> _currToken
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> _lastClearedToken
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    boolean hasTextCharacters() -> hasTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble(double) -> getValueAsDouble
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    void _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    void _reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
    void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    void _reportInvalidEOF() -> _reportInvalidEOF
    void _reportInvalidEOF(java.lang.String) -> _reportInvalidEOF
    void _reportInvalidEOFInValue() -> _reportInvalidEOFInValue
    void _throwInvalidSpace(int) -> _throwInvalidSpace
    void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    java.lang.String _getCharDesc(int) -> _getCharDesc
    void _reportError(java.lang.String) -> _reportError
    void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    void _throwInternal() -> _throwInternal
    com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
com.fasterxml.jackson.core.base.ParserMinimalBase$1 -> cQ:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.core.format.DataFormatDetector -> com.fasterxml.jackson.core.format.DataFormatDetector:
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> DEFAULT_MAX_INPUT_LOOKAHEAD
    com.fasterxml.jackson.core.JsonFactory[] _detectors -> _detectors
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> _optimalMatch
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    com.fasterxml.jackson.core.format.DataFormatDetector withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withOptimalMatch
    com.fasterxml.jackson.core.format.DataFormatDetector withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withMinimalMatch
    com.fasterxml.jackson.core.format.DataFormatDetector withMaxInputLookahead(int) -> withMaxInputLookahead
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(java.io.InputStream) -> findFormat
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[]) -> findFormat
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[],int,int) -> findFormat
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.format.DataFormatMatcher _findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std) -> a
com.fasterxml.jackson.core.format.DataFormatMatcher -> com.fasterxml.jackson.core.format.DataFormatMatcher:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedStart -> _bufferedStart
    int _bufferedLength -> _bufferedLength
    com.fasterxml.jackson.core.JsonFactory _match -> _match
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> _matchStrength
    boolean hasMatch() -> hasMatch
    com.fasterxml.jackson.core.format.MatchStrength getMatchStrength() -> getMatchStrength
    com.fasterxml.jackson.core.JsonFactory getMatch() -> getMatch
    java.lang.String getMatchedFormatName() -> getMatchedFormatName
    com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> createParserWithMatch
    java.io.InputStream getDataStream() -> getDataStream
com.fasterxml.jackson.core.format.InputAccessor -> com.fasterxml.jackson.core.format.InputAccessor:
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
com.fasterxml.jackson.core.format.InputAccessor$Std -> com.fasterxml.jackson.core.format.InputAccessor$Std:
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _bufferedStart -> _bufferedStart
    int _bufferedEnd -> _bufferedEnd
    int _ptr -> _ptr
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
    com.fasterxml.jackson.core.format.DataFormatMatcher createMatcher(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength) -> createMatcher
com.fasterxml.jackson.core.format.MatchStrength -> com.fasterxml.jackson.core.format.MatchStrength:
    com.fasterxml.jackson.core.format.MatchStrength NO_MATCH -> NO_MATCH
    com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE -> INCONCLUSIVE
    com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH -> WEAK_MATCH
    com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH -> SOLID_MATCH
    com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH -> FULL_MATCH
    com.fasterxml.jackson.core.format.MatchStrength[] $VALUES -> a
    com.fasterxml.jackson.core.format.MatchStrength[] values() -> values
    com.fasterxml.jackson.core.format.MatchStrength valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.io.BaseReader -> cR:
    int LAST_VALID_UNICODE_CHAR -> LAST_VALID_UNICODE_CHAR
    char NULL_CHAR -> NULL_CHAR
    char NULL_BYTE -> NULL_BYTE
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _length -> _length
    char[] _tmpBuf -> _tmpBuf
    void close() -> close
    int read() -> read
    void freeBuffers() -> freeBuffers
    void reportBounds(char[],int,int) -> reportBounds
    void reportStrangeStream() -> reportStrangeStream
com.fasterxml.jackson.core.io.CharTypes -> com.fasterxml.jackson.core.io.CharTypes:
    char[] HEX_CHARS -> h
    byte[] HEX_BYTES -> i
    int[] sInputCodes -> a
    int[] sInputCodesUtf8 -> b
    int[] sInputCodesJsNames -> c
    int[] sInputCodesUtf8JsNames -> d
    int[] sInputCodesComment -> e
    int[] sOutputEscapes128 -> f
    int[] sHexValues -> g
    int[] getInputCodeLatin1() -> getInputCodeLatin1
    int[] getInputCodeUtf8() -> getInputCodeUtf8
    int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    int[] getInputCodeUtf8JsNames() -> getInputCodeUtf8JsNames
    int[] getInputCodeComment() -> getInputCodeComment
    int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    int charToHex(int) -> charToHex
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    char[] copyHexChars() -> copyHexChars
    byte[] copyHexBytes() -> copyHexBytes
com.fasterxml.jackson.core.io.CharacterEscapes -> com.fasterxml.jackson.core.io.CharacterEscapes:
    long serialVersionUID -> serialVersionUID
    int ESCAPE_NONE -> ESCAPE_NONE
    int ESCAPE_STANDARD -> ESCAPE_STANDARD
    int ESCAPE_CUSTOM -> ESCAPE_CUSTOM
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    com.fasterxml.jackson.core.SerializableString getEscapeSequence(int) -> getEscapeSequence
    int[] standardAsciiEscapesForJSON() -> standardAsciiEscapesForJSON
com.fasterxml.jackson.core.io.IOContext -> com.fasterxml.jackson.core.io.IOContext:
    java.lang.Object _sourceRef -> _sourceRef
    com.fasterxml.jackson.core.JsonEncoding _encoding -> _encoding
    boolean _managedResource -> _managedResource
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    byte[] _readIOBuffer -> _readIOBuffer
    byte[] _writeEncodingBuffer -> _writeEncodingBuffer
    byte[] _base64Buffer -> _base64Buffer
    char[] _tokenCBuffer -> _tokenCBuffer
    char[] _concatCBuffer -> _concatCBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    void setEncoding(com.fasterxml.jackson.core.JsonEncoding) -> setEncoding
    java.lang.Object getSourceReference() -> getSourceReference
    com.fasterxml.jackson.core.JsonEncoding getEncoding() -> getEncoding
    boolean isResourceManaged() -> isResourceManaged
    com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    byte[] allocReadIOBuffer() -> allocReadIOBuffer
    byte[] allocWriteEncodingBuffer() -> allocWriteEncodingBuffer
    byte[] allocBase64Buffer() -> allocBase64Buffer
    char[] allocTokenBuffer() -> allocTokenBuffer
    char[] allocConcatBuffer() -> allocConcatBuffer
    char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    void releaseReadIOBuffer(byte[]) -> releaseReadIOBuffer
    void releaseWriteEncodingBuffer(byte[]) -> releaseWriteEncodingBuffer
    void releaseBase64Buffer(byte[]) -> releaseBase64Buffer
    void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
com.fasterxml.jackson.core.io.InputDecorator -> com.fasterxml.jackson.core.io.InputDecorator:
    long serialVersionUID -> serialVersionUID
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> decorate
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> decorate
    java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader) -> decorate
com.fasterxml.jackson.core.io.JsonStringEncoder -> com.fasterxml.jackson.core.io.JsonStringEncoder:
    char[] HEX_CHARS -> a
    byte[] HEX_BYTES -> b
    java.lang.ThreadLocal _threadEncoder -> _threadEncoder
    com.fasterxml.jackson.core.util.TextBuffer _textBuffer -> _textBuffer
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    char[] _quoteBuffer -> _quoteBuffer
    com.fasterxml.jackson.core.io.JsonStringEncoder getInstance() -> getInstance
    char[] quoteAsString(java.lang.String) -> quoteAsString
    byte[] quoteAsUTF8(java.lang.String) -> quoteAsUTF8
    byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    int _convertSurrogate(int,int) -> a
    void _throwIllegalSurrogate(int) -> a
com.fasterxml.jackson.core.io.MergedStream -> com.fasterxml.jackson.core.io.MergedStream:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> a
    byte[] _buffer -> b
    int _ptr -> c
    int _end -> d
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void freeMergedBuffer() -> a
com.fasterxml.jackson.core.io.NumberInput -> com.fasterxml.jackson.core.io.NumberInput:
    java.lang.String NASTY_SMALL_DOUBLE -> NASTY_SMALL_DOUBLE
    java.lang.String MIN_LONG_STR_NO_SIGN -> a
    java.lang.String MAX_LONG_STR -> b
    int parseInt(char[],int,int) -> parseInt
    int parseInt(java.lang.String) -> parseInt
    long parseLong(char[],int,int) -> parseLong
    long parseLong(java.lang.String) -> parseLong
    boolean inLongRange(char[],int,int,boolean) -> inLongRange
    boolean inLongRange(java.lang.String,boolean) -> inLongRange
    int parseAsInt(java.lang.String,int) -> parseAsInt
    long parseAsLong(java.lang.String,long) -> parseAsLong
    double parseAsDouble(java.lang.String,double) -> parseAsDouble
    double parseDouble(java.lang.String) -> parseDouble
com.fasterxml.jackson.core.io.NumberOutput -> com.fasterxml.jackson.core.io.NumberOutput:
    int MILLION -> g
    int BILLION -> h
    long TEN_BILLION_L -> i
    long THOUSAND_L -> j
    long MIN_INT_AS_LONG -> k
    long MAX_INT_AS_LONG -> l
    java.lang.String SMALLEST_LONG -> a
    char[] LEADING_TRIPLETS -> b
    char[] FULL_TRIPLETS -> c
    byte[] FULL_TRIPLETS_B -> d
    java.lang.String[] sSmallIntStrs -> e
    java.lang.String[] sSmallIntStrs2 -> f
    int outputInt(int,char[],int) -> outputInt
    int outputInt(int,byte[],int) -> outputInt
    int outputLong(long,char[],int) -> outputLong
    int outputLong(long,byte[],int) -> outputLong
    java.lang.String toString(int) -> toString
    java.lang.String toString(long) -> toString
    java.lang.String toString(double) -> toString
    int outputLeadingTriplet(int,char[],int) -> a
    int outputLeadingTriplet(int,byte[],int) -> a
    int outputFullTriplet(int,char[],int) -> b
    int outputFullTriplet(int,byte[],int) -> b
    int calcLongStrLength(long) -> a
com.fasterxml.jackson.core.io.OutputDecorator -> com.fasterxml.jackson.core.io.OutputDecorator:
    long serialVersionUID -> serialVersionUID
    java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> decorate
    java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer) -> decorate
com.fasterxml.jackson.core.io.SegmentedStringWriter -> com.fasterxml.jackson.core.io.SegmentedStringWriter:
    com.fasterxml.jackson.core.util.TextBuffer _buffer -> _buffer
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.lang.String getAndClear() -> getAndClear
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.fasterxml.jackson.core.io.SerializedString -> com.fasterxml.jackson.core.io.SerializedString:
    java.lang.String _value -> _value
    byte[] _quotedUTF8Ref -> _quotedUTF8Ref
    byte[] _unquotedUTF8Ref -> _unquotedUTF8Ref
    char[] _quotedChars -> _quotedChars
    java.lang.String _jdkSerializeValue -> _jdkSerializeValue
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    java.lang.Object readResolve() -> readResolve
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    int appendQuoted(char[],int) -> appendQuoted
    int appendUnquotedUTF8(byte[],int) -> appendUnquotedUTF8
    int appendUnquoted(char[],int) -> appendUnquoted
    int writeQuotedUTF8(java.io.OutputStream) -> writeQuotedUTF8
    int writeUnquotedUTF8(java.io.OutputStream) -> writeUnquotedUTF8
    int putQuotedUTF8(java.nio.ByteBuffer) -> putQuotedUTF8
    int putUnquotedUTF8(java.nio.ByteBuffer) -> putUnquotedUTF8
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.io.UTF32Reader -> com.fasterxml.jackson.core.io.UTF32Reader:
    boolean mBigEndian -> a
    char mSurrogate -> b
    int mCharCount -> c
    int mByteCount -> d
    int read(char[],int,int) -> read
    int read() -> read
    void close() -> close
com.fasterxml.jackson.core.io.UTF8Writer -> com.fasterxml.jackson.core.io.UTF8Writer:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.OutputStream _out -> a
    byte[] _outBuffer -> b
    int _outBufferEnd -> c
    int _outPtr -> d
    int _surrogate -> e
    java.io.Writer append(char) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    int convertSurrogate(int) -> a
    void throwIllegal(int) -> b
    java.lang.Appendable append(char) -> append
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper -> com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _inputBuffer -> _inputBuffer
    int _inputPtr -> a
    int _inputEnd -> b
    boolean _bufferRecyclable -> c
    int _inputProcessed -> _inputProcessed
    boolean _bigEndian -> _bigEndian
    int _bytesPerChar -> _bytesPerChar
    com.fasterxml.jackson.core.JsonEncoding detectEncoding() -> detectEncoding
    java.io.Reader constructReader() -> constructReader
    com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,boolean,boolean) -> constructParser
    com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength) -> a
    int skipSpace(com.fasterxml.jackson.core.format.InputAccessor) -> a
    int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte) -> a
    boolean checkUTF16(int) -> a
    void reportWeirdUCS4(java.lang.String) -> a
    boolean ensureLoaded(int) -> ensureLoaded
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1 -> cS:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonEncoding -> a
com.fasterxml.jackson.core.json.CoreVersion -> com.fasterxml.jackson.core.json.CoreVersion:
    com.fasterxml.jackson.core.json.CoreVersion instance -> instance
com.fasterxml.jackson.core.json.JsonGeneratorImpl -> com.fasterxml.jackson.core.json.JsonGeneratorImpl:
    int[] sOutputEscapes -> sOutputEscapes
    com.fasterxml.jackson.core.io.IOContext _ioContext -> _ioContext
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    com.fasterxml.jackson.core.Version version() -> version
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
com.fasterxml.jackson.core.json.JsonReadContext -> com.fasterxml.jackson.core.json.JsonReadContext:
    com.fasterxml.jackson.core.json.JsonReadContext _parent -> _parent
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.String _currentName -> _currentName
    com.fasterxml.jackson.core.json.JsonReadContext _child -> _child
    void reset(int,int,int) -> reset
    com.fasterxml.jackson.core.json.JsonReadContext createRootContext(int,int) -> createRootContext
    com.fasterxml.jackson.core.json.JsonReadContext createRootContext() -> createRootContext
    com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    java.lang.String getCurrentName() -> getCurrentName
    com.fasterxml.jackson.core.json.JsonReadContext getParent() -> getParent
    com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    boolean expectComma() -> expectComma
    void setCurrentName(java.lang.String) -> setCurrentName
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.JsonWriteContext -> com.fasterxml.jackson.core.json.JsonWriteContext:
    int STATUS_OK_AS_IS -> STATUS_OK_AS_IS
    int STATUS_OK_AFTER_COMMA -> STATUS_OK_AFTER_COMMA
    int STATUS_OK_AFTER_COLON -> STATUS_OK_AFTER_COLON
    int STATUS_OK_AFTER_SPACE -> STATUS_OK_AFTER_SPACE
    int STATUS_EXPECT_VALUE -> STATUS_EXPECT_VALUE
    int STATUS_EXPECT_NAME -> STATUS_EXPECT_NAME
    com.fasterxml.jackson.core.json.JsonWriteContext _parent -> _parent
    java.lang.String _currentName -> _currentName
    com.fasterxml.jackson.core.json.JsonWriteContext _child -> _child
    com.fasterxml.jackson.core.json.JsonWriteContext createRootContext() -> createRootContext
    com.fasterxml.jackson.core.json.JsonWriteContext reset(int) -> a
    com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    com.fasterxml.jackson.core.json.JsonWriteContext getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    int writeFieldName(java.lang.String) -> writeFieldName
    int writeValue() -> writeValue
    void appendDesc(java.lang.StringBuilder) -> appendDesc
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.ReaderBasedJsonParser -> com.fasterxml.jackson.core.json.ReaderBasedJsonParser:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols -> _symbols
    int _hashSeed -> _hashSeed
    boolean _tokenIncomplete -> _tokenIncomplete
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    void close() -> close
    com.fasterxml.jackson.core.JsonToken parseNumberText(int) -> parseNumberText
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    java.lang.String _parseFieldName(int) -> _parseFieldName
    java.lang.String _parseFieldName2(int,int,int) -> a
    java.lang.String _handleUnusualFieldName(int) -> _handleUnusualFieldName
    java.lang.String _parseApostropheFieldName() -> _parseApostropheFieldName
    com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    com.fasterxml.jackson.core.JsonToken _handleApostropheValue() -> _handleApostropheValue
    void _finishString() -> _finishString
    void _finishString2() -> _finishString2
    void _skipString() -> _skipString
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int _skipWS() -> a
    void _skipComment() -> b
    char _decodeEscaped() -> _decodeEscaped
    void _matchToken(java.lang.String,int) -> _matchToken
    byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1 -> cT:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.core.json.UTF8JsonGenerator -> com.fasterxml.jackson.core.json.UTF8JsonGenerator:
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    byte[] HEX_CHARS -> a
    byte[] NULL_BYTES -> b
    byte[] TRUE_BYTES -> c
    byte[] FALSE_BYTES -> d
    java.io.OutputStream _outputStream -> _outputStream
    byte[] _outputBuffer -> _outputBuffer
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    int _outputMaxContiguous -> _outputMaxContiguous
    char[] _charBuffer -> _charBuffer
    int _charBufferLength -> _charBufferLength
    byte[] _entityBuffer -> _entityBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String) -> _writeFieldName
    void _writeFieldName(com.fasterxml.jackson.core.SerializableString) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> a
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeBytes(byte[]) -> a
    void _writeStringSegments(java.lang.String) -> a
    void _writeStringSegments(char[],int,int) -> a
    void _writeStringSegment(char[],int,int) -> b
    void _writeStringSegment2(char[],int,int) -> c
    void _writeStringSegmentASCII2(char[],int,int) -> d
    int _writeCustomEscape(byte[],int,com.fasterxml.jackson.core.SerializableString,int) -> a
    void _writeUTF8Segment(byte[],int,int) -> a
    void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    int _readMore(java.io.InputStream,byte[],int,int,int) -> a
    int _outputRawMultiByteChar(int,char[],int,int) -> a
    void _outputSurrogates(int,int) -> _outputSurrogates
    int _outputMultiByteChar(int,int) -> a
    int _decodeSurrogate(int,int) -> _decodeSurrogate
    void _writeNull() -> a
    int _writeGenericEscape(int,int) -> b
    void _flushBuffer() -> _flushBuffer
com.fasterxml.jackson.core.json.UTF8StreamJsonParser -> com.fasterxml.jackson.core.json.UTF8StreamJsonParser:
    int[] sInputCodesUtf8 -> i
    int[] sInputCodesLatin1 -> j
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> k
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.Version version() -> version
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    boolean _loadToHaveAtLeast(int) -> _loadToHaveAtLeast
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> a
    com.fasterxml.jackson.core.JsonToken _nextAfterName() -> a
    void close() -> close
    boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonToken parseNumberText(int) -> parseNumberText
    com.fasterxml.jackson.core.JsonToken _parseFloatText(char[],int,int,boolean,int) -> a
    com.fasterxml.jackson.core.sym.Name _parseFieldName(int) -> _parseFieldName
    com.fasterxml.jackson.core.sym.Name parseMediumFieldName(int,int[]) -> parseMediumFieldName
    com.fasterxml.jackson.core.sym.Name parseLongFieldName(int) -> parseLongFieldName
    com.fasterxml.jackson.core.sym.Name slowParseFieldName() -> slowParseFieldName
    com.fasterxml.jackson.core.sym.Name parseFieldName(int,int,int) -> a
    com.fasterxml.jackson.core.sym.Name parseFieldName(int,int,int,int) -> a
    com.fasterxml.jackson.core.sym.Name parseEscapedFieldName(int[],int,int,int,int) -> parseEscapedFieldName
    com.fasterxml.jackson.core.sym.Name _handleUnusualFieldName(int) -> _handleUnusualFieldName
    com.fasterxml.jackson.core.sym.Name _parseApostropheFieldName() -> _parseApostropheFieldName
    com.fasterxml.jackson.core.sym.Name findName(int,int) -> a
    com.fasterxml.jackson.core.sym.Name findName(int,int,int) -> b
    com.fasterxml.jackson.core.sym.Name findName(int[],int,int,int) -> a
    com.fasterxml.jackson.core.sym.Name addName(int[],int,int) -> a
    void _finishString() -> _finishString
    void _skipString() -> _skipString
    com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    com.fasterxml.jackson.core.JsonToken _handleApostropheValue() -> _handleApostropheValue
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    void _matchToken(java.lang.String,int) -> _matchToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    int _skipWS() -> b
    int _skipWSOrEnd() -> c
    int _skipColon() -> d
    void _skipComment() -> e
    char _decodeEscaped() -> _decodeEscaped
    int _decodeCharForError(int) -> _decodeCharForError
    int _decodeUtf8_2(int) -> b
    int _decodeUtf8_3(int) -> c
    int _decodeUtf8_3fast(int) -> d
    int _decodeUtf8_4(int) -> e
    void _skipUtf8_2$13462e() -> f
    void _skipUtf8_3$13462e() -> g
    void _skipUtf8_4$13462e() -> h
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int nextByte() -> i
    void _reportInvalidChar(int) -> _reportInvalidChar
    void _reportInvalidInitial(int) -> _reportInvalidInitial
    void _reportInvalidOther(int) -> _reportInvalidOther
    void _reportInvalidOther(int,int) -> _reportInvalidOther
    int[] growArrayBy(int[],int) -> growArrayBy
    byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1 -> cU:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator -> com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:
    int SHORT_WRITE -> SHORT_WRITE
    char[] HEX_CHARS -> HEX_CHARS
    java.io.Writer _writer -> _writer
    char[] _outputBuffer -> _outputBuffer
    int _outputHead -> _outputHead
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    char[] _entityBuffer -> _entityBuffer
    com.fasterxml.jackson.core.SerializableString _currentEscape -> _currentEscape
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    void _writeFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawLong(java.lang.String) -> a
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> a
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeString(java.lang.String) -> b
    void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    int _readMore(java.io.InputStream,byte[],int,int,int) -> a
    void _writeNull() -> a
    void _prependOrWriteCharacterEscape(char,int) -> a
    int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> a
    void _appendCharacterEscape(char,int) -> b
    char[] _allocateEntityBuffer() -> b
    void _flushBuffer() -> _flushBuffer
com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer -> com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _parent -> _parent
    java.util.concurrent.atomic.AtomicReference _tableInfo -> _tableInfo
    int _hashSeed -> a
    boolean _intern -> _intern
    int _count -> _count
    int _longestCollisionList -> _longestCollisionList
    int _mainHashMask -> _mainHashMask
    int[] _mainHash -> _mainHash
    com.fasterxml.jackson.core.sym.Name[] _mainNames -> _mainNames
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList -> _collList
    int _collCount -> _collCount
    int _collEnd -> _collEnd
    boolean _needRehash -> b
    boolean _mainHashShared -> c
    boolean _mainNamesShared -> d
    boolean _collListShared -> e
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo initTableInfo(int) -> a
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot() -> createRoot
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot(int) -> createRoot
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    void release() -> release
    int size() -> size
    int bucketCount() -> bucketCount
    boolean maybeDirty() -> maybeDirty
    int hashSeed() -> hashSeed
    int collisionCount() -> collisionCount
    int maxCollisionLength() -> maxCollisionLength
    com.fasterxml.jackson.core.sym.Name getEmptyName() -> getEmptyName
    com.fasterxml.jackson.core.sym.Name findName(int) -> findName
    com.fasterxml.jackson.core.sym.Name findName(int,int) -> findName
    com.fasterxml.jackson.core.sym.Name findName(int[],int) -> findName
    com.fasterxml.jackson.core.sym.Name addName(java.lang.String,int,int) -> addName
    com.fasterxml.jackson.core.sym.Name addName(java.lang.String,int[],int) -> addName
    int calcHash(int) -> calcHash
    int calcHash(int,int) -> calcHash
    int calcHash(int[],int) -> calcHash
    int[] calcQuads(byte[]) -> calcQuads
    void _addSymbol(int,com.fasterxml.jackson.core.sym.Name) -> a
    int findBestBucket() -> a
    void expandCollision() -> b
    void reportTooManyCollisions(int) -> reportTooManyCollisions
com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket -> cV:
    com.fasterxml.jackson.core.sym.Name _name -> a
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next -> b
    int _length -> c
    com.fasterxml.jackson.core.sym.Name find(int,int,int) -> a
    com.fasterxml.jackson.core.sym.Name find(int,int[],int) -> a
com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo -> cW:
    int count -> a
    int mainHashMask -> b
    int[] mainHash -> c
    com.fasterxml.jackson.core.sym.Name[] mainNames -> d
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] collList -> e
    int collCount -> f
    int collEnd -> g
    int longestCollisionList -> h
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer -> com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:
    int HASH_MULT -> HASH_MULT
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer sBootstrapSymbolTable -> a
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent -> _parent
    int _hashSeed -> b
    boolean _intern -> _intern
    boolean _canonicalize -> _canonicalize
    java.lang.String[] _symbols -> _symbols
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _sizeThreshold -> _sizeThreshold
    int _indexMask -> _indexMask
    int _longestCollisionList -> _longestCollisionList
    boolean _dirty -> _dirty
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(int) -> createRoot
    void initTables(int) -> a
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    void release() -> release
    int size() -> size
    int bucketCount() -> bucketCount
    boolean maybeDirty() -> maybeDirty
    int hashSeed() -> hashSeed
    int collisionCount() -> collisionCount
    int maxCollisionLength() -> maxCollisionLength
    java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    int _hashToIndex(int) -> _hashToIndex
    int calcHash(char[],int,int) -> calcHash
    int calcHash(java.lang.String) -> calcHash
    void rehash() -> a
    void reportTooManyCollisions(int) -> reportTooManyCollisions
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket -> cX:
    java.lang.String _symbol -> a
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket _next -> b
    int _length -> c
    java.lang.String find(char[],int,int) -> a
com.fasterxml.jackson.core.sym.Name -> com.fasterxml.jackson.core.sym.Name:
    java.lang.String _name -> _name
    int _hashCode -> _hashCode
    java.lang.String getName() -> getName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.sym.Name1 -> com.fasterxml.jackson.core.sym.Name1:
    com.fasterxml.jackson.core.sym.Name1 sEmptyName -> a
    int mQuad -> b
    com.fasterxml.jackson.core.sym.Name1 getEmptyName() -> a
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.Name2 -> com.fasterxml.jackson.core.sym.Name2:
    int mQuad1 -> a
    int mQuad2 -> b
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.Name3 -> com.fasterxml.jackson.core.sym.Name3:
    int mQuad1 -> a
    int mQuad2 -> b
    int mQuad3 -> c
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.NameN -> com.fasterxml.jackson.core.sym.NameN:
    int[] mQuads -> a
    int mQuadLen -> b
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.type.ResolvedType -> com.fasterxml.jackson.core.type.ResolvedType:
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.String toCanonical() -> toCanonical
com.fasterxml.jackson.core.type.TypeReference -> com.fasterxml.jackson.core.type.TypeReference:
    java.lang.reflect.Type _type -> _type
    java.lang.reflect.Type getType() -> getType
    int compareTo(com.fasterxml.jackson.core.type.TypeReference) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.core.util.BufferRecycler -> com.fasterxml.jackson.core.util.BufferRecycler:
    int DEFAULT_WRITE_CONCAT_BUFFER_LEN -> DEFAULT_WRITE_CONCAT_BUFFER_LEN
    byte[][] _byteBuffers -> _byteBuffers
    char[][] _charBuffers -> _charBuffers
    byte[] allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType) -> allocByteBuffer
    void releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType,byte[]) -> releaseByteBuffer
    char[] allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType) -> allocCharBuffer
    char[] allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType,int) -> allocCharBuffer
    void releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType,char[]) -> releaseCharBuffer
com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType -> com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType:
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType READ_IO_BUFFER -> READ_IO_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER -> WRITE_ENCODING_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER -> WRITE_CONCAT_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType BASE64_CODEC_BUFFER -> BASE64_CODEC_BUFFER
    int size -> size
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] $VALUES -> a
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] values() -> values
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType -> com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType:
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType TOKEN_BUFFER -> TOKEN_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType CONCAT_BUFFER -> CONCAT_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType TEXT_BUFFER -> TEXT_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType NAME_COPY_BUFFER -> NAME_COPY_BUFFER
    int size -> size
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[] $VALUES -> a
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[] values() -> values
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.util.ByteArrayBuilder -> com.fasterxml.jackson.core.util.ByteArrayBuilder:
    byte[] NO_BYTES -> a
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> b
    java.util.LinkedList _pastBlocks -> c
    int _pastLen -> d
    byte[] _currBlock -> e
    int _currBlockPtr -> f
    void reset() -> reset
    void release() -> release
    void append(int) -> append
    void appendTwoBytes(int) -> appendTwoBytes
    void appendThreeBytes(int) -> appendThreeBytes
    byte[] toByteArray() -> toByteArray
    byte[] resetAndGetFirstSegment() -> resetAndGetFirstSegment
    byte[] finishCurrentSegment() -> finishCurrentSegment
    byte[] completeAndCoalesce(int) -> completeAndCoalesce
    byte[] getCurrentSegment() -> getCurrentSegment
    void setCurrentSegmentLength(int) -> setCurrentSegmentLength
    int getCurrentSegmentLength() -> getCurrentSegmentLength
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
    void flush() -> flush
    void _allocMore() -> a
com.fasterxml.jackson.core.util.DefaultPrettyPrinter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter -> _arrayIndenter
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter -> _objectIndenter
    com.fasterxml.jackson.core.SerializableString _rootSeparator -> _rootSeparator
    boolean _spacesInObjectEntries -> _spacesInObjectEntries
    int _nesting -> _nesting
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(com.fasterxml.jackson.core.SerializableString) -> withRootSeparator
    void indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> indentArraysWith
    void indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> indentObjectsWith
    void spacesInObjectEntries(boolean) -> spacesInObjectEntries
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter createInstance() -> createInstance
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    java.lang.Object createInstance() -> createInstance
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter instance -> instance
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter:
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter instance -> instance
    java.lang.String SYSTEM_LINE_SEPARATOR -> a
    char[] SPACES -> b
    boolean isInline() -> isInline
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance -> instance
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.Instantiatable -> com.fasterxml.jackson.core.util.Instantiatable:
    java.lang.Object createInstance() -> createInstance
com.fasterxml.jackson.core.util.InternCache -> com.fasterxml.jackson.core.util.InternCache:
    com.fasterxml.jackson.core.util.InternCache instance -> instance
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.String intern(java.lang.String) -> intern
com.fasterxml.jackson.core.util.JsonGeneratorDelegate -> com.fasterxml.jackson.core.util.JsonGeneratorDelegate:
    com.fasterxml.jackson.core.JsonGenerator delegate -> delegate
    void close() -> close
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    void flush() -> flush
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    boolean isClosed() -> isClosed
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeBoolean(boolean) -> writeBoolean
    void writeEndArray() -> writeEndArray
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeNull() -> writeNull
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeObject(java.lang.Object) -> writeObject
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeStartArray() -> writeStartArray
    void writeStartObject() -> writeStartObject
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
com.fasterxml.jackson.core.util.JsonParserDelegate -> com.fasterxml.jackson.core.util.JsonParserDelegate:
    com.fasterxml.jackson.core.JsonParser delegate -> delegate
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    boolean requiresCustomCodec() -> requiresCustomCodec
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    boolean hasTextCharacters() -> hasTextCharacters
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    boolean getBooleanValue() -> getBooleanValue
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
com.fasterxml.jackson.core.util.JsonParserSequence -> com.fasterxml.jackson.core.util.JsonParserSequence:
    com.fasterxml.jackson.core.JsonParser[] _parsers -> _parsers
    int _nextParser -> _nextParser
    com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser) -> createFlattened
    void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    void close() -> close
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    int containedParsersCount() -> containedParsersCount
    boolean switchToNext() -> switchToNext
com.fasterxml.jackson.core.util.MinimalPrettyPrinter -> com.fasterxml.jackson.core.util.MinimalPrettyPrinter:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    java.lang.String _rootValueSeparator -> _rootValueSeparator
    void setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
com.fasterxml.jackson.core.util.TextBuffer -> com.fasterxml.jackson.core.util.TextBuffer:
    char[] NO_CHARS -> a
    com.fasterxml.jackson.core.util.BufferRecycler _allocator -> b
    char[] _inputBuffer -> c
    int _inputStart -> d
    int _inputLen -> e
    java.util.ArrayList _segments -> f
    boolean _hasSegments -> g
    int _segmentSize -> h
    char[] _currentSegment -> i
    int _currentSize -> j
    java.lang.String _resultString -> k
    char[] _resultArray -> l
    void releaseBuffers() -> releaseBuffers
    void resetWithEmpty() -> resetWithEmpty
    void resetWithShared(char[],int,int) -> resetWithShared
    void resetWithCopy(char[],int,int) -> resetWithCopy
    void resetWithString(java.lang.String) -> resetWithString
    char[] findBuffer(int) -> a
    void clearSegments() -> a
    int size() -> size
    int getTextOffset() -> getTextOffset
    boolean hasTextAsCharacters() -> hasTextAsCharacters
    char[] getTextBuffer() -> getTextBuffer
    java.lang.String contentsAsString() -> contentsAsString
    char[] contentsAsArray() -> contentsAsArray
    java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    double contentsAsDouble() -> contentsAsDouble
    void ensureNotShared() -> ensureNotShared
    void append(char) -> append
    void append(char[],int,int) -> append
    void append(java.lang.String,int,int) -> append
    char[] getCurrentSegment() -> getCurrentSegment
    char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    int getCurrentSegmentSize() -> getCurrentSegmentSize
    void setCurrentLength(int) -> setCurrentLength
    char[] finishCurrentSegment() -> finishCurrentSegment
    char[] expandCurrentSegment() -> expandCurrentSegment
    java.lang.String toString() -> toString
    void unshare(int) -> b
    void expand(int) -> c
com.fasterxml.jackson.core.util.VersionUtil -> com.fasterxml.jackson.core.util.VersionUtil:
    java.lang.String VERSION_FILE -> VERSION_FILE
    java.util.regex.Pattern VERSION_SEPARATOR -> a
    com.fasterxml.jackson.core.Version _version -> b
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.Version versionFor(java.lang.Class) -> versionFor
    com.fasterxml.jackson.core.Version mavenVersionFor(java.lang.ClassLoader,java.lang.String,java.lang.String) -> mavenVersionFor
    com.fasterxml.jackson.core.Version parseVersion(java.lang.String) -> parseVersion
    com.fasterxml.jackson.core.Version parseVersion(java.lang.String,java.lang.String,java.lang.String) -> parseVersion
    int parseVersionPart(java.lang.String) -> parseVersionPart
com.fasterxml.jackson.databind.AbstractTypeResolver -> com.fasterxml.jackson.databind.AbstractTypeResolver:
    com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeMapping
    com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> resolveAbstractType
com.fasterxml.jackson.databind.AnnotationIntrospector -> com.fasterxml.jackson.databind.AnnotationIntrospector:
    com.fasterxml.jackson.databind.AnnotationIntrospector nopInstance() -> nopInstance
    com.fasterxml.jackson.databind.AnnotationIntrospector pair(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> pair
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    com.fasterxml.jackson.core.Version version() -> version
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findFilterId
    java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findFormat
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated) -> findWrapperName
    java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    com.fasterxml.jackson.annotation.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Include) -> findSerializationInclusion
    java.lang.Class findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findSerializationContentType
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    java.lang.String findSerializationName(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> findSerializationName
    java.lang.String findSerializationName(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> findSerializationName
    boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> findDeserializationName
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> findDeserializationName
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findDeserializationName
    boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
com.fasterxml.jackson.databind.AnnotationIntrospector$Pair -> com.fasterxml.jackson.databind.AnnotationIntrospector$Pair:
    long serialVersionUID -> serialVersionUID
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty -> com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type _type -> a
    java.lang.String _name -> b
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty managed(java.lang.String) -> managed
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty back(java.lang.String) -> back
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type getType() -> getType
    java.lang.String getName() -> getName
    boolean isManagedReference() -> isManagedReference
    boolean isBackReference() -> isBackReference
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type -> com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type:
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type MANAGED_REFERENCE -> MANAGED_REFERENCE
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type BACK_REFERENCE -> BACK_REFERENCE
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] $VALUES -> a
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type[] values() -> values
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.databind.BeanDescription -> com.fasterxml.jackson.databind.BeanDescription:
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.Class getBeanClass() -> getBeanClass
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    java.util.List findProperties() -> findProperties
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    java.util.List getConstructors() -> getConstructors
    java.util.List getFactoryMethods() -> getFactoryMethods
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> findAnyGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    com.fasterxml.jackson.annotation.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> findSerializationInclusion
    com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> findExpectedFormat
    java.util.Map findInjectables() -> findInjectables
    java.lang.Class findPOJOBuilder() -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> findPOJOBuilderConfig
    java.lang.Object instantiateBean(boolean) -> instantiateBean
com.fasterxml.jackson.databind.BeanProperty -> com.fasterxml.jackson.databind.BeanProperty:
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
com.fasterxml.jackson.databind.BeanProperty$Std -> com.fasterxml.jackson.databind.BeanProperty$Std:
    java.lang.String _name -> _name
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> _contextAnnotations
    com.fasterxml.jackson.databind.BeanProperty$Std withType(com.fasterxml.jackson.databind.JavaType) -> withType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
com.fasterxml.jackson.databind.DeserializationConfig -> com.fasterxml.jackson.databind.DeserializationConfig:
    long serialVersionUID -> serialVersionUID
    int _deserFeatures -> _deserFeatures
    com.fasterxml.jackson.databind.util.LinkedNode _problemHandlers -> _problemHandlers
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    com.fasterxml.jackson.databind.cfg.BaseSettings getBaseSettings() -> getBaseSettings
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.AnnotationIntrospector) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.type.TypeFactory) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    com.fasterxml.jackson.databind.DeserializationConfig withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    com.fasterxml.jackson.databind.DeserializationConfig withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.DeserializationConfig with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.DeserializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> a
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> withHandler
    com.fasterxml.jackson.databind.DeserializationConfig withNoProblemHandlers() -> withNoProblemHandlers
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.DeserializationFeature) -> with
    com.fasterxml.jackson.databind.DeserializationConfig with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> with
    com.fasterxml.jackson.databind.DeserializationConfig withFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature) -> without
    com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> without
    com.fasterxml.jackson.databind.DeserializationConfig withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    boolean useRootWrapping() -> useRootWrapping
    com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectDirectClassAnnotations
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    int getDeserializationFeatures() -> getDeserializationFeatures
    com.fasterxml.jackson.databind.util.LinkedNode getProblemHandlers() -> getProblemHandlers
    com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> introspect
    com.fasterxml.jackson.databind.BeanDescription introspectForCreation(com.fasterxml.jackson.databind.JavaType) -> introspectForCreation
    com.fasterxml.jackson.databind.BeanDescription introspectForBuilder(com.fasterxml.jackson.databind.JavaType) -> introspectForBuilder
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.type.TypeFactory) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.AnnotationIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
com.fasterxml.jackson.databind.DeserializationContext -> com.fasterxml.jackson.databind.DeserializationContext:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.DeserializerCache _cache -> _cache
    com.fasterxml.jackson.databind.deser.DeserializerFactory _factory -> _factory
    com.fasterxml.jackson.databind.DeserializationConfig _config -> _config
    int _featureFlags -> _featureFlags
    java.lang.Class _view -> _view
    com.fasterxml.jackson.core.JsonParser _parser -> _parser
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.util.ArrayBuilders _arrayBuilders -> _arrayBuilders
    com.fasterxml.jackson.databind.util.ObjectBuffer _objectBuffer -> _objectBuffer
    java.text.DateFormat _dateFormat -> _dateFormat
    com.fasterxml.jackson.databind.deser.DeserializerFactory getFactory() -> getFactory
    com.fasterxml.jackson.databind.DeserializationConfig getConfig() -> getConfig
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    com.fasterxml.jackson.core.JsonParser getParser() -> getParser
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
    java.lang.Class getActiveView() -> getActiveView
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType) -> hasValueDeserializerFor
    com.fasterxml.jackson.databind.JsonDeserializer findContextualValueDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findContextualValueDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> findRootValueDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findKeyDeserializer
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> constructType
    java.lang.Class findClass(java.lang.String) -> findClass
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> keyDeserializerInstance
    com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdGeneratorInstance
    com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer() -> leaseObjectBuffer
    void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer) -> returnObjectBuffer
    com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders() -> getArrayBuilders
    java.util.Date parseDate(java.lang.String) -> parseDate
    java.util.Calendar constructCalendar(java.util.Date) -> constructCalendar
    boolean handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
    void reportUnknownProperty(java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.JsonDeserializer) -> reportUnknownProperty
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class) -> mappingException
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.Class,com.fasterxml.jackson.core.JsonToken) -> mappingException
    com.fasterxml.jackson.databind.JsonMappingException mappingException(java.lang.String) -> mappingException
    com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.Throwable) -> instantiationException
    com.fasterxml.jackson.databind.JsonMappingException instantiationException(java.lang.Class,java.lang.String) -> instantiationException
    com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.Class,java.lang.String) -> weirdStringException
    com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String) -> weirdStringException
    com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Class,java.lang.String) -> weirdNumberException
    com.fasterxml.jackson.databind.JsonMappingException weirdNumberException(java.lang.Number,java.lang.Class,java.lang.String) -> weirdNumberException
    com.fasterxml.jackson.databind.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String) -> weirdKeyException
    com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken,java.lang.String) -> wrongTokenException
    com.fasterxml.jackson.databind.JsonMappingException unknownTypeException(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> unknownTypeException
    com.fasterxml.jackson.databind.JsonMappingException endOfInputException(java.lang.Class) -> endOfInputException
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.lang.String determineClassName(java.lang.Object) -> determineClassName
    java.lang.String _calcName(java.lang.Class) -> _calcName
    java.lang.String _valueDesc() -> _valueDesc
    java.lang.String _desc(java.lang.String) -> _desc
com.fasterxml.jackson.databind.DeserializationFeature -> com.fasterxml.jackson.databind.DeserializationFeature:
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS -> USE_BIG_DECIMAL_FOR_FLOATS
    com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS -> USE_BIG_INTEGER_FOR_INTS
    com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY -> USE_JAVA_ARRAY_FOR_JSON_ARRAY
    com.fasterxml.jackson.databind.DeserializationFeature READ_ENUMS_USING_TO_STRING -> READ_ENUMS_USING_TO_STRING
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_UNKNOWN_PROPERTIES -> FAIL_ON_UNKNOWN_PROPERTIES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NULL_FOR_PRIMITIVES -> FAIL_ON_NULL_FOR_PRIMITIVES
    com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_NUMBERS_FOR_ENUMS -> FAIL_ON_NUMBERS_FOR_ENUMS
    com.fasterxml.jackson.databind.DeserializationFeature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_SINGLE_VALUE_AS_ARRAY -> ACCEPT_SINGLE_VALUE_AS_ARRAY
    com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_ROOT_VALUE -> UNWRAP_ROOT_VALUE
    com.fasterxml.jackson.databind.DeserializationFeature ACCEPT_EMPTY_STRING_AS_NULL_OBJECT -> ACCEPT_EMPTY_STRING_AS_NULL_OBJECT
    com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_AS_NULL -> READ_UNKNOWN_ENUM_VALUES_AS_NULL
    com.fasterxml.jackson.databind.DeserializationFeature EAGER_DESERIALIZER_FETCH -> EAGER_DESERIALIZER_FETCH
    boolean _defaultState -> a
    com.fasterxml.jackson.databind.DeserializationFeature[] $VALUES -> b
    com.fasterxml.jackson.databind.DeserializationFeature[] values() -> values
    com.fasterxml.jackson.databind.DeserializationFeature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.databind.InjectableValues -> com.fasterxml.jackson.databind.InjectableValues:
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
com.fasterxml.jackson.databind.InjectableValues$Std -> com.fasterxml.jackson.databind.InjectableValues$Std:
    long serialVersionUID -> serialVersionUID
    java.util.Map _values -> _values
    com.fasterxml.jackson.databind.InjectableValues$Std addValue(java.lang.String,java.lang.Object) -> addValue
    com.fasterxml.jackson.databind.InjectableValues$Std addValue(java.lang.Class,java.lang.Object) -> addValue
    java.lang.Object findInjectableValue(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,java.lang.Object) -> findInjectableValue
com.fasterxml.jackson.databind.JavaType -> com.fasterxml.jackson.databind.JavaType:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.Object _valueHandler -> _valueHandler
    java.lang.Object _typeHandler -> _typeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType narrowBy(java.lang.Class) -> narrowBy
    com.fasterxml.jackson.databind.JavaType forcedNarrowBy(java.lang.Class) -> forcedNarrowBy
    com.fasterxml.jackson.databind.JavaType widenBy(java.lang.Class) -> widenBy
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType _widen(java.lang.Class) -> _widen
    com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    com.fasterxml.jackson.databind.JavaType getKeyType() -> getKeyType
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    java.lang.String getGenericSignature() -> getGenericSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String getErasedSignature() -> getErasedSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    void _assertSubclass(java.lang.Class,java.lang.Class) -> _assertSubclass
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
com.fasterxml.jackson.databind.JsonDeserializer -> com.fasterxml.jackson.databind.JsonDeserializer:
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer) -> replaceDelegatee
    java.lang.Object getNullValue() -> getNullValue
    java.lang.Object getEmptyValue() -> getEmptyValue
    java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
com.fasterxml.jackson.databind.JsonDeserializer$None -> com.fasterxml.jackson.databind.JsonDeserializer$None:
com.fasterxml.jackson.databind.JsonMappingException -> com.fasterxml.jackson.databind.JsonMappingException:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedList _path -> _path
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> from
    com.fasterxml.jackson.databind.JsonMappingException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Throwable) -> from
    com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException) -> fromUnexpectedIOE
    com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapWithPath
    com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int) -> wrapWithPath
    com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,com.fasterxml.jackson.databind.JsonMappingException$Reference) -> wrapWithPath
    java.util.List getPath() -> getPath
    java.lang.String getPathReference() -> getPathReference
    java.lang.StringBuilder getPathReference(java.lang.StringBuilder) -> getPathReference
    void prependPath(java.lang.Object,java.lang.String) -> prependPath
    void prependPath(java.lang.Object,int) -> prependPath
    void prependPath(com.fasterxml.jackson.databind.JsonMappingException$Reference) -> prependPath
    java.lang.String getLocalizedMessage() -> getLocalizedMessage
    java.lang.String getMessage() -> getMessage
    java.lang.String _buildMessage() -> _buildMessage
    java.lang.String toString() -> toString
    void _appendPathDesc(java.lang.StringBuilder) -> _appendPathDesc
com.fasterxml.jackson.databind.JsonMappingException$Reference -> com.fasterxml.jackson.databind.JsonMappingException$Reference:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _from -> _from
    java.lang.String _fieldName -> _fieldName
    int _index -> _index
    void setFrom(java.lang.Object) -> setFrom
    void setFieldName(java.lang.String) -> setFieldName
    void setIndex(int) -> setIndex
    java.lang.Object getFrom() -> getFrom
    java.lang.String getFieldName() -> getFieldName
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.JsonNode -> com.fasterxml.jackson.databind.JsonNode:
    java.util.List NO_NODES -> NO_NODES
    java.util.List NO_STRINGS -> NO_STRINGS
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    boolean isValueNode() -> isValueNode
    boolean isContainerNode() -> isContainerNode
    boolean isMissingNode() -> isMissingNode
    boolean isArray() -> isArray
    boolean isObject() -> isObject
    boolean isPojo() -> isPojo
    boolean isNumber() -> isNumber
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isInt() -> isInt
    boolean isLong() -> isLong
    boolean isDouble() -> isDouble
    boolean isBigDecimal() -> isBigDecimal
    boolean isBigInteger() -> isBigInteger
    boolean isTextual() -> isTextual
    boolean isBoolean() -> isBoolean
    boolean isNull() -> isNull
    boolean isBinary() -> isBinary
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.String textValue() -> textValue
    byte[] binaryValue() -> binaryValue
    boolean booleanValue() -> booleanValue
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    boolean has(java.lang.String) -> has
    boolean has(int) -> has
    boolean hasNonNull(java.lang.String) -> hasNonNull
    boolean hasNonNull(int) -> hasNonNull
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String) -> findValues
    java.util.List findValuesAsText(java.lang.String) -> findValuesAsText
    com.fasterxml.jackson.databind.JsonNode findPath(java.lang.String) -> findPath
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String) -> findParents
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    int size() -> size
    java.util.Iterator iterator() -> iterator
    java.util.Iterator elements() -> elements
    java.util.Iterator fieldNames() -> fieldNames
    java.util.Iterator fields() -> fields
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    com.fasterxml.jackson.databind.JsonNode with(java.lang.String) -> with
    com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String) -> withArray
    com.fasterxml.jackson.core.JsonParser traverse() -> traverse
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.JsonSerializable -> com.fasterxml.jackson.databind.JsonSerializable:
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.JsonSerializer -> com.fasterxml.jackson.databind.JsonSerializer:
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    com.fasterxml.jackson.databind.JsonSerializer replaceDelegatee(com.fasterxml.jackson.databind.JsonSerializer) -> replaceDelegatee
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
    boolean isEmpty(java.lang.Object) -> isEmpty
    boolean usesObjectId() -> usesObjectId
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    com.fasterxml.jackson.databind.JsonSerializer getDelegatee() -> getDelegatee
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.JsonSerializer$None -> com.fasterxml.jackson.databind.JsonSerializer$None:
com.fasterxml.jackson.databind.KeyDeserializer -> com.fasterxml.jackson.databind.KeyDeserializer:
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
com.fasterxml.jackson.databind.KeyDeserializer$None -> com.fasterxml.jackson.databind.KeyDeserializer$None:
com.fasterxml.jackson.databind.MapperFeature -> com.fasterxml.jackson.databind.MapperFeature:
    com.fasterxml.jackson.databind.MapperFeature USE_ANNOTATIONS -> USE_ANNOTATIONS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_CREATORS -> AUTO_DETECT_CREATORS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_FIELDS -> AUTO_DETECT_FIELDS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_GETTERS -> AUTO_DETECT_GETTERS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_IS_GETTERS -> AUTO_DETECT_IS_GETTERS
    com.fasterxml.jackson.databind.MapperFeature AUTO_DETECT_SETTERS -> AUTO_DETECT_SETTERS
    com.fasterxml.jackson.databind.MapperFeature REQUIRE_SETTERS_FOR_GETTERS -> REQUIRE_SETTERS_FOR_GETTERS
    com.fasterxml.jackson.databind.MapperFeature USE_GETTERS_AS_SETTERS -> USE_GETTERS_AS_SETTERS
    com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS -> CAN_OVERRIDE_ACCESS_MODIFIERS
    com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING -> USE_STATIC_TYPING
    com.fasterxml.jackson.databind.MapperFeature DEFAULT_VIEW_INCLUSION -> DEFAULT_VIEW_INCLUSION
    com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY -> SORT_PROPERTIES_ALPHABETICALLY
    com.fasterxml.jackson.databind.MapperFeature USE_WRAPPER_NAME_AS_PROPERTY_NAME -> USE_WRAPPER_NAME_AS_PROPERTY_NAME
    boolean _defaultState -> a
    com.fasterxml.jackson.databind.MapperFeature[] $VALUES -> b
    com.fasterxml.jackson.databind.MapperFeature[] values() -> values
    com.fasterxml.jackson.databind.MapperFeature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.databind.MappingIterator -> com.fasterxml.jackson.databind.MappingIterator:
    com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> _deserializer
    com.fasterxml.jackson.core.JsonParser _parser -> _parser
    boolean _closeParser -> _closeParser
    boolean _hasNextChecked -> _hasNextChecked
    java.lang.Object _updatedValue -> _updatedValue
    com.fasterxml.jackson.databind.MappingIterator emptyIterator() -> emptyIterator
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void close() -> close
    boolean hasNextValue() -> hasNextValue
    java.lang.Object nextValue() -> nextValue
com.fasterxml.jackson.databind.MappingJsonFactory -> com.fasterxml.jackson.databind.MappingJsonFactory:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ObjectMapper getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonFactory copy() -> copy
    java.lang.String getFormatName() -> getFormatName
    com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
com.fasterxml.jackson.databind.Module -> com.fasterxml.jackson.databind.Module:
    java.lang.String getModuleName() -> getModuleName
    com.fasterxml.jackson.core.Version version() -> version
    void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> setupModule
com.fasterxml.jackson.databind.Module$SetupContext -> com.fasterxml.jackson.databind.Module$SetupContext:
    com.fasterxml.jackson.core.Version getMapperVersion() -> getMapperVersion
    com.fasterxml.jackson.core.ObjectCodec getOwner() -> getOwner
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> addDeserializers
    void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> addKeyDeserializers
    void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addSerializers
    void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addKeySerializers
    void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> addValueInstantiators
    void insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> appendAnnotationIntrospector
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
    void addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addDeserializationProblemHandler
com.fasterxml.jackson.databind.ObjectMapper -> com.fasterxml.jackson.databind.ObjectMapper:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType JSON_NODE_TYPE -> a
    com.fasterxml.jackson.databind.introspect.ClassIntrospector DEFAULT_INTROSPECTOR -> DEFAULT_INTROSPECTOR
    com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR -> DEFAULT_ANNOTATION_INTROSPECTOR
    com.fasterxml.jackson.databind.introspect.VisibilityChecker STD_VISIBILITY_CHECKER -> STD_VISIBILITY_CHECKER
    com.fasterxml.jackson.core.PrettyPrinter _defaultPrettyPrinter -> _defaultPrettyPrinter
    com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE -> DEFAULT_BASE
    com.fasterxml.jackson.core.JsonFactory _jsonFactory -> _jsonFactory
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    com.fasterxml.jackson.databind.util.RootNameLookup _rootNames -> _rootNames
    java.util.HashMap _mixInAnnotations -> _mixInAnnotations
    com.fasterxml.jackson.databind.SerializationConfig _serializationConfig -> _serializationConfig
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> _serializerProvider
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig -> _deserializationConfig
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext -> _deserializationContext
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    com.fasterxml.jackson.databind.ObjectMapper copy() -> copy
    void _checkInvalidCopy(java.lang.Class) -> _checkInvalidCopy
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module) -> registerModule
    com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig() -> getSerializationConfig
    com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig() -> getDeserializationConfig
    com.fasterxml.jackson.databind.DeserializationContext getDeserializationContext() -> getDeserializationContext
    com.fasterxml.jackson.databind.ObjectMapper setSerializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory) -> setSerializerFactory
    com.fasterxml.jackson.databind.ser.SerializerFactory getSerializerFactory() -> getSerializerFactory
    com.fasterxml.jackson.databind.ObjectMapper setSerializerProvider(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider) -> setSerializerProvider
    com.fasterxml.jackson.databind.SerializerProvider getSerializerProvider() -> getSerializerProvider
    void setMixInAnnotations(java.util.Map) -> setMixInAnnotations
    void addMixInAnnotations(java.lang.Class,java.lang.Class) -> addMixInAnnotations
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    int mixInCount() -> mixInCount
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    void setVisibilityChecker(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> setVisibilityChecker
    com.fasterxml.jackson.databind.ObjectMapper setVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> setVisibility
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    com.fasterxml.jackson.databind.ObjectMapper setSubtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> setSubtypeResolver
    com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> setAnnotationIntrospector
    com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospectors(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> setAnnotationIntrospectors
    com.fasterxml.jackson.databind.ObjectMapper setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> setPropertyNamingStrategy
    com.fasterxml.jackson.databind.ObjectMapper setSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> setSerializationInclusion
    com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping() -> enableDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping) -> enableDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> enableDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper enableDefaultTypingAsProperty(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String) -> enableDefaultTypingAsProperty
    com.fasterxml.jackson.databind.ObjectMapper disableDefaultTyping() -> disableDefaultTyping
    com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> setDefaultTyping
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.ObjectMapper setTypeFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> setTypeFactory
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    com.fasterxml.jackson.databind.ObjectMapper setNodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> setNodeFactory
    com.fasterxml.jackson.databind.ObjectMapper addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addHandler
    com.fasterxml.jackson.databind.ObjectMapper clearProblemHandlers() -> clearProblemHandlers
    void setFilters(com.fasterxml.jackson.databind.ser.FilterProvider) -> setFilters
    com.fasterxml.jackson.databind.ObjectMapper setBase64Variant(com.fasterxml.jackson.core.Base64Variant) -> setBase64Variant
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    com.fasterxml.jackson.databind.ObjectMapper setDateFormat(java.text.DateFormat) -> setDateFormat
    java.lang.Object setHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> setHandlerInstantiator
    com.fasterxml.jackson.databind.ObjectMapper setInjectableValues(com.fasterxml.jackson.databind.InjectableValues) -> setInjectableValues
    com.fasterxml.jackson.databind.ObjectMapper setLocale(java.util.Locale) -> setLocale
    com.fasterxml.jackson.databind.ObjectMapper setTimeZone(java.util.TimeZone) -> setTimeZone
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.MapperFeature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.SerializationFeature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.DeserializationFeature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.MapperFeature[]) -> enable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.MapperFeature[]) -> disable
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature) -> enable
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> enable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.DeserializationFeature) -> disable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> disable
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature) -> enable
    com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> enable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.SerializationFeature) -> disable
    com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> disable
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory() -> getNodeFactory
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValue
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.InputStream) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.Reader) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(byte[]) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.File) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.net.URL) -> readTree
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    void writeTree(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.JsonNode) -> writeTree
    com.fasterxml.jackson.databind.node.ObjectNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.databind.node.ArrayNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object) -> valueToTree
    boolean canSerialize(java.lang.Class) -> canSerialize
    boolean canDeserialize(com.fasterxml.jackson.databind.JavaType) -> canDeserialize
    java.lang.Object readValue(java.io.File,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.File,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.File,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.net.URL,java.lang.Class) -> readValue
    java.lang.Object readValue(java.net.URL,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.net.URL,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.lang.String,java.lang.Class) -> readValue
    java.lang.Object readValue(java.lang.String,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.lang.String,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.io.Reader,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.Reader,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.Reader,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(java.io.InputStream,java.lang.Class) -> readValue
    java.lang.Object readValue(java.io.InputStream,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(java.io.InputStream,com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(byte[],java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],int,int,java.lang.Class) -> readValue
    java.lang.Object readValue(byte[],com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],int,int,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(byte[],com.fasterxml.jackson.databind.JavaType) -> readValue
    java.lang.Object readValue(byte[],int,int,com.fasterxml.jackson.databind.JavaType) -> readValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    com.fasterxml.jackson.databind.ObjectWriter writer() -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.SerializationFeature) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(java.text.DateFormat) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writerWithView(java.lang.Class) -> writerWithView
    com.fasterxml.jackson.databind.ObjectWriter writerWithType(java.lang.Class) -> writerWithType
    com.fasterxml.jackson.databind.ObjectWriter writerWithType(com.fasterxml.jackson.databind.JavaType) -> writerWithType
    com.fasterxml.jackson.databind.ObjectWriter writerWithType(com.fasterxml.jackson.core.type.TypeReference) -> writerWithType
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.PrettyPrinter) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writerWithDefaultPrettyPrinter() -> writerWithDefaultPrettyPrinter
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.ser.FilterProvider) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.FormatSchema) -> writer
    com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.Base64Variant) -> writer
    com.fasterxml.jackson.databind.ObjectReader reader() -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.DeserializationFeature) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> reader
    com.fasterxml.jackson.databind.ObjectReader readerForUpdating(java.lang.Object) -> readerForUpdating
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.JavaType) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(java.lang.Class) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.type.TypeReference) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.FormatSchema) -> reader
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.InjectableValues) -> reader
    com.fasterxml.jackson.databind.ObjectReader readerWithView(java.lang.Class) -> readerWithView
    com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.Base64Variant) -> reader
    java.lang.Object convertValue(java.lang.Object,java.lang.Class) -> convertValue
    java.lang.Object convertValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference) -> convertValue
    java.lang.Object convertValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> convertValue
    java.lang.Object _convert(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _convert
    com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
    void acceptJsonFormatVisitor(java.lang.Class,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig) -> _serializerProvider
    com.fasterxml.jackson.core.PrettyPrinter _defaultPrettyPrinter() -> _defaultPrettyPrinter
    void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,java.lang.Class) -> _configAndWriteValue
    void _configAndWriteCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig) -> a
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig) -> createDeserializationContext
    java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _readValue
    java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> _readMapAndClose
    com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser) -> _initForReading
    java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> _unwrapAndDeserialize
    com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _findRootDeserializer
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
com.fasterxml.jackson.databind.ObjectMapper$1 -> cY:
    com.fasterxml.jackson.databind.ObjectMapper val$mapper -> a
    com.fasterxml.jackson.databind.ObjectMapper this$0 -> b
    com.fasterxml.jackson.core.Version getMapperVersion() -> getMapperVersion
    com.fasterxml.jackson.core.ObjectCodec getOwner() -> getOwner
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    void addDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> addDeserializers
    void addKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> addKeyDeserializers
    void addBeanDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> addBeanDeserializerModifier
    void addSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addSerializers
    void addKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> addKeySerializers
    void addBeanSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> addBeanSerializerModifier
    void addAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> addAbstractTypeResolver
    void addTypeModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> addTypeModifier
    void addValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> addValueInstantiators
    void insertAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> insertAnnotationIntrospector
    void appendAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> appendAnnotationIntrospector
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void setMixInAnnotations(java.lang.Class,java.lang.Class) -> setMixInAnnotations
    void addDeserializationProblemHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> addDeserializationProblemHandler
com.fasterxml.jackson.databind.ObjectMapper$2 -> cZ:
    int[] $SwitchMap$com$fasterxml$jackson$databind$ObjectMapper$DefaultTyping -> a
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder -> com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping _appliesFor -> _appliesFor
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    boolean useForType(com.fasterxml.jackson.databind.JavaType) -> useForType
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping -> com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping:
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping JAVA_LANG_OBJECT -> JAVA_LANG_OBJECT
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE -> OBJECT_AND_NON_CONCRETE
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping NON_CONCRETE_AND_ARRAYS -> NON_CONCRETE_AND_ARRAYS
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping NON_FINAL -> NON_FINAL
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping[] $VALUES -> a
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping[] values() -> values
    com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.databind.ObjectReader -> com.fasterxml.jackson.databind.ObjectReader:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType JSON_NODE_TYPE -> a
    com.fasterxml.jackson.databind.DeserializationConfig _config -> _config
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _context -> _context
    com.fasterxml.jackson.core.JsonFactory _jsonFactory -> _jsonFactory
    boolean _unwrapRoot -> _unwrapRoot
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonDeserializer _rootDeserializer -> _rootDeserializer
    java.lang.Object _valueToUpdate -> _valueToUpdate
    com.fasterxml.jackson.core.FormatSchema _schema -> _schema
    com.fasterxml.jackson.databind.InjectableValues _injectableValues -> _injectableValues
    com.fasterxml.jackson.databind.deser.DataFormatReaders _dataFormatReaders -> _dataFormatReaders
    java.util.concurrent.ConcurrentHashMap _rootDeserializers -> _rootDeserializers
    com.fasterxml.jackson.databind.util.RootNameLookup _rootNames -> _rootNames
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationConfig) -> with
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationFeature) -> with
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> with
    com.fasterxml.jackson.databind.ObjectReader withFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.databind.DeserializationFeature) -> without
    com.fasterxml.jackson.databind.ObjectReader without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[]) -> without
    com.fasterxml.jackson.databind.ObjectReader withoutFeatures(com.fasterxml.jackson.databind.DeserializationFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.InjectableValues) -> with
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.databind.node.JsonNodeFactory) -> with
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.JsonFactory) -> with
    com.fasterxml.jackson.databind.ObjectReader withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.FormatSchema) -> with
    com.fasterxml.jackson.databind.ObjectReader withType(com.fasterxml.jackson.databind.JavaType) -> withType
    com.fasterxml.jackson.databind.ObjectReader withType(java.lang.Class) -> withType
    com.fasterxml.jackson.databind.ObjectReader withType(java.lang.reflect.Type) -> withType
    com.fasterxml.jackson.databind.ObjectReader withType(com.fasterxml.jackson.core.type.TypeReference) -> withType
    com.fasterxml.jackson.databind.ObjectReader withValueToUpdate(java.lang.Object) -> withValueToUpdate
    com.fasterxml.jackson.databind.ObjectReader withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.ObjectReader with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.ObjectReader with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.ObjectReader withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler) -> withHandler
    com.fasterxml.jackson.databind.ObjectReader with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.ObjectReader withFormatDetection(com.fasterxml.jackson.databind.ObjectReader[]) -> withFormatDetection
    com.fasterxml.jackson.databind.ObjectReader withFormatDetection(com.fasterxml.jackson.databind.deser.DataFormatReaders) -> withFormatDetection
    boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
    com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValue
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType) -> readValues
    java.lang.Object readValue(java.io.InputStream) -> readValue
    java.lang.Object readValue(java.io.Reader) -> readValue
    java.lang.Object readValue(java.lang.String) -> readValue
    java.lang.Object readValue(byte[]) -> readValue
    java.lang.Object readValue(byte[],int,int) -> readValue
    java.lang.Object readValue(java.io.File) -> readValue
    java.lang.Object readValue(java.net.URL) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.databind.JsonNode) -> readValue
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.InputStream) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.io.Reader) -> readTree
    com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) -> readTree
    com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.io.InputStream) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.io.Reader) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.lang.String) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(byte[],int,int) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(byte[]) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.io.File) -> readValues
    com.fasterxml.jackson.databind.MappingIterator readValues(java.net.URL) -> readValues
    com.fasterxml.jackson.databind.JsonNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.databind.JsonNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    java.lang.Object _bind(com.fasterxml.jackson.core.JsonParser,java.lang.Object) -> _bind
    java.lang.Object _bindAndClose(com.fasterxml.jackson.core.JsonParser,java.lang.Object) -> _bindAndClose
    com.fasterxml.jackson.databind.JsonNode _bindAsTree(com.fasterxml.jackson.core.JsonParser) -> _bindAsTree
    com.fasterxml.jackson.databind.JsonNode _bindAndCloseAsTree(com.fasterxml.jackson.core.JsonParser) -> _bindAndCloseAsTree
    com.fasterxml.jackson.databind.MappingIterator _bindAndReadValues(com.fasterxml.jackson.core.JsonParser,java.lang.Object) -> _bindAndReadValues
    com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser) -> _initForReading
    com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> _findRootDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _prefetchRootDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _prefetchRootDeserializer
    java.lang.Object _unwrapAndDeserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> _unwrapAndDeserialize
    java.lang.Object _detectBindAndClose(byte[],int,int) -> _detectBindAndClose
    java.lang.Object _detectBindAndClose(com.fasterxml.jackson.databind.deser.DataFormatReaders$Match,boolean) -> _detectBindAndClose
    com.fasterxml.jackson.databind.MappingIterator _detectBindAndReadValues(com.fasterxml.jackson.databind.deser.DataFormatReaders$Match,boolean) -> _detectBindAndReadValues
    com.fasterxml.jackson.databind.JsonNode _detectBindAndCloseAsTree(java.io.InputStream) -> _detectBindAndCloseAsTree
    void _reportUnkownFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders,com.fasterxml.jackson.databind.deser.DataFormatReaders$Match) -> _reportUnkownFormat
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig) -> createDeserializationContext
    com.fasterxml.jackson.databind.ObjectReader _with(com.fasterxml.jackson.databind.DeserializationConfig) -> _with
    void _reportUndetectableSource(java.lang.Object) -> _reportUndetectableSource
    java.io.InputStream _inputStream(java.net.URL) -> _inputStream
    java.io.InputStream _inputStream(java.io.File) -> _inputStream
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
com.fasterxml.jackson.databind.ObjectWriter -> com.fasterxml.jackson.databind.ObjectWriter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.PrettyPrinter NULL_PRETTY_PRINTER -> NULL_PRETTY_PRINTER
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider -> _serializerProvider
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.core.JsonFactory _jsonFactory -> _jsonFactory
    com.fasterxml.jackson.databind.JavaType _rootType -> _rootType
    com.fasterxml.jackson.databind.JsonSerializer _rootSerializer -> _rootSerializer
    com.fasterxml.jackson.core.PrettyPrinter _prettyPrinter -> _prettyPrinter
    com.fasterxml.jackson.core.FormatSchema _schema -> _schema
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.SerializationFeature) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> with
    com.fasterxml.jackson.databind.ObjectWriter withFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.databind.SerializationFeature) -> without
    com.fasterxml.jackson.databind.ObjectWriter without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> without
    com.fasterxml.jackson.databind.ObjectWriter withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.ObjectWriter with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.ObjectWriter withDefaultPrettyPrinter() -> withDefaultPrettyPrinter
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.databind.ser.FilterProvider) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.PrettyPrinter) -> with
    com.fasterxml.jackson.databind.ObjectWriter withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.ObjectWriter withSchema(com.fasterxml.jackson.core.FormatSchema) -> withSchema
    com.fasterxml.jackson.databind.ObjectWriter withType(com.fasterxml.jackson.databind.JavaType) -> withType
    com.fasterxml.jackson.databind.ObjectWriter withType(java.lang.Class) -> withType
    com.fasterxml.jackson.databind.ObjectWriter withType(com.fasterxml.jackson.core.type.TypeReference) -> withType
    com.fasterxml.jackson.databind.ObjectWriter withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.ObjectWriter with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.ObjectWriter with(com.fasterxml.jackson.core.Base64Variant) -> with
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    void writeValue(java.io.File,java.lang.Object) -> writeValue
    void writeValue(java.io.OutputStream,java.lang.Object) -> writeValue
    void writeValue(java.io.Writer,java.lang.Object) -> writeValue
    java.lang.String writeValueAsString(java.lang.Object) -> writeValueAsString
    byte[] writeValueAsBytes(java.lang.Object) -> writeValueAsBytes
    boolean canSerialize(java.lang.Class) -> canSerialize
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig) -> _serializerProvider
    void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> _configAndWriteValue
    com.fasterxml.jackson.databind.JsonSerializer _prefetchRootSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> _prefetchRootSerializer
    void _configureJsonGenerator(com.fasterxml.jackson.core.JsonGenerator) -> a
com.fasterxml.jackson.databind.PropertyName -> com.fasterxml.jackson.databind.PropertyName:
    com.fasterxml.jackson.databind.PropertyName USE_DEFAULT -> USE_DEFAULT
    com.fasterxml.jackson.databind.PropertyName NO_NAME -> NO_NAME
    java.lang.String _simpleName -> _simpleName
    java.lang.String _namespace -> _namespace
    com.fasterxml.jackson.databind.PropertyName construct(java.lang.String,java.lang.String) -> construct
    com.fasterxml.jackson.databind.PropertyName withSimpleName(java.lang.String) -> withSimpleName
    com.fasterxml.jackson.databind.PropertyName withNamespace(java.lang.String) -> withNamespace
    java.lang.String getSimpleName() -> getSimpleName
    java.lang.String getNamespace() -> getNamespace
    boolean hasSimpleName() -> hasSimpleName
    boolean hasNamespace() -> hasNamespace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.PropertyNamingStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy:
    com.fasterxml.jackson.databind.PropertyNamingStrategy CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES -> CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES
    com.fasterxml.jackson.databind.PropertyNamingStrategy PASCAL_CASE_TO_CAMEL_CASE -> PASCAL_CASE_TO_CAMEL_CASE
    java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$LowerCaseWithUnderscoresStrategy:
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$PascalCaseStrategy -> com.fasterxml.jackson.databind.PropertyNamingStrategy$PascalCaseStrategy:
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase -> com.fasterxml.jackson.databind.PropertyNamingStrategy$PropertyNamingStrategyBase:
    java.lang.String nameForField(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String) -> nameForField
    java.lang.String nameForGetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForGetterMethod
    java.lang.String nameForSetterMethod(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> nameForSetterMethod
    java.lang.String nameForConstructorParameter(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String) -> nameForConstructorParameter
    java.lang.String translate(java.lang.String) -> translate
com.fasterxml.jackson.databind.RuntimeJsonMappingException -> com.fasterxml.jackson.databind.RuntimeJsonMappingException:
com.fasterxml.jackson.databind.SerializationConfig -> com.fasterxml.jackson.databind.SerializationConfig:
    long serialVersionUID -> serialVersionUID
    int _serFeatures -> _serFeatures
    com.fasterxml.jackson.annotation.JsonInclude$Include _serializationInclusion -> _serializationInclusion
    com.fasterxml.jackson.databind.ser.FilterProvider _filterProvider -> _filterProvider
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.AnnotationIntrospector) -> with
    com.fasterxml.jackson.databind.SerializationConfig withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    com.fasterxml.jackson.databind.SerializationConfig withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> with
    com.fasterxml.jackson.databind.SerializationConfig withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.type.TypeFactory) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> with
    com.fasterxml.jackson.databind.SerializationConfig withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> with
    com.fasterxml.jackson.databind.SerializationConfig withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.SerializationConfig with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.SerializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings) -> a
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.SerializationFeature) -> with
    com.fasterxml.jackson.databind.SerializationConfig with(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> with
    com.fasterxml.jackson.databind.SerializationConfig withFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withFeatures
    com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature) -> without
    com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[]) -> without
    com.fasterxml.jackson.databind.SerializationConfig withoutFeatures(com.fasterxml.jackson.databind.SerializationFeature[]) -> withoutFeatures
    com.fasterxml.jackson.databind.SerializationConfig withFilters(com.fasterxml.jackson.databind.ser.FilterProvider) -> withFilters
    com.fasterxml.jackson.databind.SerializationConfig withSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> withSerializationInclusion
    boolean useRootWrapping() -> useRootWrapping
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectDirectClassAnnotations
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    int getSerializationFeatures() -> getSerializationFeatures
    com.fasterxml.jackson.annotation.JsonInclude$Include getSerializationInclusion() -> getSerializationInclusion
    com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> getFilterProvider
    com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType) -> introspect
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.type.TypeFactory) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.AnnotationIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
com.fasterxml.jackson.databind.SerializationFeature -> com.fasterxml.jackson.databind.SerializationFeature:
    com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE -> WRAP_ROOT_VALUE
    com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT -> INDENT_OUTPUT
    com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_EMPTY_BEANS -> FAIL_ON_EMPTY_BEANS
    com.fasterxml.jackson.databind.SerializationFeature WRAP_EXCEPTIONS -> WRAP_EXCEPTIONS
    com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE -> CLOSE_CLOSEABLE
    com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE -> FLUSH_AFTER_WRITE_VALUE
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_AS_TIMESTAMPS -> WRITE_DATES_AS_TIMESTAMPS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS -> WRITE_DATE_KEYS_AS_TIMESTAMPS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS -> WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING -> WRITE_ENUMS_USING_TO_STRING
    com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX -> WRITE_ENUMS_USING_INDEX
    com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES -> WRITE_NULL_MAP_VALUES
    com.fasterxml.jackson.databind.SerializationFeature WRITE_EMPTY_JSON_ARRAYS -> WRITE_EMPTY_JSON_ARRAYS
    com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED -> WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED
    com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS -> ORDER_MAP_ENTRIES_BY_KEYS
    com.fasterxml.jackson.databind.SerializationFeature EAGER_SERIALIZER_FETCH -> EAGER_SERIALIZER_FETCH
    boolean _defaultState -> a
    com.fasterxml.jackson.databind.SerializationFeature[] $VALUES -> b
    com.fasterxml.jackson.databind.SerializationFeature[] values() -> values
    com.fasterxml.jackson.databind.SerializationFeature valueOf(java.lang.String) -> valueOf
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.databind.SerializerProvider -> com.fasterxml.jackson.databind.SerializerProvider:
    com.fasterxml.jackson.databind.JavaType TYPE_OBJECT -> TYPE_OBJECT
    boolean CACHE_UNKNOWN_MAPPINGS -> CACHE_UNKNOWN_MAPPINGS
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_NULL_KEY_SERIALIZER -> DEFAULT_NULL_KEY_SERIALIZER
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_UNKNOWN_SERIALIZER -> DEFAULT_UNKNOWN_SERIALIZER
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    java.lang.Class _serializationView -> _serializationView
    com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory -> _serializerFactory
    com.fasterxml.jackson.databind.ser.SerializerCache _serializerCache -> _serializerCache
    com.fasterxml.jackson.databind.util.RootNameLookup _rootNames -> _rootNames
    com.fasterxml.jackson.databind.JsonSerializer _unknownTypeSerializer -> _unknownTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _nullValueSerializer -> _nullValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer _nullKeySerializer -> _nullKeySerializer
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _knownSerializers -> _knownSerializers
    java.text.DateFormat _dateFormat -> _dateFormat
    void setDefaultKeySerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setDefaultKeySerializer
    void setNullValueSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setNullValueSerializer
    void setNullKeySerializer(com.fasterxml.jackson.databind.JsonSerializer) -> setNullKeySerializer
    com.fasterxml.jackson.databind.SerializationConfig getConfig() -> getConfig
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature) -> isEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    java.lang.Class getSerializationView() -> getSerializationView
    com.fasterxml.jackson.databind.ser.FilterProvider getFilterProvider() -> getFilterProvider
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty) -> findValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,com.fasterxml.jackson.databind.BeanProperty) -> findTypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findTypedValueSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.BeanProperty) -> findTypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer getDefaultNullKeySerializer() -> getDefaultNullKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer() -> getDefaultNullValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findNullKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer findNullValueSerializer(com.fasterxml.jackson.databind.BeanProperty) -> findNullValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class) -> getUnknownTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> serializerInstance
    com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdGeneratorInstance
    void defaultSerializeValue(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeValue
    void defaultSerializeField(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeField
    void defaultSerializeDateValue(long,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateValue(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateValue
    void defaultSerializeDateKey(long,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeDateKey(java.util.Date,com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeDateKey
    void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator) -> defaultSerializeNull
    void _reportIncompatibleRootType(java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> _reportIncompatibleRootType
    com.fasterxml.jackson.databind.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class) -> _findExplicitUntypedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class) -> _createAndCacheUntypedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _createAndCacheUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> _createAndCacheUntypedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _createUntypedSerializer(com.fasterxml.jackson.databind.JavaType) -> _createUntypedSerializer
    com.fasterxml.jackson.databind.JsonSerializer _handleContextualResolvable(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> _handleContextualResolvable
    com.fasterxml.jackson.databind.JsonSerializer _handleResolvable(com.fasterxml.jackson.databind.JsonSerializer) -> _handleResolvable
    com.fasterxml.jackson.databind.JsonSerializer _handleContextual(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty) -> _handleContextual
    java.text.DateFormat _dateFormat() -> _dateFormat
com.fasterxml.jackson.databind.annotation.JacksonStdImpl -> com.fasterxml.jackson.databind.annotation.JacksonStdImpl:
com.fasterxml.jackson.databind.annotation.JsonDeserialize -> com.fasterxml.jackson.databind.annotation.JsonDeserialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class builder() -> builder
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
com.fasterxml.jackson.databind.annotation.JsonNaming -> com.fasterxml.jackson.databind.annotation.JsonNaming:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder -> com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder:
    java.lang.String buildMethodName() -> buildMethodName
    java.lang.String withPrefix() -> withPrefix
com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value -> com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value:
    java.lang.String buildMethodName -> buildMethodName
    java.lang.String withPrefix -> withPrefix
com.fasterxml.jackson.databind.annotation.JsonSerialize -> com.fasterxml.jackson.databind.annotation.JsonSerialize:
    java.lang.Class using() -> using
    java.lang.Class contentUsing() -> contentUsing
    java.lang.Class keyUsing() -> keyUsing
    java.lang.Class as() -> as
    java.lang.Class keyAs() -> keyAs
    java.lang.Class contentAs() -> contentAs
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing typing() -> typing
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion include() -> include
com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion -> com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion:
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion ALWAYS -> ALWAYS
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_NULL -> NON_NULL
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_DEFAULT -> NON_DEFAULT
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion NON_EMPTY -> NON_EMPTY
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] $VALUES -> a
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion[] values() -> values
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Inclusion valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing -> com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing:
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing DYNAMIC -> DYNAMIC
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing STATIC -> STATIC
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] $VALUES -> a
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing[] values() -> values
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver -> com.fasterxml.jackson.databind.annotation.JsonTypeIdResolver:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonTypeResolver -> com.fasterxml.jackson.databind.annotation.JsonTypeResolver:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.JsonValueInstantiator -> com.fasterxml.jackson.databind.annotation.JsonValueInstantiator:
    java.lang.Class value() -> value
com.fasterxml.jackson.databind.annotation.NoClass -> com.fasterxml.jackson.databind.annotation.NoClass:
com.fasterxml.jackson.databind.cfg.BaseSettings -> com.fasterxml.jackson.databind.cfg.BaseSettings:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.ClassIntrospector _classIntrospector -> _classIntrospector
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    com.fasterxml.jackson.databind.PropertyNamingStrategy _propertyNamingStrategy -> _propertyNamingStrategy
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _typeResolverBuilder -> _typeResolverBuilder
    java.text.DateFormat _dateFormat -> _dateFormat
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator _handlerInstantiator -> _handlerInstantiator
    java.util.Locale _locale -> _locale
    java.util.TimeZone _timeZone -> _timeZone
    com.fasterxml.jackson.core.Base64Variant _defaultBase64 -> _defaultBase64
    com.fasterxml.jackson.databind.cfg.BaseSettings withClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> withClassIntrospector
    com.fasterxml.jackson.databind.cfg.BaseSettings withAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.BaseSettings withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.BaseSettings withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.BaseSettings withVisibilityChecker(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> withVisibilityChecker
    com.fasterxml.jackson.databind.cfg.BaseSettings withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.cfg.BaseSettings withPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> withPropertyNamingStrategy
    com.fasterxml.jackson.databind.cfg.BaseSettings withTypeFactory(com.fasterxml.jackson.databind.type.TypeFactory) -> withTypeFactory
    com.fasterxml.jackson.databind.cfg.BaseSettings withTypeResolverBuilder(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> withTypeResolverBuilder
    com.fasterxml.jackson.databind.cfg.BaseSettings withDateFormat(java.text.DateFormat) -> withDateFormat
    com.fasterxml.jackson.databind.cfg.BaseSettings withHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> withHandlerInstantiator
    com.fasterxml.jackson.databind.cfg.BaseSettings with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.cfg.BaseSettings with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.cfg.BaseSettings with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getVisibilityChecker() -> getVisibilityChecker
    com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getTypeResolverBuilder() -> getTypeResolverBuilder
    java.text.DateFormat getDateFormat() -> getDateFormat
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
com.fasterxml.jackson.databind.cfg.ConfigFeature -> com.fasterxml.jackson.databind.cfg.ConfigFeature:
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.databind.cfg.DatabindVersion -> com.fasterxml.jackson.databind.cfg.DatabindVersion:
    com.fasterxml.jackson.databind.cfg.DatabindVersion instance -> instance
com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig -> com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] NO_KEY_DESERIALIZERS -> NO_KEY_DESERIALIZERS
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    com.fasterxml.jackson.databind.AbstractTypeResolver[] NO_ABSTRACT_TYPE_RESOLVERS -> NO_ABSTRACT_TYPE_RESOLVERS
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] NO_VALUE_INSTANTIATORS -> NO_VALUE_INSTANTIATORS
    com.fasterxml.jackson.databind.deser.Deserializers[] _additionalDeserializers -> _additionalDeserializers
    com.fasterxml.jackson.databind.deser.KeyDeserializers[] _additionalKeyDeserializers -> _additionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.BeanDeserializerModifier[] _modifiers -> _modifiers
    com.fasterxml.jackson.databind.AbstractTypeResolver[] _abstractTypeResolvers -> _abstractTypeResolvers
    com.fasterxml.jackson.databind.deser.ValueInstantiators[] _valueInstantiators -> _valueInstantiators
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    boolean hasDeserializers() -> hasDeserializers
    boolean hasKeyDeserializers() -> hasKeyDeserializers
    boolean hasDeserializerModifiers() -> hasDeserializerModifiers
    boolean hasAbstractTypeResolvers() -> hasAbstractTypeResolvers
    boolean hasValueInstantiators() -> hasValueInstantiators
    java.lang.Iterable deserializers() -> deserializers
    java.lang.Iterable keyDeserializers() -> keyDeserializers
    java.lang.Iterable deserializerModifiers() -> deserializerModifiers
    java.lang.Iterable abstractTypeResolvers() -> abstractTypeResolvers
    java.lang.Iterable valueInstantiators() -> valueInstantiators
com.fasterxml.jackson.databind.cfg.HandlerInstantiator -> com.fasterxml.jackson.databind.cfg.HandlerInstantiator:
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> serializerInstance
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
    com.fasterxml.jackson.databind.deser.ValueInstantiator valueInstantiatorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> valueInstantiatorInstance
    com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> objectIdGeneratorInstance
    com.fasterxml.jackson.databind.PropertyNamingStrategy namingStrategyInstance(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> namingStrategyInstance
com.fasterxml.jackson.databind.cfg.MapperConfig -> com.fasterxml.jackson.databind.cfg.MapperConfig:
    long serialVersionUID -> serialVersionUID
    int _mapperFeatures -> _mapperFeatures
    com.fasterxml.jackson.databind.cfg.BaseSettings _base -> _base
    int collectFeatureDefaults(java.lang.Class) -> collectFeatureDefaults
    com.fasterxml.jackson.databind.cfg.MapperConfig with(com.fasterxml.jackson.databind.MapperFeature[]) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfig without(com.fasterxml.jackson.databind.MapperFeature[]) -> without
    boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature) -> isEnabled
    boolean isAnnotationProcessingEnabled() -> isAnnotationProcessingEnabled
    boolean canOverrideAccessModifiers() -> canOverrideAccessModifiers
    boolean shouldSortPropertiesAlphabetically() -> shouldSortPropertiesAlphabetically
    boolean useRootWrapping() -> useRootWrapping
    com.fasterxml.jackson.databind.introspect.ClassIntrospector getClassIntrospector() -> getClassIntrospector
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker() -> getDefaultVisibilityChecker
    com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy() -> getPropertyNamingStrategy
    com.fasterxml.jackson.databind.cfg.HandlerInstantiator getHandlerInstantiator() -> getHandlerInstantiator
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(com.fasterxml.jackson.databind.JavaType) -> getDefaultTyper
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory() -> getTypeFactory
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.Class) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference) -> constructType
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class) -> introspectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(java.lang.Class) -> introspectDirectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription introspectDirectClassAnnotations(com.fasterxml.jackson.databind.JavaType) -> introspectDirectClassAnnotations
    java.text.DateFormat getDateFormat() -> getDateFormat
    java.util.Locale getLocale() -> getLocale
    java.util.TimeZone getTimeZone() -> getTimeZone
    java.lang.Class getActiveView() -> getActiveView
    com.fasterxml.jackson.core.Base64Variant getBase64Variant() -> getBase64Variant
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeResolverBuilderInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeResolverBuilderInstance
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver typeIdResolverInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Class) -> typeIdResolverInstance
com.fasterxml.jackson.databind.cfg.MapperConfigBase -> com.fasterxml.jackson.databind.cfg.MapperConfigBase:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_MAPPER_FEATURES -> a
    java.util.Map _mixInAnnotations -> _mixInAnnotations
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver -> _subtypeResolver
    java.lang.String _rootName -> _rootName
    java.lang.Class _view -> _view
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.AnnotationIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withAppendedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withAppendedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withInsertedAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector) -> withInsertedAnnotationIntrospector
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.ClassIntrospector) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.text.DateFormat) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.cfg.HandlerInstantiator) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withRootName(java.lang.String) -> withRootName
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.SubtypeResolver) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.type.TypeFactory) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withView(java.lang.Class) -> withView
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.Locale) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(java.util.TimeZone) -> with
    com.fasterxml.jackson.databind.cfg.MapperConfigBase with(com.fasterxml.jackson.core.Base64Variant) -> with
    com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver() -> getSubtypeResolver
    java.lang.String getRootName() -> getRootName
    java.lang.Class getActiveView() -> getActiveView
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
    int mixInCount() -> mixInCount
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig -> com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS -> NO_SERIALIZERS
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS -> NO_MODIFIERS
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers -> _additionalSerializers
    com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers -> _additionalKeySerializers
    com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers -> _modifiers
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    boolean hasSerializers() -> hasSerializers
    boolean hasKeySerializers() -> hasKeySerializers
    boolean hasSerializerModifiers() -> hasSerializerModifiers
    java.lang.Iterable serializers() -> serializers
    java.lang.Iterable keySerializers() -> keySerializers
    java.lang.Iterable serializerModifiers() -> serializerModifiers
com.fasterxml.jackson.databind.deser.AbstractDeserializer -> com.fasterxml.jackson.databind.deser.AbstractDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    java.util.Map _backRefProperties -> _backRefProperties
    boolean _acceptString -> _acceptString
    boolean _acceptBoolean -> _acceptBoolean
    boolean _acceptInt -> _acceptInt
    boolean _acceptDouble -> _acceptDouble
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeIfNatural
    java.lang.Object _deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromObjectId
com.fasterxml.jackson.databind.deser.AbstractDeserializer$1 -> da:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.databind.deser.BasicDeserializerFactory -> com.fasterxml.jackson.databind.deser.BasicDeserializerFactory:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _simpleDeserializers -> _simpleDeserializers
    java.util.HashMap _arrayDeserializers -> _arrayDeserializers
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    java.util.HashMap _mapFallbacks -> a
    java.util.HashMap _collectionFallbacks -> b
    com.fasterxml.jackson.databind.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig _factoryConfig -> _factoryConfig
    void _add(java.util.Map,com.fasterxml.jackson.databind.deser.std.StdDeserializer[]) -> a
    void _add(java.util.Map,java.lang.Class,com.fasterxml.jackson.databind.deser.std.StdDeserializer) -> a
    com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig getFactoryConfig() -> getFactoryConfig
    com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> withConfig
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> mapAbstractType
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> findValueInstantiator
    com.fasterxml.jackson.databind.deser.ValueInstantiator _constructDefaultValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> _constructDefaultValueInstantiator
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiatorInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> _valueInstantiatorInstance
    void _addDeserializerConstructors(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector) -> _addDeserializerConstructors
    boolean _handleSingleArgumentConstructor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean,boolean) -> _handleSingleArgumentConstructor
    void _addDeserializerFactoryMethods(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector) -> _addDeserializerFactoryMethods
    boolean _handleSingleArgumentFactory(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.VisibilityChecker,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.deser.impl.CreatorCollector,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean) -> _handleSingleArgumentFactory
    com.fasterxml.jackson.databind.deser.CreatorProperty constructCreatorProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,java.lang.String,int,com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.Object) -> constructCreatorProperty
    com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> createArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> createMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createMapLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> _findCustomMapLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createTreeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomTreeNodeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> createKeyDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findPropertyContentTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyContentTypeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializerFromAnnotation
    com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> modifyTypeByAnnotation
    com.fasterxml.jackson.databind.JavaType resolveType(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> resolveType
    com.fasterxml.jackson.databind.util.EnumResolver constructEnumResolver(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> constructEnumResolver
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _findJsonValueFor(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> _findJsonValueFor
com.fasterxml.jackson.databind.deser.BeanDeserializer -> com.fasterxml.jackson.databind.deser.BeanDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializer withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object vanillaDeserialize$62c4960b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    java.lang.Object deserializeWithObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithObjectId
    java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromString
    java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromNumber
    java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromDouble
    java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBoolean
    java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromArray
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handlePolymorphic
    java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> deserializeWithView
    java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithUnwrapped
    java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithExternalTypeId
    java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
com.fasterxml.jackson.databind.deser.BeanDeserializer$1 -> db:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> b
com.fasterxml.jackson.databind.deser.BeanDeserializerBase -> com.fasterxml.jackson.databind.deser.BeanDeserializerBase:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.Annotations _classAnnotations -> a
    com.fasterxml.jackson.databind.JavaType _beanType -> _beanType
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> _serializationShape
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    boolean _nonStandardCreation -> _nonStandardCreation
    boolean _vanillaProcessing -> _vanillaProcessing
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap _beanProperties -> _beanProperties
    com.fasterxml.jackson.databind.deser.impl.ValueInjector[] _injectables -> _injectables
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> _anySetter
    java.util.HashSet _ignorableProps -> _ignorableProps
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    boolean _needViewProcesing -> _needViewProcesing
    java.util.Map _backRefs -> _backRefs
    java.util.HashMap _subDeserializers -> _subDeserializers
    com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler _unwrappedPropertyHandler -> _unwrappedPropertyHandler
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler _externalTypeIdHandler -> _externalTypeIdHandler
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveManagedReferenceProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveManagedReferenceProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveUnwrappedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveUnwrappedProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _resolveInnerClassValuedProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> _resolveInnerClassValuedProperty
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    boolean hasProperty(java.lang.String) -> hasProperty
    boolean hasViews() -> hasViews
    int getPropertyCount() -> getPropertyCount
    java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    java.lang.Class getBeanClass() -> getBeanClass
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    java.util.Iterator properties() -> properties
    java.util.Iterator creatorProperties() -> creatorProperties
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(java.lang.String) -> findProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String) -> findBackReference
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    void replaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> replaceProperty
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeFromObjectId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectId
    void injectValues(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> injectValues
    void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
    java.lang.Object handleUnknownProperties(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handleUnknownProperties
    com.fasterxml.jackson.databind.JsonDeserializer _findSubclassDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> _findSubclassDeserializer
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    void wrapAndThrow(java.lang.Throwable,java.lang.Object,int,com.fasterxml.jackson.databind.DeserializationContext) -> wrapAndThrow
    void wrapInstantiationProblem(java.lang.Throwable,com.fasterxml.jackson.databind.DeserializationContext) -> wrapInstantiationProblem
com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder -> com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder:
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    boolean _defaultViewInclusion -> _defaultViewInclusion
    java.util.Map _properties -> _properties
    java.util.List _injectables -> _injectables
    java.util.HashMap _backRefProperties -> _backRefProperties
    java.util.HashSet _ignorableProps -> _ignorableProps
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _anySetter -> _anySetter
    boolean _ignoreAllUnknown -> _ignoreAllUnknown
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value _builderConfig -> _builderConfig
    void addOrReplaceProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,boolean) -> addOrReplaceProperty
    void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addProperty
    void addBackReferenceProperty(java.lang.String,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addBackReferenceProperty
    void addInjectable(java.lang.String,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.util.Annotations,com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.Object) -> addInjectable
    void addIgnorable(java.lang.String) -> addIgnorable
    void addCreatorProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addCreatorProperty
    void addCreatorProperty(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> addCreatorProperty
    void setAnySetter(com.fasterxml.jackson.databind.deser.SettableAnyProperty) -> setAnySetter
    void setIgnoreUnknownProperties(boolean) -> setIgnoreUnknownProperties
    void setValueInstantiator(com.fasterxml.jackson.databind.deser.ValueInstantiator) -> setValueInstantiator
    void setObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> setObjectIdReader
    void setPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value) -> setPOJOBuilder
    java.util.Iterator getProperties() -> getProperties
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findProperty(java.lang.String) -> findProperty
    boolean hasProperty(java.lang.String) -> hasProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty removeProperty(java.lang.String) -> removeProperty
    com.fasterxml.jackson.databind.deser.SettableAnyProperty getAnySetter() -> getAnySetter
    com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator() -> getValueInstantiator
    java.util.List getInjectables() -> getInjectables
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getBuildMethod() -> getBuildMethod
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value getBuilderConfig() -> getBuilderConfig
    com.fasterxml.jackson.databind.deser.BeanDeserializer build() -> build
    com.fasterxml.jackson.databind.deser.AbstractDeserializer buildAbstract() -> buildAbstract
    com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBased(com.fasterxml.jackson.databind.JavaType,java.lang.String) -> buildBuilderBased
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory -> com.fasterxml.jackson.databind.deser.BeanDeserializerFactory:
    long serialVersionUID -> serialVersionUID
    java.lang.Class[] INIT_CAUSE_PARAMS -> c
    java.lang.Class[] NO_VIEWS -> d
    com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance -> instance
    com.fasterxml.jackson.databind.deser.DeserializerFactory withConfig(com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig) -> withConfig
    com.fasterxml.jackson.databind.JsonDeserializer _findCustomBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> _findCustomBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> createBuilderBasedDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findStdDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findStdDeserializer
    com.fasterxml.jackson.databind.JavaType materializeAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> materializeAbstractType
    com.fasterxml.jackson.databind.JsonDeserializer buildBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer buildBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildBuilderBasedDeserializer
    void addObjectIdReader(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addObjectIdReader
    com.fasterxml.jackson.databind.JsonDeserializer buildThrowableDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> buildThrowableDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> constructBeanDeserializerBuilder
    void addBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addBeanProps
    java.util.List filterBeanProps(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder,java.util.List,java.util.Set) -> filterBeanProps
    void addReferenceProperties(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addReferenceProperties
    void addInjectables(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> addInjectables
    com.fasterxml.jackson.databind.deser.SettableAnyProperty constructAnySetter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> constructAnySetter
    com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSettableProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.reflect.Type) -> constructSettableProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty constructSetterlessProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition) -> constructSetterlessProperty
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    boolean isIgnorableType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class,java.util.Map) -> isIgnorableType
com.fasterxml.jackson.databind.deser.BeanDeserializerModifier -> com.fasterxml.jackson.databind.deser.BeanDeserializerModifier:
    java.util.List updateProperties(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> updateProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder updateBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder) -> updateBuilder
    com.fasterxml.jackson.databind.JsonDeserializer modifyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonDeserializer) -> modifyDeserializer
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer -> com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer asArrayDeserializer() -> asArrayDeserializer
    java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> finishBuild
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> _deserialize
    java.lang.Object vanillaDeserialize$62c4960b(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
    java.lang.Object deserializeFromObjectUsingNonDefault(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObjectUsingNonDefault
    java.lang.Object deserializeFromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromString
    java.lang.Object deserializeFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromNumber
    java.lang.Object deserializeFromDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromDouble
    java.lang.Object deserializeFromBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBoolean
    java.lang.Object deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromArray
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object handlePolymorphic(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> handlePolymorphic
    java.lang.Object deserializeWithView(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.Class) -> deserializeWithView
    java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithUnwrapped
    java.lang.Object deserializeWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithUnwrapped
    java.lang.Object deserializeUsingPropertyBasedWithUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithUnwrapped
    java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeWithExternalTypeId
    java.lang.Object deserializeWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeWithExternalTypeId
    java.lang.Object deserializeUsingPropertyBasedWithExternalTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeUsingPropertyBasedWithExternalTypeId
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
com.fasterxml.jackson.databind.deser.BuilderBasedDeserializer$1 -> dc:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> b
com.fasterxml.jackson.databind.deser.ContextualDeserializer -> com.fasterxml.jackson.databind.deser.ContextualDeserializer:
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer -> com.fasterxml.jackson.databind.deser.ContextualKeyDeserializer:
    com.fasterxml.jackson.databind.KeyDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.CreatorProperty -> com.fasterxml.jackson.databind.deser.CreatorProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter _annotated -> _annotated
    java.lang.Object _injectableValueId -> _injectableValueId
    int _creatorIndex -> _creatorIndex
    com.fasterxml.jackson.databind.deser.CreatorProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.CreatorProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    java.lang.Object findInjectableValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> findInjectableValue
    void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> inject
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    int getCreatorIndex() -> getCreatorIndex
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.DataFormatReaders -> com.fasterxml.jackson.databind.deser.DataFormatReaders:
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> DEFAULT_MAX_INPUT_LOOKAHEAD
    com.fasterxml.jackson.databind.ObjectReader[] _readers -> _readers
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> _optimalMatch
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    com.fasterxml.jackson.databind.deser.DataFormatReaders withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withOptimalMatch
    com.fasterxml.jackson.databind.deser.DataFormatReaders withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withMinimalMatch
    com.fasterxml.jackson.databind.deser.DataFormatReaders with(com.fasterxml.jackson.databind.ObjectReader[]) -> with
    com.fasterxml.jackson.databind.deser.DataFormatReaders withMaxInputLookahead(int) -> withMaxInputLookahead
    com.fasterxml.jackson.databind.deser.DataFormatReaders with(com.fasterxml.jackson.databind.DeserializationConfig) -> with
    com.fasterxml.jackson.databind.deser.DataFormatReaders withType(com.fasterxml.jackson.databind.JavaType) -> withType
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(java.io.InputStream) -> findFormat
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(byte[]) -> findFormat
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match findFormat(byte[],int,int) -> findFormat
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match _findFormat(com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader) -> a
com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader -> com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader:
    com.fasterxml.jackson.databind.deser.DataFormatReaders this$0 -> a
    com.fasterxml.jackson.databind.deser.DataFormatReaders$Match createMatcher(com.fasterxml.jackson.databind.ObjectReader,com.fasterxml.jackson.core.format.MatchStrength) -> createMatcher
com.fasterxml.jackson.databind.deser.DataFormatReaders$Match -> com.fasterxml.jackson.databind.deser.DataFormatReaders$Match:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedStart -> _bufferedStart
    int _bufferedLength -> _bufferedLength
    com.fasterxml.jackson.databind.ObjectReader _match -> _match
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> _matchStrength
    boolean hasMatch() -> hasMatch
    com.fasterxml.jackson.core.format.MatchStrength getMatchStrength() -> getMatchStrength
    com.fasterxml.jackson.databind.ObjectReader getReader() -> getReader
    java.lang.String getMatchedFormatName() -> getMatchedFormatName
    com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> createParserWithMatch
    java.io.InputStream getDataStream() -> getDataStream
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext -> com.fasterxml.jackson.databind.deser.DefaultDeserializationContext:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedHashMap _objectIds -> _objectIds
    com.fasterxml.jackson.databind.deser.impl.ReadableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdGeneratorInstance
    com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> deserializerInstance
    com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> keyDeserializerInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> with
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> createInstance
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl -> com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues) -> createInstance
    com.fasterxml.jackson.databind.deser.DefaultDeserializationContext with(com.fasterxml.jackson.databind.deser.DeserializerFactory) -> with
com.fasterxml.jackson.databind.deser.DeserializationProblemHandler -> com.fasterxml.jackson.databind.deser.DeserializationProblemHandler:
    boolean handleUnknownProperty(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object,java.lang.String) -> handleUnknownProperty
com.fasterxml.jackson.databind.deser.DeserializerCache -> com.fasterxml.jackson.databind.deser.DeserializerCache:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.ConcurrentHashMap _cachedDeserializers -> _cachedDeserializers
    java.util.HashMap _incompleteDeserializers -> _incompleteDeserializers
    java.lang.Object writeReplace() -> writeReplace
    int cachedDeserializersCount() -> cachedDeserializersCount
    void flushCachedDeserializers() -> flushCachedDeserializers
    com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> findValueDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> findKeyDeserializer
    boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> hasValueDeserializerFor
    com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType) -> _findCachedDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createAndCacheValueDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createAndCache2
    com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType) -> _createDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializerFromAnnotation
    com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> a
    com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.JavaType) -> _handleUnknownValueDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.JavaType) -> _handleUnknownKeyDeserializer
com.fasterxml.jackson.databind.deser.DeserializerFactory -> com.fasterxml.jackson.databind.deser.DeserializerFactory:
    com.fasterxml.jackson.databind.deser.Deserializers[] NO_DESERIALIZERS -> NO_DESERIALIZERS
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalDeserializers(com.fasterxml.jackson.databind.deser.Deserializers) -> withAdditionalDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAdditionalKeyDeserializers(com.fasterxml.jackson.databind.deser.KeyDeserializers) -> withAdditionalKeyDeserializers
    com.fasterxml.jackson.databind.deser.DeserializerFactory withDeserializerModifier(com.fasterxml.jackson.databind.deser.BeanDeserializerModifier) -> withDeserializerModifier
    com.fasterxml.jackson.databind.deser.DeserializerFactory withAbstractTypeResolver(com.fasterxml.jackson.databind.AbstractTypeResolver) -> withAbstractTypeResolver
    com.fasterxml.jackson.databind.deser.DeserializerFactory withValueInstantiators(com.fasterxml.jackson.databind.deser.ValueInstantiators) -> withValueInstantiators
    com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> mapAbstractType
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanDescription) -> findValueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class) -> createBuilderBasedDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription) -> createArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription) -> createMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription) -> createMapLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> createTreeDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType) -> createKeyDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer findTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeDeserializer
com.fasterxml.jackson.databind.deser.Deserializers -> com.fasterxml.jackson.databind.deser.Deserializers:
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
com.fasterxml.jackson.databind.deser.Deserializers$Base -> com.fasterxml.jackson.databind.deser.Deserializers$Base:
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
com.fasterxml.jackson.databind.deser.KeyDeserializers -> com.fasterxml.jackson.databind.deser.KeyDeserializers:
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.deser.ResolvableDeserializer -> com.fasterxml.jackson.databind.deser.ResolvableDeserializer:
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
com.fasterxml.jackson.databind.deser.SettableAnyProperty -> com.fasterxml.jackson.databind.deser.SettableAnyProperty:
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    java.lang.reflect.Method _setter -> _setter
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.deser.SettableAnyProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.BeanProperty getProperty() -> getProperty
    boolean hasValueDeserializer() -> hasValueDeserializer
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> deserializeAndSet
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void set(java.lang.Object,java.lang.String,java.lang.Object) -> set
    void _throwAsIOE(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwAsIOE
    java.lang.String getClassName() -> a
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.SettableBeanProperty -> com.fasterxml.jackson.databind.deser.SettableBeanProperty:
    long serialVersionUID -> serialVersionUID
    java.lang.String _propName -> _propName
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> _contextAnnotations
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.impl.NullProvider _nullProvider -> _nullProvider
    java.lang.String _managedReferenceName -> _managedReferenceName
    com.fasterxml.jackson.databind.util.ViewMatcher _viewMatcher -> _viewMatcher
    int _propertyIndex -> _propertyIndex
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(java.lang.String) -> withName
    void setManagedReferenceName(java.lang.String) -> setManagedReferenceName
    void setViews(java.lang.Class[]) -> setViews
    void assignIndex(int) -> assignIndex
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getManagedReferenceName() -> getManagedReferenceName
    boolean hasValueDeserializer() -> hasValueDeserializer
    boolean hasValueTypeDeserializer() -> hasValueTypeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer getValueDeserializer() -> getValueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer getValueTypeDeserializer() -> getValueTypeDeserializer
    boolean visibleInView(java.lang.Class) -> visibleInView
    boolean hasViews() -> hasViews
    int getPropertyIndex() -> getPropertyIndex
    int getCreatorIndex() -> getCreatorIndex
    java.lang.Object getInjectableValueId() -> getInjectableValueId
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    void _throwAsIOE(java.lang.Exception,java.lang.Object) -> _throwAsIOE
    java.io.IOException _throwAsIOE(java.lang.Exception) -> _throwAsIOE
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.deser.ValueInstantiator -> com.fasterxml.jackson.databind.deser.ValueInstantiator:
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canInstantiate() -> canInstantiate
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
com.fasterxml.jackson.databind.deser.ValueInstantiators -> com.fasterxml.jackson.databind.deser.ValueInstantiators:
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.ValueInstantiators$Base -> com.fasterxml.jackson.databind.deser.ValueInstantiators$Base:
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer -> com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> _delegate
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> _orderedProperties
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _buildMethod -> _buildMethod
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.impl.BeanAsArrayBuilderDeserializer asArrayDeserializer() -> asArrayDeserializer
    java.lang.Object finishBuild(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> finishBuild
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeNonVanilla
    java.lang.Object _deserializeWithCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeWithCreator
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromNonArray
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer -> com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase _delegate -> _delegate
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _orderedProperties -> _orderedProperties
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
    com.fasterxml.jackson.databind.deser.impl.BeanAsArrayDeserializer withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase asArrayDeserializer() -> asArrayDeserializer
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object _deserializeNonVanilla(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeNonVanilla
    java.lang.Object _deserializeWithCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeWithCreator
    java.lang.Object _deserializeUsingPropertyBased(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingPropertyBased
    java.lang.Object _deserializeFromNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeFromNonArray
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withIgnorableProperties(java.util.HashSet) -> withIgnorableProperties
    com.fasterxml.jackson.databind.deser.BeanDeserializerBase withObjectIdReader(com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> withObjectIdReader
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap -> com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket[] _buckets -> a
    int _hashMask -> b
    int _size -> c
    int _nextBucketIndex -> d
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap withProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> withProperty
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> renameAll
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap assignIndexes() -> assignIndexes
    int findSize(int) -> a
    java.util.Iterator iterator() -> iterator
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getPropertiesInInsertionOrder() -> getPropertiesInInsertionOrder
    int size() -> size
    com.fasterxml.jackson.databind.deser.SettableBeanProperty find(java.lang.String) -> find
    void replace(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> replace
    void remove(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> remove
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket -> dd:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket next -> a
    java.lang.String key -> b
    com.fasterxml.jackson.databind.deser.SettableBeanProperty value -> c
    int index -> d
com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$IteratorImpl -> de:
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket[] _buckets -> a
    com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap$Bucket _currentBucket -> b
    int _nextBucketIndex -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.fasterxml.jackson.databind.deser.impl.CreatorCollector -> com.fasterxml.jackson.databind.deser.impl.CreatorCollector:
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    boolean _canFixAccess -> _canFixAccess
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _defaultConstructor -> _defaultConstructor
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _stringCreator -> _stringCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _intCreator -> _intCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _longCreator -> _longCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _doubleCreator -> _doubleCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _booleanCreator -> _booleanCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    com.fasterxml.jackson.databind.deser.CreatorProperty[] _delegateArgs -> _delegateArgs
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _propertyBasedCreator -> _propertyBasedCreator
    com.fasterxml.jackson.databind.deser.CreatorProperty[] _propertyBasedArgs -> _propertyBasedArgs
    com.fasterxml.jackson.databind.deser.ValueInstantiator constructValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig) -> constructValueInstantiator
    void setDefaultConstructor(com.fasterxml.jackson.databind.introspect.AnnotatedConstructor) -> setDefaultConstructor
    void setDefaultCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> setDefaultCreator
    void addStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> addStringCreator
    void addIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> addIntCreator
    void addLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> addLongCreator
    void addDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> addDoubleCreator
    void addBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> addBooleanCreator
    void addDelegatingCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.CreatorProperty[]) -> addDelegatingCreator
    void addPropertyCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.CreatorProperty[]) -> addPropertyCreator
    boolean hasDefaultCreator() -> hasDefaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _fixAccess(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams verifyNonDup(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,java.lang.String) -> verifyNonDup
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler -> com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler:
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty[] _properties -> a
    java.util.HashMap _nameToPropertyIndex -> b
    java.lang.String[] _typeIds -> c
    com.fasterxml.jackson.databind.util.TokenBuffer[] _tokens -> d
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler start() -> start
    boolean handleTypePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> handleTypePropertyValue
    boolean handlePropertyValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Object) -> handlePropertyValue
    java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> complete
    java.lang.Object complete(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer,com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator) -> complete
    java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,int,java.lang.String) -> _deserialize
    void _deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,int,java.lang.String) -> _deserializeAndSet
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder -> com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$Builder:
    java.util.ArrayList _properties -> a
    java.util.HashMap _nameToPropertyIndex -> b
    void addExternal(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> addExternal
    com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler build() -> build
com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler$ExtTypedProperty -> df:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> a
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> c
    java.lang.String _typePropertyName -> b
    boolean hasTypePropertyName(java.lang.String) -> a
    boolean hasDefaultType() -> a
    java.lang.String getDefaultTypeId() -> b
com.fasterxml.jackson.databind.deser.impl.FieldProperty -> com.fasterxml.jackson.databind.deser.impl.FieldProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedField _annotated -> _annotated
    java.lang.reflect.Field _field -> _field
    com.fasterxml.jackson.databind.deser.impl.FieldProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.impl.FieldProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.impl.InnerClassProperty -> com.fasterxml.jackson.databind.deser.impl.InnerClassProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _delegate -> _delegate
    java.lang.reflect.Constructor _creator -> _creator
    com.fasterxml.jackson.databind.deser.impl.InnerClassProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.impl.InnerClassProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty -> com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty:
    long serialVersionUID -> serialVersionUID
    java.lang.String _referenceName -> _referenceName
    boolean _isContainer -> _isContainer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _managedProperty -> _managedProperty
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _backProperty -> _backProperty
    com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.impl.ManagedReferenceProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.impl.MethodProperty -> com.fasterxml.jackson.databind.deser.impl.MethodProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _setter -> _setter
    com.fasterxml.jackson.databind.deser.impl.MethodProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.impl.MethodProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    java.lang.Object readResolve() -> readResolve
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.impl.NullProvider -> com.fasterxml.jackson.databind.deser.impl.NullProvider:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _nullValue -> a
    boolean _isPrimitive -> b
    java.lang.Class _rawType -> c
    java.lang.Object nullValue(com.fasterxml.jackson.databind.DeserializationContext) -> nullValue
com.fasterxml.jackson.databind.deser.impl.ObjectIdReader -> com.fasterxml.jackson.databind.deser.impl.ObjectIdReader:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType idType -> idType
    java.lang.String propertyName -> propertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    com.fasterxml.jackson.databind.JsonDeserializer deserializer -> deserializer
    com.fasterxml.jackson.databind.deser.SettableBeanProperty idProperty -> idProperty
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.annotation.ObjectIdGenerator,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> construct
com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty -> com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.impl.ObjectIdValueProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator -> com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator:
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    java.util.HashMap _properties -> _properties
    int _propertyCount -> _propertyCount
    java.lang.Object[] _defaultValues -> _defaultValues
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] _propertiesWithInjectables -> _propertiesWithInjectables
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator construct(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> construct
    void assignDeserializer(com.fasterxml.jackson.databind.deser.SettableBeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> assignDeserializer
    java.util.Collection properties() -> properties
    com.fasterxml.jackson.databind.deser.SettableBeanProperty findCreatorProperty(java.lang.String) -> findCreatorProperty
    com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer startBuilding(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.ObjectIdReader) -> startBuilding
    java.lang.Object build(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer) -> build
com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator -> com.fasterxml.jackson.databind.deser.impl.PropertyBasedObjectIdGenerator:
    java.lang.Object generateId(java.lang.Object) -> generateId
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
com.fasterxml.jackson.databind.deser.impl.PropertyValue -> com.fasterxml.jackson.databind.deser.impl.PropertyValue:
    com.fasterxml.jackson.databind.deser.impl.PropertyValue next -> next
    java.lang.Object value -> value
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Any -> dg:
    com.fasterxml.jackson.databind.deser.SettableAnyProperty _property -> a
    java.lang.String _propertyName -> b
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Map -> dh:
    java.lang.Object _key -> a
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValue$Regular -> di:
    com.fasterxml.jackson.databind.deser.SettableBeanProperty _property -> a
    void assign(java.lang.Object) -> assign
com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer -> com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer:
    com.fasterxml.jackson.core.JsonParser _parser -> _parser
    com.fasterxml.jackson.databind.DeserializationContext _context -> _context
    java.lang.Object[] _creatorParameters -> _creatorParameters
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader _objectIdReader -> _objectIdReader
    int _paramsNeeded -> a
    com.fasterxml.jackson.databind.deser.impl.PropertyValue _buffered -> b
    java.lang.Object _idValue -> c
    void inject(com.fasterxml.jackson.databind.deser.SettableBeanProperty[]) -> inject
    java.lang.Object[] getParameters(java.lang.Object[]) -> getParameters
    boolean readIdProperty(java.lang.String) -> readIdProperty
    java.lang.Object handleIdValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> handleIdValue
    com.fasterxml.jackson.databind.deser.impl.PropertyValue buffered() -> buffered
    boolean isComplete() -> isComplete
    boolean assignParameter(int,java.lang.Object) -> assignParameter
    void bufferProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty,java.lang.Object) -> bufferProperty
    void bufferAnyProperty(com.fasterxml.jackson.databind.deser.SettableAnyProperty,java.lang.String,java.lang.Object) -> bufferAnyProperty
    void bufferMapProperty(java.lang.Object,java.lang.Object) -> bufferMapProperty
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId -> com.fasterxml.jackson.databind.deser.impl.ReadableObjectId:
    java.lang.Object id -> id
    java.lang.Object item -> item
    void bindItem(java.lang.Object) -> bindItem
com.fasterxml.jackson.databind.deser.impl.SetterlessProperty -> com.fasterxml.jackson.databind.deser.impl.SetterlessProperty:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _annotated -> _annotated
    java.lang.reflect.Method _getter -> _getter
    com.fasterxml.jackson.databind.deser.impl.SetterlessProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.impl.SetterlessProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    void deserializeAndSet(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeAndSet
    java.lang.Object deserializeSetAndReturn(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserializeSetAndReturn
    void set(java.lang.Object,java.lang.Object) -> set
    java.lang.Object setAndReturn(java.lang.Object,java.lang.Object) -> setAndReturn
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withName(java.lang.String) -> withName
    com.fasterxml.jackson.databind.deser.SettableBeanProperty withValueDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withValueDeserializer
com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer -> com.fasterxml.jackson.databind.deser.impl.TypeWrappedDeserializer:
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _typeDeserializer -> a
    com.fasterxml.jackson.databind.JsonDeserializer _deserializer -> b
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler -> com.fasterxml.jackson.databind.deser.impl.UnwrappedPropertyHandler:
    java.util.ArrayList _properties -> _properties
    void addProperty(com.fasterxml.jackson.databind.deser.SettableBeanProperty) -> addProperty
    void renameAll(com.fasterxml.jackson.databind.util.NameTransformer) -> renameAll
    java.lang.Object processUnwrapped(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,com.fasterxml.jackson.databind.util.TokenBuffer) -> processUnwrapped
com.fasterxml.jackson.databind.deser.impl.ValueInjector -> com.fasterxml.jackson.databind.deser.impl.ValueInjector:
    java.lang.Object _valueId -> _valueId
    java.lang.Object findValue(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> findValue
    void inject(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> inject
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer -> dj:
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    void _reportProblem(com.fasterxml.jackson.core.JsonParser,java.lang.String) -> _reportProblem
    void _handleDuplicateField(java.lang.String,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.JsonNode) -> _handleDuplicateField
    com.fasterxml.jackson.databind.node.ObjectNode deserializeObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> deserializeObject
    com.fasterxml.jackson.databind.node.ArrayNode deserializeArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> deserializeArray
    com.fasterxml.jackson.databind.JsonNode deserializeAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory) -> deserializeAny
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$1 -> dk:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.databind.deser.std.ClassDeserializer -> com.fasterxml.jackson.databind.deser.std.ClassDeserializer:
    java.lang.Class deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer -> com.fasterxml.jackson.databind.deser.std.CollectionDeserializer:
    com.fasterxml.jackson.databind.JavaType _collectionType -> _collectionType
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> withResolved
    com.fasterxml.jackson.databind.deser.std.CollectionDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase -> com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase:
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
com.fasterxml.jackson.databind.deser.std.DateDeserializers -> com.fasterxml.jackson.databind.deser.std.DateDeserializers:
    com.fasterxml.jackson.databind.deser.std.StdDeserializer[] all() -> all
com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer:
    java.lang.Class _calendarClass -> _calendarClass
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$CalendarDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.util.Calendar deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer:
    java.text.DateFormat _customFormat -> _customFormat
    java.lang.String _formatString -> _formatString
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer:
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.util.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer:
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$SqlDateDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.sql.Date deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimeZoneDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimeZoneDeserializer:
    java.util.TimeZone _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer -> com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer:
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$TimestampDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.sql.Timestamp deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.deser.std.DateDeserializers$DateBasedDeserializer withDateFormat(java.text.DateFormat,java.lang.String) -> withDateFormat
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer -> com.fasterxml.jackson.databind.deser.std.DelegatingDeserializer:
    com.fasterxml.jackson.databind.JsonDeserializer _delegatee -> _delegatee
    com.fasterxml.jackson.databind.JsonDeserializer newDelegatingInstance(com.fasterxml.jackson.databind.JsonDeserializer) -> newDelegatingInstance
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JsonDeserializer _createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonDeserializer) -> _createContextual
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    com.fasterxml.jackson.databind.JsonDeserializer replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer) -> replaceDelegatee
    java.lang.Object getNullValue() -> getNullValue
    java.lang.Object getEmptyValue() -> getEmptyValue
    java.util.Collection getKnownPropertyNames() -> getKnownPropertyNames
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader() -> getObjectIdReader
    com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
com.fasterxml.jackson.databind.deser.std.EnumDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.EnumResolver _resolver -> _resolver
    com.fasterxml.jackson.databind.JsonDeserializer deserializerForCreator(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> deserializerForCreator
    boolean isCachable() -> isCachable
    java.lang.Enum deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumDeserializer$FactoryBasedDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _enumClass -> _enumClass
    java.lang.Class _inputType -> _inputType
    java.lang.reflect.Method _factory -> _factory
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer:
    com.fasterxml.jackson.databind.JavaType _mapType -> _mapType
    java.lang.Class _enumClass -> _enumClass
    com.fasterxml.jackson.databind.JsonDeserializer _keyDeserializer -> _keyDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.deser.std.EnumMapDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean isCachable() -> isCachable
    java.util.EnumMap deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer -> com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer:
    com.fasterxml.jackson.databind.JavaType _enumType -> _enumType
    java.lang.Class _enumClass -> _enumClass
    com.fasterxml.jackson.databind.JsonDeserializer _enumDeserializer -> _enumDeserializer
    com.fasterxml.jackson.databind.deser.std.EnumSetDeserializer withDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> withDeserializer
    boolean isCachable() -> isCachable
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.util.EnumSet deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer -> com.fasterxml.jackson.databind.deser.std.FromStringDeserializer:
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
com.fasterxml.jackson.databind.deser.std.JacksonDeserializers -> com.fasterxml.jackson.databind.deser.std.JacksonDeserializers:
    com.fasterxml.jackson.databind.deser.std.StdDeserializer[] all() -> all
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findValueInstantiator
com.fasterxml.jackson.databind.deser.std.JacksonDeserializers$JavaTypeDeserializer -> com.fasterxml.jackson.databind.deser.std.JacksonDeserializers$JavaTypeDeserializer:
    com.fasterxml.jackson.databind.JavaType deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.JacksonDeserializers$JsonLocationInstantiator -> com.fasterxml.jackson.databind.deser.std.JacksonDeserializers$JsonLocationInstantiator:
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    com.fasterxml.jackson.databind.deser.CreatorProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    long _long(java.lang.Object) -> a
    int _int(java.lang.Object) -> b
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
com.fasterxml.jackson.databind.deser.std.JacksonDeserializers$TokenBufferDeserializer -> com.fasterxml.jackson.databind.deser.std.JacksonDeserializers$TokenBufferDeserializer:
    com.fasterxml.jackson.databind.util.TokenBuffer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers:
    com.fasterxml.jackson.databind.deser.std.StdDeserializer[] all() -> all
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$AtomicBooleanDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$AtomicBooleanDeserializer:
    java.util.concurrent.atomic.AtomicBoolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$AtomicReferenceDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$AtomicReferenceDeserializer:
    com.fasterxml.jackson.databind.JavaType _referencedType -> _referencedType
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    java.util.concurrent.atomic.AtomicReference deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$CharsetDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$CharsetDeserializer:
    java.nio.charset.Charset _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$CurrencyDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$CurrencyDeserializer:
    java.util.Currency _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$InetAddressDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$InetAddressDeserializer:
    java.net.InetAddress _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$LocaleDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$LocaleDeserializer:
    java.util.Locale _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$PatternDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$PatternDeserializer:
    java.util.regex.Pattern _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$StackTraceElementDeserializer:
    java.lang.StackTraceElement deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$URIDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$URIDeserializer:
    java.net.URI _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$URLDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$URLDeserializer:
    java.net.URL _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JdkDeserializers$UUIDDeserializer -> com.fasterxml.jackson.databind.deser.std.JdkDeserializers$UUIDDeserializer:
    java.util.UUID _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.util.UUID _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeEmbedded
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer -> com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance -> a
    com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(java.lang.Class) -> getDeserializer
    com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$1 -> dl:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer -> dm:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer _instance -> a
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance() -> a
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer -> dn:
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer _instance -> a
    com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance() -> a
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.MapDeserializer -> com.fasterxml.jackson.databind.deser.std.MapDeserializer:
    com.fasterxml.jackson.databind.JavaType _mapType -> _mapType
    com.fasterxml.jackson.databind.KeyDeserializer _keyDeserializer -> _keyDeserializer
    boolean _standardStringKey -> _standardStringKey
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _valueTypeDeserializer -> _valueTypeDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    boolean _hasDefaultCreator -> _hasDefaultCreator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.impl.PropertyBasedCreator _propertyBasedCreator -> _propertyBasedCreator
    java.util.HashSet _ignorableProperties -> _ignorableProperties
    com.fasterxml.jackson.databind.deser.std.MapDeserializer withResolved(com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer,java.util.HashSet) -> withResolved
    boolean _isStdKeyDeser(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.KeyDeserializer) -> _isStdKeyDeser
    void setIgnorableProperties(java.lang.String[]) -> setIgnorableProperties
    void resolve(com.fasterxml.jackson.databind.DeserializationContext) -> resolve
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.Map deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Class getMapClass() -> getMapClass
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    void _readAndBind(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndBind
    void _readAndBindStringMap(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map) -> _readAndBindStringMap
    java.util.Map _deserializeUsingCreator(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeUsingCreator
    void wrapAndThrow(java.lang.Throwable,java.lang.Object) -> wrapAndThrow
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers:
    com.fasterxml.jackson.databind.deser.std.StdDeserializer[] all() -> all
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$1 -> do:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> b
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigDecimalDeserializer:
    java.math.BigDecimal deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BigIntegerDeserializer:
    java.math.BigInteger deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$BooleanDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Boolean deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Boolean deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer:
    java.lang.Byte deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$CharacterDeserializer:
    java.lang.Character deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$DoubleDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Double deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Double deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Float deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$IntegerDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Integer deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Integer deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$LongDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Long deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer:
    java.lang.Number deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _nullValue -> _nullValue
    java.lang.Object getNullValue() -> getNullValue
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer -> com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ShortDeserializer:
    java.lang.Short deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer -> com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer:
    com.fasterxml.jackson.databind.type.ArrayType _arrayType -> _arrayType
    boolean _untyped -> _untyped
    java.lang.Class _elementClass -> _elementClass
    com.fasterxml.jackson.databind.JsonDeserializer _elementDeserializer -> _elementDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer _elementTypeDeserializer -> _elementTypeDeserializer
    com.fasterxml.jackson.databind.deser.std.ObjectArrayDeserializer withDeserializer(com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.lang.Object[] deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object[] deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Byte[] deserializeFromBase64(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromBase64
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers -> com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers:
    java.util.HashMap _allDeserializers -> a
    com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers instance -> b
    java.util.HashMap getAll() -> getAll
    void add(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> a
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$Base -> dp:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser -> dq:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser -> dr:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser -> ds:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$DoubleDeser -> dt:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$FloatDeser -> du:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$IntDeser -> dv:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$LongDeser -> dw:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ShortDeser -> dx:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$StringDeser -> dy:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer -> com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.Converter _converter -> _converter
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> withDelegate
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JsonDeserializer getDelegatee() -> getDelegatee
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object convertValue(java.lang.Object) -> convertValue
com.fasterxml.jackson.databind.deser.std.StdDeserializer -> com.fasterxml.jackson.databind.deser.std.StdDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _valueClass -> _valueClass
    java.lang.Class getValueClass() -> getValueClass
    com.fasterxml.jackson.databind.JavaType getValueType() -> getValueType
    boolean isDefaultDeserializer(com.fasterxml.jackson.databind.JsonDeserializer) -> isDefaultDeserializer
    boolean isDefaultKeyDeserializer(com.fasterxml.jackson.databind.KeyDeserializer) -> isDefaultKeyDeserializer
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBooleanPrimitive
    java.lang.Boolean _parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBoolean
    boolean _parseBooleanFromNumber(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseBooleanFromNumber
    java.lang.Byte _parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseByte
    java.lang.Short _parseShort(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseShort
    short _parseShortPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseShortPrimitive
    int _parseIntPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseIntPrimitive
    java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseInteger
    java.lang.Long _parseLong(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseLong
    long _parseLongPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseLongPrimitive
    java.lang.Float _parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseFloat
    float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseFloatPrimitive
    java.lang.Double _parseDouble(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDouble
    double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDoublePrimitive
    java.util.Date _parseDate(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseDate
    double parseDouble(java.lang.String) -> parseDouble
    java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _parseString
    com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> findDeserializer
    void handleUnknownProperty(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object,java.lang.String) -> handleUnknownProperty
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _keyClass -> _keyClass
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
    java.lang.Class getKeyClass() -> getKeyClass
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
    int _parseInt(java.lang.String) -> _parseInt
    long _parseLong(java.lang.String) -> _parseLong
    double _parseDouble(java.lang.String) -> _parseDouble
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$BoolKD -> dz:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$ByteKD -> dA:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$CalendarKD -> dB:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$CharKD -> dC:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DateKD -> dD:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DelegatingKD -> dE:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _keyClass -> a
    com.fasterxml.jackson.databind.JsonDeserializer _delegate -> b
    java.lang.Object deserializeKey(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeKey
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$DoubleKD -> dF:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$EnumKD -> dG:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.EnumResolver _resolver -> a
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _factory -> b
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$FloatKD -> dH:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$IntKD -> dI:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$LocaleKD -> dJ:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.JdkDeserializers$LocaleDeserializer _localeDeserializer -> a
    java.util.Locale _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> a
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$LongKD -> dK:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$ShortKD -> dL:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer -> dM:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Constructor _ctor -> a
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringFactoryKeyDeserializer -> dN:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Method _factoryMethod -> a
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD -> dO:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sString -> a
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD sObject -> b
    com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class) -> a
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$UuidKD -> dP:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _parse
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers -> com.fasterxml.jackson.databind.deser.std.StdKeyDeserializers:
    java.util.HashMap _keyDeserializers -> _keyDeserializers
    void add(com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer) -> a
    java.util.HashMap constructAll() -> constructAll
    com.fasterxml.jackson.databind.KeyDeserializer constructStringKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> constructStringKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver) -> constructEnumKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer constructEnumKeyDeserializer(com.fasterxml.jackson.databind.util.EnumResolver,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> constructEnumKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer constructDelegatingKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer) -> constructDelegatingKeyDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer findStringBasedKeyDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findStringBasedKeyDeserializer
com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer -> com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
com.fasterxml.jackson.databind.deser.std.StdValueInstantiator -> com.fasterxml.jackson.databind.deser.std.StdValueInstantiator:
    long serialVersionUID -> serialVersionUID
    java.lang.String _valueTypeDesc -> _valueTypeDesc
    boolean _cfgEmptyStringsAsObjects -> _cfgEmptyStringsAsObjects
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _defaultCreator -> _defaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _withArgsCreator -> _withArgsCreator
    com.fasterxml.jackson.databind.deser.CreatorProperty[] _constructorArguments -> _constructorArguments
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _delegateCreator -> _delegateCreator
    com.fasterxml.jackson.databind.deser.CreatorProperty[] _delegateArguments -> _delegateArguments
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromStringCreator -> _fromStringCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromIntCreator -> _fromIntCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromLongCreator -> _fromLongCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromDoubleCreator -> _fromDoubleCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _fromBooleanCreator -> _fromBooleanCreator
    void configureFromObjectSettings(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.CreatorProperty[],com.fasterxml.jackson.databind.introspect.AnnotatedWithParams,com.fasterxml.jackson.databind.deser.CreatorProperty[]) -> configureFromObjectSettings
    void configureFromStringCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromStringCreator
    void configureFromIntCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromIntCreator
    void configureFromLongCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromLongCreator
    void configureFromDoubleCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromDoubleCreator
    void configureFromBooleanCreator(com.fasterxml.jackson.databind.introspect.AnnotatedWithParams) -> configureFromBooleanCreator
    java.lang.String getValueTypeDesc() -> getValueTypeDesc
    boolean canCreateFromString() -> canCreateFromString
    boolean canCreateFromInt() -> canCreateFromInt
    boolean canCreateFromLong() -> canCreateFromLong
    boolean canCreateFromDouble() -> canCreateFromDouble
    boolean canCreateFromBoolean() -> canCreateFromBoolean
    boolean canCreateUsingDefault() -> canCreateUsingDefault
    boolean canCreateUsingDelegate() -> canCreateUsingDelegate
    boolean canCreateFromObjectWith() -> canCreateFromObjectWith
    com.fasterxml.jackson.databind.JavaType getDelegateType(com.fasterxml.jackson.databind.DeserializationConfig) -> getDelegateType
    com.fasterxml.jackson.databind.deser.SettableBeanProperty[] getFromObjectArguments(com.fasterxml.jackson.databind.DeserializationConfig) -> getFromObjectArguments
    java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext) -> createUsingDefault
    java.lang.Object createFromObjectWith(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object[]) -> createFromObjectWith
    java.lang.Object createUsingDelegate(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> createUsingDelegate
    java.lang.Object createFromString(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> createFromString
    java.lang.Object createFromInt(com.fasterxml.jackson.databind.DeserializationContext,int) -> createFromInt
    java.lang.Object createFromLong(com.fasterxml.jackson.databind.DeserializationContext,long) -> createFromLong
    java.lang.Object createFromDouble(com.fasterxml.jackson.databind.DeserializationContext,double) -> createFromDouble
    java.lang.Object createFromBoolean(com.fasterxml.jackson.databind.DeserializationContext,boolean) -> createFromBoolean
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDelegateCreator() -> getDelegateCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getDefaultCreator() -> getDefaultCreator
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getWithArgsCreator() -> getWithArgsCreator
    java.lang.Object _createFromStringFallbacks(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _createFromStringFallbacks
    com.fasterxml.jackson.databind.JsonMappingException wrapException(java.lang.Throwable) -> wrapException
com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer -> com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _collectionType -> _collectionType
    com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer -> _valueDeserializer
    com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator -> _valueInstantiator
    com.fasterxml.jackson.databind.JsonDeserializer _delegateDeserializer -> _delegateDeserializer
    com.fasterxml.jackson.databind.deser.std.StringCollectionDeserializer withResolved(com.fasterxml.jackson.databind.JsonDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> withResolved
    com.fasterxml.jackson.databind.JsonDeserializer createContextual(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer() -> getContentDeserializer
    java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.util.Collection deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Collection) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.StringDeserializer -> com.fasterxml.jackson.databind.deser.std.StringDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.String deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer -> com.fasterxml.jackson.databind.deser.std.ThrowableDeserializer:
    long serialVersionUID -> serialVersionUID
    java.lang.String PROP_NAME_MESSAGE -> PROP_NAME_MESSAGE
    com.fasterxml.jackson.databind.JsonDeserializer unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingDeserializer
    java.lang.Object deserializeFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeFromObject
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer -> com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer:
    java.lang.Object[] NO_OBJECTS -> a
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.jsontype.TypeDeserializer) -> deserializeWithType
    java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArray
    java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapObject
    java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> mapArrayToArray
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$1 -> dQ:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.databind.exc.InvalidFormatException -> com.fasterxml.jackson.databind.exc.InvalidFormatException:
    long serialVersionUID -> serialVersionUID
    java.lang.Object _value -> _value
    java.lang.Class _targetType -> _targetType
    com.fasterxml.jackson.databind.exc.InvalidFormatException from(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class) -> from
    java.lang.Object getValue() -> getValue
    java.lang.Class getTargetType() -> getTargetType
com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException -> com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _referringClass -> _referringClass
    java.lang.String _unrecognizedPropertyName -> _unrecognizedPropertyName
    java.util.Collection _propertyIds -> _propertyIds
    java.lang.String _propertiesAsString -> _propertiesAsString
    com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException from(com.fasterxml.jackson.core.JsonParser,java.lang.Object,java.lang.String,java.util.Collection) -> from
    java.lang.String getMessageSuffix() -> getMessageSuffix
    java.lang.Class getReferringClass() -> getReferringClass
    java.lang.String getUnrecognizedPropertyName() -> getUnrecognizedPropertyName
    java.util.Collection getKnownPropertyIds() -> getKnownPropertyIds
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers -> com.fasterxml.jackson.databind.ext.CoreXMLDeserializers:
    javax.xml.datatype.DatatypeFactory _dataTypeFactory -> a
    java.util.Collection provide() -> provide
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$DurationDeserializer -> com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$DurationDeserializer:
    javax.xml.datatype.Duration _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$GregorianCalendarDeserializer -> com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$GregorianCalendarDeserializer:
    javax.xml.datatype.XMLGregorianCalendar deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
    java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserialize
com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$QNameDeserializer -> com.fasterxml.jackson.databind.ext.CoreXMLDeserializers$QNameDeserializer:
    javax.xml.namespace.QName _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.ext.CoreXMLSerializers -> com.fasterxml.jackson.databind.ext.CoreXMLSerializers:
    java.util.HashMap _serializers -> a
    java.util.Collection provide() -> provide
com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer -> com.fasterxml.jackson.databind.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer:
    void serialize(javax.xml.datatype.XMLGregorianCalendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ext.DOMDeserializer -> com.fasterxml.jackson.databind.ext.DOMDeserializer:
    javax.xml.parsers.DocumentBuilderFactory _parserFactory -> a
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    org.w3c.dom.Document parse(java.lang.String) -> parse
com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer -> com.fasterxml.jackson.databind.ext.DOMDeserializer$DocumentDeserializer:
    org.w3c.dom.Document _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer -> com.fasterxml.jackson.databind.ext.DOMDeserializer$NodeDeserializer:
    org.w3c.dom.Node _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
    java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext) -> _deserialize
com.fasterxml.jackson.databind.ext.DOMSerializer -> com.fasterxml.jackson.databind.ext.DOMSerializer:
    org.w3c.dom.ls.DOMImplementationLS _domImpl -> _domImpl
    void serialize(org.w3c.dom.Node,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory -> com.fasterxml.jackson.databind.ext.OptionalHandlerFactory:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance -> instance
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> findSerializer
    com.fasterxml.jackson.databind.JsonDeserializer findDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig) -> findDeserializer
    java.lang.Object instantiate(java.lang.String) -> a
    boolean doesImplement(java.lang.Class,java.lang.String) -> a
    boolean hasInterface(java.lang.Class,java.lang.String) -> b
    boolean hasSupertypeStartingWith(java.lang.Class,java.lang.String) -> c
    boolean hasInterfaceStartingWith(java.lang.Class,java.lang.String) -> d
com.fasterxml.jackson.databind.introspect.Annotated -> com.fasterxml.jackson.databind.introspect.Annotated:
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    boolean hasAnnotation(java.lang.Class) -> hasAnnotation
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    com.fasterxml.jackson.databind.introspect.Annotated withFallBackAnnotationsFrom(com.fasterxml.jackson.databind.introspect.Annotated) -> withFallBackAnnotationsFrom
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    boolean isPublic() -> isPublic
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings) -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedClass -> com.fasterxml.jackson.databind.introspect.AnnotatedClass:
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] NO_ANNOTATION_MAPS -> a
    java.lang.Class _class -> _class
    java.util.List _superTypes -> _superTypes
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver -> _mixInResolver
    java.lang.Class _primaryMixIn -> _primaryMixIn
    com.fasterxml.jackson.databind.introspect.AnnotationMap _classAnnotations -> _classAnnotations
    boolean _creatorsResolved -> _creatorsResolved
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _defaultConstructor -> _defaultConstructor
    java.util.List _constructors -> _constructors
    java.util.List _creatorMethods -> _creatorMethods
    com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap _memberMethods -> _memberMethods
    java.util.List _fields -> _fields
    com.fasterxml.jackson.databind.introspect.AnnotatedClass withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedClass construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> construct
    com.fasterxml.jackson.databind.introspect.AnnotatedClass constructWithoutSuperTypes(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> constructWithoutSuperTypes
    java.lang.Class getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    com.fasterxml.jackson.databind.util.Annotations getAnnotations() -> getAnnotations
    boolean hasAnnotations() -> hasAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor getDefaultConstructor() -> getDefaultConstructor
    java.util.List getConstructors() -> getConstructors
    java.util.List getStaticMethods() -> getStaticMethods
    java.lang.Iterable memberMethods() -> memberMethods
    int getMemberMethodCount() -> getMemberMethodCount
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    int getFieldCount() -> getFieldCount
    java.lang.Iterable fields() -> fields
    void resolveClassAnnotations() -> a
    void resolveCreators() -> b
    void resolveMemberMethods() -> c
    void resolveFields() -> d
    void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class) -> _addClassMixIns
    void _addClassMixIns(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.Class,java.lang.Class) -> _addClassMixIns
    void _addConstructorMixIns(java.lang.Class) -> _addConstructorMixIns
    void _addFactoryMixIns(java.lang.Class) -> _addFactoryMixIns
    void _addMemberMethods(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap) -> _addMemberMethods
    void _addMethodMixIns(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap) -> _addMethodMixIns
    java.util.Map _findFields(java.lang.Class,java.util.Map) -> _findFields
    void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map) -> _addFieldMixIns
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructMethod(java.lang.reflect.Method) -> _constructMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor _constructConstructor(java.lang.reflect.Constructor,boolean) -> _constructConstructor
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _constructCreatorMethod(java.lang.reflect.Method) -> _constructCreatorMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedField _constructField(java.lang.reflect.Field) -> _constructField
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] _emptyAnnotationMaps(int) -> a
    boolean _isIncludableMemberMethod(java.lang.reflect.Method) -> _isIncludableMemberMethod
    boolean _isIncludableField(java.lang.reflect.Field) -> a
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] _collectRelevantAnnotations(java.lang.annotation.Annotation[][]) -> _collectRelevantAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap _collectRelevantAnnotations(java.lang.annotation.Annotation[]) -> _collectRelevantAnnotations
    void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotationMap,java.lang.annotation.Annotation[]) -> a
    void _addAnnotationsIfNotPresent(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[]) -> a
    void _addOrOverrideAnnotations(com.fasterxml.jackson.databind.introspect.AnnotatedMember,java.lang.annotation.Annotation[]) -> b
    void _addMixOvers(java.lang.reflect.Constructor,com.fasterxml.jackson.databind.introspect.AnnotatedConstructor,boolean) -> _addMixOvers
    void _addMixOvers(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod,boolean) -> _addMixOvers
    void _addMixUnders(java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> _addMixUnders
    boolean _isAnnotationBundle(java.lang.annotation.Annotation) -> a
    java.lang.String toString() -> toString
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor -> com.fasterxml.jackson.databind.introspect.AnnotatedConstructor:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Constructor _constructor -> _constructor
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization _serialization -> _serialization
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Constructor getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings) -> getType
    int getParameterCount() -> getParameterCount
    java.lang.Class getRawParameterType(int) -> getRawParameterType
    java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object readResolve() -> readResolve
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization -> dR:
    long serialVersionUID -> serialVersionUID
    java.lang.Class clazz -> a
    java.lang.Class[] args -> b
com.fasterxml.jackson.databind.introspect.AnnotatedField -> com.fasterxml.jackson.databind.introspect.AnnotatedField:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Field _field -> _field
    com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization _serialization -> _serialization
    com.fasterxml.jackson.databind.introspect.AnnotatedField withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Field getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    java.lang.String getFullName() -> getFullName
    int getAnnotationCount() -> getAnnotationCount
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object readResolve() -> readResolve
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization -> dS:
    long serialVersionUID -> serialVersionUID
    java.lang.Class clazz -> a
    java.lang.String name -> b
com.fasterxml.jackson.databind.introspect.AnnotatedMember -> com.fasterxml.jackson.databind.introspect.AnnotatedMember:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotationMap _annotations -> _annotations
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    com.fasterxml.jackson.databind.introspect.AnnotationMap getAllAnnotations() -> getAllAnnotations
    void addOrOverride(java.lang.annotation.Annotation) -> addOrOverride
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    void fixAccess() -> fixAccess
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
com.fasterxml.jackson.databind.introspect.AnnotatedMethod -> com.fasterxml.jackson.databind.introspect.AnnotatedMethod:
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Method _method -> _method
    java.lang.Class[] _paramClasses -> _paramClasses
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization -> _serialization
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod withMethod(java.lang.reflect.Method) -> withMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.Method getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings) -> getType
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Method getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    int getParameterCount() -> getParameterCount
    java.lang.String getFullName() -> getFullName
    java.lang.Class[] getRawParameterTypes() -> getRawParameterTypes
    java.lang.reflect.Type[] getGenericParameterTypes() -> getGenericParameterTypes
    java.lang.Class getRawParameterType(int) -> getRawParameterType
    java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    java.lang.Class getRawReturnType() -> getRawReturnType
    java.lang.reflect.Type getGenericReturnType() -> getGenericReturnType
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object readResolve() -> readResolve
    java.lang.reflect.Member getMember() -> getMember
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization -> dT:
    long serialVersionUID -> serialVersionUID
    java.lang.Class clazz -> a
    java.lang.String name -> b
    java.lang.Class[] args -> c
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap -> com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap:
    java.util.LinkedHashMap _methods -> _methods
    void add(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> add
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod remove(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> remove
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod remove(java.lang.reflect.Method) -> remove
    boolean isEmpty() -> isEmpty
    int size() -> size
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.String,java.lang.Class[]) -> find
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod find(java.lang.reflect.Method) -> find
    java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.introspect.AnnotatedParameter -> com.fasterxml.jackson.databind.introspect.AnnotatedParameter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams _owner -> _owner
    java.lang.reflect.Type _type -> _type
    int _index -> _index
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
    java.lang.reflect.AnnotatedElement getAnnotated() -> getAnnotated
    int getModifiers() -> getModifiers
    java.lang.String getName() -> getName
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.reflect.Type getGenericType() -> getGenericType
    java.lang.Class getRawType() -> getRawType
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.reflect.Member getMember() -> getMember
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    java.lang.reflect.Type getParameterType() -> getParameterType
    com.fasterxml.jackson.databind.introspect.AnnotatedWithParams getOwner() -> getOwner
    int getIndex() -> getIndex
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.introspect.Annotated withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap) -> withAnnotations
com.fasterxml.jackson.databind.introspect.AnnotatedWithParams -> com.fasterxml.jackson.databind.introspect.AnnotatedWithParams:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations -> _paramAnnotations
    void addOrOverrideParam(int,java.lang.annotation.Annotation) -> addOrOverrideParam
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter replaceParameterAnnotations(int,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> replaceParameterAnnotations
    com.fasterxml.jackson.databind.JavaType getType(com.fasterxml.jackson.databind.type.TypeBindings,java.lang.reflect.TypeVariable[]) -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotationMap getParameterAnnotations(int) -> getParameterAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getParameter(int) -> getParameter
    int getParameterCount() -> getParameterCount
    java.lang.Class getRawParameterType(int) -> getRawParameterType
    java.lang.reflect.Type getGenericParameterType(int) -> getGenericParameterType
    com.fasterxml.jackson.databind.JavaType resolveParameterType(int,com.fasterxml.jackson.databind.type.TypeBindings) -> resolveParameterType
    int getAnnotationCount() -> getAnnotationCount
    java.lang.Object call() -> call
    java.lang.Object call(java.lang.Object[]) -> call
    java.lang.Object call1(java.lang.Object) -> call1
com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair -> com.fasterxml.jackson.databind.introspect.AnnotationIntrospectorPair:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.AnnotationIntrospector _primary -> _primary
    com.fasterxml.jackson.databind.AnnotationIntrospector _secondary -> _secondary
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.databind.AnnotationIntrospector create(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector) -> create
    java.util.Collection allIntrospectors() -> allIntrospectors
    java.util.Collection allIntrospectors(java.util.Collection) -> allIntrospectors
    boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findFilterId
    java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    com.fasterxml.jackson.annotation.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Include) -> findSerializationInclusion
    java.lang.Class findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findSerializationContentType
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    com.fasterxml.jackson.databind.PropertyName findWrapperName(com.fasterxml.jackson.databind.introspect.Annotated) -> findWrapperName
    java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.String findEnumValue(java.lang.Enum) -> findEnumValue
    java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> findDeserializationName
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> findDeserializationName
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findDeserializationName
    java.lang.String findSerializationName(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> findSerializationName
    java.lang.String findSerializationName(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> findSerializationName
com.fasterxml.jackson.databind.introspect.AnnotationMap -> com.fasterxml.jackson.databind.introspect.AnnotationMap:
    java.util.HashMap _annotations -> _annotations
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    com.fasterxml.jackson.databind.introspect.AnnotationMap merge(com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap) -> merge
    int size() -> size
    void addIfNotPresent(java.lang.annotation.Annotation) -> addIfNotPresent
    void add(java.lang.annotation.Annotation) -> add
    java.lang.String toString() -> toString
    void _add(java.lang.annotation.Annotation) -> _add
com.fasterxml.jackson.databind.introspect.BasicBeanDescription -> com.fasterxml.jackson.databind.introspect.BasicBeanDescription:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classInfo -> _classInfo
    com.fasterxml.jackson.databind.type.TypeBindings _bindings -> _bindings
    java.util.List _properties -> _properties
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo _objectIdInfo -> _objectIdInfo
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _anySetterMethod -> _anySetterMethod
    java.util.Map _injectables -> _injectables
    java.util.Set _ignoredPropertyNames -> _ignoredPropertyNames
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod _jsonValueMethod -> _jsonValueMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _anyGetter -> _anyGetter
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> forDeserialization
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector) -> forSerialization
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forOtherUse(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> forOtherUse
    boolean removeProperty(java.lang.String) -> removeProperty
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    java.util.List findProperties() -> findProperties
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findJsonValueMethod() -> findJsonValueMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    boolean hasKnownClassAnnotations() -> hasKnownClassAnnotations
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType() -> bindingsForBeanType
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor() -> findDefaultConstructor
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findAnySetter() -> findAnySetter
    java.util.Map findInjectables() -> findInjectables
    java.util.List getConstructors() -> getConstructors
    java.lang.Object instantiateBean(boolean) -> instantiateBean
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[]) -> findMethod
    com.fasterxml.jackson.annotation.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.annotation.JsonFormat$Value) -> findExpectedFormat
    java.util.List getFactoryMethods() -> getFactoryMethods
    java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]) -> findSingleArgConstructor
    java.lang.reflect.Method findFactoryMethod(java.lang.Class[]) -> findFactoryMethod
    boolean isFactoryMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isFactoryMethod
    java.util.List findCreatorPropertyNames() -> findCreatorPropertyNames
    com.fasterxml.jackson.annotation.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.annotation.JsonInclude$Include) -> findSerializationInclusion
    com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter() -> findAnyGetter
    java.util.Map findBackReferenceProperties() -> findBackReferenceProperties
    java.lang.Class findPOJOBuilder() -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig() -> findPOJOBuilderConfig
    java.util.LinkedHashMap _findPropertyFields(java.util.Collection,boolean) -> _findPropertyFields
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector -> com.fasterxml.jackson.databind.introspect.BasicClassIntrospector:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription STRING_DESC -> STRING_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription BOOLEAN_DESC -> BOOLEAN_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription INT_DESC -> INT_DESC
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription LONG_DESC -> LONG_DESC
    com.fasterxml.jackson.databind.introspect.BasicClassIntrospector instance -> instance
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean,java.lang.String) -> collectProperties
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collectPropertiesWithBuilder(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean) -> collectPropertiesWithBuilder
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector constructPropertyCollector(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType,boolean,java.lang.String) -> constructPropertyCollector
    com.fasterxml.jackson.databind.introspect.BasicBeanDescription _findCachedDesc(com.fasterxml.jackson.databind.JavaType) -> _findCachedDesc
    com.fasterxml.jackson.databind.BeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition -> com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition:
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(java.lang.String) -> withName
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean couldDeserialize() -> couldDeserialize
    boolean couldSerialize() -> couldSerialize
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor() -> getAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMutator() -> getMutator
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    java.lang.Class[] findViews() -> findViews
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> findReferenceType
    boolean isTypeId() -> isTypeId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> findObjectIdInfo
    boolean isRequired() -> isRequired
com.fasterxml.jackson.databind.introspect.ClassIntrospector -> com.fasterxml.jackson.databind.introspect.ClassIntrospector:
    com.fasterxml.jackson.databind.BeanDescription forSerialization(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forSerialization
    com.fasterxml.jackson.databind.BeanDescription forDeserialization(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserialization
    com.fasterxml.jackson.databind.BeanDescription forDeserializationWithBuilder(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDeserializationWithBuilder
    com.fasterxml.jackson.databind.BeanDescription forCreation(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forCreation
    com.fasterxml.jackson.databind.BeanDescription forClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forClassAnnotations
    com.fasterxml.jackson.databind.BeanDescription forDirectClassAnnotations(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver) -> forDirectClassAnnotations
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver -> com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver:
    java.lang.Class findMixInClassFor(java.lang.Class) -> findMixInClassFor
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector -> com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.Version version() -> version
    boolean isHandled(java.lang.annotation.Annotation) -> isHandled
    boolean isAnnotationBundle(java.lang.annotation.Annotation) -> isAnnotationBundle
    com.fasterxml.jackson.databind.PropertyName findRootName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findRootName
    java.lang.String[] findPropertiesToIgnore(com.fasterxml.jackson.databind.introspect.Annotated) -> findPropertiesToIgnore
    java.lang.Boolean findIgnoreUnknownProperties(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findIgnoreUnknownProperties
    java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> isIgnorableType
    java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findFilterId
    java.lang.Object findNamingStrategy(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findNamingStrategy
    com.fasterxml.jackson.databind.introspect.VisibilityChecker findAutoDetectVisibility(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.introspect.VisibilityChecker) -> findAutoDetectVisibility
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findReferenceType
    com.fasterxml.jackson.databind.util.NameTransformer findUnwrappingNameTransformer(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findUnwrappingNameTransformer
    boolean hasIgnoreMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasIgnoreMarker
    java.lang.Boolean hasRequiredMarker(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> hasRequiredMarker
    java.lang.Object findInjectableValueId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findInjectableValueId
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType) -> findTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyTypeResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType) -> findPropertyContentTypeResolver
    java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated) -> findSubtypes
    java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findTypeName
    java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializer
    java.lang.Class findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
    java.lang.Class findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    com.fasterxml.jackson.annotation.JsonInclude$Include findSerializationInclusion(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.annotation.JsonInclude$Include) -> findSerializationInclusion
    java.lang.Class findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationType
    java.lang.Class findSerializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findSerializationKeyType
    java.lang.Class findSerializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findSerializationContentType
    com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializationTyping
    java.lang.Class[] findViews(com.fasterxml.jackson.databind.introspect.Annotated) -> findViews
    java.lang.Boolean isTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isTypeId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo(com.fasterxml.jackson.databind.introspect.Annotated) -> findObjectIdInfo
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectReferenceInfo(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> findObjectReferenceInfo
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findFormat
    com.fasterxml.jackson.annotation.JsonFormat$Value findFormat(com.fasterxml.jackson.databind.introspect.Annotated) -> findFormat
    java.lang.String[] findSerializationPropertyOrder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationPropertyOrder
    java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findSerializationSortAlphabetically
    com.fasterxml.jackson.databind.PropertyName findNameForSerialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForSerialization
    java.lang.String findSerializationName(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> findSerializationName
    java.lang.String findSerializationName(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> findSerializationName
    boolean hasAsValueAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAsValueAnnotation
    java.lang.Class findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    java.lang.Class findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    java.lang.Class findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    java.lang.Class findDeserializationType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationType
    java.lang.Class findDeserializationKeyType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationKeyType
    java.lang.Class findDeserializationContentType(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> findDeserializationContentType
    java.lang.Object findValueInstantiator(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findValueInstantiator
    java.lang.Class findPOJOBuilder(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilder
    com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value findPOJOBuilderConfig(com.fasterxml.jackson.databind.introspect.AnnotatedClass) -> findPOJOBuilderConfig
    com.fasterxml.jackson.databind.PropertyName findNameForDeserialization(com.fasterxml.jackson.databind.introspect.Annotated) -> findNameForDeserialization
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> findDeserializationName
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> findDeserializationName
    java.lang.String findDeserializationName(com.fasterxml.jackson.databind.introspect.AnnotatedParameter) -> findDeserializationName
    boolean hasAnySetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnySetterAnnotation
    boolean hasAnyGetterAnnotation(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> hasAnyGetterAnnotation
    boolean hasCreatorAnnotation(com.fasterxml.jackson.databind.introspect.Annotated) -> hasCreatorAnnotation
    boolean _isIgnorable(com.fasterxml.jackson.databind.introspect.Annotated) -> _isIgnorable
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> _findTypeResolver
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructStdTypeResolverBuilder() -> _constructStdTypeResolverBuilder
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder _constructNoTypeResolverBuilder() -> _constructNoTypeResolverBuilder
    java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentDeserializer
    java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeyDeserializer
    java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findDeserializer
    java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findContentSerializer
    java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated) -> findKeySerializer
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector$1 -> dU:
    int[] $SwitchMap$com$fasterxml$jackson$databind$annotation$JsonSerialize$Inclusion -> a
com.fasterxml.jackson.databind.introspect.MemberKey -> com.fasterxml.jackson.databind.introspect.MemberKey:
    java.lang.Class[] NO_CLASSES -> a
    java.lang.String _name -> b
    java.lang.Class[] _argTypes -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector -> com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector instance -> instance
    com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.databind.introspect.NopAnnotationIntrospector$1 -> dV:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.databind.introspect.ObjectIdInfo -> com.fasterxml.jackson.databind.introspect.ObjectIdInfo:
    java.lang.String _propertyName -> _propertyName
    java.lang.Class _generator -> _generator
    java.lang.Class _scope -> _scope
    boolean _alwaysAsId -> _alwaysAsId
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo withAlwaysAsId(boolean) -> withAlwaysAsId
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Class getScope() -> getScope
    java.lang.Class getGeneratorType() -> getGeneratorType
    boolean getAlwaysAsId() -> getAlwaysAsId
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector -> com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    boolean _forSerialization -> _forSerialization
    com.fasterxml.jackson.databind.JavaType _type -> _type
    com.fasterxml.jackson.databind.introspect.AnnotatedClass _classDef -> _classDef
    com.fasterxml.jackson.databind.introspect.VisibilityChecker _visibilityChecker -> _visibilityChecker
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.String _mutatorPrefix -> _mutatorPrefix
    java.util.LinkedHashMap _properties -> _properties
    java.util.LinkedList _creatorProperties -> _creatorProperties
    java.util.LinkedList _anyGetters -> _anyGetters
    java.util.LinkedList _anySetters -> _anySetters
    java.util.LinkedList _jsonValueGetters -> _jsonValueGetters
    java.util.HashSet _ignoredPropertyNames -> _ignoredPropertyNames
    java.util.LinkedHashMap _injectables -> _injectables
    com.fasterxml.jackson.databind.cfg.MapperConfig getConfig() -> getConfig
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassDef() -> getClassDef
    com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector() -> getAnnotationIntrospector
    java.util.List getProperties() -> getProperties
    java.util.Map getInjectables() -> getInjectables
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getJsonValueMethod() -> getJsonValueMethod
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAnyGetter() -> getAnyGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getAnySetterMethod() -> getAnySetterMethod
    java.util.Set getIgnoredPropertyNames() -> getIgnoredPropertyNames
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo() -> getObjectIdInfo
    java.lang.Class findPOJOBuilderClass() -> findPOJOBuilderClass
    java.util.Map getPropertyMap() -> getPropertyMap
    com.fasterxml.jackson.databind.introspect.POJOPropertiesCollector collect() -> collect
    void _sortProperties() -> _sortProperties
    void _addFields() -> _addFields
    void _addCreators() -> _addCreators
    void _addMethods() -> _addMethods
    void _addGetterMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _addGetterMethod
    void _addSetterMethod(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,com.fasterxml.jackson.databind.AnnotationIntrospector) -> _addSetterMethod
    void _addInjectables() -> _addInjectables
    void _doAddInjectable(java.lang.Object,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _doAddInjectable
    void _removeUnwantedProperties() -> _removeUnwantedProperties
    void _addIgnored(java.lang.String) -> a
    void _renameProperties() -> _renameProperties
    void _renameUsing(com.fasterxml.jackson.databind.PropertyNamingStrategy) -> _renameUsing
    void _renameWithWrappers() -> _renameWithWrappers
    void reportProblem(java.lang.String) -> reportProblem
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder _property(java.lang.String) -> _property
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder -> com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder:
    boolean _forSerialization -> _forSerialization
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.String _name -> _name
    java.lang.String _internalName -> _internalName
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _fields -> _fields
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _ctorParameters -> _ctorParameters
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _getters -> _getters
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _setters -> _setters
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder withName(java.lang.String) -> withName
    int compareTo(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> compareTo
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    boolean couldSerialize() -> couldSerialize
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor() -> getAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMutator() -> getMutator
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    java.lang.Class[] findViews() -> findViews
    com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType() -> findReferenceType
    boolean isTypeId() -> isTypeId
    boolean isRequired() -> isRequired
    com.fasterxml.jackson.databind.introspect.ObjectIdInfo findObjectIdInfo() -> findObjectIdInfo
    void addField(com.fasterxml.jackson.databind.introspect.AnnotatedField,java.lang.String,boolean,boolean) -> addField
    void addCtor(com.fasterxml.jackson.databind.introspect.AnnotatedParameter,java.lang.String,boolean,boolean) -> addCtor
    void addGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addGetter
    void addSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String,boolean,boolean) -> addSetter
    void addAll(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder) -> addAll
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked merge(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> a
    void removeIgnored() -> removeIgnored
    void removeNonVisible() -> removeNonVisible
    void trimByVisibility() -> trimByVisibility
    void mergeAnnotations(boolean) -> mergeAnnotations
    com.fasterxml.jackson.databind.introspect.AnnotationMap _mergeAnnotations(int,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked[]) -> a
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeIgnored(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> a
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _removeNonVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> b
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked _trimByVisibility(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> c
    boolean _anyExplicitNames(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> d
    boolean anyVisible() -> anyVisible
    boolean _anyVisible(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> e
    boolean anyIgnorals() -> anyIgnorals
    boolean _anyIgnorals(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> f
    java.lang.String findNewName() -> findNewName
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked findRenamed(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked,com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> b
    java.lang.String toString() -> toString
    java.lang.Object fromMemberAnnotations(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember) -> fromMemberAnnotations
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(java.lang.String) -> withName
    int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$1 -> dW:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$2 -> dX:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$3 -> dY:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$4 -> dZ:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$5 -> ea:
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder this$0 -> a
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked -> eb:
    java.lang.Object value -> a
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked next -> b
    java.lang.String explicitName -> c
    boolean isVisible -> d
    boolean isMarkedIgnored -> e
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withValue(java.lang.Object) -> a
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withNext(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> b
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutIgnored() -> a
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked withoutNonVisible() -> b
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked append(com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked) -> a
    com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$Linked trimByVisibility() -> c
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.introspect.POJOPropertyBuilder$WithMember -> ec:
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> a
com.fasterxml.jackson.databind.introspect.VisibilityChecker -> com.fasterxml.jackson.databind.introspect.VisibilityChecker:
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isSetterVisible
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> isFieldVisible
com.fasterxml.jackson.databind.introspect.VisibilityChecker$1 -> ed:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$PropertyAccessor -> a
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std -> com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std DEFAULT -> DEFAULT
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _getterMinLevel -> _getterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _isGetterMinLevel -> _isGetterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _setterMinLevel -> _setterMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _creatorMinLevel -> _creatorMinLevel
    com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility _fieldMinLevel -> _fieldMinLevel
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std defaultInstance() -> defaultInstance
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    boolean isCreatorVisible(java.lang.reflect.Member) -> isCreatorVisible
    boolean isCreatorVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> isCreatorVisible
    boolean isFieldVisible(java.lang.reflect.Field) -> isFieldVisible
    boolean isFieldVisible(com.fasterxml.jackson.databind.introspect.AnnotatedField) -> isFieldVisible
    boolean isGetterVisible(java.lang.reflect.Method) -> isGetterVisible
    boolean isGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGetterVisible
    boolean isIsGetterVisible(java.lang.reflect.Method) -> isIsGetterVisible
    boolean isIsGetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isIsGetterVisible
    boolean isSetterVisible(java.lang.reflect.Method) -> isSetterVisible
    boolean isSetterVisible(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isSetterVisible
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withFieldVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withFieldVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withCreatorVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withCreatorVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withSetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withSetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withIsGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withIsGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withGetterVisibility(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withGetterVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker withVisibility(com.fasterxml.jackson.annotation.PropertyAccessor,com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> withVisibility
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility) -> with
    com.fasterxml.jackson.databind.introspect.VisibilityChecker with(com.fasterxml.jackson.annotation.JsonAutoDetect) -> with
com.fasterxml.jackson.databind.introspect.WithMember -> com.fasterxml.jackson.databind.introspect.WithMember:
    java.lang.Object withMember(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> withMember
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor:
    void itemsFormat(com.fasterxml.jackson.databind.JavaType) -> itemsFormat
    void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes) -> itemsFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes:
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes STRING -> STRING
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes NUMBER -> NUMBER
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes INTEGER -> INTEGER
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes BOOLEAN -> BOOLEAN
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes OBJECT -> OBJECT
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes ARRAY -> ARRAY
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes NULL -> NULL
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes ANY -> ANY
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes[] $VALUES -> a
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes[] values() -> values
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes valueOf(java.lang.String) -> valueOf
    java.lang.String value() -> value
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes forValue(java.lang.String) -> forValue
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable:
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider:
    com.fasterxml.jackson.databind.SerializerProvider getProvider() -> getProvider
    void setProvider(com.fasterxml.jackson.databind.SerializerProvider) -> setProvider
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper:
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor expectObjectFormat(com.fasterxml.jackson.databind.JavaType) -> expectObjectFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor expectArrayFormat(com.fasterxml.jackson.databind.JavaType) -> expectArrayFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor expectStringFormat(com.fasterxml.jackson.databind.JavaType) -> expectStringFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor expectNumberFormat(com.fasterxml.jackson.databind.JavaType) -> expectNumberFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor expectIntegerFormat(com.fasterxml.jackson.databind.JavaType) -> expectIntegerFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor expectBooleanFormat(com.fasterxml.jackson.databind.JavaType) -> expectBooleanFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor expectNullFormat(com.fasterxml.jackson.databind.JavaType) -> expectNullFormat
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor expectAnyFormat(com.fasterxml.jackson.databind.JavaType) -> expectAnyFormat
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor:
    void property(com.fasterxml.jackson.databind.BeanProperty) -> property
    void optionalProperty(com.fasterxml.jackson.databind.BeanProperty) -> optionalProperty
    void property(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> property
    void optionalProperty(java.lang.String,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType) -> optionalProperty
    void property(java.lang.String) -> property
    void optionalProperty(java.lang.String) -> optionalProperty
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor:
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat:
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat DATE_TIME -> DATE_TIME
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat DATE -> DATE
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat TIME -> TIME
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat UTC_MILLISEC -> UTC_MILLISEC
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat REGEX -> REGEX
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat COLOR -> COLOR
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat STYLE -> STYLE
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat PHONE -> PHONE
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat URI -> URI
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat EMAIL -> EMAIL
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat IP_ADDRESS -> IP_ADDRESS
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat IPV6 -> IPV6
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat HOST_NAME -> HOST_NAME
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat[] $VALUES -> a
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat[] values() -> values
    com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$1 -> ee:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$10 -> ef:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$11 -> eg:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$12 -> eh:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$13 -> ei:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$2 -> ej:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$3 -> ek:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$4 -> el:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$5 -> em:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$6 -> en:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$7 -> eo:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$8 -> ep:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat$9 -> eq:
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor -> com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor:
    void format(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat) -> format
    void enumTypes(java.util.Set) -> enumTypes
com.fasterxml.jackson.databind.jsonschema.JsonSchema -> com.fasterxml.jackson.databind.jsonschema.JsonSchema:
    com.fasterxml.jackson.databind.node.ObjectNode schema -> a
    com.fasterxml.jackson.databind.node.ObjectNode getSchemaNode() -> getSchemaNode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JsonNode getDefaultSchemaNode() -> getDefaultSchemaNode
com.fasterxml.jackson.databind.jsonschema.JsonSerializableSchema -> com.fasterxml.jackson.databind.jsonschema.JsonSerializableSchema:
    java.lang.String NO_VALUE -> NO_VALUE
    java.lang.String id() -> id
    java.lang.String schemaType() -> schemaType
    java.lang.String schemaObjectPropertiesDefinition() -> schemaObjectPropertiesDefinition
    java.lang.String schemaItemDefinition() -> schemaItemDefinition
com.fasterxml.jackson.databind.jsonschema.SchemaAware -> com.fasterxml.jackson.databind.jsonschema.SchemaAware:
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
com.fasterxml.jackson.databind.jsontype.NamedType -> com.fasterxml.jackson.databind.jsontype.NamedType:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _class -> _class
    int _hashCode -> _hashCode
    java.lang.String _name -> _name
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    boolean hasName() -> hasName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.jsontype.SubtypeResolver -> com.fasterxml.jackson.databind.jsontype.SubtypeResolver:
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector) -> collectAndResolveSubtypes
com.fasterxml.jackson.databind.jsontype.TypeDeserializer -> com.fasterxml.jackson.databind.jsontype.TypeDeserializer:
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
com.fasterxml.jackson.databind.jsontype.TypeIdResolver -> com.fasterxml.jackson.databind.jsontype.TypeIdResolver:
    void init(com.fasterxml.jackson.databind.JavaType) -> init
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    java.lang.String idFromBaseType() -> idFromBaseType
    com.fasterxml.jackson.databind.JavaType typeFromId(java.lang.String) -> typeFromId
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder -> com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder:
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
com.fasterxml.jackson.databind.jsontype.TypeSerializer -> com.fasterxml.jackson.databind.jsontype.TypeSerializer:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
com.fasterxml.jackson.databind.jsontype.TypeSerializerWrapper -> com.fasterxml.jackson.databind.jsontype.TypeSerializerWrapper:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _delegate -> _delegate
    java.lang.Object _value -> _value
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
    java.lang.String _locateTypeId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _locateTypeId
com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer:
    com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
    void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    com.fasterxml.jackson.databind.jsontype.impl.AsExternalTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
    void _writeScalarPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeScalarPrefix
    void _writeObjectPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeObjectPrefix
    void _writeArrayPrefix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> _writeArrayPrefix
    void _writeScalarSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeScalarSuffix
    void _writeObjectSuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeObjectSuffix
    void _writeArraySuffix(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> _writeArraySuffix
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer) -> _deserializeTypedForId
    java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer) -> _deserializeTypedUsingDefaultImpl
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserializeIfNatural(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> _deserializeIfNatural
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer$1 -> er:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer:
    java.lang.String _typePropertyName -> _typePropertyName
    com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    com.fasterxml.jackson.databind.jsontype.impl.AsArrayTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer -> com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeDeserializer:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromObject
    java.lang.Object deserializeTypedFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromArray
    java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromScalar
    java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> deserializeTypedFromAny
    java.lang.Object _deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext) -> a
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer -> com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer:
    com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForObject
    void writeTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForObject
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForArray
    void writeTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForArray
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypePrefixForScalar
    void writeTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.Class) -> writeTypePrefixForScalar
    void writeTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForObject
    void writeTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForArray
    void writeTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator) -> writeTypeSuffixForScalar
    void writeCustomTypePrefixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForObject
    void writeCustomTypePrefixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForArray
    void writeCustomTypePrefixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypePrefixForScalar
    void writeCustomTypeSuffixForObject(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForObject
    void writeCustomTypeSuffixForArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForArray
    void writeCustomTypeSuffixForScalar(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,java.lang.String) -> writeCustomTypeSuffixForScalar
    com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    void registerSubtype(java.lang.Class,java.lang.String) -> registerSubtype
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    com.fasterxml.jackson.databind.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String _idFrom(java.lang.Object,java.lang.Class) -> _idFrom
com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.MinimalClassNameIdResolver:
    java.lang.String _basePackageName -> _basePackageName
    java.lang.String _basePackagePrefix -> _basePackagePrefix
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    com.fasterxml.jackson.databind.JavaType typeFromId(java.lang.String) -> typeFromId
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver -> com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedHashSet _registeredSubtypes -> _registeredSubtypes
    void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    void registerSubtypes(java.lang.Class[]) -> registerSubtypes
    java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.JavaType) -> collectAndResolveSubtypes
    java.util.Collection collectAndResolveSubtypes(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector) -> collectAndResolveSubtypes
    void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap) -> _collectAndResolve
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder -> com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder:
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id _idType -> _idType
    com.fasterxml.jackson.annotation.JsonTypeInfo$As _includeAs -> _includeAs
    java.lang.String _typeProperty -> _typeProperty
    boolean _typeIdVisible -> _typeIdVisible
    java.lang.Class _defaultImpl -> _defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _customIdResolver -> _customIdResolver
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder noTypeInfoBuilder() -> noTypeInfoBuilder
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
    com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection) -> buildTypeDeserializer
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    java.lang.String getTypeProperty() -> getTypeProperty
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    boolean isTypeIdVisible() -> isTypeIdVisible
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver idResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean) -> idResolver
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean) -> typeIdVisibility
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class) -> defaultImpl
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String) -> typeProperty
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.annotation.JsonTypeInfo$As) -> inclusion
    com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.annotation.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver) -> init
com.fasterxml.jackson.databind.jsontype.impl.StdTypeResolverBuilder$1 -> es:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$As -> a
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonTypeInfo$Id -> b
com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeDeserializerBase:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> _idResolver
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.JavaType _defaultImpl -> _defaultImpl
    java.lang.String _typePropertyName -> _typePropertyName
    boolean _typeIdVisible -> _typeIdVisible
    java.util.HashMap _deserializers -> _deserializers
    com.fasterxml.jackson.databind.JsonDeserializer _defaultImplDeserializer -> _defaultImplDeserializer
    com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty) -> forProperty
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String baseTypeName() -> baseTypeName
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.Class getDefaultImpl() -> getDefaultImpl
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.JsonDeserializer _findDeserializer(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String) -> _findDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer _findDefaultImplDeserializer(com.fasterxml.jackson.databind.DeserializationContext) -> _findDefaultImplDeserializer
com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase:
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.JavaType _baseType -> _baseType
    void init(com.fasterxml.jackson.databind.JavaType) -> init
    java.lang.String idFromBaseType() -> idFromBaseType
com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver -> com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver:
    com.fasterxml.jackson.databind.cfg.MapperConfig _config -> _config
    java.util.HashMap _typeToId -> _typeToId
    java.util.HashMap _idToType -> _idToType
    com.fasterxml.jackson.databind.jsontype.impl.TypeNameIdResolver construct(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection,boolean,boolean) -> construct
    com.fasterxml.jackson.annotation.JsonTypeInfo$Id getMechanism() -> getMechanism
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
    com.fasterxml.jackson.databind.JavaType typeFromId(java.lang.String) -> typeFromId
    java.lang.String toString() -> toString
    java.lang.String _defaultTypeId(java.lang.Class) -> _defaultTypeId
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase -> com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase:
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver -> _idResolver
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion() -> getTypeInclusion
    java.lang.String getPropertyName() -> getPropertyName
    com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver() -> getTypeIdResolver
    java.lang.String idFromValue(java.lang.Object) -> idFromValue
    java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class) -> idFromValueAndType
com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver -> com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _mappings -> _mappings
    com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver addMapping(java.lang.Class,java.lang.Class) -> addMapping
    com.fasterxml.jackson.databind.JavaType findTypeMapping(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> findTypeMapping
    com.fasterxml.jackson.databind.JavaType resolveAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType) -> resolveAbstractType
com.fasterxml.jackson.databind.module.SimpleDeserializers -> com.fasterxml.jackson.databind.module.SimpleDeserializers:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _classMappings -> _classMappings
    void addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> addDeserializer
    void addDeserializers(java.util.Map) -> addDeserializers
    com.fasterxml.jackson.databind.JsonDeserializer findArrayDeserializer(com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findArrayDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findBeanDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findBeanDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionDeserializer(com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findCollectionLikeDeserializer(com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findCollectionLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findEnumDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findEnumDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapDeserializer(com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findMapLikeDeserializer(com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.KeyDeserializer,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer) -> findMapLikeDeserializer
    com.fasterxml.jackson.databind.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findTreeNodeDeserializer
com.fasterxml.jackson.databind.module.SimpleKeyDeserializers -> com.fasterxml.jackson.databind.module.SimpleKeyDeserializers:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _classMappings -> _classMappings
    com.fasterxml.jackson.databind.module.SimpleKeyDeserializers addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.KeyDeserializer) -> addDeserializer
    com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findKeyDeserializer
com.fasterxml.jackson.databind.module.SimpleModule -> com.fasterxml.jackson.databind.module.SimpleModule:
    long serialVersionUID -> serialVersionUID
    java.lang.String _name -> _name
    com.fasterxml.jackson.core.Version _version -> _version
    com.fasterxml.jackson.databind.module.SimpleSerializers _serializers -> _serializers
    com.fasterxml.jackson.databind.module.SimpleDeserializers _deserializers -> _deserializers
    com.fasterxml.jackson.databind.module.SimpleSerializers _keySerializers -> _keySerializers
    com.fasterxml.jackson.databind.module.SimpleKeyDeserializers _keyDeserializers -> _keyDeserializers
    com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver _abstractTypes -> _abstractTypes
    com.fasterxml.jackson.databind.module.SimpleValueInstantiators _valueInstantiators -> _valueInstantiators
    java.util.HashMap _mixins -> _mixins
    java.util.LinkedHashSet _subtypes -> _subtypes
    void setSerializers(com.fasterxml.jackson.databind.module.SimpleSerializers) -> setSerializers
    void setDeserializers(com.fasterxml.jackson.databind.module.SimpleDeserializers) -> setDeserializers
    void setKeySerializers(com.fasterxml.jackson.databind.module.SimpleSerializers) -> setKeySerializers
    void setKeyDeserializers(com.fasterxml.jackson.databind.module.SimpleKeyDeserializers) -> setKeyDeserializers
    void setAbstractTypes(com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver) -> setAbstractTypes
    void setValueInstantiators(com.fasterxml.jackson.databind.module.SimpleValueInstantiators) -> setValueInstantiators
    com.fasterxml.jackson.databind.module.SimpleModule addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    com.fasterxml.jackson.databind.module.SimpleModule addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    com.fasterxml.jackson.databind.module.SimpleModule addKeySerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addKeySerializer
    com.fasterxml.jackson.databind.module.SimpleModule addDeserializer(java.lang.Class,com.fasterxml.jackson.databind.JsonDeserializer) -> addDeserializer
    com.fasterxml.jackson.databind.module.SimpleModule addKeyDeserializer(java.lang.Class,com.fasterxml.jackson.databind.KeyDeserializer) -> addKeyDeserializer
    com.fasterxml.jackson.databind.module.SimpleModule addAbstractTypeMapping(java.lang.Class,java.lang.Class) -> addAbstractTypeMapping
    com.fasterxml.jackson.databind.module.SimpleModule addValueInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> addValueInstantiator
    com.fasterxml.jackson.databind.module.SimpleModule registerSubtypes(java.lang.Class[]) -> registerSubtypes
    com.fasterxml.jackson.databind.module.SimpleModule registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[]) -> registerSubtypes
    com.fasterxml.jackson.databind.module.SimpleModule setMixInAnnotation(java.lang.Class,java.lang.Class) -> setMixInAnnotation
    java.lang.String getModuleName() -> getModuleName
    void setupModule(com.fasterxml.jackson.databind.Module$SetupContext) -> setupModule
    com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.databind.module.SimpleSerializers -> com.fasterxml.jackson.databind.module.SimpleSerializers:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _classMappings -> _classMappings
    java.util.HashMap _interfaceMappings -> _interfaceMappings
    void addSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    void addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addSerializer
    void addSerializers(java.util.List) -> addSerializers
    void _addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> a
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _findInterfaceMapping(java.lang.Class,com.fasterxml.jackson.databind.type.ClassKey) -> _findInterfaceMapping
com.fasterxml.jackson.databind.module.SimpleValueInstantiators -> com.fasterxml.jackson.databind.module.SimpleValueInstantiators:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _classMappings -> _classMappings
    com.fasterxml.jackson.databind.module.SimpleValueInstantiators addValueInstantiator(java.lang.Class,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> addValueInstantiator
    com.fasterxml.jackson.databind.deser.ValueInstantiator findValueInstantiator(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.deser.ValueInstantiator) -> findValueInstantiator
com.fasterxml.jackson.databind.node.ArrayNode -> com.fasterxml.jackson.databind.node.ArrayNode:
    java.util.List _children -> _children
    com.fasterxml.jackson.databind.node.ArrayNode deepCopy() -> deepCopy
    com.fasterxml.jackson.databind.node.ArrayNode _defaultDeepCopy() -> _defaultDeepCopy
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean isArray() -> isArray
    int size() -> size
    java.util.Iterator elements() -> elements
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    com.fasterxml.jackson.databind.JsonNode set(int,com.fasterxml.jackson.databind.JsonNode) -> set
    com.fasterxml.jackson.databind.node.ArrayNode add(com.fasterxml.jackson.databind.JsonNode) -> add
    com.fasterxml.jackson.databind.node.ArrayNode addAll(com.fasterxml.jackson.databind.node.ArrayNode) -> addAll
    com.fasterxml.jackson.databind.node.ArrayNode addAll(java.util.Collection) -> addAll
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,com.fasterxml.jackson.databind.JsonNode) -> insert
    com.fasterxml.jackson.databind.JsonNode remove(int) -> remove
    com.fasterxml.jackson.databind.node.ArrayNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.node.ArrayNode addArray() -> addArray
    com.fasterxml.jackson.databind.node.ObjectNode addObject() -> addObject
    com.fasterxml.jackson.databind.node.ArrayNode addPOJO(java.lang.Object) -> addPOJO
    com.fasterxml.jackson.databind.node.ArrayNode addNull() -> addNull
    com.fasterxml.jackson.databind.node.ArrayNode add(int) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Integer) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(long) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Long) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(float) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Float) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(double) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Double) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.math.BigDecimal) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.String) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(boolean) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.Boolean) -> add
    com.fasterxml.jackson.databind.node.ArrayNode add(byte[]) -> add
    com.fasterxml.jackson.databind.node.ArrayNode insertArray(int) -> insertArray
    com.fasterxml.jackson.databind.node.ObjectNode insertObject(int) -> insertObject
    com.fasterxml.jackson.databind.node.ArrayNode insertPOJO(int,java.lang.Object) -> insertPOJO
    com.fasterxml.jackson.databind.node.ArrayNode insertNull(int) -> insertNull
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,int) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Integer) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,long) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Long) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,float) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Float) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,double) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Double) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.math.BigDecimal) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.String) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,boolean) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,java.lang.Boolean) -> insert
    com.fasterxml.jackson.databind.node.ArrayNode insert(int,byte[]) -> insert
    void addContentsTo(java.util.List) -> addContentsTo
    java.util.List _createList() -> _createList
    java.util.List _createList(int) -> _createList
    boolean equals(java.lang.Object) -> equals
    boolean _equals(com.fasterxml.jackson.databind.node.ArrayNode) -> _equals
    boolean _customEquals(com.fasterxml.jackson.databind.node.ArrayNode) -> _customEquals
    boolean _stdEquals(com.fasterxml.jackson.databind.node.ArrayNode) -> _stdEquals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.JsonNode _set(int,com.fasterxml.jackson.databind.JsonNode) -> _set
    com.fasterxml.jackson.databind.node.ArrayNode _add(com.fasterxml.jackson.databind.JsonNode) -> a
    com.fasterxml.jackson.databind.node.ArrayNode _insert(int,com.fasterxml.jackson.databind.JsonNode) -> a
    com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
com.fasterxml.jackson.databind.node.BaseJsonNode -> com.fasterxml.jackson.databind.node.BaseJsonNode:
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    com.fasterxml.jackson.databind.JsonNode findPath(java.lang.String) -> findPath
    com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    com.fasterxml.jackson.core.JsonParser traverse() -> traverse
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
com.fasterxml.jackson.databind.node.BigIntegerNode -> com.fasterxml.jackson.databind.node.BigIntegerNode:
    java.math.BigInteger MIN_INTEGER -> a
    java.math.BigInteger MAX_INTEGER -> b
    java.math.BigInteger MIN_LONG -> c
    java.math.BigInteger MAX_LONG -> d
    java.math.BigInteger _value -> _value
    com.fasterxml.jackson.databind.node.BigIntegerNode valueOf(java.math.BigInteger) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isBigInteger() -> isBigInteger
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.BinaryNode -> com.fasterxml.jackson.databind.node.BinaryNode:
    com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE -> a
    byte[] _data -> b
    com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[]) -> valueOf
    com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[],int,int) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean isBinary() -> isBinary
    byte[] binaryValue() -> binaryValue
    java.lang.String asText() -> asText
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.node.BooleanNode -> com.fasterxml.jackson.databind.node.BooleanNode:
    com.fasterxml.jackson.databind.node.BooleanNode TRUE -> TRUE
    com.fasterxml.jackson.databind.node.BooleanNode FALSE -> FALSE
    com.fasterxml.jackson.databind.node.BooleanNode getTrue() -> getTrue
    com.fasterxml.jackson.databind.node.BooleanNode getFalse() -> getFalse
    com.fasterxml.jackson.databind.node.BooleanNode valueOf(boolean) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean isBoolean() -> isBoolean
    boolean booleanValue() -> booleanValue
    java.lang.String asText() -> asText
    boolean asBoolean() -> asBoolean
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.node.ContainerNode -> com.fasterxml.jackson.databind.node.ContainerNode:
    com.fasterxml.jackson.databind.node.JsonNodeFactory _nodeFactory -> _nodeFactory
    boolean isContainerNode() -> isContainerNode
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    java.lang.String asText() -> asText
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    int size() -> size
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
    com.fasterxml.jackson.databind.node.NullNode nullNode() -> nullNode
    com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean) -> booleanNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(byte) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(short) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(int) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(long) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(float) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(double) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> textNode
    com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]) -> binaryNode
    com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    com.fasterxml.jackson.databind.node.POJONode POJONode(java.lang.Object) -> POJONode
    com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator -> com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator:
    com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator instance -> a
    com.fasterxml.jackson.databind.node.ContainerNode$NoNodesIterator instance() -> instance
    boolean hasNext() -> hasNext
    com.fasterxml.jackson.databind.JsonNode next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.fasterxml.jackson.databind.node.ContainerNode$NoStringsIterator -> com.fasterxml.jackson.databind.node.ContainerNode$NoStringsIterator:
    com.fasterxml.jackson.databind.node.ContainerNode$NoStringsIterator instance -> a
    com.fasterxml.jackson.databind.node.ContainerNode$NoStringsIterator instance() -> instance
    boolean hasNext() -> hasNext
    java.lang.String next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.fasterxml.jackson.databind.node.DecimalNode -> com.fasterxml.jackson.databind.node.DecimalNode:
    java.math.BigDecimal MIN_INTEGER -> a
    java.math.BigDecimal MAX_INTEGER -> b
    java.math.BigDecimal MIN_LONG -> c
    java.math.BigDecimal MAX_LONG -> d
    java.math.BigDecimal _value -> _value
    com.fasterxml.jackson.databind.node.DecimalNode valueOf(java.math.BigDecimal) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isBigDecimal() -> isBigDecimal
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.String asText() -> asText
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.DoubleNode -> com.fasterxml.jackson.databind.node.DoubleNode:
    double _value -> _value
    com.fasterxml.jackson.databind.node.DoubleNode valueOf(double) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isFloatingPointNumber() -> isFloatingPointNumber
    boolean isDouble() -> isDouble
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.IntNode -> com.fasterxml.jackson.databind.node.IntNode:
    com.fasterxml.jackson.databind.node.IntNode[] CANONICALS -> b
    int _value -> a
    com.fasterxml.jackson.databind.node.IntNode valueOf(int) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isInt() -> isInt
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.JsonNodeFactory -> com.fasterxml.jackson.databind.node.JsonNodeFactory:
    long serialVersionUID -> serialVersionUID
    boolean _cfgBigDecimalExact -> a
    com.fasterxml.jackson.databind.node.JsonNodeFactory decimalsNormalized -> b
    com.fasterxml.jackson.databind.node.JsonNodeFactory decimalsAsIs -> c
    com.fasterxml.jackson.databind.node.JsonNodeFactory instance -> instance
    com.fasterxml.jackson.databind.node.JsonNodeFactory withExactBigDecimals(boolean) -> withExactBigDecimals
    com.fasterxml.jackson.databind.node.BooleanNode booleanNode(boolean) -> booleanNode
    com.fasterxml.jackson.databind.node.NullNode nullNode() -> nullNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(byte) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Byte) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(short) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Short) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(int) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Integer) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(long) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Long) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(java.math.BigInteger) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(float) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Float) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(double) -> numberNode
    com.fasterxml.jackson.databind.node.ValueNode numberNode(java.lang.Double) -> numberNode
    com.fasterxml.jackson.databind.node.NumericNode numberNode(java.math.BigDecimal) -> numberNode
    com.fasterxml.jackson.databind.node.TextNode textNode(java.lang.String) -> textNode
    com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[]) -> binaryNode
    com.fasterxml.jackson.databind.node.BinaryNode binaryNode(byte[],int,int) -> binaryNode
    com.fasterxml.jackson.databind.node.ArrayNode arrayNode() -> arrayNode
    com.fasterxml.jackson.databind.node.ObjectNode objectNode() -> objectNode
    com.fasterxml.jackson.databind.node.POJONode POJONode(java.lang.Object) -> POJONode
com.fasterxml.jackson.databind.node.LongNode -> com.fasterxml.jackson.databind.node.LongNode:
    long _value -> a
    com.fasterxml.jackson.databind.node.LongNode valueOf(long) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    boolean isIntegralNumber() -> isIntegralNumber
    boolean isLong() -> isLong
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.fasterxml.jackson.databind.node.MissingNode -> com.fasterxml.jackson.databind.node.MissingNode:
    com.fasterxml.jackson.databind.node.MissingNode instance -> a
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    com.fasterxml.jackson.databind.node.MissingNode getInstance() -> getInstance
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean isMissingNode() -> isMissingNode
    java.lang.String asText() -> asText
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.node.NodeCursor -> com.fasterxml.jackson.databind.node.NodeCursor:
    com.fasterxml.jackson.databind.node.NodeCursor _parent -> _parent
    java.lang.String _currentName -> _currentName
    com.fasterxml.jackson.databind.node.NodeCursor getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonToken endToken() -> endToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    com.fasterxml.jackson.databind.node.NodeCursor iterateChildren() -> iterateChildren
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$Array -> com.fasterxml.jackson.databind.node.NodeCursor$Array:
    java.util.Iterator _contents -> _contents
    com.fasterxml.jackson.databind.JsonNode _currentNode -> _currentNode
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonToken endToken() -> endToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$Object -> com.fasterxml.jackson.databind.node.NodeCursor$Object:
    java.util.Iterator _contents -> _contents
    java.util.Map$Entry _current -> _current
    boolean _needEntry -> _needEntry
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonToken endToken() -> endToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NodeCursor$RootValue -> com.fasterxml.jackson.databind.node.NodeCursor$RootValue:
    com.fasterxml.jackson.databind.JsonNode _node -> _node
    boolean _done -> _done
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonToken endToken() -> endToken
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    boolean currentHasChildren() -> currentHasChildren
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.databind.node.NullNode -> com.fasterxml.jackson.databind.node.NullNode:
    com.fasterxml.jackson.databind.node.NullNode instance -> instance
    com.fasterxml.jackson.databind.node.NullNode getInstance() -> getInstance
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean isNull() -> isNull
    java.lang.String asText() -> asText
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.node.NumericNode -> com.fasterxml.jackson.databind.node.NumericNode:
    boolean isNumber() -> isNumber
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    java.lang.Number numberValue() -> numberValue
    int intValue() -> intValue
    long longValue() -> longValue
    double doubleValue() -> doubleValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    boolean canConvertToInt() -> canConvertToInt
    boolean canConvertToLong() -> canConvertToLong
    java.lang.String asText() -> asText
    int asInt() -> asInt
    int asInt(int) -> asInt
    long asLong() -> asLong
    long asLong(long) -> asLong
    double asDouble() -> asDouble
    double asDouble(double) -> asDouble
com.fasterxml.jackson.databind.node.ObjectNode -> com.fasterxml.jackson.databind.node.ObjectNode:
    java.util.Map _children -> _children
    com.fasterxml.jackson.databind.node.ObjectNode deepCopy() -> deepCopy
    com.fasterxml.jackson.databind.node.ObjectNode _defaultDeepCopy() -> _defaultDeepCopy
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean isObject() -> isObject
    int size() -> size
    java.util.Iterator elements() -> elements
    com.fasterxml.jackson.databind.JsonNode get(int) -> get
    com.fasterxml.jackson.databind.JsonNode get(java.lang.String) -> get
    java.util.Iterator fieldNames() -> fieldNames
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    java.util.Iterator fields() -> fields
    com.fasterxml.jackson.databind.node.ObjectNode with(java.lang.String) -> with
    com.fasterxml.jackson.databind.node.ArrayNode withArray(java.lang.String) -> withArray
    com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String) -> findValue
    java.util.List findValues(java.lang.String,java.util.List) -> findValues
    java.util.List findValuesAsText(java.lang.String,java.util.List) -> findValuesAsText
    com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String) -> findParent
    java.util.List findParents(java.lang.String,java.util.List) -> findParents
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> set
    com.fasterxml.jackson.databind.JsonNode setAll(java.util.Map) -> setAll
    com.fasterxml.jackson.databind.JsonNode setAll(com.fasterxml.jackson.databind.node.ObjectNode) -> setAll
    com.fasterxml.jackson.databind.JsonNode replace(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> replace
    com.fasterxml.jackson.databind.JsonNode without(java.lang.String) -> without
    com.fasterxml.jackson.databind.node.ObjectNode without(java.util.Collection) -> without
    com.fasterxml.jackson.databind.JsonNode put(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> put
    com.fasterxml.jackson.databind.JsonNode remove(java.lang.String) -> remove
    com.fasterxml.jackson.databind.node.ObjectNode remove(java.util.Collection) -> remove
    com.fasterxml.jackson.databind.node.ObjectNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.JsonNode putAll(java.util.Map) -> putAll
    com.fasterxml.jackson.databind.JsonNode putAll(com.fasterxml.jackson.databind.node.ObjectNode) -> putAll
    com.fasterxml.jackson.databind.node.ObjectNode retain(java.util.Collection) -> retain
    com.fasterxml.jackson.databind.node.ObjectNode retain(java.lang.String[]) -> retain
    com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String) -> putArray
    com.fasterxml.jackson.databind.node.ObjectNode putObject(java.lang.String) -> putObject
    com.fasterxml.jackson.databind.node.ObjectNode putPOJO(java.lang.String,java.lang.Object) -> putPOJO
    com.fasterxml.jackson.databind.node.ObjectNode putNull(java.lang.String) -> putNull
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,int) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Integer) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,long) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Long) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,float) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Float) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,double) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Double) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.math.BigDecimal) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.String) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,boolean) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,java.lang.Boolean) -> put
    com.fasterxml.jackson.databind.node.ObjectNode put(java.lang.String,byte[]) -> put
    java.util.Map _createMap() -> _createMap
    java.util.Map _createMap(int) -> _createMap
    void putContentsTo(java.util.Map) -> putContentsTo
    boolean equals(java.lang.Object) -> equals
    boolean _equals(com.fasterxml.jackson.databind.node.ObjectNode) -> _equals
    boolean _customEquals(com.fasterxml.jackson.databind.node.ObjectNode) -> _customEquals
    boolean _stdEquals(com.fasterxml.jackson.databind.node.ObjectNode) -> _stdEquals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.JsonNode _put(java.lang.String,com.fasterxml.jackson.databind.JsonNode) -> a
    com.fasterxml.jackson.databind.node.ContainerNode removeAll() -> removeAll
    com.fasterxml.jackson.databind.JsonNode withArray(java.lang.String) -> withArray
    com.fasterxml.jackson.databind.JsonNode with(java.lang.String) -> with
    com.fasterxml.jackson.databind.JsonNode findParent(java.lang.String) -> findParent
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
com.fasterxml.jackson.databind.node.ObjectNode$NoFieldsIterator -> com.fasterxml.jackson.databind.node.ObjectNode$NoFieldsIterator:
    com.fasterxml.jackson.databind.node.ObjectNode$NoFieldsIterator instance -> a
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> next
    void remove() -> remove
    java.lang.Object next() -> next
com.fasterxml.jackson.databind.node.POJONode -> com.fasterxml.jackson.databind.node.POJONode:
    java.lang.Object _value -> _value
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean isPojo() -> isPojo
    byte[] binaryValue() -> binaryValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.Object getPojo() -> getPojo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.node.TextNode -> com.fasterxml.jackson.databind.node.TextNode:
    com.fasterxml.jackson.databind.node.TextNode EMPTY_STRING_NODE -> a
    java.lang.String _value -> b
    com.fasterxml.jackson.databind.node.TextNode valueOf(java.lang.String) -> valueOf
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    boolean isTextual() -> isTextual
    java.lang.String textValue() -> textValue
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    byte[] binaryValue() -> binaryValue
    java.lang.String asText() -> asText
    boolean asBoolean(boolean) -> asBoolean
    int asInt(int) -> asInt
    long asLong(long) -> asLong
    double asDouble(double) -> asDouble
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    void _reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant,char,int) -> _reportInvalidBase64
    void _reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
com.fasterxml.jackson.databind.node.TreeTraversingParser -> com.fasterxml.jackson.databind.node.TreeTraversingParser:
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.databind.node.NodeCursor _nodeCursor -> _nodeCursor
    com.fasterxml.jackson.core.JsonToken _nextToken -> _nextToken
    boolean _startContainer -> _startContainer
    boolean _closed -> _closed
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.Version version() -> version
    void close() -> close
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    int getIntValue() -> getIntValue
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    com.fasterxml.jackson.databind.JsonNode currentNode() -> currentNode
    com.fasterxml.jackson.databind.JsonNode currentNumericNode() -> currentNumericNode
    void _handleEOF() -> _handleEOF
com.fasterxml.jackson.databind.node.TreeTraversingParser$1 -> et:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.databind.node.ValueNode -> com.fasterxml.jackson.databind.node.ValueNode:
    com.fasterxml.jackson.databind.JsonNode deepCopy() -> deepCopy
    boolean isValueNode() -> isValueNode
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode path(java.lang.String) -> path
    com.fasterxml.jackson.databind.JsonNode path(int) -> path
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.AnyGetterWriter -> com.fasterxml.jackson.databind.ser.AnyGetterWriter:
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _accessor -> _accessor
    com.fasterxml.jackson.databind.ser.std.MapSerializer _serializer -> _serializer
    void getAndSerialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> getAndSerialize
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
com.fasterxml.jackson.databind.ser.BasicSerializerFactory -> com.fasterxml.jackson.databind.ser.BasicSerializerFactory:
    long serialVersionUID -> serialVersionUID
    java.util.HashMap _concrete -> _concrete
    java.util.HashMap _concreteLazy -> _concreteLazy
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig -> _factoryConfig
    com.fasterxml.jackson.databind.ext.OptionalHandlerFactory optionalHandlers -> optionalHandlers
    com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig getFactoryConfig() -> getFactoryConfig
    com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> withConfig
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createKeySerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer getNullSerializer() -> getNullSerializer
    java.lang.Iterable customSerializers() -> customSerializers
    com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByLookup
    com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializerByAnnotations
    com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByPrimaryType
    com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> findSerializerByAddonType
    com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> findSerializerFromAnnotation
    com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.BeanProperty,boolean) -> buildContainerSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> buildContainerSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.BeanProperty,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildCollectionSerializer
    boolean isIndexedList(java.lang.Class) -> isIndexedList
    com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> buildArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> buildIteratorSerializer
    com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean) -> buildIterableSerializer
    com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> modifyTypeByAnnotation
    com.fasterxml.jackson.databind.JavaType modifySecondaryTypesByAnnotation(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType) -> modifySecondaryTypesByAnnotation
    com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> _findKeySerializer
    com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated) -> _findContentSerializer
    boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty) -> usesStaticTyping
    boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> usesStaticTyping
    java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class) -> _verifyAsClass
com.fasterxml.jackson.databind.ser.BeanPropertyFilter -> com.fasterxml.jackson.databind.ser.BeanPropertyFilter:
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> serializeAsField
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.BeanPropertyWriter -> com.fasterxml.jackson.databind.ser.BeanPropertyWriter:
    java.lang.Object MARKER_FOR_EMPTY -> MARKER_FOR_EMPTY
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    com.fasterxml.jackson.databind.util.Annotations _contextAnnotations -> _contextAnnotations
    com.fasterxml.jackson.databind.JavaType _declaredType -> _declaredType
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    java.lang.reflect.Field _field -> _field
    java.util.HashMap _internalSettings -> _internalSettings
    com.fasterxml.jackson.core.io.SerializedString _name -> _name
    com.fasterxml.jackson.databind.JavaType _cfgSerializationType -> _cfgSerializationType
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    com.fasterxml.jackson.databind.JsonSerializer _nullSerializer -> _nullSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    boolean _suppressNulls -> _suppressNulls
    java.lang.Object _suppressableValue -> _suppressableValue
    java.lang.Class[] _includeInViews -> _includeInViews
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType -> _nonTrivialBaseType
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter unwrappingWriter(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingWriter
    void setNonTrivialBaseType(com.fasterxml.jackson.databind.JavaType) -> setNonTrivialBaseType
    java.lang.String getName() -> getName
    com.fasterxml.jackson.databind.JavaType getType() -> getType
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation getContextAnnotation(java.lang.Class) -> getContextAnnotation
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember() -> getMember
    java.lang.Object getInternalSetting(java.lang.Object) -> getInternalSetting
    java.lang.Object setInternalSetting(java.lang.Object,java.lang.Object) -> setInternalSetting
    java.lang.Object removeInternalSetting(java.lang.Object) -> removeInternalSetting
    com.fasterxml.jackson.core.io.SerializedString getSerializedName() -> getSerializedName
    boolean hasSerializer() -> hasSerializer
    boolean hasNullSerializer() -> hasNullSerializer
    boolean willSuppressNulls() -> willSuppressNulls
    com.fasterxml.jackson.databind.JsonSerializer getSerializer() -> getSerializer
    com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
    java.lang.Class getRawSerializationType() -> getRawSerializationType
    java.lang.Class getPropertyType() -> getPropertyType
    java.lang.reflect.Type getGenericPropertyType() -> getGenericPropertyType
    java.lang.Class[] getViews() -> getViews
    boolean isRequired(com.fasterxml.jackson.databind.AnnotationIntrospector) -> isRequired
    void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsColumn(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsColumn
    void serializeAsPlaceholder(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsPlaceholder
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    java.lang.Object get(java.lang.Object) -> get
    void _handleSelfReference(java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer) -> _handleSelfReference
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.BeanSerializer -> com.fasterxml.jackson.databind.ser.BeanSerializer:
    com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType) -> createDummy
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    com.fasterxml.jackson.databind.ser.BeanSerializer withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.BeanSerializer withIgnorals(java.lang.String[]) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder -> com.fasterxml.jackson.databind.ser.BeanSerializerBuilder:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES -> a
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    java.util.List _properties -> _properties
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties -> _filteredProperties
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter -> _anyGetter
    java.lang.Object _filterId -> _filterId
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> _typeId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> _objectIdWriter
    void setConfig(com.fasterxml.jackson.databind.SerializationConfig) -> setConfig
    void setProperties(java.util.List) -> setProperties
    void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[]) -> setFilteredProperties
    void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter) -> setAnyGetter
    void setFilterId(java.lang.Object) -> setFilterId
    void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> setTypeId
    void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> setObjectIdWriter
    com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo() -> getClassInfo
    com.fasterxml.jackson.databind.BeanDescription getBeanDescription() -> getBeanDescription
    java.util.List getProperties() -> getProperties
    boolean hasProperties() -> hasProperties
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] getFilteredProperties() -> getFilteredProperties
    com.fasterxml.jackson.databind.ser.AnyGetterWriter getAnyGetter() -> getAnyGetter
    java.lang.Object getFilterId() -> getFilterId
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getTypeId() -> getTypeId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter getObjectIdWriter() -> getObjectIdWriter
    com.fasterxml.jackson.databind.JsonSerializer build() -> build
    com.fasterxml.jackson.databind.ser.BeanSerializer createDummy() -> createDummy
com.fasterxml.jackson.databind.ser.BeanSerializerFactory -> com.fasterxml.jackson.databind.ser.BeanSerializerFactory:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance -> instance
    com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig) -> withConfig
    java.lang.Iterable customSerializers() -> customSerializers
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.BeanProperty) -> findBeanSerializer
    com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findBeanSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.BeanProperty) -> findPropertyTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyTypeSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> findPropertyContentTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.BeanProperty) -> constructBeanSerializer
    com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription) -> constructBeanSerializer
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> constructObjectIdHandler
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> constructFilteredBeanWriter
    com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> constructPropertyBuilder
    com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription) -> constructBeanSerializerBuilder
    java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> findFilterId
    boolean isPotentialBeanType(java.lang.Class) -> isPotentialBeanType
    java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> findBeanProperties
    java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> filterBeanProperties
    void processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> processViews
    void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> removeIgnorableTypes
    void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> removeSetterlessGetters
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> _constructWriter
com.fasterxml.jackson.databind.ser.BeanSerializerModifier -> com.fasterxml.jackson.databind.ser.BeanSerializerModifier:
    java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> changeProperties
    java.util.List orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List) -> orderProperties
    com.fasterxml.jackson.databind.ser.BeanSerializerBuilder updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) -> updateBuilder
    com.fasterxml.jackson.databind.JsonSerializer modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer) -> modifySerializer
com.fasterxml.jackson.databind.ser.ContainerSerializer -> com.fasterxml.jackson.databind.ser.ContainerSerializer:
    com.fasterxml.jackson.databind.ser.ContainerSerializer withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(java.lang.Object) -> isEmpty
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    boolean hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> hasContentTypeAnnotation
com.fasterxml.jackson.databind.ser.ContextualSerializer -> com.fasterxml.jackson.databind.ser.ContextualSerializer:
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider -> com.fasterxml.jackson.databind.ser.DefaultSerializerProvider:
    long serialVersionUID -> serialVersionUID
    java.util.IdentityHashMap _seenObjectIds -> _seenObjectIds
    java.util.ArrayList _objectIdGenerators -> _objectIdGenerators
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
    void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> serializeValue
    void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType) -> serializeValue
    void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> serializeValue
    com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) -> generateJsonSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) -> acceptJsonFormatVisitor
    boolean hasSerializerFor(java.lang.Class) -> hasSerializerFor
    int cachedSerializersCount() -> cachedSerializersCount
    void flushCachedSerializers() -> flushCachedSerializers
    com.fasterxml.jackson.annotation.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo) -> objectIdGeneratorInstance
    com.fasterxml.jackson.databind.ser.impl.WritableObjectId findObjectId(java.lang.Object,com.fasterxml.jackson.annotation.ObjectIdGenerator) -> findObjectId
    com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object) -> serializerInstance
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl -> com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
    com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory) -> createInstance
com.fasterxml.jackson.databind.ser.FilterProvider -> com.fasterxml.jackson.databind.ser.FilterProvider:
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
com.fasterxml.jackson.databind.ser.PropertyBuilder -> com.fasterxml.jackson.databind.ser.PropertyBuilder:
    com.fasterxml.jackson.databind.SerializationConfig _config -> _config
    com.fasterxml.jackson.databind.BeanDescription _beanDesc -> _beanDesc
    com.fasterxml.jackson.annotation.JsonInclude$Include _outputProps -> _outputProps
    com.fasterxml.jackson.databind.AnnotationIntrospector _annotationIntrospector -> _annotationIntrospector
    java.lang.Object _defaultBean -> _defaultBean
    com.fasterxml.jackson.databind.util.Annotations getClassAnnotations() -> getClassAnnotations
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean) -> buildWriter
    com.fasterxml.jackson.databind.JavaType findSerializationType(com.fasterxml.jackson.databind.introspect.Annotated,boolean,com.fasterxml.jackson.databind.JavaType) -> findSerializationType
    java.lang.Object getDefaultBean() -> getDefaultBean
    java.lang.Object getDefaultValue(java.lang.String,com.fasterxml.jackson.databind.introspect.AnnotatedMember) -> getDefaultValue
    java.lang.Object _throwWrapped(java.lang.Exception,java.lang.String,java.lang.Object) -> _throwWrapped
com.fasterxml.jackson.databind.ser.PropertyBuilder$1 -> eu:
    int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include -> a
com.fasterxml.jackson.databind.ser.ResolvableSerializer -> com.fasterxml.jackson.databind.ser.ResolvableSerializer:
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
com.fasterxml.jackson.databind.ser.SerializerCache -> com.fasterxml.jackson.databind.ser.SerializerCache:
    java.util.HashMap _sharedMap -> a
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap _readOnlyMap -> b
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap() -> getReadOnlyLookupMap
    int size() -> size
    com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> untypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> typedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    void addTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> addTypedSerializer
    void addTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> addTypedSerializer
    void addAndResolveNonTypedSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    void addAndResolveNonTypedSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.SerializerProvider) -> addAndResolveNonTypedSerializer
    void flush() -> flush
com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey -> com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey:
    int _hashCode -> _hashCode
    java.lang.Class _class -> _class
    com.fasterxml.jackson.databind.JavaType _type -> _type
    boolean _isTyped -> _isTyped
    int hash(java.lang.Class,boolean) -> a
    int hash(com.fasterxml.jackson.databind.JavaType,boolean) -> a
    void resetTyped(java.lang.Class) -> resetTyped
    void resetUntyped(java.lang.Class) -> resetUntyped
    void resetTyped(com.fasterxml.jackson.databind.JavaType) -> resetTyped
    void resetUntyped(com.fasterxml.jackson.databind.JavaType) -> resetUntyped
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.ser.SerializerFactory -> com.fasterxml.jackson.databind.ser.SerializerFactory:
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalSerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers) -> withAdditionalKeySerializers
    com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier) -> withSerializerModifier
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty) -> createSerializer
    com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType) -> createSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType) -> createKeySerializer
com.fasterxml.jackson.databind.ser.Serializers -> com.fasterxml.jackson.databind.ser.Serializers:
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
com.fasterxml.jackson.databind.ser.Serializers$Base -> com.fasterxml.jackson.databind.ser.Serializers$Base:
    com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription) -> findSerializer
    com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findArraySerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionSerializer
    com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findCollectionLikeSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapSerializer
    com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> findMapLikeSerializer
com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer -> com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer:
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase _defaultSerializer -> _defaultSerializer
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.impl.BeanAsArraySerializer withIgnorals(java.lang.String[]) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeAsArray(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsArray
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]) -> withIgnorals
com.fasterxml.jackson.databind.ser.impl.FailingSerializer -> com.fasterxml.jackson.databind.ser.impl.FailingSerializer:
    java.lang.String _msg -> a
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[]) -> constructViewBased
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$MultiView -> ev:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> a
    java.lang.Class[] _views -> b
    void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsColumn(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsColumn
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter$SingleView -> ew:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _delegate -> a
    java.lang.Class _view -> b
    void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    void assignNullSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignNullSerializer
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void serializeAsColumn(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsColumn
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer -> com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer:
    com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    boolean isEmpty(java.util.List) -> isEmpty
    boolean hasSingleElement(java.util.List) -> hasSingleElement
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedContents
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer -> com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer:
    com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance -> instance
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    void serializeUsingCustom(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.impl.IteratorSerializer -> com.fasterxml.jackson.databind.ser.impl.IteratorSerializer:
    boolean isEmpty(java.util.Iterator) -> isEmpty
    boolean hasSingleElement(java.util.Iterator) -> hasSingleElement
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.impl.IteratorSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    void serializeContents(java.util.Iterator,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap -> com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap:
    com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap$Bucket[] _buckets -> a
    int _size -> b
    int findSize(int) -> a
    int size() -> size
    com.fasterxml.jackson.databind.JsonSerializer find(com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey) -> find
com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap$Bucket -> ex:
    com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey key -> a
    com.fasterxml.jackson.databind.JsonSerializer value -> b
    com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap$Bucket next -> c
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter -> com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter:
    com.fasterxml.jackson.databind.JavaType idType -> idType
    com.fasterxml.jackson.core.io.SerializedString propertyName -> propertyName
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    boolean alwaysAsId -> alwaysAsId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.annotation.ObjectIdGenerator,boolean) -> construct
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> withSerializer
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter withAlwaysAsId(boolean) -> withAlwaysAsId
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator -> com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter _property -> _property
    boolean canUseFor(com.fasterxml.jackson.annotation.ObjectIdGenerator) -> canUseFor
    java.lang.Object generateId(java.lang.Object) -> generateId
    com.fasterxml.jackson.annotation.ObjectIdGenerator forScope(java.lang.Class) -> forScope
    com.fasterxml.jackson.annotation.ObjectIdGenerator newForSerialization(java.lang.Object) -> newForSerialization
    com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey key(java.lang.Object) -> key
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap:
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> findAndAddSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyMap() -> emptyMap
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Double -> ey:
    java.lang.Class _type1 -> a
    java.lang.Class _type2 -> b
    com.fasterxml.jackson.databind.JsonSerializer _serializer1 -> c
    com.fasterxml.jackson.databind.JsonSerializer _serializer2 -> d
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty -> ez:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Empty instance -> a
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi -> eA:
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer[] _entries -> a
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult -> com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult:
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map -> map
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Single -> eB:
    java.lang.Class _type -> a
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> b
    com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class) -> serializerFor
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> newWith
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer -> eC:
    java.lang.Class type -> a
    com.fasterxml.jackson.databind.JsonSerializer serializer -> b
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap -> com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap:
    com.fasterxml.jackson.databind.ser.impl.JsonSerializerMap _map -> _map
    com.fasterxml.jackson.databind.ser.SerializerCache$TypeKey _cacheKey -> _cacheKey
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap instance() -> instance
    com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap) -> from
    com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> typedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer typedValueSerializer(java.lang.Class) -> typedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(com.fasterxml.jackson.databind.JavaType) -> untypedValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer untypedValueSerializer(java.lang.Class) -> untypedValueSerializer
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter:
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.util.Set) -> filterOutAllExcept
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.lang.String[]) -> filterOutAllExcept
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.util.Set) -> serializeAllExcept
    com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.lang.String[]) -> serializeAllExcept
    boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> serializeAsField
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
    void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider) -> depositSchemaProperty
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter:
    long serialVersionUID -> serialVersionUID
    java.util.Set _propertiesToInclude -> _propertiesToInclude
    boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter -> com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter:
    java.util.Set _propertiesToExclude -> _propertiesToExclude
    boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter) -> include
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider -> com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider:
    long serialVersionUID -> serialVersionUID
    java.util.Map _filtersById -> _filtersById
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter _defaultFilter -> _defaultFilter
    boolean _cfgFailOnUnknownId -> _cfgFailOnUnknownId
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> setDefaultFilter
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter getDefaultFilter() -> getDefaultFilter
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean) -> setFailOnUnknownId
    boolean willFailOnUnknownId() -> willFailOnUnknownId
    com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String,com.fasterxml.jackson.databind.ser.BeanPropertyFilter) -> addFilter
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter removeFilter(java.lang.String) -> removeFilter
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object) -> findFilter
com.fasterxml.jackson.databind.ser.impl.StringArraySerializer -> com.fasterxml.jackson.databind.ser.impl.StringArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance -> instance
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(java.lang.String[]) -> isEmpty
    boolean hasSingleElement(java.lang.String[]) -> hasSingleElement
    void serializeContents(java.lang.String[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer -> com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer:
    com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer instance -> instance
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> a
    void serializeUsingCustom(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> b
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer -> com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer -> _typeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _serializer -> _serializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    java.lang.Class handledType() -> handledType
com.fasterxml.jackson.databind.ser.impl.UnknownSerializer -> com.fasterxml.jackson.databind.ser.impl.UnknownSerializer:
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void failForEmpty(java.lang.Object) -> failForEmpty
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter -> com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter:
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> _nameTransformer
    com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
    void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeAsField
    void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> assignSerializer
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer) -> rename
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer -> com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer:
    com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer -> _nameTransformer
    com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer) -> unwrappingSerializer
    boolean isUnwrappingSerializer() -> isUnwrappingSerializer
    com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer withIgnorals(java.lang.String[]) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
com.fasterxml.jackson.databind.ser.impl.WritableObjectId -> com.fasterxml.jackson.databind.ser.impl.WritableObjectId:
    com.fasterxml.jackson.annotation.ObjectIdGenerator generator -> generator
    com.fasterxml.jackson.databind.JsonSerializer serializer -> serializer
    java.lang.Object id -> id
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase -> com.fasterxml.jackson.databind.ser.std.ArraySerializerBase:
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase -> com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase:
    boolean _staticTyping -> _staticTyping
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase -> com.fasterxml.jackson.databind.ser.std.BeanSerializerBase:
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPS -> NO_PROPS
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _props -> _props
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProps -> _filteredProps
    com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetterWriter -> _anyGetterWriter
    java.lang.Object _propertyFilterId -> _propertyFilterId
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId -> _typeId
    com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter -> _objectIdWriter
    com.fasterxml.jackson.annotation.JsonFormat$Shape _serializationShape -> _serializationShape
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter) -> withObjectIdWriter
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withIgnorals(java.lang.String[]) -> withIgnorals
    com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer() -> asArraySerializer
    com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] rename(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.util.NameTransformer) -> a
    void resolve(com.fasterxml.jackson.databind.SerializerProvider) -> resolve
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean usesObjectId() -> usesObjectId
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    java.lang.String _customTypeId(java.lang.Object) -> a
    void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFields
    void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFieldsFiltered
    com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(com.fasterxml.jackson.databind.SerializerProvider) -> findFilter
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.BooleanSerializer -> com.fasterxml.jackson.databind.ser.std.BooleanSerializer:
    boolean _forPrimitive -> a
    void serialize(java.lang.Boolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.CalendarSerializer -> com.fasterxml.jackson.databind.ser.std.CalendarSerializer:
    com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance -> instance
    com.fasterxml.jackson.databind.ser.std.CalendarSerializer withFormat(boolean,java.text.DateFormat) -> withFormat
    long _timestamp(java.util.Calendar) -> _timestamp
    void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    long _timestamp(java.lang.Object) -> _timestamp
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(boolean,java.text.DateFormat) -> withFormat
com.fasterxml.jackson.databind.ser.std.CollectionSerializer -> com.fasterxml.jackson.databind.ser.std.CollectionSerializer:
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.CollectionSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    boolean isEmpty(java.util.Collection) -> isEmpty
    boolean hasSingleElement(java.util.Collection) -> hasSingleElement
    void serializeContents(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.Collection,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.DateSerializer -> com.fasterxml.jackson.databind.ser.std.DateSerializer:
    com.fasterxml.jackson.databind.ser.std.DateSerializer instance -> instance
    com.fasterxml.jackson.databind.ser.std.DateSerializer withFormat(boolean,java.text.DateFormat) -> withFormat
    long _timestamp(java.util.Date) -> _timestamp
    void serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    long _timestamp(java.lang.Object) -> _timestamp
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(boolean,java.text.DateFormat) -> withFormat
com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase -> com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase:
    boolean _useTimestamp -> _useTimestamp
    java.text.DateFormat _customFormat -> _customFormat
    com.fasterxml.jackson.databind.ser.std.DateTimeSerializerBase withFormat(boolean,java.text.DateFormat) -> withFormat
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    boolean isEmpty(java.lang.Object) -> isEmpty
    long _timestamp(java.lang.Object) -> _timestamp
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.EnumMapSerializer -> com.fasterxml.jackson.databind.ser.std.EnumMapSerializer:
    boolean _staticTyping -> _staticTyping
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    com.fasterxml.jackson.databind.util.EnumValues _keyEnums -> _keyEnums
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.EnumMapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.EnumMapSerializer withValueSerializer(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> withValueSerializer
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(java.util.EnumMap) -> isEmpty
    boolean hasSingleElement(java.util.EnumMap) -> hasSingleElement
    void serialize(java.util.EnumMap,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.EnumMap,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeContents(java.util.EnumMap,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.util.EnumMap,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.EnumSerializer -> com.fasterxml.jackson.databind.ser.std.EnumSerializer:
    com.fasterxml.jackson.databind.util.EnumValues _values -> _values
    java.lang.Boolean _serializeAsIndex -> _serializeAsIndex
    com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.annotation.JsonFormat$Value) -> construct
    com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription) -> construct
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.util.EnumValues getEnumValues() -> getEnumValues
    void serialize(java.lang.Enum,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider) -> _serializeAsIndex
    java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.annotation.JsonFormat$Value,boolean) -> _isShapeWrittenUsingIndex
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.EnumSetSerializer -> com.fasterxml.jackson.databind.ser.std.EnumSetSerializer:
    com.fasterxml.jackson.databind.ser.std.EnumSetSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.EnumSetSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    boolean isEmpty(java.util.EnumSet) -> isEmpty
    boolean hasSingleElement(java.util.EnumSet) -> hasSingleElement
    void serializeContents(java.util.EnumSet,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer -> com.fasterxml.jackson.databind.ser.std.InetAddressSerializer:
    com.fasterxml.jackson.databind.ser.std.InetAddressSerializer instance -> instance
    void serialize(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.net.InetAddress,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.IterableSerializer -> com.fasterxml.jackson.databind.ser.std.IterableSerializer:
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.IterableSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    boolean isEmpty(java.lang.Iterable) -> isEmpty
    boolean hasSingleElement(java.lang.Iterable) -> hasSingleElement
    void serializeContents(java.lang.Iterable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.ser.std.AsArraySerializerBase withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer -> com.fasterxml.jackson.databind.ser.std.JsonValueSerializer:
    java.lang.reflect.Method _accessorMethod -> _accessorMethod
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    boolean _forceTypeInformation -> _forceTypeInformation
    com.fasterxml.jackson.databind.ser.std.JsonValueSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,boolean) -> withResolved
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    boolean isNaturalTypeWithStdHandling(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer) -> isNaturalTypeWithStdHandling
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.ser.std.MapSerializer -> com.fasterxml.jackson.databind.ser.std.MapSerializer:
    com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE -> UNSPECIFIED_TYPE
    com.fasterxml.jackson.databind.BeanProperty _property -> _property
    java.util.HashSet _ignoredEntries -> _ignoredEntries
    boolean _valueTypeIsStatic -> _valueTypeIsStatic
    com.fasterxml.jackson.databind.JavaType _keyType -> _keyType
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.JsonSerializer _keySerializer -> _keySerializer
    com.fasterxml.jackson.databind.JsonSerializer _valueSerializer -> _valueSerializer
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers -> _dynamicValueSerializers
    com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.HashSet) -> withResolved
    com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.lang.String[],com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> construct
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(java.util.Map) -> isEmpty
    boolean hasSingleElement(java.util.Map) -> hasSingleElement
    com.fasterxml.jackson.databind.JsonSerializer getKeySerializer() -> getKeySerializer
    void serialize(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeFields
    void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeFieldsUsing
    void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedFields
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    java.util.Map _orderEntries(java.util.Map) -> _orderEntries
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase -> com.fasterxml.jackson.databind.ser.std.NonTypedScalarSerializerBase:
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.NullSerializer -> com.fasterxml.jackson.databind.ser.std.NullSerializer:
    com.fasterxml.jackson.databind.ser.std.NullSerializer instance -> instance
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.NumberSerializers -> com.fasterxml.jackson.databind.ser.std.NumberSerializers:
    void addAll(java.util.Map) -> addAll
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer instance -> a
    void serialize(java.lang.Double,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance -> a
    void serialize(java.lang.Float,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance -> a
    void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer:
    void serialize(java.lang.Integer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer instance -> a
    void serialize(java.lang.Long,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer -> com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer:
    com.fasterxml.jackson.databind.ser.std.NumberSerializers$NumberSerializer instance -> instance
    void serialize(java.lang.Number,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer -> com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer:
    boolean _staticTyping -> _staticTyping
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
    com.fasterxml.jackson.databind.JsonSerializer _elementSerializer -> _elementSerializer
    com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers -> _dynamicSerializers
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> withResolved
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(java.lang.Object[]) -> isEmpty
    boolean hasSingleElement(java.lang.Object[]) -> hasSingleElement
    void serializeContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    void serializeContentsUsing(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer) -> serializeContentsUsing
    void serializeTypedContents(java.lang.Object[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeTypedContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider) -> _findAndAddDynamic
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.RawSerializer -> com.fasterxml.jackson.databind.ser.std.RawSerializer:
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.SerializableSerializer -> com.fasterxml.jackson.databind.ser.std.SerializableSerializer:
    com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance -> instance
    java.util.concurrent.atomic.AtomicReference _mapperReference -> a
    void serialize(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.databind.JsonSerializable,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    com.fasterxml.jackson.databind.ObjectMapper _getObjectMapper() -> a
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.SqlDateSerializer -> com.fasterxml.jackson.databind.ser.std.SqlDateSerializer:
    void serialize(java.sql.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer -> com.fasterxml.jackson.databind.ser.std.SqlTimeSerializer:
    void serialize(java.sql.Time,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase -> com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase:
    boolean isEmpty(java.util.Collection) -> isEmpty
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    com.fasterxml.jackson.databind.JsonNode contentSchema() -> contentSchema
    void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) -> acceptContentVisitor
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.StdArraySerializers -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers:
    java.util.HashMap _arraySerializers -> _arraySerializers
    com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class) -> findStandardImpl
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$BooleanArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(boolean[]) -> isEmpty
    boolean hasSingleElement(boolean[]) -> hasSingleElement
    void serializeContents(boolean[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ByteArraySerializer:
    boolean isEmpty(byte[]) -> isEmpty
    void serialize(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(byte[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$CharArraySerializer:
    boolean isEmpty(char[]) -> isEmpty
    void serialize(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(char[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void _writeArrayContents(com.fasterxml.jackson.core.JsonGenerator,char[]) -> a
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(java.lang.Object) -> isEmpty
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$DoubleArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(double[]) -> isEmpty
    boolean hasSingleElement(double[]) -> hasSingleElement
    void serializeContents(double[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$FloatArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(float[]) -> isEmpty
    boolean hasSingleElement(float[]) -> hasSingleElement
    void serializeContents(float[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$IntArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(int[]) -> isEmpty
    boolean hasSingleElement(int[]) -> hasSingleElement
    void serializeContents(int[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$LongArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(long[]) -> isEmpty
    boolean hasSingleElement(long[]) -> hasSingleElement
    void serializeContents(long[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$ShortArraySerializer:
    com.fasterxml.jackson.databind.JavaType VALUE_TYPE -> a
    com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> _withValueTypeSerializer
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    com.fasterxml.jackson.databind.JsonSerializer getContentSerializer() -> getContentSerializer
    boolean isEmpty(short[]) -> isEmpty
    boolean hasSingleElement(short[]) -> hasSingleElement
    void serializeContents(short[],com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serializeContents
    boolean hasSingleElement(java.lang.Object) -> hasSingleElement
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer -> com.fasterxml.jackson.databind.ser.std.StdArraySerializers$TypedPrimitiveArraySerializer:
    com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer -> _valueTypeSerializer
com.fasterxml.jackson.databind.ser.std.StdContainerSerializers -> com.fasterxml.jackson.databind.ser.std.StdContainerSerializers:
    com.fasterxml.jackson.databind.ser.ContainerSerializer indexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> indexedListSerializer
    com.fasterxml.jackson.databind.ser.ContainerSerializer collectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer) -> collectionSerializer
    com.fasterxml.jackson.databind.ser.ContainerSerializer iteratorSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> iteratorSerializer
    com.fasterxml.jackson.databind.ser.ContainerSerializer iterableSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> iterableSerializer
    com.fasterxml.jackson.databind.JsonSerializer enumSetSerializer(com.fasterxml.jackson.databind.JavaType) -> enumSetSerializer
    com.fasterxml.jackson.databind.ser.ContainerSerializer indexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> indexedListSerializer
    com.fasterxml.jackson.databind.ser.ContainerSerializer collectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer) -> collectionSerializer
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer -> com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer:
    com.fasterxml.jackson.databind.util.Converter _converter -> _converter
    com.fasterxml.jackson.databind.JavaType _delegateType -> _delegateType
    com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer -> _delegateSerializer
    com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer) -> withDelegate
    com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty) -> createContextual
    com.fasterxml.jackson.databind.util.Converter getConverter() -> getConverter
    com.fasterxml.jackson.databind.JsonSerializer getDelegatee() -> getDelegatee
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    boolean isEmpty(java.lang.Object) -> isEmpty
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    java.lang.Object convertValue(java.lang.Object) -> convertValue
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers:
    java.util.Collection provide() -> provide
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer:
    void serialize(java.util.concurrent.atomic.AtomicBoolean,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer:
    void serialize(java.util.concurrent.atomic.AtomicInteger,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer:
    void serialize(java.util.concurrent.atomic.AtomicLong,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicReferenceSerializer:
    void serialize(java.util.concurrent.atomic.AtomicReference,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$ClassSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$ClassSerializer:
    void serialize(java.lang.Class,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$FileSerializer -> com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$FileSerializer:
    void serialize(java.io.File,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializer:
    com.fasterxml.jackson.databind.ser.std.StdKeySerializer instace -> a
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.StdKeySerializers -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers:
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_KEY_SERIALIZER -> DEFAULT_KEY_SERIALIZER
    com.fasterxml.jackson.databind.JsonSerializer DEFAULT_STRING_SERIALIZER -> DEFAULT_STRING_SERIALIZER
    com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.JavaType) -> getStdKeySerializer
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$CalendarKeySerializer:
    com.fasterxml.jackson.databind.JsonSerializer instance -> instance
    void serialize(java.util.Calendar,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$DateKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$DateKeySerializer:
    com.fasterxml.jackson.databind.JsonSerializer instance -> instance
    void serialize(java.util.Date,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer -> com.fasterxml.jackson.databind.ser.std.StdKeySerializers$StringKeySerializer:
    void serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.StdScalarSerializer -> com.fasterxml.jackson.databind.ser.std.StdScalarSerializer:
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.StdSerializer -> com.fasterxml.jackson.databind.ser.std.StdSerializer:
    java.lang.Class _handledType -> _handledType
    java.lang.Class handledType() -> handledType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean) -> getSchema
    com.fasterxml.jackson.databind.node.ObjectNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String) -> createSchemaNode
    com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean) -> createSchemaNode
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String) -> wrapAndThrow
    void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int) -> wrapAndThrow
    boolean isDefaultSerializer(com.fasterxml.jackson.databind.JsonSerializer) -> isDefaultSerializer
com.fasterxml.jackson.databind.ser.std.StringSerializer -> com.fasterxml.jackson.databind.ser.std.StringSerializer:
    boolean isEmpty(java.lang.String) -> isEmpty
    void serialize(java.lang.String,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    boolean isEmpty(java.lang.Object) -> isEmpty
com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer -> com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer:
    com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer instance -> instance
    void serialize(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.util.TimeZone,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
com.fasterxml.jackson.databind.ser.std.ToStringSerializer -> com.fasterxml.jackson.databind.ser.std.ToStringSerializer:
    com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance -> instance
    boolean isEmpty(java.lang.Object) -> isEmpty
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer -> com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer:
    void serialize(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(com.fasterxml.jackson.databind.util.TokenBuffer,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type) -> getSchema
    void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType) -> acceptJsonFormatVisitor
    void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
com.fasterxml.jackson.databind.type.ArrayType -> com.fasterxml.jackson.databind.type.ArrayType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _componentType -> _componentType
    java.lang.Object _emptyArray -> _emptyArray
    com.fasterxml.jackson.databind.type.ArrayType construct(com.fasterxml.jackson.databind.JavaType,java.lang.Object,java.lang.Object) -> construct
    com.fasterxml.jackson.databind.type.ArrayType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.ArrayType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.ArrayType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.ArrayType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    boolean isArrayType() -> isArrayType
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean hasGenericTypes() -> hasGenericTypes
    java.lang.String containedTypeName(int) -> containedTypeName
    boolean isContainerType() -> isContainerType
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
com.fasterxml.jackson.databind.type.ClassKey -> com.fasterxml.jackson.databind.type.ClassKey:
    long serialVersionUID -> serialVersionUID
    java.lang.String _className -> a
    java.lang.Class _class -> b
    int _hashCode -> c
    void reset(java.lang.Class) -> reset
    int compareTo(com.fasterxml.jackson.databind.type.ClassKey) -> compareTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.databind.type.CollectionLikeType -> com.fasterxml.jackson.databind.type.CollectionLikeType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _elementType -> _elementType
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    com.fasterxml.jackson.databind.type.CollectionLikeType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isTrueCollectionType() -> isTrueCollectionType
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
com.fasterxml.jackson.databind.type.CollectionType -> com.fasterxml.jackson.databind.type.CollectionType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    com.fasterxml.jackson.databind.type.CollectionType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.type.CollectionType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.CollectionType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.CollectionType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.CollectionType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.type.CollectionLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.CollectionLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
com.fasterxml.jackson.databind.type.HierarchicType -> com.fasterxml.jackson.databind.type.HierarchicType:
    java.lang.reflect.Type _actualType -> _actualType
    java.lang.Class _rawClass -> _rawClass
    java.lang.reflect.ParameterizedType _genericType -> _genericType
    com.fasterxml.jackson.databind.type.HierarchicType _superType -> _superType
    com.fasterxml.jackson.databind.type.HierarchicType _subType -> _subType
    com.fasterxml.jackson.databind.type.HierarchicType deepCloneWithoutSubtype() -> deepCloneWithoutSubtype
    void setSuperType(com.fasterxml.jackson.databind.type.HierarchicType) -> setSuperType
    com.fasterxml.jackson.databind.type.HierarchicType getSuperType() -> getSuperType
    void setSubType(com.fasterxml.jackson.databind.type.HierarchicType) -> setSubType
    com.fasterxml.jackson.databind.type.HierarchicType getSubType() -> getSubType
    boolean isGeneric() -> isGeneric
    java.lang.reflect.ParameterizedType asGeneric() -> asGeneric
    java.lang.Class getRawClass() -> getRawClass
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.MapLikeType -> com.fasterxml.jackson.databind.type.MapLikeType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType _keyType -> _keyType
    com.fasterxml.jackson.databind.JavaType _valueType -> _valueType
    com.fasterxml.jackson.databind.type.MapLikeType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    com.fasterxml.jackson.databind.JavaType narrowKey(java.lang.Class) -> narrowKey
    com.fasterxml.jackson.databind.JavaType widenKey(java.lang.Class) -> widenKey
    com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    boolean isMapLikeType() -> isMapLikeType
    com.fasterxml.jackson.databind.JavaType getKeyType() -> getKeyType
    com.fasterxml.jackson.databind.JavaType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    com.fasterxml.jackson.databind.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    boolean isTrueMapType() -> isTrueMapType
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
com.fasterxml.jackson.databind.type.MapType -> com.fasterxml.jackson.databind.type.MapType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.type.MapType construct(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> construct
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    com.fasterxml.jackson.databind.JavaType narrowKey(java.lang.Class) -> narrowKey
    com.fasterxml.jackson.databind.JavaType widenKey(java.lang.Class) -> widenKey
    com.fasterxml.jackson.databind.type.MapType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.type.MapType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.MapType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.MapType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.MapType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    com.fasterxml.jackson.databind.type.MapType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    java.lang.String toString() -> toString
    com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object) -> withKeyValueHandler
    com.fasterxml.jackson.databind.type.MapLikeType withKeyTypeHandler(java.lang.Object) -> withKeyTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.type.MapLikeType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.MapLikeType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.MapLikeType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
com.fasterxml.jackson.databind.type.SimpleType -> com.fasterxml.jackson.databind.type.SimpleType:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType[] _typeParameters -> _typeParameters
    java.lang.String[] _typeNames -> _typeNames
    com.fasterxml.jackson.databind.type.SimpleType constructUnsafe(java.lang.Class) -> constructUnsafe
    com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class) -> _narrow
    com.fasterxml.jackson.databind.JavaType narrowContentsBy(java.lang.Class) -> narrowContentsBy
    com.fasterxml.jackson.databind.JavaType widenContentsBy(java.lang.Class) -> widenContentsBy
    com.fasterxml.jackson.databind.type.SimpleType construct(java.lang.Class) -> construct
    com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object) -> withContentTypeHandler
    com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    java.lang.String buildCanonicalName() -> buildCanonicalName
    boolean isContainerType() -> isContainerType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.databind.JavaType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object) -> withContentValueHandler
    com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object) -> withValueHandler
    com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object) -> withTypeHandler
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
com.fasterxml.jackson.databind.type.TypeBase -> com.fasterxml.jackson.databind.type.TypeBase:
    long serialVersionUID -> serialVersionUID
    java.lang.String _canonicalName -> a
    java.lang.String toCanonical() -> toCanonical
    java.lang.String buildCanonicalName() -> buildCanonicalName
    java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder) -> getGenericSignature
    java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder) -> getErasedSignature
    java.lang.Object getValueHandler() -> getValueHandler
    java.lang.Object getTypeHandler() -> getTypeHandler
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean) -> _classSignature
com.fasterxml.jackson.databind.type.TypeBindings -> com.fasterxml.jackson.databind.type.TypeBindings:
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> a
    com.fasterxml.jackson.databind.JavaType UNBOUND -> UNBOUND
    com.fasterxml.jackson.databind.type.TypeFactory _typeFactory -> _typeFactory
    com.fasterxml.jackson.databind.JavaType _contextType -> _contextType
    java.lang.Class _contextClass -> _contextClass
    java.util.Map _bindings -> _bindings
    java.util.HashSet _placeholders -> _placeholders
    com.fasterxml.jackson.databind.type.TypeBindings _parentBindings -> b
    com.fasterxml.jackson.databind.type.TypeBindings childInstance() -> childInstance
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.Class) -> resolveType
    com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type) -> resolveType
    int getBindingCount() -> getBindingCount
    com.fasterxml.jackson.databind.JavaType findType(java.lang.String) -> findType
    void addBinding(java.lang.String,com.fasterxml.jackson.databind.JavaType) -> addBinding
    com.fasterxml.jackson.databind.JavaType[] typesAsArray() -> typesAsArray
    void _resolve() -> _resolve
    void _addPlaceholder(java.lang.String) -> _addPlaceholder
    void _resolveBindings(java.lang.reflect.Type) -> _resolveBindings
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.type.TypeFactory -> com.fasterxml.jackson.databind.type.TypeFactory:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.JavaType[] NO_TYPES -> a
    com.fasterxml.jackson.databind.type.TypeFactory instance -> instance
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_STRING -> CORE_TYPE_STRING
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_BOOL -> CORE_TYPE_BOOL
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_INT -> CORE_TYPE_INT
    com.fasterxml.jackson.databind.type.SimpleType CORE_TYPE_LONG -> CORE_TYPE_LONG
    com.fasterxml.jackson.databind.util.LRUMap _typeCache -> _typeCache
    com.fasterxml.jackson.databind.type.HierarchicType _cachedHashMapType -> _cachedHashMapType
    com.fasterxml.jackson.databind.type.HierarchicType _cachedArrayListType -> _cachedArrayListType
    com.fasterxml.jackson.databind.type.TypeModifier[] _modifiers -> _modifiers
    com.fasterxml.jackson.databind.type.TypeParser _parser -> _parser
    com.fasterxml.jackson.databind.type.TypeFactory withModifier(com.fasterxml.jackson.databind.type.TypeModifier) -> withModifier
    com.fasterxml.jackson.databind.type.TypeFactory defaultInstance() -> defaultInstance
    com.fasterxml.jackson.databind.JavaType unknownType() -> unknownType
    java.lang.Class rawClass(java.lang.reflect.Type) -> rawClass
    com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> constructSpecializedType
    com.fasterxml.jackson.databind.JavaType constructFromCanonical(java.lang.String) -> constructFromCanonical
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class) -> findTypeParameters
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class) -> findTypeParameters
    com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class,java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> findTypeParameters
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,java.lang.Class) -> constructType
    com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.JavaType) -> constructType
    com.fasterxml.jackson.databind.JavaType _constructType(java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings) -> _constructType
    com.fasterxml.jackson.databind.type.ArrayType constructArrayType(java.lang.Class) -> constructArrayType
    com.fasterxml.jackson.databind.type.ArrayType constructArrayType(com.fasterxml.jackson.databind.JavaType) -> constructArrayType
    com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class) -> constructCollectionType
    com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructCollectionType
    com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,java.lang.Class) -> constructCollectionLikeType
    com.fasterxml.jackson.databind.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType) -> constructCollectionLikeType
    com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> constructMapType
    com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapType
    com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType) -> constructMapLikeType
    com.fasterxml.jackson.databind.type.MapLikeType constructMapLikeType(java.lang.Class,java.lang.Class,java.lang.Class) -> constructMapLikeType
    com.fasterxml.jackson.databind.JavaType constructSimpleType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructSimpleType
    com.fasterxml.jackson.databind.JavaType uncheckedSimpleType(java.lang.Class) -> uncheckedSimpleType
    com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,java.lang.Class[]) -> constructParametricType
    com.fasterxml.jackson.databind.JavaType constructParametricType(java.lang.Class,com.fasterxml.jackson.databind.JavaType[]) -> constructParametricType
    com.fasterxml.jackson.databind.type.CollectionType constructRawCollectionType(java.lang.Class) -> constructRawCollectionType
    com.fasterxml.jackson.databind.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class) -> constructRawCollectionLikeType
    com.fasterxml.jackson.databind.type.MapType constructRawMapType(java.lang.Class) -> constructRawMapType
    com.fasterxml.jackson.databind.type.MapLikeType constructRawMapLikeType(java.lang.Class) -> constructRawMapLikeType
    com.fasterxml.jackson.databind.JavaType _fromClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromClass
    com.fasterxml.jackson.databind.JavaType _fromParameterizedClass(java.lang.Class,java.util.List) -> _fromParameterizedClass
    com.fasterxml.jackson.databind.JavaType _fromParamType(java.lang.reflect.ParameterizedType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromParamType
    com.fasterxml.jackson.databind.JavaType _fromArrayType(java.lang.reflect.GenericArrayType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromArrayType
    com.fasterxml.jackson.databind.JavaType _fromVariable(java.lang.reflect.TypeVariable,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromVariable
    com.fasterxml.jackson.databind.JavaType _fromWildcard(java.lang.reflect.WildcardType,com.fasterxml.jackson.databind.type.TypeBindings) -> _fromWildcard
    com.fasterxml.jackson.databind.JavaType _mapType(java.lang.Class) -> a
    com.fasterxml.jackson.databind.JavaType _collectionType(java.lang.Class) -> b
    com.fasterxml.jackson.databind.JavaType _resolveVariableViaSubTypes(com.fasterxml.jackson.databind.type.HierarchicType,java.lang.String,com.fasterxml.jackson.databind.type.TypeBindings) -> _resolveVariableViaSubTypes
    com.fasterxml.jackson.databind.JavaType _unknownType() -> _unknownType
    com.fasterxml.jackson.databind.type.HierarchicType _findSuperTypeChain(java.lang.Class,java.lang.Class) -> _findSuperTypeChain
    com.fasterxml.jackson.databind.type.HierarchicType _findSuperClassChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperClassChain
    com.fasterxml.jackson.databind.type.HierarchicType _findSuperInterfaceChain(java.lang.reflect.Type,java.lang.Class) -> _findSuperInterfaceChain
    com.fasterxml.jackson.databind.type.HierarchicType _doFindSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType,java.lang.Class) -> _doFindSuperInterfaceChain
    com.fasterxml.jackson.databind.type.HierarchicType _hashMapSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType) -> _hashMapSuperInterfaceChain
    com.fasterxml.jackson.databind.type.HierarchicType _arrayListSuperInterfaceChain(com.fasterxml.jackson.databind.type.HierarchicType) -> _arrayListSuperInterfaceChain
com.fasterxml.jackson.databind.type.TypeModifier -> com.fasterxml.jackson.databind.type.TypeModifier:
    com.fasterxml.jackson.databind.JavaType modifyType(com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.type.TypeFactory) -> modifyType
com.fasterxml.jackson.databind.type.TypeParser -> com.fasterxml.jackson.databind.type.TypeParser:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.type.TypeFactory _factory -> _factory
    com.fasterxml.jackson.databind.JavaType parse(java.lang.String) -> parse
    com.fasterxml.jackson.databind.JavaType parseType(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> parseType
    java.util.List parseTypes(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> parseTypes
    java.lang.Class findClass(java.lang.String,com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer) -> findClass
    java.lang.IllegalArgumentException _problem(com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer,java.lang.String) -> _problem
com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer -> eD:
    java.lang.String _input -> a
    int _index -> b
    java.lang.String _pushbackToken -> c
    boolean hasMoreTokens() -> hasMoreTokens
    java.lang.String nextToken() -> nextToken
    void pushBack(java.lang.String) -> a
    java.lang.String getAllInput() -> a
    java.lang.String getRemainingInput() -> b
com.fasterxml.jackson.databind.util.Annotations -> com.fasterxml.jackson.databind.util.Annotations:
    java.lang.annotation.Annotation get(java.lang.Class) -> get
    int size() -> size
com.fasterxml.jackson.databind.util.ArrayBuilders -> com.fasterxml.jackson.databind.util.ArrayBuilders:
    com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder _booleanBuilder -> a
    com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder _byteBuilder -> b
    com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder _shortBuilder -> c
    com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder _intBuilder -> d
    com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder _longBuilder -> e
    com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder _floatBuilder -> f
    com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder _doubleBuilder -> g
    com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder getBooleanBuilder() -> getBooleanBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder getByteBuilder() -> getByteBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder getShortBuilder() -> getShortBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder getIntBuilder() -> getIntBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder getLongBuilder() -> getLongBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder getFloatBuilder() -> getFloatBuilder
    com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder getDoubleBuilder() -> getDoubleBuilder
    java.util.HashSet arrayToSet(java.lang.Object[]) -> arrayToSet
    java.util.ArrayList arrayToList(java.lang.Object[]) -> arrayToList
    java.util.HashSet setAndArray(java.util.Set,java.lang.Object[]) -> setAndArray
    java.util.List addToList(java.util.List,java.lang.Object) -> addToList
    java.lang.Object[] insertInList(java.lang.Object[],java.lang.Object) -> insertInList
    java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object) -> insertInListNoDup
    java.util.Iterator arrayAsIterator(java.lang.Object[]) -> arrayAsIterator
    java.lang.Iterable arrayAsIterable(java.lang.Object[]) -> arrayAsIterable
com.fasterxml.jackson.databind.util.ArrayBuilders$ArrayIterator -> eE:
    java.lang.Object[] _array -> a
    int _index -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.util.Iterator iterator() -> iterator
com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder:
    boolean[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder:
    byte[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder:
    double[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder:
    float[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder:
    int[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder:
    long[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder -> com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder:
    short[] _constructArray(int) -> _constructArray
    java.lang.Object _constructArray(int) -> _constructArray
com.fasterxml.jackson.databind.util.BeanUtil -> com.fasterxml.jackson.databind.util.BeanUtil:
    java.lang.String okNameForGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> okNameForGetter
    java.lang.String okNameForRegularGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> okNameForRegularGetter
    java.lang.String okNameForIsGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> okNameForIsGetter
    java.lang.String okNameForSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> okNameForSetter
    java.lang.String okNameForMutator(com.fasterxml.jackson.databind.introspect.AnnotatedMethod,java.lang.String) -> okNameForMutator
    boolean isCglibGetCallbacks(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isCglibGetCallbacks
    boolean isGroovyMetaClassSetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGroovyMetaClassSetter
    boolean isGroovyMetaClassGetter(com.fasterxml.jackson.databind.introspect.AnnotatedMethod) -> isGroovyMetaClassGetter
    java.lang.String manglePropertyName(java.lang.String) -> manglePropertyName
com.fasterxml.jackson.databind.util.ClassUtil -> com.fasterxml.jackson.databind.util.ClassUtil:
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class) -> findSuperTypes
    java.util.List findSuperTypes(java.lang.Class,java.lang.Class,java.util.List) -> findSuperTypes
    void _addSuperTypes(java.lang.Class,java.lang.Class,java.util.Collection,boolean) -> a
    java.lang.String canBeABeanType(java.lang.Class) -> canBeABeanType
    java.lang.String isLocalType(java.lang.Class,boolean) -> isLocalType
    java.lang.Class getOuterClass(java.lang.Class) -> getOuterClass
    boolean isProxyType(java.lang.Class) -> isProxyType
    boolean isConcrete(java.lang.Class) -> isConcrete
    boolean isConcrete(java.lang.reflect.Member) -> isConcrete
    boolean isCollectionMapOrArray(java.lang.Class) -> isCollectionMapOrArray
    java.lang.String getClassDescription(java.lang.Object) -> getClassDescription
    java.lang.Class findClass(java.lang.String) -> findClass
    boolean hasGetterSignature(java.lang.reflect.Method) -> hasGetterSignature
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    void throwRootCause(java.lang.Throwable) -> throwRootCause
    void throwAsIAE(java.lang.Throwable) -> throwAsIAE
    void throwAsIAE(java.lang.Throwable,java.lang.String) -> throwAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable) -> unwrapAndThrowAsIAE
    void unwrapAndThrowAsIAE(java.lang.Throwable,java.lang.String) -> unwrapAndThrowAsIAE
    java.lang.Object createInstance(java.lang.Class,boolean) -> createInstance
    java.lang.reflect.Constructor findConstructor(java.lang.Class,boolean) -> findConstructor
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
    java.lang.Class wrapperType(java.lang.Class) -> wrapperType
    void checkAndFixAccess(java.lang.reflect.Member) -> checkAndFixAccess
    java.lang.Class findEnumType(java.util.EnumSet) -> findEnumType
    java.lang.Class findEnumType(java.util.EnumMap) -> findEnumType
    java.lang.Class findEnumType(java.lang.Enum) -> findEnumType
    java.lang.Class findEnumType(java.lang.Class) -> findEnumType
    boolean isJacksonStdImpl(java.lang.Object) -> isJacksonStdImpl
    boolean isJacksonStdImpl(java.lang.Class) -> isJacksonStdImpl
com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator -> eF:
    com.fasterxml.jackson.databind.util.ClassUtil$EnumTypeLocator instance -> a
    java.lang.reflect.Field enumSetTypeField -> b
    java.lang.reflect.Field enumMapTypeField -> c
    java.lang.Class enumTypeFor(java.util.EnumSet) -> a
    java.lang.Class enumTypeFor(java.util.EnumMap) -> a
    java.lang.Object get(java.lang.Object,java.lang.reflect.Field) -> a
    java.lang.reflect.Field locateField(java.lang.Class,java.lang.String,java.lang.Class) -> a
com.fasterxml.jackson.databind.util.Comparators -> com.fasterxml.jackson.databind.util.Comparators:
    java.lang.Object getArrayComparator(java.lang.Object) -> getArrayComparator
com.fasterxml.jackson.databind.util.Comparators$1 -> eG:
    java.lang.Object val$defaultValue -> a
    int val$length -> b
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.databind.util.Converter -> com.fasterxml.jackson.databind.util.Converter:
    java.lang.Object convert(java.lang.Object) -> convert
com.fasterxml.jackson.databind.util.EnumResolver -> com.fasterxml.jackson.databind.util.EnumResolver:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _enumClass -> _enumClass
    java.lang.Enum[] _enums -> _enums
    java.util.HashMap _enumsById -> _enumsById
    com.fasterxml.jackson.databind.util.EnumResolver constructFor(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructFor
    com.fasterxml.jackson.databind.util.EnumResolver constructUsingToString(java.lang.Class) -> constructUsingToString
    com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(java.lang.Class,java.lang.reflect.Method) -> constructUsingMethod
    com.fasterxml.jackson.databind.util.EnumResolver constructUnsafe(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructUnsafe
    com.fasterxml.jackson.databind.util.EnumResolver constructUnsafeUsingToString(java.lang.Class) -> constructUnsafeUsingToString
    com.fasterxml.jackson.databind.util.EnumResolver constructUnsafeUsingMethod(java.lang.Class,java.lang.reflect.Method) -> constructUnsafeUsingMethod
    java.lang.Enum findEnum(java.lang.String) -> findEnum
    java.lang.Enum getEnum(int) -> getEnum
    java.lang.Class getEnumClass() -> getEnumClass
    int lastValidIndex() -> lastValidIndex
com.fasterxml.jackson.databind.util.EnumValues -> com.fasterxml.jackson.databind.util.EnumValues:
    java.util.EnumMap _values -> a
    com.fasterxml.jackson.databind.util.EnumValues construct(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> construct
    com.fasterxml.jackson.databind.util.EnumValues constructFromName(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructFromName
    com.fasterxml.jackson.databind.util.EnumValues constructFromToString(java.lang.Class,com.fasterxml.jackson.databind.AnnotationIntrospector) -> constructFromToString
    com.fasterxml.jackson.core.io.SerializedString serializedValueFor(java.lang.Enum) -> serializedValueFor
    java.util.Collection values() -> values
    java.util.EnumMap internalMap() -> internalMap
com.fasterxml.jackson.databind.util.ISO8601DateFormat -> com.fasterxml.jackson.databind.util.ISO8601DateFormat:
    long serialVersionUID -> serialVersionUID
    java.util.Calendar CALENDAR -> a
    java.text.NumberFormat NUMBER_FORMAT -> b
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.Object clone() -> clone
com.fasterxml.jackson.databind.util.ISO8601Utils -> com.fasterxml.jackson.databind.util.ISO8601Utils:
    java.util.TimeZone TIMEZONE_GMT -> a
    java.util.TimeZone timeZoneGMT() -> timeZoneGMT
    java.lang.String format(java.util.Date) -> format
    java.lang.String format(java.util.Date,boolean) -> format
    java.lang.String format(java.util.Date,boolean,java.util.TimeZone) -> format
    java.util.Date parse(java.lang.String) -> parse
    void checkOffset(java.lang.String,int,char) -> a
    int parseInt(java.lang.String,int,int) -> a
    void padInt(java.lang.StringBuilder,int,int) -> a
com.fasterxml.jackson.databind.util.JSONPObject -> com.fasterxml.jackson.databind.util.JSONPObject:
    java.lang.String _function -> _function
    java.lang.Object _value -> _value
    com.fasterxml.jackson.databind.JavaType _serializationType -> _serializationType
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.String getFunction() -> getFunction
    java.lang.Object getValue() -> getValue
    com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
com.fasterxml.jackson.databind.util.JSONWrappedObject -> com.fasterxml.jackson.databind.util.JSONWrappedObject:
    java.lang.String _prefix -> _prefix
    java.lang.String _suffix -> _suffix
    java.lang.Object _value -> _value
    com.fasterxml.jackson.databind.JavaType _serializationType -> _serializationType
    void serializeWithType(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer) -> serializeWithType
    void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider) -> serialize
    java.lang.String getPrefix() -> getPrefix
    java.lang.String getSuffix() -> getSuffix
    java.lang.Object getValue() -> getValue
    com.fasterxml.jackson.databind.JavaType getSerializationType() -> getSerializationType
com.fasterxml.jackson.databind.util.LRUMap -> com.fasterxml.jackson.databind.util.LRUMap:
    long serialVersionUID -> serialVersionUID
    int _maxEntries -> _maxEntries
    int _jdkSerializeMaxEntries -> _jdkSerializeMaxEntries
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    java.lang.Object readResolve() -> readResolve
com.fasterxml.jackson.databind.util.LinkedNode -> com.fasterxml.jackson.databind.util.LinkedNode:
    java.lang.Object _value -> a
    com.fasterxml.jackson.databind.util.LinkedNode _next -> b
    com.fasterxml.jackson.databind.util.LinkedNode next() -> next
    java.lang.Object value() -> value
    boolean contains(com.fasterxml.jackson.databind.util.LinkedNode,java.lang.Object) -> contains
com.fasterxml.jackson.databind.util.NameTransformer -> com.fasterxml.jackson.databind.util.NameTransformer:
    com.fasterxml.jackson.databind.util.NameTransformer NOP -> NOP
    com.fasterxml.jackson.databind.util.NameTransformer simpleTransformer(java.lang.String,java.lang.String) -> simpleTransformer
    com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer) -> chainedTransformer
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
com.fasterxml.jackson.databind.util.NameTransformer$1 -> eH:
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
com.fasterxml.jackson.databind.util.NameTransformer$2 -> eI:
    java.lang.String val$prefix -> a
    java.lang.String val$suffix -> b
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$3 -> eJ:
    java.lang.String val$prefix -> a
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$4 -> eK:
    java.lang.String val$suffix -> a
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.NameTransformer$Chained -> com.fasterxml.jackson.databind.util.NameTransformer$Chained:
    com.fasterxml.jackson.databind.util.NameTransformer _t1 -> _t1
    com.fasterxml.jackson.databind.util.NameTransformer _t2 -> _t2
    java.lang.String transform(java.lang.String) -> transform
    java.lang.String reverse(java.lang.String) -> reverse
    java.lang.String toString() -> toString
com.fasterxml.jackson.databind.util.Named -> com.fasterxml.jackson.databind.util.Named:
    java.lang.String getName() -> getName
com.fasterxml.jackson.databind.util.ObjectBuffer -> com.fasterxml.jackson.databind.util.ObjectBuffer:
    com.fasterxml.jackson.databind.util.ObjectBuffer$Node _bufferHead -> a
    com.fasterxml.jackson.databind.util.ObjectBuffer$Node _bufferTail -> b
    int _bufferedEntryCount -> c
    java.lang.Object[] _freeBuffer -> d
    java.lang.Object[] resetAndStart() -> resetAndStart
    java.lang.Object[] appendCompletedChunk(java.lang.Object[]) -> appendCompletedChunk
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int) -> completeAndClearBuffer
    java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class) -> completeAndClearBuffer
    void completeAndClearBuffer(java.lang.Object[],int,java.util.List) -> completeAndClearBuffer
    int initialCapacity() -> initialCapacity
    int bufferedSize() -> bufferedSize
    void _reset() -> _reset
    void _copyTo(java.lang.Object,int,java.lang.Object[],int) -> _copyTo
com.fasterxml.jackson.databind.util.ObjectBuffer$Node -> eL:
    java.lang.Object[] _data -> a
    com.fasterxml.jackson.databind.util.ObjectBuffer$Node _next -> b
com.fasterxml.jackson.databind.util.ObjectIdMap -> com.fasterxml.jackson.databind.util.ObjectIdMap:
    java.lang.Object findId(java.lang.Object) -> findId
    void insertId(java.lang.Object,java.lang.Object) -> insertId
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder -> com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder:
    java.lang.Object _freeBuffer -> a
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferHead -> b
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _bufferTail -> c
    int _bufferedEntryCount -> d
    java.lang.Object resetAndStart() -> resetAndStart
    java.lang.Object appendCompletedChunk(java.lang.Object,int) -> appendCompletedChunk
    java.lang.Object completeAndClearBuffer(java.lang.Object,int) -> completeAndClearBuffer
    java.lang.Object _constructArray(int) -> _constructArray
    void _reset() -> _reset
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node -> eM:
    java.lang.Object _data -> a
    int _dataLength -> b
    com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next -> c
com.fasterxml.jackson.databind.util.Provider -> com.fasterxml.jackson.databind.util.Provider:
    java.util.Collection provide() -> provide
com.fasterxml.jackson.databind.util.RootNameLookup -> com.fasterxml.jackson.databind.util.RootNameLookup:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.LRUMap _rootNames -> _rootNames
    com.fasterxml.jackson.core.io.SerializedString findRootName(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.cfg.MapperConfig) -> findRootName
    com.fasterxml.jackson.core.io.SerializedString findRootName(java.lang.Class,com.fasterxml.jackson.databind.cfg.MapperConfig) -> findRootName
com.fasterxml.jackson.databind.util.Setter -> com.fasterxml.jackson.databind.util.Setter:
    void setValue(java.lang.Object,java.lang.Object) -> setValue
com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition -> com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition:
    com.fasterxml.jackson.databind.introspect.AnnotatedMember _member -> _member
    java.lang.String _name -> _name
    com.fasterxml.jackson.databind.util.SimpleBeanPropertyDefinition withName(java.lang.String) -> withName
    java.lang.String getName() -> getName
    java.lang.String getInternalName() -> getInternalName
    boolean isExplicitlyIncluded() -> isExplicitlyIncluded
    boolean hasGetter() -> hasGetter
    boolean hasSetter() -> hasSetter
    boolean hasField() -> hasField
    boolean hasConstructorParameter() -> hasConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getGetter() -> getGetter
    com.fasterxml.jackson.databind.introspect.AnnotatedMethod getSetter() -> getSetter
    com.fasterxml.jackson.databind.introspect.AnnotatedField getField() -> getField
    com.fasterxml.jackson.databind.introspect.AnnotatedParameter getConstructorParameter() -> getConstructorParameter
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor() -> getAccessor
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getMutator() -> getMutator
    com.fasterxml.jackson.databind.introspect.AnnotatedMember getPrimaryMember() -> getPrimaryMember
    com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition withName(java.lang.String) -> withName
com.fasterxml.jackson.databind.util.StdDateFormat -> com.fasterxml.jackson.databind.util.StdDateFormat:
    java.lang.String DATE_FORMAT_STR_ISO8601 -> DATE_FORMAT_STR_ISO8601
    java.lang.String DATE_FORMAT_STR_ISO8601_Z -> DATE_FORMAT_STR_ISO8601_Z
    java.lang.String DATE_FORMAT_STR_PLAIN -> DATE_FORMAT_STR_PLAIN
    java.lang.String DATE_FORMAT_STR_RFC1123 -> DATE_FORMAT_STR_RFC1123
    java.lang.String[] ALL_FORMATS -> ALL_FORMATS
    java.util.TimeZone DEFAULT_TIMEZONE -> a
    java.text.DateFormat DATE_FORMAT_RFC1123 -> DATE_FORMAT_RFC1123
    java.text.DateFormat DATE_FORMAT_ISO8601 -> DATE_FORMAT_ISO8601
    java.text.DateFormat DATE_FORMAT_ISO8601_Z -> DATE_FORMAT_ISO8601_Z
    java.text.DateFormat DATE_FORMAT_PLAIN -> DATE_FORMAT_PLAIN
    com.fasterxml.jackson.databind.util.StdDateFormat instance -> instance
    java.util.TimeZone _timezone -> _timezone
    java.text.DateFormat _formatRFC1123 -> _formatRFC1123
    java.text.DateFormat _formatISO8601 -> _formatISO8601
    java.text.DateFormat _formatISO8601_z -> _formatISO8601_z
    java.text.DateFormat _formatPlain -> _formatPlain
    java.util.TimeZone getDefaultTimeZone() -> getDefaultTimeZone
    com.fasterxml.jackson.databind.util.StdDateFormat withTimeZone(java.util.TimeZone) -> withTimeZone
    com.fasterxml.jackson.databind.util.StdDateFormat clone() -> clone
    java.text.DateFormat getBlueprintISO8601Format() -> getBlueprintISO8601Format
    java.text.DateFormat getISO8601Format(java.util.TimeZone) -> getISO8601Format
    java.text.DateFormat getBlueprintRFC1123Format() -> getBlueprintRFC1123Format
    java.text.DateFormat getRFC1123Format(java.util.TimeZone) -> getRFC1123Format
    void setTimeZone(java.util.TimeZone) -> setTimeZone
    java.util.Date parse(java.lang.String) -> parse
    java.util.Date parse(java.lang.String,java.text.ParsePosition) -> parse
    java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition) -> format
    boolean looksLikeISO8601(java.lang.String) -> looksLikeISO8601
    java.util.Date parseAsISO8601(java.lang.String,java.text.ParsePosition) -> parseAsISO8601
    java.util.Date parseAsRFC1123(java.lang.String,java.text.ParsePosition) -> parseAsRFC1123
    java.text.DateFormat _cloneFormat(java.text.DateFormat) -> a
    java.text.DateFormat _cloneFormat(java.text.DateFormat,java.util.TimeZone) -> a
    java.lang.Object clone() -> clone
com.fasterxml.jackson.databind.util.TokenBuffer -> com.fasterxml.jackson.databind.util.TokenBuffer:
    int DEFAULT_PARSER_FEATURES -> DEFAULT_PARSER_FEATURES
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    int _generatorFeatures -> _generatorFeatures
    boolean _closed -> _closed
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _first -> _first
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _last -> _last
    int _appendOffset -> _appendOffset
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> _writeContext
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonParser asParser() -> asParser
    com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.ObjectCodec) -> asParser
    com.fasterxml.jackson.core.JsonParser asParser(com.fasterxml.jackson.core.JsonParser) -> asParser
    com.fasterxml.jackson.databind.util.TokenBuffer append(com.fasterxml.jackson.databind.util.TokenBuffer) -> append
    void serialize(com.fasterxml.jackson.core.JsonGenerator) -> serialize
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext() -> getOutputContext
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    void _append(com.fasterxml.jackson.core.JsonToken) -> _append
    void _append(com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> _append
    void _appendRaw(int,java.lang.Object) -> _appendRaw
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
com.fasterxml.jackson.databind.util.TokenBuffer$1 -> eN:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> b
com.fasterxml.jackson.databind.util.TokenBuffer$Parser -> com.fasterxml.jackson.databind.util.TokenBuffer$Parser:
    com.fasterxml.jackson.core.ObjectCodec _codec -> _codec
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _segment -> _segment
    int _segmentPtr -> _segmentPtr
    com.fasterxml.jackson.core.json.JsonReadContext _parsingContext -> _parsingContext
    boolean _closed -> _closed
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    void setLocation(com.fasterxml.jackson.core.JsonLocation) -> setLocation
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonToken peekNextToken() -> peekNextToken
    void close() -> close
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    java.lang.Object _currentObject() -> _currentObject
    void _checkIsNumber() -> _checkIsNumber
    void _handleEOF() -> _handleEOF
com.fasterxml.jackson.databind.util.TokenBuffer$Segment -> com.fasterxml.jackson.databind.util.TokenBuffer$Segment:
    int TOKENS_PER_SEGMENT -> TOKENS_PER_SEGMENT
    com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX -> a
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next -> _next
    long _tokenTypes -> _tokenTypes
    java.lang.Object[] _tokens -> _tokens
    com.fasterxml.jackson.core.JsonToken type(int) -> type
    int rawType(int) -> rawType
    java.lang.Object get(int) -> get
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment next() -> next
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken) -> append
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> append
    com.fasterxml.jackson.databind.util.TokenBuffer$Segment appendRaw(int,int,java.lang.Object) -> appendRaw
    void set(int,com.fasterxml.jackson.core.JsonToken) -> set
    void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object) -> set
    void set(int,int,java.lang.Object) -> a
com.fasterxml.jackson.databind.util.ViewMatcher -> com.fasterxml.jackson.databind.util.ViewMatcher:
    boolean isVisibleForView(java.lang.Class) -> isVisibleForView
    com.fasterxml.jackson.databind.util.ViewMatcher construct(java.lang.Class[]) -> construct
com.fasterxml.jackson.databind.util.ViewMatcher$Empty -> eO:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.databind.util.ViewMatcher$Empty instance -> a
    boolean isVisibleForView(java.lang.Class) -> isVisibleForView
com.fasterxml.jackson.databind.util.ViewMatcher$Multi -> eP:
    long serialVersionUID -> serialVersionUID
    java.lang.Class[] _views -> a
    boolean isVisibleForView(java.lang.Class) -> isVisibleForView
com.fasterxml.jackson.databind.util.ViewMatcher$Single -> eQ:
    long serialVersionUID -> serialVersionUID
    java.lang.Class _view -> a
    boolean isVisibleForView(java.lang.Class) -> isVisibleForView
com.google.ads.Ad -> com.google.ads.Ad:
    boolean isReady() -> isReady
    void loadAd(com.google.ads.AdRequest) -> loadAd
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void stopLoading() -> stopLoading
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    java.lang.String BASE_URL_PARAM -> BASE_URL_PARAM
    java.lang.String HTML_PARAM -> HTML_PARAM
    java.lang.String URL_PARAM -> URL_PARAM
    java.lang.String CUSTOM_CLOSE_PARAM -> CUSTOM_CLOSE_PARAM
    java.lang.String INTENT_ACTION_PARAM -> INTENT_ACTION_PARAM
    java.lang.String TYPE_PARAM -> TYPE_PARAM
    java.lang.String COMPONENT_NAME_PARAM -> COMPONENT_NAME_PARAM
    java.lang.String PACKAGE_NAME_PARAM -> PACKAGE_NAME_PARAM
    java.lang.String INTENT_FLAGS_PARAM -> INTENT_FLAGS_PARAM
    java.lang.String INTENT_EXTRAS_PARAM -> INTENT_EXTRAS_PARAM
    java.lang.String ORIENTATION_PARAM -> ORIENTATION_PARAM
    com.google.ads.internal.a a -> a
    java.lang.Object b -> b
    com.google.ads.AdActivity c -> c
    com.google.ads.internal.d d -> d
    com.google.ads.AdActivity e -> e
    com.google.ads.AdActivity f -> f
    com.google.ads.AdActivity$StaticMethodWrapper g -> g
    com.google.ads.internal.AdWebView h -> h
    android.widget.FrameLayout i -> i
    int j -> j
    android.view.ViewGroup k -> k
    boolean l -> l
    long m -> m
    android.widget.RelativeLayout n -> n
    com.google.ads.AdActivity o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    boolean s -> s
    com.google.ads.internal.AdVideoView t -> t
    android.view.View a(int,boolean) -> a
    void a(java.lang.String) -> a
    com.google.ads.internal.AdVideoView getAdVideoView() -> getAdVideoView
    com.google.ads.internal.AdWebView getOpeningAdWebView() -> getOpeningAdWebView
    boolean isShowing() -> isShowing
    boolean leftApplication() -> leftApplication
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> launchAdActivity
    void a(java.util.HashMap,com.google.ads.internal.d) -> a
    void a(com.google.ads.internal.d) -> a
    com.google.ads.internal.AdVideoView a(android.app.Activity) -> a
    void moveAdVideoView(int,int,int,int) -> moveAdVideoView
    void newAdVideoView(int,int,int,int) -> newAdVideoView
    android.widget.RelativeLayout$LayoutParams a(int,int,int,int) -> a
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(com.google.ads.internal.AdWebView,boolean,int,boolean,boolean) -> a
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void e() -> e
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void setCustomClose(boolean) -> setCustomClose
    java.lang.Object a() -> a
    com.google.ads.AdActivity b() -> b
    com.google.ads.AdActivity c() -> c
    com.google.ads.internal.d d() -> d
    com.google.ads.internal.d b(com.google.ads.internal.d) -> b
com.google.ads.AdActivity$StaticMethodWrapper -> com.google.ads.AdActivity$StaticMethodWrapper:
    boolean isShowing() -> isShowing
    boolean leftApplication() -> leftApplication
    void launchAdActivity(com.google.ads.internal.d,com.google.ads.internal.e) -> launchAdActivity
com.google.ads.AdListener -> com.google.ads.AdListener:
    void onReceiveAd(com.google.ads.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.Ad) -> onPresentScreen
    void onDismissScreen(com.google.ads.Ad) -> onDismissScreen
    void onLeaveApplication(com.google.ads.Ad) -> onLeaveApplication
com.google.ads.AdRequest -> com.google.ads.AdRequest:
    java.lang.String VERSION -> VERSION
    java.text.SimpleDateFormat a -> a
    java.lang.reflect.Method b -> b
    java.lang.reflect.Method c -> c
    com.google.ads.AdRequest$Gender d -> d
    java.util.Date e -> e
    java.util.Set f -> f
    java.util.Map g -> g
    java.util.Map h -> h
    android.location.Location i -> i
    boolean j -> j
    boolean k -> k
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String TEST_EMULATOR -> TEST_EMULATOR
    java.util.Set l -> l
    com.google.ads.AdRequest setGender(com.google.ads.AdRequest$Gender) -> setGender
    com.google.ads.AdRequest$Gender getGender() -> getGender
    com.google.ads.AdRequest setBirthday(java.lang.String) -> setBirthday
    com.google.ads.AdRequest setBirthday(java.util.Date) -> setBirthday
    com.google.ads.AdRequest setBirthday(java.util.Calendar) -> setBirthday
    java.util.Date getBirthday() -> getBirthday
    com.google.ads.AdRequest clearBirthday() -> clearBirthday
    com.google.ads.AdRequest setPlusOneOptOut(boolean) -> setPlusOneOptOut
    boolean getPlusOneOptOut() -> getPlusOneOptOut
    com.google.ads.AdRequest setKeywords(java.util.Set) -> setKeywords
    com.google.ads.AdRequest addKeyword(java.lang.String) -> addKeyword
    com.google.ads.AdRequest addKeywords(java.util.Set) -> addKeywords
    java.util.Set getKeywords() -> getKeywords
    com.google.ads.mediation.admob.AdMobAdapterExtras a() -> a
    com.google.ads.AdRequest setExtras(java.util.Map) -> setExtras
    com.google.ads.AdRequest addExtra(java.lang.String,java.lang.Object) -> addExtra
    com.google.ads.AdRequest setNetworkExtras(com.google.ads.mediation.NetworkExtras) -> setNetworkExtras
    com.google.ads.AdRequest removeNetworkExtras(java.lang.Class) -> removeNetworkExtras
    java.lang.Object getNetworkExtras(java.lang.Class) -> getNetworkExtras
    com.google.ads.AdRequest setMediationExtras(java.util.Map) -> setMediationExtras
    com.google.ads.AdRequest addMediationExtra(java.lang.String,java.lang.Object) -> addMediationExtra
    com.google.ads.AdRequest setLocation(android.location.Location) -> setLocation
    android.location.Location getLocation() -> getLocation
    com.google.ads.AdRequest setTesting(boolean) -> setTesting
    java.util.Map getRequestMap(android.content.Context) -> getRequestMap
    com.google.ads.AdRequest addTestDevice(java.lang.String) -> addTestDevice
    com.google.ads.AdRequest setTestDevices(java.util.Set) -> setTestDevices
    boolean isTestDevice(android.content.Context) -> isTestDevice
com.google.ads.AdRequest$ErrorCode -> com.google.ads.AdRequest$ErrorCode:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> INVALID_REQUEST
    com.google.ads.AdRequest$ErrorCode NO_FILL -> NO_FILL
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> NETWORK_ERROR
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> INTERNAL_ERROR
    java.lang.String a -> a
    com.google.ads.AdRequest$ErrorCode[] b -> b
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.AdRequest$Gender:
    com.google.ads.AdRequest$Gender UNKNOWN -> UNKNOWN
    com.google.ads.AdRequest$Gender MALE -> MALE
    com.google.ads.AdRequest$Gender FEMALE -> FEMALE
    com.google.ads.AdRequest$Gender[] a -> a
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
com.google.ads.AdSize -> com.google.ads.AdSize:
    int FULL_WIDTH -> FULL_WIDTH
    int AUTO_HEIGHT -> AUTO_HEIGHT
    int LANDSCAPE_AD_HEIGHT -> LANDSCAPE_AD_HEIGHT
    int PORTRAIT_AD_HEIGHT -> PORTRAIT_AD_HEIGHT
    int LARGE_AD_HEIGHT -> LARGE_AD_HEIGHT
    com.google.ads.AdSize SMART_BANNER -> SMART_BANNER
    com.google.ads.AdSize BANNER -> BANNER
    com.google.ads.AdSize IAB_MRECT -> IAB_MRECT
    com.google.ads.AdSize IAB_BANNER -> IAB_BANNER
    com.google.ads.AdSize IAB_LEADERBOARD -> IAB_LEADERBOARD
    com.google.ads.AdSize IAB_WIDE_SKYSCRAPER -> IAB_WIDE_SKYSCRAPER
    int a -> a
    int b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    java.lang.String f -> f
    com.google.ads.AdSize createAdSize(com.google.ads.AdSize,android.content.Context) -> createAdSize
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    boolean a() -> a
    boolean isFullWidth() -> isFullWidth
    boolean isAutoHeight() -> isAutoHeight
    boolean isCustomAdSize() -> isCustomAdSize
    java.lang.String toString() -> toString
    int getWidthInPixels(android.content.Context) -> getWidthInPixels
    int getHeightInPixels(android.content.Context) -> getHeightInPixels
    boolean isSizeAppropriate(int,int) -> isSizeAppropriate
    com.google.ads.AdSize findBestSize(com.google.ads.AdSize[]) -> findBestSize
com.google.ads.AdView -> com.google.ads.AdView:
    com.google.ads.internal.d a -> a
    com.google.ads.internal.a b -> b
    void a(android.content.Context,java.lang.String,int,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean a(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> a
    boolean b(android.content.Context,com.google.ads.AdSize,android.util.AttributeSet) -> b
    void destroy() -> destroy
    void a(android.content.Context,java.lang.String,com.google.ads.AdSize,android.util.AttributeSet) -> a
    com.google.ads.AdSize[] a(java.lang.String) -> a
    boolean a(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> a
    java.lang.String b(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> b
    java.util.Set c(java.lang.String,android.content.Context,android.util.AttributeSet,boolean) -> c
    void a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    boolean isReady() -> isReady
    boolean isRefreshing() -> isRefreshing
    void loadAd(com.google.ads.AdRequest) -> loadAd
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSwipeableEventListener(com.google.ads.SwipeableAdListener) -> setSwipeableEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
    void a(com.google.ads.AdSize[]) -> a
    void onMeasure(int,int) -> onMeasure
    void stopLoading() -> stopLoading
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
com.google.ads.AppEventListener -> com.google.ads.AppEventListener:
    void onAppEvent(com.google.ads.Ad,java.lang.String,java.lang.String) -> onAppEvent
com.google.ads.InterstitialAd -> com.google.ads.InterstitialAd:
    com.google.ads.internal.d a -> a
    boolean isReady() -> isReady
    void loadAd(com.google.ads.AdRequest) -> loadAd
    void show() -> show
    void setAdListener(com.google.ads.AdListener) -> setAdListener
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void stopLoading() -> stopLoading
com.google.ads.SwipeableAdListener -> com.google.ads.SwipeableAdListener:
    void onAdActivated(com.google.ads.Ad) -> onAdActivated
    void onAdDeactivated(com.google.ads.Ad) -> onAdDeactivated
com.google.ads.a -> com.google.ads.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.List c -> c
    java.util.List d -> d
    java.util.HashMap e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.util.List c() -> c
    java.util.List d() -> d
    java.util.HashMap e() -> e
com.google.ads.aa -> com.google.ads.aa:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ab -> com.google.ads.ab:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ac -> com.google.ads.ac:
    com.google.ads.internal.a a -> a
    int a(java.util.HashMap,java.lang.String,int,android.util.DisplayMetrics) -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.ae -> com.google.ads.ae:
    android.content.Context a -> a
    java.lang.String b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    void run() -> run
com.google.ads.af -> com.google.ads.af:
    java.lang.ref.WeakReference a -> a
    void run() -> run
com.google.ads.ag -> com.google.ads.ag:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    int B -> B
    int C -> C
    int D -> D
    int E -> E
    int F -> F
    int G -> G
    int H -> H
    int I -> I
    int J -> J
    int K -> K
    int L -> L
    int M -> M
    int N -> N
    int O -> O
    int P -> P
    int Q -> Q
    int R -> R
    int S -> S
    int T -> T
    int U -> U
    int V -> V
    int W -> W
    int X -> X
    int Y -> Y
    int Z -> Z
    int aa -> aa
    int ab -> ab
    int ac -> ac
    int ad -> ad
    int ae -> ae
    int af -> af
    int ag -> ag
    int ah -> ah
    int ai -> ai
    int aj -> aj
    int ak -> ak
    int al -> al
    int am -> am
    int an -> an
    int ao -> ao
    int ap -> ap
    int aq -> aq
    int ar -> ar
    int as -> as
    int at -> at
    int au -> au
    int av -> av
    int aw -> aw
    int ax -> ax
    int ay -> ay
    int az -> az
    int aA -> aA
    int aB -> aB
    int aC -> aC
    int aD -> aD
    int aE -> aE
    int aF -> aF
    int aG -> aG
    int aH -> aH
    int aI -> aI
    int aJ -> aJ
    int aK -> aK
    int aL -> aL
    int aM -> aM
    int aN -> aN
    int aO -> aO
    int aP -> aP
    int aQ -> aQ
    int aR -> aR
    int aS -> aS
    int aT -> aT
    int aU -> aU
    int aV -> aV
    int aW -> aW
    int aX -> aX
    int aY -> aY
    int aZ -> aZ
    int ba -> ba
    int bb -> bb
    int bc -> bc
    int bd -> bd
    int be -> be
    int bf -> bf
    int bg -> bg
    int bh -> bh
    int bi -> bi
    int bj -> bj
    int bk -> bk
    int bl -> bl
    int bm -> bm
    int bn -> bn
    int bo -> bo
    int bp -> bp
    int bq -> bq
    int br -> br
    int bs -> bs
    int bt -> bt
    int bu -> bu
    int bv -> bv
    int bw -> bw
    int bx -> bx
    int by -> by
    int bz -> bz
    int bA -> bA
    int bB -> bB
    int bC -> bC
    int bD -> bD
    int bE -> bE
    int bF -> bF
    int bG -> bG
    int bH -> bH
    int bI -> bI
    int bJ -> bJ
    int bK -> bK
    int bL -> bL
    int bM -> bM
    int bN -> bN
    int bO -> bO
    int bP -> bP
    int bQ -> bQ
    int bR -> bR
    int bS -> bS
    int bT -> bT
    int bU -> bU
    int bV -> bV
    int bW -> bW
    int bX -> bX
    int bY -> bY
    int bZ -> bZ
    int ca -> ca
    int cb -> cb
    int cc -> cc
    int cd -> cd
    int ce -> ce
    int cf -> cf
    int cg -> cg
    int ch -> ch
    int ci -> ci
    int cj -> cj
    int ck -> ck
    int cl -> cl
    int cm -> cm
    int cn -> cn
    int co -> co
    int cp -> cp
    int cq -> cq
    int cr -> cr
    int cs -> cs
    int ct -> ct
    int cu -> cu
    int cv -> cv
    int cw -> cw
    int cx -> cx
    int cy -> cy
    int cz -> cz
    int cA -> cA
    int cB -> cB
    int cC -> cC
    int cD -> cD
    int cE -> cE
    int cF -> cF
    int cG -> cG
    int cH -> cH
    int cI -> cI
    int cJ -> cJ
    int cK -> cK
    int cL -> cL
    int cM -> cM
    com.google.ads.ag$a[] cN -> cN
    void a(byte[],byte[]) -> a
com.google.ads.ag$a -> eR:
    void a(byte[],byte[]) -> a
com.google.ads.ag$b -> eS:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$c -> eT:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$d -> eU:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$e -> eV:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$f -> eW:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$g -> eX:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$h -> eY:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$i -> eZ:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$j -> fa:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$k -> fb:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$l -> fc:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ag$m -> fd:
    com.google.ads.ag a -> a
    void a(byte[],byte[]) -> a
com.google.ads.ah -> fe:
    java.lang.String[] a -> a
com.google.ads.ai -> com.google.ads.ai:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
com.google.ads.aj -> com.google.ads.aj:
    com.google.ads.au c -> c
    java.io.ByteArrayOutputStream d -> d
    android.view.MotionEvent a -> a
    android.util.DisplayMetrics b -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.view.MotionEvent) -> a
    void a(int,int,int) -> a
    java.lang.String a(android.content.Context,java.lang.String,boolean) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a() -> a
    byte[] b() -> b
com.google.ads.ak -> com.google.ads.ak:
    java.lang.reflect.Method d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.reflect.Method h -> h
    java.lang.String i -> i
    long j -> j
    boolean c -> c
    com.google.ads.ak a(java.lang.String,android.content.Context) -> a
    void b(java.lang.String,android.content.Context) -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    java.lang.String a() -> a
    java.lang.Long b() -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String c() -> c
    java.util.ArrayList a(android.view.MotionEvent,android.util.DisplayMetrics) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String b(byte[],java.lang.String) -> a
com.google.ads.ak$a -> ff:
com.google.ads.al -> com.google.ads.al:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String[] c -> c
    com.google.ads.ai d -> d
    com.google.ads.ah e -> e
    boolean a(android.net.Uri) -> a
    void a(java.lang.String) -> a
    android.net.Uri a(android.net.Uri,android.content.Context) -> a
    android.net.Uri a(android.net.Uri,android.content.Context,java.lang.String,boolean) -> a
com.google.ads.am -> com.google.ads.am:
com.google.ads.an -> com.google.ads.an:
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String) -> a
com.google.ads.an$a -> com.google.ads.an$a:
com.google.ads.ao -> com.google.ads.ao:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    java.lang.String i() -> i
    java.lang.String j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
com.google.ads.ap -> com.google.ads.ap:
com.google.ads.aq -> com.google.ads.aq:
    char[] a -> a
    char[] b -> b
    byte[] c -> c
    byte[] d -> d
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],int,int,char[],boolean) -> a
    char[] a(byte[],int,int,char[],int) -> a
    int a(char[],int,byte[],int,byte[]) -> a
    byte[] a(java.lang.String) -> a
    byte[] a(char[],int,int) -> a
    byte[] a(char[],int,int,byte[]) -> a
com.google.ads.ar -> com.google.ads.ar:
    byte[] a -> a
    int b -> b
    int c -> c
    void a(byte[]) -> a
com.google.ads.as -> com.google.ads.as:
    android.net.Uri a -> a
    java.lang.String[] b -> b
com.google.ads.at -> com.google.ads.at:
    com.google.ads.internal.a a -> a
    boolean a(android.content.Context,long) -> a
    void a(android.app.Activity) -> a
com.google.ads.at$1 -> fg:
    android.content.Context a -> a
    void run() -> run
com.google.ads.at$a -> fh:
    java.lang.ref.WeakReference a -> a
    android.content.SharedPreferences$Editor b -> b
    void run() -> run
com.google.ads.au -> com.google.ads.au:
    byte[] a -> a
    int b -> b
    int c -> c
    int d -> d
    java.io.OutputStream e -> e
    com.google.ads.au a(java.io.OutputStream) -> a
    com.google.ads.au a(java.io.OutputStream,int) -> a
    void a(int,long) -> a
    void a(int,java.lang.String) -> a
    void a(long) -> a
    void a(java.lang.String) -> a
    void b() -> b
    void a() -> a
    void a(byte) -> a
    void a(int) -> a
    void a(byte[]) -> a
    void a(byte[],int,int) -> a
    void a(int,int) -> a
    void b(int) -> b
    void b(long) -> b
com.google.ads.au$a -> com.google.ads.au$a:
com.google.ads.av -> com.google.ads.av:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int a(int,int) -> a
com.google.ads.b -> com.google.ads.b:
    java.math.BigInteger a -> a
    java.math.BigInteger b -> b
    com.google.ads.b c -> c
    com.google.ads.b a() -> a
    java.math.BigInteger b() -> b
    java.math.BigInteger c() -> c
    java.math.BigInteger d() -> d
com.google.ads.c -> com.google.ads.c:
    java.util.Map a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.lang.Integer e -> e
    java.lang.Integer f -> f
    java.util.List g -> g
    java.util.List h -> h
    java.util.List i -> i
    com.google.ads.c a(java.lang.String) -> a
    boolean a() -> a
    int b() -> b
    java.lang.String c() -> c
    boolean d() -> d
    int e() -> e
    java.util.List f() -> f
    java.util.List g() -> g
    java.util.List h() -> h
    java.util.List i() -> i
    com.google.ads.a a(org.json.JSONObject) -> a
    com.google.ads.internal.h j() -> j
    java.util.List a(org.json.JSONObject,java.lang.String) -> a
com.google.ads.c$1 -> fi:
com.google.ads.d -> com.google.ads.d:
    com.google.ads.c a -> a
    long b -> b
    boolean a() -> a
    void a(com.google.ads.c,int) -> a
    com.google.ads.c b() -> b
com.google.ads.doubleclick.DfpAdView -> com.google.ads.doubleclick.DfpAdView:
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
    void setSupportedAdSizes(com.google.ads.AdSize[]) -> setSupportedAdSizes
    void enableManualImpressions(boolean) -> enableManualImpressions
    void recordImpression() -> recordImpression
    void resize(com.google.ads.AdSize) -> resize
com.google.ads.doubleclick.DfpExtras -> com.google.ads.doubleclick.DfpExtras:
    java.lang.String a -> a
    java.lang.String getPublisherProvidedId() -> getPublisherProvidedId
    com.google.ads.doubleclick.DfpExtras setPublisherProvidedId(java.lang.String) -> setPublisherProvidedId
    com.google.ads.doubleclick.DfpExtras setPlusOneOptOut(boolean) -> setPlusOneOptOut
    com.google.ads.doubleclick.DfpExtras setUseExactAdSize(boolean) -> setUseExactAdSize
    com.google.ads.doubleclick.DfpExtras setExtras(java.util.Map) -> setExtras
    com.google.ads.doubleclick.DfpExtras clearExtras() -> clearExtras
    com.google.ads.doubleclick.DfpExtras addExtra(java.lang.String,java.lang.Object) -> addExtra
    com.google.ads.mediation.admob.AdMobAdapterExtras addExtra(java.lang.String,java.lang.Object) -> addExtra
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> clearExtras
    com.google.ads.mediation.admob.AdMobAdapterExtras setExtras(java.util.Map) -> setExtras
    com.google.ads.mediation.admob.AdMobAdapterExtras setUseExactAdSize(boolean) -> setUseExactAdSize
    com.google.ads.mediation.admob.AdMobAdapterExtras setPlusOneOptOut(boolean) -> setPlusOneOptOut
com.google.ads.doubleclick.DfpInterstitialAd -> com.google.ads.doubleclick.DfpInterstitialAd:
    void setAppEventListener(com.google.ads.AppEventListener) -> setAppEventListener
com.google.ads.doubleclick.SwipeableDfpAdView -> com.google.ads.doubleclick.SwipeableDfpAdView:
    void setSwipeableEventListener(com.google.ads.SwipeableAdListener) -> setSwipeableEventListener
    void resize(com.google.ads.AdSize) -> resize
com.google.ads.e -> com.google.ads.e:
    com.google.ads.internal.d a -> a
    com.google.ads.h b -> b
    java.lang.Object c -> c
    java.lang.Thread d -> d
    java.lang.Object e -> e
    boolean f -> f
    java.lang.Object g -> g
    boolean a() -> a
    void b() -> b
    void a(com.google.ads.c,com.google.ads.AdRequest) -> a
    boolean a(com.google.ads.c,com.google.ads.internal.d) -> a
    boolean a(com.google.ads.h,java.lang.String) -> a
    void a(com.google.ads.h,boolean) -> a
    void a(com.google.ads.h,android.view.View) -> a
    void a(com.google.ads.h) -> a
    void b(com.google.ads.h) -> b
    void c(com.google.ads.h) -> c
    boolean c() -> c
    boolean d() -> d
    boolean a(java.lang.String,android.app.Activity,com.google.ads.AdRequest,com.google.ads.f,java.util.HashMap,long) -> a
    boolean e(com.google.ads.h) -> e
    com.google.ads.h e() -> e
    void d(com.google.ads.h) -> d
    void a(com.google.ads.e,com.google.ads.c,com.google.ads.AdRequest) -> a
    java.lang.Object a(com.google.ads.e) -> a
    java.lang.Thread a(com.google.ads.e,java.lang.Thread) -> a
    com.google.ads.internal.d b(com.google.ads.e) -> b
    com.google.ads.h c(com.google.ads.e) -> c
    boolean a(com.google.ads.e,com.google.ads.h) -> a
com.google.ads.e$1 -> fj:
    com.google.ads.c a -> a
    com.google.ads.AdRequest b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$2 -> fk:
    com.google.ads.f a -> a
    boolean b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$3 -> fl:
    android.view.View a -> a
    com.google.ads.f b -> b
    com.google.ads.e c -> c
    void run() -> run
com.google.ads.e$4 -> fm:
    com.google.ads.e a -> a
    void run() -> run
com.google.ads.e$5 -> fn:
    com.google.ads.e a -> a
    void run() -> run
com.google.ads.e$6 -> fo:
    com.google.ads.e a -> a
    void run() -> run
com.google.ads.e$7 -> fp:
    com.google.ads.c a -> a
    com.google.ads.e b -> b
    void run() -> run
com.google.ads.e$8 -> fq:
    com.google.ads.h a -> a
    android.view.View b -> b
    com.google.ads.f c -> c
    com.google.ads.e d -> d
    void run() -> run
com.google.ads.f -> com.google.ads.f:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.List d -> d
    java.util.List e -> e
    java.util.List f -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.util.List d() -> d
    java.util.List e() -> e
com.google.ads.g -> com.google.ads.g:
    java.lang.String a(java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.Object a(java.lang.String,java.lang.Class) -> a
com.google.ads.g$a -> com.google.ads.g$a:
    com.google.ads.g$a a -> a
    com.google.ads.g$a b -> b
    com.google.ads.g$a c -> c
    com.google.ads.g$a d -> d
    com.google.ads.g$a e -> e
    com.google.ads.g$a f -> f
    com.google.ads.g$a[] g -> g
    com.google.ads.g$a[] values() -> values
    com.google.ads.g$a valueOf(java.lang.String) -> valueOf
com.google.ads.h -> com.google.ads.h:
    com.google.ads.internal.h a -> a
    com.google.ads.f b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.g$a e -> e
    com.google.ads.e f -> f
    com.google.ads.mediation.MediationAdapter g -> g
    boolean h -> h
    boolean i -> i
    android.view.View j -> j
    java.lang.String k -> k
    com.google.ads.AdRequest l -> l
    java.util.HashMap m -> m
    com.google.ads.f a() -> a
    void a(android.app.Activity) -> a
    void b() -> b
    boolean c() -> c
    boolean d() -> d
    com.google.ads.g$a e() -> e
    android.view.View f() -> f
    void g() -> g
    java.lang.String h() -> h
    void a(boolean,com.google.ads.g$a) -> a
    void a(com.google.ads.mediation.MediationAdapter) -> a
    com.google.ads.mediation.MediationAdapter i() -> i
    com.google.ads.e j() -> j
    void a(android.view.View) -> a
    void k() -> k
    boolean l() -> l
    com.google.ads.mediation.MediationAdapter a(com.google.ads.h) -> a
com.google.ads.h$1 -> fr:
    com.google.ads.h a -> a
    void run() -> run
com.google.ads.h$2 -> fs:
    com.google.ads.mediation.MediationInterstitialAdapter a -> a
    com.google.ads.h b -> b
    void run() -> run
com.google.ads.i -> ft:
    com.google.ads.h a -> a
    java.lang.String b -> b
    com.google.ads.AdRequest c -> c
    java.util.HashMap d -> d
    boolean e -> e
    java.lang.ref.WeakReference f -> f
    void run() -> run
    void a(java.lang.String,java.lang.Throwable,com.google.ads.g$a) -> a
com.google.ads.i$a -> fu:
com.google.ads.internal.ActivationOverlay -> com.google.ads.internal.ActivationOverlay:
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    com.google.ads.internal.i f -> f
    void setOverlayEnabled(boolean) -> setOverlayEnabled
    void setOverlayActivated(boolean) -> setOverlayActivated
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    void setYPosition(int) -> setYPosition
    int d() -> d
    void setXPosition(int) -> setXPosition
    com.google.ads.internal.i e() -> e
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.internal.ActivationOverlay$1 -> fv:
    com.google.ads.internal.ActivationOverlay a -> a
    com.google.ads.internal.ActivationOverlay b -> b
    void run() -> run
com.google.ads.internal.AdVideoView -> com.google.ads.internal.AdVideoView:
    com.google.ads.internal.a b -> b
    java.lang.ref.WeakReference c -> c
    com.google.ads.internal.AdWebView d -> d
    android.widget.MediaController a -> a
    long e -> e
    android.widget.VideoView f -> f
    java.lang.String g -> g
    void a() -> a
    void b() -> b
    void setMediaControllerEnabled(boolean) -> setMediaControllerEnabled
    void setSrc(java.lang.String) -> setSrc
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    boolean onError(android.media.MediaPlayer,int,int) -> onError
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void c() -> c
    void d() -> d
    void a(int) -> a
    void a(android.view.MotionEvent) -> a
    void e() -> e
    void f() -> f
com.google.ads.internal.AdVideoView$a -> fw:
    java.lang.ref.WeakReference a -> a
    void run() -> run
    void a() -> a
com.google.ads.internal.AdWebView -> com.google.ads.internal.AdWebView:
    java.lang.ref.WeakReference b -> b
    com.google.ads.AdSize c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    com.google.ads.n a -> a
    void f() -> f
    void g() -> g
    void h() -> h
    com.google.ads.AdActivity i() -> i
    boolean j() -> j
    boolean k() -> k
    void setAdActivity(com.google.ads.AdActivity) -> setAdActivity
    void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadDataWithBaseURL
    void loadUrl(java.lang.String) -> loadUrl
    void stopLoading() -> stopLoading
    void destroy() -> destroy
    void setAdSize(com.google.ads.AdSize) -> setAdSize
    void onMeasure(int,int) -> onMeasure
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setCustomClose(boolean) -> setCustomClose
    void setIsExpandedMraid(boolean) -> setIsExpandedMraid
    void a(boolean) -> a
com.google.ads.internal.AdWebView$1 -> fx:
    com.google.ads.internal.AdWebView a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
com.google.ads.internal.AdWebView$2 -> fy:
    com.google.ads.internal.AdWebView a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.google.ads.internal.a -> com.google.ads.internal.a:
    com.google.ads.internal.a e -> e
    com.google.ads.util.f a -> a
    java.util.Map b -> b
    java.util.Map c -> c
    java.util.Map d -> d
    java.lang.String a(android.net.Uri,java.util.HashMap) -> a
    void a(com.google.ads.internal.d,java.util.Map,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.util.Map) -> a
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
    com.google.ads.internal.a a() -> a
com.google.ads.internal.a$1 -> fz:
com.google.ads.internal.a$2 -> fA:
    java.lang.Object b() -> b
com.google.ads.internal.a$3 -> fB:
com.google.ads.internal.a$4 -> fC:
com.google.ads.internal.b -> com.google.ads.internal.b:
    boolean a -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.google.ads.internal.c -> com.google.ads.internal.c:
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    com.google.ads.internal.f g -> g
    com.google.ads.AdRequest h -> h
    android.webkit.WebView i -> i
    com.google.ads.l j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.util.LinkedList m -> m
    java.lang.String n -> n
    com.google.ads.AdSize o -> o
    boolean p -> p
    boolean q -> q
    boolean r -> r
    com.google.ads.AdRequest$ErrorCode s -> s
    boolean t -> t
    int u -> u
    java.lang.Thread v -> v
    boolean w -> w
    com.google.ads.internal.c$d x -> x
    boolean a -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void a(com.google.ads.AdRequest) -> a
    void run() -> run
    void b() -> b
    java.lang.String a(java.util.Map,android.app.Activity) -> a
    java.lang.String d() -> d
    java.lang.String g() -> e
    java.lang.String h() -> f
    void a(com.google.ads.AdRequest$ErrorCode,boolean) -> a
    void b(boolean) -> b
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void a(com.google.ads.AdSize) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void c() -> c
    void c(boolean) -> c
    void a(int) -> a
    void d(boolean) -> d
    void a(com.google.ads.internal.c$d) -> a
    void e(boolean) -> e
    boolean a(com.google.ads.internal.c) -> a
    com.google.ads.l b(com.google.ads.internal.c) -> b
    java.lang.String c(com.google.ads.internal.c) -> c
    android.webkit.WebView d(com.google.ads.internal.c) -> d
    java.lang.String e(com.google.ads.internal.c) -> e
    com.google.ads.AdSize f(com.google.ads.internal.c) -> f
com.google.ads.internal.c$1 -> fD:
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$2 -> fE:
    com.google.ads.c a -> a
    com.google.ads.internal.c b -> b
    void run() -> run
com.google.ads.internal.c$3 -> fF:
    int[] a -> a
com.google.ads.internal.c$a -> fG:
    com.google.ads.internal.d a -> a
    android.webkit.WebView b -> b
    com.google.ads.internal.f c -> c
    com.google.ads.AdRequest$ErrorCode d -> d
    boolean e -> e
    void run() -> run
com.google.ads.internal.c$b -> fH:
    com.google.ads.internal.c a -> a
com.google.ads.internal.c$c -> fI:
    java.lang.String b -> b
    java.lang.String c -> c
    android.webkit.WebView d -> d
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.c$d -> com.google.ads.internal.c$d:
    com.google.ads.internal.c$d a -> a
    com.google.ads.internal.c$d b -> b
    com.google.ads.internal.c$d c -> c
    com.google.ads.internal.c$d d -> d
    java.lang.String e -> e
    com.google.ads.internal.c$d[] f -> f
    com.google.ads.internal.c$d[] values() -> values
    com.google.ads.internal.c$d valueOf(java.lang.String) -> valueOf
com.google.ads.internal.c$e -> fJ:
    com.google.ads.internal.d b -> b
    android.webkit.WebView c -> c
    java.util.LinkedList d -> d
    int e -> e
    boolean f -> f
    java.lang.String g -> g
    com.google.ads.AdSize h -> h
    com.google.ads.internal.c a -> a
    void run() -> run
com.google.ads.internal.d -> com.google.ads.internal.d:
    java.lang.Object a -> a
    com.google.ads.n b -> b
    com.google.ads.internal.c c -> c
    com.google.ads.AdRequest d -> d
    com.google.ads.internal.g e -> e
    com.google.ads.internal.AdWebView f -> f
    com.google.ads.internal.i g -> g
    boolean h -> h
    long i -> i
    boolean j -> j
    boolean k -> k
    boolean l -> l
    boolean m -> m
    boolean n -> n
    android.content.SharedPreferences o -> o
    long p -> p
    com.google.ads.af q -> q
    boolean r -> r
    java.util.LinkedList s -> s
    java.util.LinkedList t -> t
    java.util.LinkedList u -> u
    int v -> v
    java.lang.Boolean w -> w
    com.google.ads.d x -> x
    com.google.ads.e y -> y
    com.google.ads.f z -> z
    java.lang.String A -> A
    java.lang.String B -> B
    void a() -> a
    void b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    void e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    com.google.ads.n i() -> i
    com.google.ads.d j() -> j
    com.google.ads.internal.c k() -> k
    com.google.ads.internal.AdWebView l() -> l
    com.google.ads.internal.i m() -> m
    com.google.ads.internal.g n() -> n
    void a(int) -> a
    int o() -> o
    long p() -> p
    boolean q() -> q
    boolean r() -> r
    boolean s() -> s
    boolean t() -> t
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void a(com.google.ads.c) -> a
    void a(android.view.View,com.google.ads.h,com.google.ads.f,boolean) -> a
    void a(com.google.ads.f,boolean) -> a
    void b(com.google.ads.c) -> b
    void u() -> u
    void v() -> v
    void w() -> w
    void a(java.lang.String,java.lang.String) -> a
    void x() -> x
    void a(com.google.ads.f,java.lang.Boolean) -> a
    void a(java.util.List,java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.String) -> a
    void y() -> y
    void z() -> z
    void A() -> A
    void a(long) -> a
    void a(boolean) -> a
    void a(android.view.View) -> a
    void a(float) -> a
    void b(long) -> b
    void B() -> B
    void C() -> C
    void D() -> D
    void E() -> E
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(java.util.LinkedList) -> a
    void b(boolean) -> b
    void a(com.google.ads.l,boolean,int,int,int,int) -> a
    void a(int,int,int,int) -> a
    java.util.LinkedList F() -> F
com.google.ads.internal.e -> com.google.ads.internal.e:
    java.lang.String a -> a
    java.util.HashMap b -> b
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
com.google.ads.internal.f -> com.google.ads.internal.f:
    com.google.ads.l a -> a
    com.google.ads.internal.f$a b -> b
    boolean c -> c
    boolean d -> d
    java.lang.String e -> e
    java.lang.Thread f -> f
    void a() -> a
    void a(java.net.HttpURLConnection) -> a
    void a(boolean) -> a
    void a(java.lang.String) -> a
    void run() -> run
com.google.ads.internal.f$1 -> fK:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.f$a -> com.google.ads.internal.f$a:
    java.net.HttpURLConnection a(java.net.URL) -> a
com.google.ads.internal.g -> com.google.ads.internal.g:
    java.util.LinkedList a -> a
    long b -> b
    long c -> c
    long d -> d
    java.util.LinkedList e -> e
    long f -> f
    long g -> g
    long h -> h
    long i -> i
    long j -> j
    boolean k -> k
    boolean l -> l
    java.lang.String m -> m
    long n -> n
    java.util.LinkedList o -> o
    java.util.LinkedList p -> p
    void a() -> a
    void b() -> b
    void c() -> c
    void a(com.google.ads.g$a) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void f() -> f
    void g() -> g
    void h() -> h
    void i() -> i
    long j() -> j
    java.lang.String k() -> k
    java.lang.String l() -> l
    long m() -> m
    long n() -> n
    long o() -> o
    long p() -> p
    void q() -> q
    void r() -> r
    long s() -> s
    void t() -> t
    void u() -> u
    long v() -> v
    void w() -> w
    void x() -> x
    boolean y() -> y
    void z() -> z
    boolean A() -> A
    void B() -> B
    void C() -> C
    java.lang.String D() -> D
    void a(java.lang.String) -> a
    long E() -> E
com.google.ads.internal.h -> com.google.ads.internal.h:
    com.google.ads.AdSize b -> b
    boolean c -> c
    boolean d -> d
    com.google.ads.internal.h a -> a
    com.google.ads.internal.h a(com.google.ads.AdSize,android.content.Context) -> a
    com.google.ads.internal.h a(com.google.ads.AdSize) -> a
    boolean a() -> a
    boolean b() -> b
    com.google.ads.AdSize c() -> c
    void b(com.google.ads.AdSize) -> b
    void a(boolean) -> a
com.google.ads.internal.i -> com.google.ads.internal.i:
    com.google.ads.internal.a c -> c
    com.google.ads.internal.d a -> a
    java.util.Map d -> d
    boolean b -> b
    boolean e -> e
    boolean f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    com.google.ads.internal.i a(com.google.ads.internal.d,java.util.Map,boolean,boolean) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void d(boolean) -> d
    boolean a() -> a
com.google.ads.internal.j -> com.google.ads.internal.j:
    java.lang.String a -> a
    android.content.Context b -> b
    java.net.HttpURLConnection a(java.net.URL) -> a
    java.io.BufferedOutputStream a(java.net.HttpURLConnection) -> a
    void run() -> run
com.google.ads.internal.j$a -> com.google.ads.internal.j$a:
    java.lang.String a -> a
    org.json.JSONObject a() -> a
com.google.ads.internal.k -> com.google.ads.internal.k:
    byte[] a -> a
    android.view.ViewGroup a(android.app.Activity,com.google.ads.internal.d) -> a
com.google.ads.internal.k$a -> com.google.ads.internal.k$a:
    android.gesture.GestureStore a -> a
    android.app.Activity b -> b
    com.google.ads.internal.d c -> c
    void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture) -> onGesturePerformed
    com.google.ads.internal.d a(com.google.ads.internal.k$a) -> a
    android.app.Activity b(com.google.ads.internal.k$a) -> b
com.google.ads.internal.k$a$1 -> fL:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$2 -> fM:
    com.google.ads.internal.k$a a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.internal.k$a$3 -> fN:
    java.lang.String a -> a
    com.google.ads.internal.k$a b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.j -> fO:
    com.google.ads.h a -> a
    boolean b -> b
    void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter) -> onReceivedAd
    void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter) -> onPresentScreen
    void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter) -> onDismissScreen
    void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter) -> onLeaveApplication
    void onClick(com.google.ads.mediation.MediationBannerAdapter) -> onClick
com.google.ads.k -> fP:
    com.google.ads.h a -> a
    void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter) -> onReceivedAd
    void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> onPresentScreen
    void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> onDismissScreen
    void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter) -> onLeaveApplication
com.google.ads.l -> com.google.ads.l:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
com.google.ads.m -> com.google.ads.m:
    com.google.ads.m d -> d
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.util.i$b c -> c
    com.google.ads.m a() -> a
com.google.ads.m$a -> com.google.ads.m$a:
    com.google.ads.util.i$c a -> a
    com.google.ads.util.i$c b -> b
    com.google.ads.util.i$c c -> c
    com.google.ads.util.i$c d -> d
    com.google.ads.util.i$c e -> e
    com.google.ads.util.i$c f -> f
    com.google.ads.util.i$c g -> g
    com.google.ads.util.i$c h -> h
    com.google.ads.util.i$c i -> i
    com.google.ads.util.i$c j -> j
    com.google.ads.util.i$c k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
com.google.ads.mediation.EmptyNetworkExtras -> com.google.ads.mediation.EmptyNetworkExtras:
com.google.ads.mediation.MediationAdRequest -> com.google.ads.mediation.MediationAdRequest:
    com.google.ads.AdRequest a -> a
    boolean b -> b
    boolean c -> c
    com.google.ads.AdRequest$Gender getGender() -> getGender
    java.util.Date getBirthday() -> getBirthday
    java.lang.Integer getAgeInYears() -> getAgeInYears
    java.util.Set getKeywords() -> getKeywords
    android.location.Location getLocation() -> getLocation
    boolean isTesting() -> isTesting
com.google.ads.mediation.MediationAdapter -> com.google.ads.mediation.MediationAdapter:
    void destroy() -> destroy
    java.lang.Class getAdditionalParametersType() -> getAdditionalParametersType
    java.lang.Class getServerParametersType() -> getServerParametersType
com.google.ads.mediation.MediationBannerAdapter -> com.google.ads.mediation.MediationBannerAdapter:
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestBannerAd
    android.view.View getBannerView() -> getBannerView
com.google.ads.mediation.MediationBannerListener -> com.google.ads.mediation.MediationBannerListener:
    void onReceivedAd(com.google.ads.mediation.MediationBannerAdapter) -> onReceivedAd
    void onFailedToReceiveAd(com.google.ads.mediation.MediationBannerAdapter,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.mediation.MediationBannerAdapter) -> onPresentScreen
    void onDismissScreen(com.google.ads.mediation.MediationBannerAdapter) -> onDismissScreen
    void onLeaveApplication(com.google.ads.mediation.MediationBannerAdapter) -> onLeaveApplication
    void onClick(com.google.ads.mediation.MediationBannerAdapter) -> onClick
com.google.ads.mediation.MediationInterstitialAdapter -> com.google.ads.mediation.MediationInterstitialAdapter:
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestInterstitialAd
    void showInterstitial() -> showInterstitial
com.google.ads.mediation.MediationInterstitialListener -> com.google.ads.mediation.MediationInterstitialListener:
    void onReceivedAd(com.google.ads.mediation.MediationInterstitialAdapter) -> onReceivedAd
    void onFailedToReceiveAd(com.google.ads.mediation.MediationInterstitialAdapter,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> onPresentScreen
    void onDismissScreen(com.google.ads.mediation.MediationInterstitialAdapter) -> onDismissScreen
    void onLeaveApplication(com.google.ads.mediation.MediationInterstitialAdapter) -> onLeaveApplication
com.google.ads.mediation.MediationServerParameters -> com.google.ads.mediation.MediationServerParameters:
    void load(java.util.Map) -> load
    void a() -> a
com.google.ads.mediation.MediationServerParameters$MappingException -> com.google.ads.mediation.MediationServerParameters$MappingException:
com.google.ads.mediation.MediationServerParameters$Parameter -> com.google.ads.mediation.MediationServerParameters$Parameter:
    java.lang.String name() -> name
    boolean required() -> required
com.google.ads.mediation.NetworkExtras -> com.google.ads.mediation.NetworkExtras:
com.google.ads.mediation.admob.AdMobAdapter -> com.google.ads.mediation.admob.AdMobAdapter:
    com.google.ads.mediation.MediationBannerListener a -> a
    com.google.ads.mediation.MediationInterstitialListener b -> b
    com.google.ads.AdView c -> c
    com.google.ads.InterstitialAd d -> d
    com.google.ads.AdRequest a(android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras) -> a
    com.google.ads.AdView a(android.app.Activity,com.google.ads.AdSize,java.lang.String) -> a
    com.google.ads.InterstitialAd a(android.app.Activity,java.lang.String) -> a
    java.lang.Class getAdditionalParametersType() -> getAdditionalParametersType
    java.lang.Class getServerParametersType() -> getServerParametersType
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras) -> requestBannerAd
    android.view.View getBannerView() -> getBannerView
    void destroy() -> destroy
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.admob.AdMobAdapterServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.admob.AdMobAdapterExtras) -> requestInterstitialAd
    void showInterstitial() -> showInterstitial
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestBannerAd
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestInterstitialAd
    com.google.ads.mediation.MediationBannerListener a(com.google.ads.mediation.admob.AdMobAdapter) -> a
    com.google.ads.mediation.MediationInterstitialListener b(com.google.ads.mediation.admob.AdMobAdapter) -> b
com.google.ads.mediation.admob.AdMobAdapter$a -> fQ:
    com.google.ads.mediation.admob.AdMobAdapter a -> a
    void onReceiveAd(com.google.ads.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.Ad) -> onPresentScreen
    void onDismissScreen(com.google.ads.Ad) -> onDismissScreen
    void onLeaveApplication(com.google.ads.Ad) -> onLeaveApplication
com.google.ads.mediation.admob.AdMobAdapter$b -> fR:
    com.google.ads.mediation.admob.AdMobAdapter a -> a
    void onReceiveAd(com.google.ads.Ad) -> onReceiveAd
    void onFailedToReceiveAd(com.google.ads.Ad,com.google.ads.AdRequest$ErrorCode) -> onFailedToReceiveAd
    void onPresentScreen(com.google.ads.Ad) -> onPresentScreen
    void onDismissScreen(com.google.ads.Ad) -> onDismissScreen
    void onLeaveApplication(com.google.ads.Ad) -> onLeaveApplication
com.google.ads.mediation.admob.AdMobAdapterExtras -> com.google.ads.mediation.admob.AdMobAdapterExtras:
    boolean a -> a
    java.util.Map b -> b
    com.google.ads.mediation.admob.AdMobAdapterExtras setPlusOneOptOut(boolean) -> setPlusOneOptOut
    boolean getPlusOneOptOut() -> getPlusOneOptOut
    com.google.ads.mediation.admob.AdMobAdapterExtras setUseExactAdSize(boolean) -> setUseExactAdSize
    boolean getUseExactAdSize() -> getUseExactAdSize
    java.util.Map getExtras() -> getExtras
    com.google.ads.mediation.admob.AdMobAdapterExtras setExtras(java.util.Map) -> setExtras
    com.google.ads.mediation.admob.AdMobAdapterExtras clearExtras() -> clearExtras
    com.google.ads.mediation.admob.AdMobAdapterExtras addExtra(java.lang.String,java.lang.Object) -> addExtra
com.google.ads.mediation.admob.AdMobAdapterServerParameters -> com.google.ads.mediation.admob.AdMobAdapterServerParameters:
    java.lang.String adUnitId -> adUnitId
    java.lang.String allowHouseAds -> allowHouseAds
com.google.ads.mediation.customevent.CustomEvent -> com.google.ads.mediation.customevent.CustomEvent:
    void destroy() -> destroy
com.google.ads.mediation.customevent.CustomEventAdapter -> com.google.ads.mediation.customevent.CustomEventAdapter:
    java.lang.String a -> a
    com.google.ads.mediation.customevent.CustomEventBanner b -> b
    com.google.ads.mediation.customevent.CustomEventAdapter$a c -> c
    com.google.ads.mediation.customevent.CustomEventInterstitial d -> d
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.customevent.CustomEventExtras) -> requestBannerAd
    android.view.View getBannerView() -> getBannerView
    void showInterstitial() -> showInterstitial
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.customevent.CustomEventServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.customevent.CustomEventExtras) -> requestInterstitialAd
    java.lang.Class getAdditionalParametersType() -> getAdditionalParametersType
    java.lang.Class getServerParametersType() -> getServerParametersType
    void destroy() -> destroy
    void a(java.lang.String,java.lang.Throwable) -> a
    java.lang.Object a$6c0532ca(java.lang.String,java.lang.Class) -> a
    void requestBannerAd(com.google.ads.mediation.MediationBannerListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestBannerAd
    void requestInterstitialAd(com.google.ads.mediation.MediationInterstitialListener,android.app.Activity,com.google.ads.mediation.MediationServerParameters,com.google.ads.mediation.MediationAdRequest,com.google.ads.mediation.NetworkExtras) -> requestInterstitialAd
    java.lang.String a(com.google.ads.mediation.customevent.CustomEventAdapter) -> a
com.google.ads.mediation.customevent.CustomEventAdapter$a -> fS:
    android.view.View b -> b
    com.google.ads.mediation.MediationBannerListener c -> c
    com.google.ads.mediation.customevent.CustomEventAdapter a -> a
    void onReceivedAd(android.view.View) -> onReceivedAd
    void onFailedToReceiveAd() -> onFailedToReceiveAd
    void onClick() -> onClick
    void onPresentScreen() -> onPresentScreen
    void onDismissScreen() -> onDismissScreen
    void onLeaveApplication() -> onLeaveApplication
    android.view.View a() -> a
    java.lang.String b() -> b
com.google.ads.mediation.customevent.CustomEventAdapter$b -> fT:
    com.google.ads.mediation.MediationInterstitialListener b -> b
    com.google.ads.mediation.customevent.CustomEventAdapter a -> a
    void onReceivedAd() -> onReceivedAd
    void onFailedToReceiveAd() -> onFailedToReceiveAd
    void onPresentScreen() -> onPresentScreen
    void onDismissScreen() -> onDismissScreen
    void onLeaveApplication() -> onLeaveApplication
    java.lang.String a() -> a
com.google.ads.mediation.customevent.CustomEventBanner -> com.google.ads.mediation.customevent.CustomEventBanner:
    void requestBannerAd(com.google.ads.mediation.customevent.CustomEventBannerListener,android.app.Activity,java.lang.String,java.lang.String,com.google.ads.AdSize,com.google.ads.mediation.MediationAdRequest,java.lang.Object) -> requestBannerAd
com.google.ads.mediation.customevent.CustomEventBannerListener -> com.google.ads.mediation.customevent.CustomEventBannerListener:
    void onReceivedAd(android.view.View) -> onReceivedAd
    void onClick() -> onClick
com.google.ads.mediation.customevent.CustomEventExtras -> com.google.ads.mediation.customevent.CustomEventExtras:
    java.util.HashMap a -> a
    com.google.ads.mediation.customevent.CustomEventExtras addExtra(java.lang.String,java.lang.Object) -> addExtra
    com.google.ads.mediation.customevent.CustomEventExtras clearExtras() -> clearExtras
    java.lang.Object getExtra(java.lang.String) -> getExtra
    java.lang.Object removeExtra(java.lang.String) -> removeExtra
com.google.ads.mediation.customevent.CustomEventInterstitial -> com.google.ads.mediation.customevent.CustomEventInterstitial:
    void requestInterstitialAd(com.google.ads.mediation.customevent.CustomEventInterstitialListener,android.app.Activity,java.lang.String,java.lang.String,com.google.ads.mediation.MediationAdRequest,java.lang.Object) -> requestInterstitialAd
    void showInterstitial() -> showInterstitial
com.google.ads.mediation.customevent.CustomEventInterstitialListener -> com.google.ads.mediation.customevent.CustomEventInterstitialListener:
    void onReceivedAd() -> onReceivedAd
com.google.ads.mediation.customevent.CustomEventListener -> com.google.ads.mediation.customevent.CustomEventListener:
    void onFailedToReceiveAd() -> onFailedToReceiveAd
    void onPresentScreen() -> onPresentScreen
    void onDismissScreen() -> onDismissScreen
    void onLeaveApplication() -> onLeaveApplication
com.google.ads.mediation.customevent.CustomEventServerParameters -> com.google.ads.mediation.customevent.CustomEventServerParameters:
    java.lang.String label -> label
    java.lang.String className -> className
    java.lang.String parameter -> parameter
com.google.ads.n -> com.google.ads.n:
    com.google.ads.util.i$b a -> a
    com.google.ads.util.i$b b -> b
    com.google.ads.util.i$d c -> c
    com.google.ads.util.i$b d -> d
    com.google.ads.util.i$b e -> e
    com.google.ads.util.i$b f -> f
    com.google.ads.util.i$b g -> g
    com.google.ads.util.i$b h -> h
    com.google.ads.util.i$b i -> i
    com.google.ads.util.i$b j -> j
    com.google.ads.util.i$b k -> k
    com.google.ads.util.i$c l -> l
    com.google.ads.util.i$c m -> m
    com.google.ads.util.i$c n -> n
    com.google.ads.util.i$c o -> o
    com.google.ads.util.i$c p -> p
    com.google.ads.util.i$c q -> q
    com.google.ads.util.i$c r -> r
    com.google.ads.util.i$c s -> s
    com.google.ads.util.i$c t -> t
    boolean a() -> a
    boolean b() -> b
com.google.ads.o -> com.google.ads.o:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.p -> com.google.ads.p:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.q -> com.google.ads.q:
    com.google.ads.internal.a a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.r -> com.google.ads.r:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.s -> com.google.ads.s:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.searchads.SearchAdRequest -> com.google.ads.searchads.SearchAdRequest:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    com.google.ads.searchads.SearchAdRequest$BorderType k -> k
    int l -> l
    java.lang.String m -> m
    void setQuery(java.lang.String) -> setQuery
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundGradient(int,int) -> setBackgroundGradient
    void setHeaderTextColor(int) -> setHeaderTextColor
    void setDescriptionTextColor(int) -> setDescriptionTextColor
    void setAnchorTextColor(int) -> setAnchorTextColor
    void setFontFace(java.lang.String) -> setFontFace
    void setHeaderTextSize(int) -> setHeaderTextSize
    void setBorderColor(int) -> setBorderColor
    void setBorderType(com.google.ads.searchads.SearchAdRequest$BorderType) -> setBorderType
    void setBorderThickness(int) -> setBorderThickness
    void setCustomChannels(java.lang.String) -> setCustomChannels
    java.util.Map getRequestMap(android.content.Context) -> getRequestMap
    java.lang.String a(int) -> a
com.google.ads.searchads.SearchAdRequest$BorderType -> com.google.ads.searchads.SearchAdRequest$BorderType:
    com.google.ads.searchads.SearchAdRequest$BorderType NONE -> NONE
    com.google.ads.searchads.SearchAdRequest$BorderType DASHED -> DASHED
    com.google.ads.searchads.SearchAdRequest$BorderType DOTTED -> DOTTED
    com.google.ads.searchads.SearchAdRequest$BorderType SOLID -> SOLID
    java.lang.String a -> a
    com.google.ads.searchads.SearchAdRequest$BorderType[] b -> b
    com.google.ads.searchads.SearchAdRequest$BorderType[] values() -> values
    com.google.ads.searchads.SearchAdRequest$BorderType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.t -> com.google.ads.t:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.u -> com.google.ads.u:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.util.AdUtil -> com.google.ads.util.AdUtil:
    int a -> a
    java.lang.Boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    android.media.AudioManager f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    boolean a(android.content.Intent,android.content.Context) -> a
    java.lang.String a(java.lang.Readable) -> a
    int a(java.lang.String) -> a
    java.lang.String a(android.content.Context) -> a
    int a() -> a
    int b() -> b
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    boolean b(android.content.Context) -> b
    boolean a(int,int,java.lang.String) -> a
    boolean c(android.content.Context) -> c
    boolean c() -> c
    boolean a(android.net.Uri) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String f(android.content.Context) -> f
    com.google.ads.util.AdUtil$a g(android.content.Context) -> g
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.util.HashMap a(android.location.Location) -> a
    java.util.HashMap b(android.net.Uri) -> b
    boolean d() -> d
    void a(boolean) -> a
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    void a(android.webkit.WebView) -> a
    void a(java.net.HttpURLConnection,android.content.Context) -> a
    java.lang.String a(java.util.Map) -> a
    org.json.JSONObject b(java.util.Map) -> b
    org.json.JSONArray a(java.util.Set) -> a
    int a(android.content.Context,int) -> a
com.google.ads.util.AdUtil$UserActivityReceiver -> com.google.ads.util.AdUtil$UserActivityReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.ads.util.AdUtil$a -> com.google.ads.util.AdUtil$a:
    com.google.ads.util.AdUtil$a a -> a
    com.google.ads.util.AdUtil$a b -> b
    com.google.ads.util.AdUtil$a c -> c
    com.google.ads.util.AdUtil$a d -> d
    com.google.ads.util.AdUtil$a e -> e
    com.google.ads.util.AdUtil$a f -> f
    com.google.ads.util.AdUtil$a[] g -> g
    com.google.ads.util.AdUtil$a[] values() -> values
    com.google.ads.util.AdUtil$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.IcsUtil -> com.google.ads.util.IcsUtil:
com.google.ads.util.IcsUtil$IcsAdWebView -> com.google.ads.util.IcsUtil$IcsAdWebView:
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScrollVertically(int) -> canScrollVertically
com.google.ads.util.IcsUtil$a -> com.google.ads.util.IcsUtil$a:
    void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
com.google.ads.util.a -> com.google.ads.util.a:
    boolean a -> a
    void a(boolean) -> a
    void a(boolean,java.lang.String) -> a
    void b(boolean) -> b
    void b(boolean,java.lang.String) -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
    void a(java.lang.Object,java.lang.Object) -> a
    void a(java.lang.String) -> a
    void c(boolean,java.lang.String) -> c
com.google.ads.util.a$a -> com.google.ads.util.a$a:
com.google.ads.util.b -> com.google.ads.util.b:
    com.google.ads.util.b$b a -> a
    int b -> b
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void b(java.lang.String) -> b
    void b(java.lang.String,java.lang.Throwable) -> b
    void c(java.lang.String) -> c
    void c(java.lang.String,java.lang.Throwable) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(java.lang.String,java.lang.Throwable) -> d
    boolean a(java.lang.String,int) -> a
com.google.ads.util.b$a -> com.google.ads.util.b$a:
    com.google.ads.util.b$a a -> a
    com.google.ads.util.b$a b -> b
    com.google.ads.util.b$a c -> c
    com.google.ads.util.b$a d -> d
    com.google.ads.util.b$a e -> e
    int f -> f
    com.google.ads.util.b$a[] g -> g
    com.google.ads.util.b$a[] values() -> values
    com.google.ads.util.b$a valueOf(java.lang.String) -> valueOf
com.google.ads.util.b$b -> com.google.ads.util.b$b:
    void a(com.google.ads.util.b$a,java.lang.String,java.lang.Throwable) -> a
com.google.ads.util.c -> com.google.ads.util.c:
    boolean a -> a
    byte[] a(java.lang.String) -> a
    byte[] a(byte[],int) -> a
    byte[] a(byte[],int,int,int) -> a
com.google.ads.util.c$a -> com.google.ads.util.c$a:
    byte[] a -> a
    int b -> b
com.google.ads.util.c$b -> com.google.ads.util.c$b:
    int[] c -> c
    int[] d -> d
    int e -> e
    int f -> f
    int[] g -> g
    boolean a(byte[],int,int,boolean) -> a
com.google.ads.util.d -> fU:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.google.ads.util.d d -> d
    com.google.ads.util.d e -> e
    com.google.ads.util.d f -> f
    boolean equals(java.lang.Object) -> equals
    boolean a(java.lang.String,java.lang.String) -> a
    int hashCode() -> hashCode
com.google.ads.util.e -> com.google.ads.util.e:
    int a(android.content.Context,android.util.DisplayMetrics) -> a
    int b(android.content.Context,android.util.DisplayMetrics) -> b
    int a(android.content.Context,float,int) -> a
    void a(android.content.Intent,java.lang.String) -> a
com.google.ads.util.f -> com.google.ads.util.f:
    java.lang.Object b() -> b
com.google.ads.util.g -> com.google.ads.util.g:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
    void a(android.view.View) -> a
    void b(android.view.View) -> b
    void a(android.view.Window) -> a
com.google.ads.util.g$1 -> fV:
    int[] a -> a
com.google.ads.util.g$a -> com.google.ads.util.g$a:
    com.google.ads.n a -> a
    void onCloseWindow(android.webkit.WebView) -> onCloseWindow
    boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    boolean a(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsResult,android.webkit.JsPromptResult,boolean) -> a
com.google.ads.util.g$a$1 -> fW:
    android.webkit.JsResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$2 -> fX:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$3 -> fY:
    android.webkit.JsResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$4 -> fZ:
    android.webkit.JsPromptResult a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.google.ads.util.g$a$5 -> ga:
    android.webkit.JsPromptResult a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$a$6 -> gb:
    android.webkit.JsPromptResult a -> a
    android.widget.EditText b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.ads.util.g$b -> com.google.ads.util.g$b:
    android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    android.webkit.WebResourceResponse a(java.lang.String,android.content.Context) -> a
com.google.ads.util.h -> com.google.ads.util.h:
    void a(android.webkit.WebSettings,com.google.ads.n) -> a
com.google.ads.util.i -> com.google.ads.util.i:
    java.lang.Object a -> a
    int b -> b
    java.util.HashMap c -> c
    int u -> u
    java.util.ArrayList d -> d
    void finalize() -> finalize
    java.lang.String toString() -> toString
    void a(com.google.ads.util.i,com.google.ads.util.i$a) -> a
com.google.ads.util.i$a -> com.google.ads.util.i$a:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.google.ads.util.i c -> c
    java.lang.String toString() -> toString
com.google.ads.util.i$b -> com.google.ads.util.i$b:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$c -> com.google.ads.util.i$c:
    boolean e -> e
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.ads.util.i$d -> com.google.ads.util.i$d:
    com.google.ads.util.i d -> d
    java.lang.Object a() -> a
    java.lang.String toString() -> toString
com.google.ads.v -> com.google.ads.v:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.w -> com.google.ads.w:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.x -> com.google.ads.x:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
    void a(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> a
    void b(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> b
    void c(java.util.HashMap,java.lang.String,com.google.ads.util.i$c) -> c
com.google.ads.y -> com.google.ads.y:
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.ads.z -> com.google.ads.z:
    com.google.ads.AdActivity$StaticMethodWrapper a -> a
    void a(com.google.ads.internal.d,java.util.HashMap,android.webkit.WebView) -> a
com.google.analytics.containertag.common.FunctionType -> com.google.analytics.containertag.common.FunctionType:
    com.google.analytics.containertag.common.FunctionType ADVERTISER_ID -> ADVERTISER_ID
    com.google.analytics.containertag.common.FunctionType ADVERTISING_TRACKING_ENABLED -> ADVERTISING_TRACKING_ENABLED
    com.google.analytics.containertag.common.FunctionType APP_ID -> APP_ID
    com.google.analytics.containertag.common.FunctionType APP_NAME -> APP_NAME
    com.google.analytics.containertag.common.FunctionType APP_VERSION -> APP_VERSION
    com.google.analytics.containertag.common.FunctionType ARBITRARY_JAVASCRIPT -> ARBITRARY_JAVASCRIPT
    com.google.analytics.containertag.common.FunctionType CONSTANT -> CONSTANT
    com.google.analytics.containertag.common.FunctionType COOKIE -> COOKIE
    com.google.analytics.containertag.common.FunctionType CUSTOM_VAR -> CUSTOM_VAR
    com.google.analytics.containertag.common.FunctionType DEVICE_NAME -> DEVICE_NAME
    com.google.analytics.containertag.common.FunctionType DEVICE_TYPE -> DEVICE_TYPE
    com.google.analytics.containertag.common.FunctionType DOM_ELEMENT -> DOM_ELEMENT
    com.google.analytics.containertag.common.FunctionType EVENT -> EVENT
    com.google.analytics.containertag.common.FunctionType FUNCTION_CALL -> FUNCTION_CALL
    com.google.analytics.containertag.common.FunctionType JS_GLOBAL -> JS_GLOBAL
    com.google.analytics.containertag.common.FunctionType LANGUAGE -> LANGUAGE
    com.google.analytics.containertag.common.FunctionType OS_VERSION -> OS_VERSION
    com.google.analytics.containertag.common.FunctionType PLATFORM -> PLATFORM
    com.google.analytics.containertag.common.FunctionType RANDOM -> RANDOM
    com.google.analytics.containertag.common.FunctionType REFERRER -> REFERRER
    com.google.analytics.containertag.common.FunctionType RESOLUTION -> RESOLUTION
    com.google.analytics.containertag.common.FunctionType RUNTIME_VERSION -> RUNTIME_VERSION
    com.google.analytics.containertag.common.FunctionType SDK_VERSION -> SDK_VERSION
    com.google.analytics.containertag.common.FunctionType TIME -> TIME
    com.google.analytics.containertag.common.FunctionType URL -> URL
    com.google.analytics.containertag.common.FunctionType ADWORDS_CLICK_REFERRER -> ADWORDS_CLICK_REFERRER
    com.google.analytics.containertag.common.FunctionType DEVICE_ID -> DEVICE_ID
    com.google.analytics.containertag.common.FunctionType ENCODE -> ENCODE
    com.google.analytics.containertag.common.FunctionType GTM_VERSION -> GTM_VERSION
    com.google.analytics.containertag.common.FunctionType HASH -> HASH
    com.google.analytics.containertag.common.FunctionType INSTALL_REFERRER -> INSTALL_REFERRER
    com.google.analytics.containertag.common.FunctionType JOINER -> JOINER
    com.google.analytics.containertag.common.FunctionType MOBILE_ADWORDS_UNIQUE_ID -> MOBILE_ADWORDS_UNIQUE_ID
    com.google.analytics.containertag.common.FunctionType REGEX_GROUP -> REGEX_GROUP
    com.google.analytics.containertag.common.FunctionType REGEX -> REGEX
    com.google.analytics.containertag.common.FunctionType STARTS_WITH -> STARTS_WITH
    com.google.analytics.containertag.common.FunctionType ENDS_WITH -> ENDS_WITH
    com.google.analytics.containertag.common.FunctionType CONTAINS -> CONTAINS
    com.google.analytics.containertag.common.FunctionType EQUALS -> EQUALS
    com.google.analytics.containertag.common.FunctionType LESS_THAN -> LESS_THAN
    com.google.analytics.containertag.common.FunctionType LESS_EQUALS -> LESS_EQUALS
    com.google.analytics.containertag.common.FunctionType GREATER_THAN -> GREATER_THAN
    com.google.analytics.containertag.common.FunctionType GREATER_EQUALS -> GREATER_EQUALS
    com.google.analytics.containertag.common.FunctionType ARBITRARY_PIXEL -> ARBITRARY_PIXEL
    com.google.analytics.containertag.common.FunctionType ARBITRARY_HTML -> ARBITRARY_HTML
    com.google.analytics.containertag.common.FunctionType GOOGLE_TAG_MANAGER -> GOOGLE_TAG_MANAGER
    com.google.analytics.containertag.common.FunctionType GOOGLE_ANALYTICS -> GOOGLE_ANALYTICS
    com.google.analytics.containertag.common.FunctionType ADWORDS_CONVERSION -> ADWORDS_CONVERSION
    com.google.analytics.containertag.common.FunctionType SMART_PIXEL -> SMART_PIXEL
    com.google.analytics.containertag.common.FunctionType FLOODLIGHT_COUNTER -> FLOODLIGHT_COUNTER
    com.google.analytics.containertag.common.FunctionType FLOODLIGHT_SALES -> FLOODLIGHT_SALES
    com.google.analytics.containertag.common.FunctionType BIZO_INSIGHT -> BIZO_INSIGHT
    com.google.analytics.containertag.common.FunctionType QUANTCAST_MEASUREMENT -> QUANTCAST_MEASUREMENT
    com.google.analytics.containertag.common.FunctionType TARGUS_ADVISOR -> TARGUS_ADVISOR
    com.google.analytics.containertag.common.FunctionType MEDIAPLEX_ROI -> MEDIAPLEX_ROI
    com.google.analytics.containertag.common.FunctionType COMSCORE_MEASUREMENT -> COMSCORE_MEASUREMENT
    com.google.analytics.containertag.common.FunctionType TURN_CONVERSION -> TURN_CONVERSION
    com.google.analytics.containertag.common.FunctionType TURN_DATA_COLLECTION -> TURN_DATA_COLLECTION
    com.google.analytics.containertag.common.FunctionType MEDIA6DEGREES_UNIVERSAL_PIXEL -> MEDIA6DEGREES_UNIVERSAL_PIXEL
    com.google.analytics.containertag.common.FunctionType UNIVERSAL_ANALYTICS -> UNIVERSAL_ANALYTICS
    com.google.analytics.containertag.common.FunctionType MEDIAPLEX_MCT -> MEDIAPLEX_MCT
    com.google.analytics.containertag.common.FunctionType VISUAL_DNA_CONVERSION -> VISUAL_DNA_CONVERSION
    com.google.analytics.containertag.common.FunctionType GOOGLE_AFFILIATE_NETWORK -> GOOGLE_AFFILIATE_NETWORK
    com.google.analytics.containertag.common.FunctionType MARIN_SOFTWARE -> MARIN_SOFTWARE
    com.google.analytics.containertag.common.FunctionType ADROLL_SMART_PIXEL -> ADROLL_SMART_PIXEL
    com.google.analytics.containertag.common.FunctionType CONFIGURATION_VALUE -> CONFIGURATION_VALUE
    com.google.analytics.containertag.common.FunctionType CRITEO -> CRITEO
    com.google.analytics.containertag.common.FunctionType TRUSTED_STORES -> TRUSTED_STORES
    com.google.analytics.containertag.common.FunctionType CLICK_TALE_STANDARD -> CLICK_TALE_STANDARD
    com.google.analytics.containertag.common.FunctionType ALL_LINK_CLICKS -> ALL_LINK_CLICKS
    com.google.analytics.containertag.common.FunctionType ALL_FORM_SUBMISSIONS -> ALL_FORM_SUBMISSIONS
    java.lang.String name -> a
    com.google.analytics.containertag.common.FunctionType[] $VALUES -> b
    com.google.analytics.containertag.common.FunctionType[] values() -> values
    com.google.analytics.containertag.common.FunctionType valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.analytics.containertag.common.Key -> com.google.analytics.containertag.common.Key:
    com.google.analytics.containertag.common.Key ACCOUNT -> ACCOUNT
    com.google.analytics.containertag.common.Key ACTIVITY -> ACTIVITY
    com.google.analytics.containertag.common.Key ADDITIONAL_PARAMS -> ADDITIONAL_PARAMS
    com.google.analytics.containertag.common.Key ADVERTISER -> ADVERTISER
    com.google.analytics.containertag.common.Key ALGORITHM -> ALGORITHM
    com.google.analytics.containertag.common.Key ALLOW_ANCHOR -> ALLOW_ANCHOR
    com.google.analytics.containertag.common.Key ALLOW_HASH -> ALLOW_HASH
    com.google.analytics.containertag.common.Key ALLOW_LINKER -> ALLOW_LINKER
    com.google.analytics.containertag.common.Key ANALYTICS_FIELDS -> ANALYTICS_FIELDS
    com.google.analytics.containertag.common.Key ANALYTICS_PASS_THROUGH -> ANALYTICS_PASS_THROUGH
    com.google.analytics.containertag.common.Key ANONYMIZE_IP -> ANONYMIZE_IP
    com.google.analytics.containertag.common.Key APP_NAME -> APP_NAME
    com.google.analytics.containertag.common.Key APP_VERSION -> APP_VERSION
    com.google.analytics.containertag.common.Key ARG0 -> ARG0
    com.google.analytics.containertag.common.Key ARG1 -> ARG1
    com.google.analytics.containertag.common.Key ATTRIBUTE -> ATTRIBUTE
    com.google.analytics.containertag.common.Key CACHE_BUSTER -> CACHE_BUSTER
    com.google.analytics.containertag.common.Key CACHE_BUSTER_VALUE -> CACHE_BUSTER_VALUE
    com.google.analytics.containertag.common.Key CAMPAIGN_CONTENT_KEY -> CAMPAIGN_CONTENT_KEY
    com.google.analytics.containertag.common.Key CAMPAIGN_CONTENT_OVERRIDE -> CAMPAIGN_CONTENT_OVERRIDE
    com.google.analytics.containertag.common.Key CAMPAIGN_COOKIE_TIMEOUT -> CAMPAIGN_COOKIE_TIMEOUT
    com.google.analytics.containertag.common.Key CAMPAIGN_MEDIUM_KEY -> CAMPAIGN_MEDIUM_KEY
    com.google.analytics.containertag.common.Key CAMPAIGN_MEDIUM_OVERRIDE -> CAMPAIGN_MEDIUM_OVERRIDE
    com.google.analytics.containertag.common.Key CAMPAIGN_NAME_KEY -> CAMPAIGN_NAME_KEY
    com.google.analytics.containertag.common.Key CAMPAIGN_NAME_OVERRIDE -> CAMPAIGN_NAME_OVERRIDE
    com.google.analytics.containertag.common.Key CAMPAIGN_NO_KEY -> CAMPAIGN_NO_KEY
    com.google.analytics.containertag.common.Key CAMPAIGN_SOURCE_KEY -> CAMPAIGN_SOURCE_KEY
    com.google.analytics.containertag.common.Key CAMPAIGN_SOURCE_OVERRIDE -> CAMPAIGN_SOURCE_OVERRIDE
    com.google.analytics.containertag.common.Key CAMPAIGN_TERM_KEY -> CAMPAIGN_TERM_KEY
    com.google.analytics.containertag.common.Key CAMPAIGN_TERM_OVERRIDE -> CAMPAIGN_TERM_OVERRIDE
    com.google.analytics.containertag.common.Key CAMPAIGN_TRACK -> CAMPAIGN_TRACK
    com.google.analytics.containertag.common.Key CATEGORY -> CATEGORY
    com.google.analytics.containertag.common.Key CLICK_ID -> CLICK_ID
    com.google.analytics.containertag.common.Key CLIENT_INFO -> CLIENT_INFO
    com.google.analytics.containertag.common.Key COMPANY -> COMPANY
    com.google.analytics.containertag.common.Key COMPONENT -> COMPONENT
    com.google.analytics.containertag.common.Key CONTENT_DESCRIPTION -> CONTENT_DESCRIPTION
    com.google.analytics.containertag.common.Key CONTENT_GROUP -> CONTENT_GROUP
    com.google.analytics.containertag.common.Key CONVERSION_ID -> CONVERSION_ID
    com.google.analytics.containertag.common.Key COOKIE_DOMAIN -> COOKIE_DOMAIN
    com.google.analytics.containertag.common.Key COOKIE_EXPIRATION -> COOKIE_EXPIRATION
    com.google.analytics.containertag.common.Key COOKIE_NAME -> COOKIE_NAME
    com.google.analytics.containertag.common.Key COOKIE_PATH -> COOKIE_PATH
    com.google.analytics.containertag.common.Key COOKIE_PATH_COPY -> COOKIE_PATH_COPY
    com.google.analytics.containertag.common.Key COUNTRY -> COUNTRY
    com.google.analytics.containertag.common.Key CURRENCY_CODE -> CURRENCY_CODE
    com.google.analytics.containertag.common.Key CUSTOM_VARS -> CUSTOM_VARS
    com.google.analytics.containertag.common.Key CUSTOMER_ID -> CUSTOMER_ID
    com.google.analytics.containertag.common.Key DATA_PROVIDER_ID -> DATA_PROVIDER_ID
    com.google.analytics.containertag.common.Key DEBUG -> DEBUG
    com.google.analytics.containertag.common.Key DECORATE_FORM -> DECORATE_FORM
    com.google.analytics.containertag.common.Key DECORATE_LINK -> DECORATE_LINK
    com.google.analytics.containertag.common.Key DEFAULT_PAGES -> DEFAULT_PAGES
    com.google.analytics.containertag.common.Key DEFAULT_VALUE -> DEFAULT_VALUE
    com.google.analytics.containertag.common.Key DETECT_FLASH -> DETECT_FLASH
    com.google.analytics.containertag.common.Key DETECT_TITLE -> DETECT_TITLE
    com.google.analytics.containertag.common.Key DIMENSION -> DIMENSION
    com.google.analytics.containertag.common.Key DOMAIN_NAME -> DOMAIN_NAME
    com.google.analytics.containertag.common.Key DOUBLE_CLICK -> DOUBLE_CLICK
    com.google.analytics.containertag.common.Key ELEMENT -> ELEMENT
    com.google.analytics.containertag.common.Key EMAIL -> EMAIL
    com.google.analytics.containertag.common.Key EMPLOYEE_RANGE -> EMPLOYEE_RANGE
    com.google.analytics.containertag.common.Key ESCAPE -> ESCAPE
    com.google.analytics.containertag.common.Key EVENT_ACTION -> EVENT_ACTION
    com.google.analytics.containertag.common.Key EVENT_CATEGORY -> EVENT_CATEGORY
    com.google.analytics.containertag.common.Key EVENT_LABEL -> EVENT_LABEL
    com.google.analytics.containertag.common.Key EVENT_VALUE -> EVENT_VALUE
    com.google.analytics.containertag.common.Key EXCEPTION_DESCRIPTION -> EXCEPTION_DESCRIPTION
    com.google.analytics.containertag.common.Key EXCEPTION_FATAL -> EXCEPTION_FATAL
    com.google.analytics.containertag.common.Key FIELDS_TO_SET -> FIELDS_TO_SET
    com.google.analytics.containertag.common.Key FORM_OBJECT -> FORM_OBJECT
    com.google.analytics.containertag.common.Key FUNCTION -> FUNCTION
    com.google.analytics.containertag.common.Key FUNCTION_CALL_NAME -> FUNCTION_CALL_NAME
    com.google.analytics.containertag.common.Key GROUP -> GROUP
    com.google.analytics.containertag.common.Key HIT_CALLBACK -> HIT_CALLBACK
    com.google.analytics.containertag.common.Key HTML -> HTML
    com.google.analytics.containertag.common.Key ID -> ID
    com.google.analytics.containertag.common.Key IGNORED_ORGANIC -> IGNORED_ORGANIC
    com.google.analytics.containertag.common.Key IGNORED_REF -> IGNORED_REF
    com.google.analytics.containertag.common.Key IGNORE_CASE -> IGNORE_CASE
    com.google.analytics.containertag.common.Key INPUT_FORMAT -> INPUT_FORMAT
    com.google.analytics.containertag.common.Key INSTANCE_NAME -> INSTANCE_NAME
    com.google.analytics.containertag.common.Key INSTANCE_LABEL -> INSTANCE_LABEL
    com.google.analytics.containertag.common.Key ITEM_SEPARATOR -> ITEM_SEPARATOR
    com.google.analytics.containertag.common.Key JAVASCRIPT -> JAVASCRIPT
    com.google.analytics.containertag.common.Key KEYWORD -> KEYWORD
    com.google.analytics.containertag.common.Key KEY_VALUE_SEPARATOR -> KEY_VALUE_SEPARATOR
    com.google.analytics.containertag.common.Key LABEL -> LABEL
    com.google.analytics.containertag.common.Key LANGUAGE -> LANGUAGE
    com.google.analytics.containertag.common.Key LINK -> LINK
    com.google.analytics.containertag.common.Key LINK_BY_POST -> LINK_BY_POST
    com.google.analytics.containertag.common.Key LINK_ID -> LINK_ID
    com.google.analytics.containertag.common.Key LIVE_ONLY -> LIVE_ONLY
    com.google.analytics.containertag.common.Key LOCAL_GIF_PATH -> LOCAL_GIF_PATH
    com.google.analytics.containertag.common.Key LOCATION -> LOCATION
    com.google.analytics.containertag.common.Key METRIC -> METRIC
    com.google.analytics.containertag.common.Key NAME -> NAME
    com.google.analytics.containertag.common.Key NAMESPACE_CODE -> NAMESPACE_CODE
    com.google.analytics.containertag.common.Key NAMESPACE_ID -> NAMESPACE_ID
    com.google.analytics.containertag.common.Key NAMESPACE_VALUE -> NAMESPACE_VALUE
    com.google.analytics.containertag.common.Key NONINTERACTION -> NONINTERACTION
    com.google.analytics.containertag.common.Key NOT_DEFAULT_MACRO -> NOT_DEFAULT_MACRO
    com.google.analytics.containertag.common.Key NO_PADDING -> NO_PADDING
    com.google.analytics.containertag.common.Key NUMBER -> NUMBER
    com.google.analytics.containertag.common.Key OPTOUT -> OPTOUT
    com.google.analytics.containertag.common.Key ORDER -> ORDER
    com.google.analytics.containertag.common.Key ORDER_ID -> ORDER_ID
    com.google.analytics.containertag.common.Key ORDER_VALUE -> ORDER_VALUE
    com.google.analytics.containertag.common.Key ORDINAL -> ORDINAL
    com.google.analytics.containertag.common.Key ORGANIC -> ORGANIC
    com.google.analytics.containertag.common.Key OUTPUT_FORMAT -> OUTPUT_FORMAT
    com.google.analytics.containertag.common.Key PAGE -> PAGE
    com.google.analytics.containertag.common.Key PAGE_PATH -> PAGE_PATH
    com.google.analytics.containertag.common.Key PARTITION -> PARTITION
    com.google.analytics.containertag.common.Key PIXEL -> PIXEL
    com.google.analytics.containertag.common.Key PLATFORM -> PLATFORM
    com.google.analytics.containertag.common.Key PRICES -> PRICES
    com.google.analytics.containertag.common.Key PRODUCT -> PRODUCT
    com.google.analytics.containertag.common.Key PRODUCT_ID -> PRODUCT_ID
    com.google.analytics.containertag.common.Key PRODUCT_IDS -> PRODUCT_IDS
    com.google.analytics.containertag.common.Key QUANTITY -> QUANTITY
    com.google.analytics.containertag.common.Key QUERY_KEY -> QUERY_KEY
    com.google.analytics.containertag.common.Key REFERRER -> REFERRER
    com.google.analytics.containertag.common.Key REFERRER_OVERRIDE -> REFERRER_OVERRIDE
    com.google.analytics.containertag.common.Key REVENUE -> REVENUE
    com.google.analytics.containertag.common.Key SAMPLE_RATE -> SAMPLE_RATE
    com.google.analytics.containertag.common.Key SEND_HITS_TO_GOOGLE -> SEND_HITS_TO_GOOGLE
    com.google.analytics.containertag.common.Key SESSION_CONTROL -> SESSION_CONTROL
    com.google.analytics.containertag.common.Key SESSION_COOKIE_TIMEOUT -> SESSION_COOKIE_TIMEOUT
    com.google.analytics.containertag.common.Key SITE_SPEED_SAMPLE_RATE -> SITE_SPEED_SAMPLE_RATE
    com.google.analytics.containertag.common.Key SOCIAL_ACTION -> SOCIAL_ACTION
    com.google.analytics.containertag.common.Key SOCIAL_ACTION_TARGET -> SOCIAL_ACTION_TARGET
    com.google.analytics.containertag.common.Key SOCIAL_NETWORK -> SOCIAL_NETWORK
    com.google.analytics.containertag.common.Key SOCIAL_USE_DATA_LAYER -> SOCIAL_USE_DATA_LAYER
    com.google.analytics.containertag.common.Key SERVER_SIDE -> SERVER_SIDE
    com.google.analytics.containertag.common.Key STANDARD_INDUSTRIAL_CLASSIFICATION -> STANDARD_INDUSTRIAL_CLASSIFICATION
    com.google.analytics.containertag.common.Key STRIP_WWW -> STRIP_WWW
    com.google.analytics.containertag.common.Key TAG_ID -> TAG_ID
    com.google.analytics.containertag.common.Key TARGET_URL -> TARGET_URL
    com.google.analytics.containertag.common.Key TIMING_CATEGORY -> TIMING_CATEGORY
    com.google.analytics.containertag.common.Key TIMING_LABEL -> TIMING_LABEL
    com.google.analytics.containertag.common.Key TIMING_SAMPLE_RATE -> TIMING_SAMPLE_RATE
    com.google.analytics.containertag.common.Key TIMING_VALUE -> TIMING_VALUE
    com.google.analytics.containertag.common.Key TIMING_VAR -> TIMING_VAR
    com.google.analytics.containertag.common.Key TITLE -> TITLE
    com.google.analytics.containertag.common.Key TRACK_APPVIEW -> TRACK_APPVIEW
    com.google.analytics.containertag.common.Key TRACK_EVENT -> TRACK_EVENT
    com.google.analytics.containertag.common.Key TRACK_EXCEPTION -> TRACK_EXCEPTION
    com.google.analytics.containertag.common.Key TRACK_SOCIAL -> TRACK_SOCIAL
    com.google.analytics.containertag.common.Key TRACK_TIMING -> TRACK_TIMING
    com.google.analytics.containertag.common.Key TRACK_TRANSACTION -> TRACK_TRANSACTION
    com.google.analytics.containertag.common.Key TRACKER_NAME -> TRACKER_NAME
    com.google.analytics.containertag.common.Key TRANSACTION_DATALAYER_MAP -> TRANSACTION_DATALAYER_MAP
    com.google.analytics.containertag.common.Key TRANSACTION_ID -> TRANSACTION_ID
    com.google.analytics.containertag.common.Key TRANSACTION_ITEM_DATALAYER_MAP -> TRANSACTION_ITEM_DATALAYER_MAP
    com.google.analytics.containertag.common.Key TRANSACTION_VARIABLE -> TRANSACTION_VARIABLE
    com.google.analytics.containertag.common.Key TYPE -> TYPE
    com.google.analytics.containertag.common.Key UNREPEATABLE -> UNREPEATABLE
    com.google.analytics.containertag.common.Key URL -> URL
    com.google.analytics.containertag.common.Key USE_DATA_LAYER -> USE_DATA_LAYER
    com.google.analytics.containertag.common.Key USE_HASH -> USE_HASH
    com.google.analytics.containertag.common.Key USE_IFRAME -> USE_IFRAME
    com.google.analytics.containertag.common.Key USE_IMAGE_TAG -> USE_IMAGE_TAG
    com.google.analytics.containertag.common.Key USE_POSTSCRIBE -> USE_POSTSCRIBE
    com.google.analytics.containertag.common.Key USER_ID -> USER_ID
    com.google.analytics.containertag.common.Key USER_VARIABLE -> USER_VARIABLE
    com.google.analytics.containertag.common.Key VALUE -> VALUE
    com.google.analytics.containertag.common.Key VALUE_IN_DOLLARS -> VALUE_IN_DOLLARS
    com.google.analytics.containertag.common.Key VISITOR_COOKIE_TIMEOUT -> VISITOR_COOKIE_TIMEOUT
    com.google.analytics.containertag.common.Key WIDGET_IDS -> WIDGET_IDS
    java.lang.String id -> a
    com.google.analytics.containertag.common.Key[] $VALUES -> b
    com.google.analytics.containertag.common.Key[] values() -> values
    com.google.analytics.containertag.common.Key valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.analytics.containertag.proto.Debug -> com.google.analytics.containertag.proto.Debug:
    void registerAllExtensions(com.google.tagmanager.protobuf.ExtensionRegistryLite) -> registerAllExtensions
com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo -> com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo:
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int RULES_EVALUATION_FIELD_NUMBER -> RULES_EVALUATION_FIELD_NUMBER
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo rulesEvaluation_ -> d
    int RESULTS_FIELD_NUMBER -> RESULTS_FIELD_NUMBER
    java.util.List results_ -> e
    byte memoizedIsInitialized -> f
    int memoizedSerializedSize -> g
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> h
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasRulesEvaluation() -> hasRulesEvaluation
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getRulesEvaluation() -> getRulesEvaluation
    java.util.List getResultsList() -> getResultsList
    java.util.List getResultsOrBuilderList() -> getResultsOrBuilderList
    int getResultsCount() -> getResultsCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getResults(int) -> getResults
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder getResultsOrBuilder(int) -> getResultsOrBuilder
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder newBuilder(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo) -> newBuilder
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo access$4502(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo,com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> a
    java.util.List access$4602(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo,java.util.List) -> a
    int access$4702(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo,int) -> a
    java.util.List access$4600(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo) -> a
    com.google.tagmanager.protobuf.ByteString access$4800(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo) -> b
com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$1 -> gc:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder -> com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder:
    int bitField0_ -> a
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo rulesEvaluation_ -> b
    java.util.List results_ -> c
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder clear() -> clear
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder clone() -> clone
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo build() -> build
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder mergeFrom(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasRulesEvaluation() -> hasRulesEvaluation
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getRulesEvaluation() -> getRulesEvaluation
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder setRulesEvaluation(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> setRulesEvaluation
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder setRulesEvaluation(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder) -> setRulesEvaluation
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder mergeRulesEvaluation(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> mergeRulesEvaluation
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder clearRulesEvaluation() -> clearRulesEvaluation
    void ensureResultsIsMutable() -> b
    java.util.List getResultsList() -> getResultsList
    int getResultsCount() -> getResultsCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getResults(int) -> getResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder setResults(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder setResults(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder addResults(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder addResults(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder addResults(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder addResults(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder addAllResults(java.lang.Iterable) -> addAllResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder clearResults() -> clearResults
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder removeResults(int) -> removeResults
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder access$4300() -> a
com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfoOrBuilder -> com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfoOrBuilder:
    boolean hasRulesEvaluation() -> hasRulesEvaluation
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getRulesEvaluation() -> getRulesEvaluation
    java.util.List getResultsList() -> getResultsList
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getResults(int) -> getResults
    int getResultsCount() -> getResultsCount
com.google.analytics.containertag.proto.Debug$DebugEvents -> com.google.analytics.containertag.proto.Debug$DebugEvents:
    com.google.analytics.containertag.proto.Debug$DebugEvents defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int EVENT_FIELD_NUMBER -> EVENT_FIELD_NUMBER
    java.util.List event_ -> c
    byte memoizedIsInitialized -> d
    int memoizedSerializedSize -> e
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> f
    com.google.analytics.containertag.proto.Debug$DebugEvents getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Debug$DebugEvents getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    java.util.List getEventList() -> getEventList
    java.util.List getEventOrBuilderList() -> getEventOrBuilderList
    int getEventCount() -> getEventCount
    com.google.analytics.containertag.proto.Debug$EventInfo getEvent(int) -> getEvent
    com.google.analytics.containertag.proto.Debug$EventInfoOrBuilder getEventOrBuilder(int) -> getEventOrBuilder
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Debug$DebugEvents parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder newBuilder(com.google.analytics.containertag.proto.Debug$DebugEvents) -> newBuilder
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.util.List access$302(com.google.analytics.containertag.proto.Debug$DebugEvents,java.util.List) -> a
    java.util.List access$300(com.google.analytics.containertag.proto.Debug$DebugEvents) -> a
    com.google.tagmanager.protobuf.ByteString access$400(com.google.analytics.containertag.proto.Debug$DebugEvents) -> b
com.google.analytics.containertag.proto.Debug$DebugEvents$1 -> gd:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Debug$DebugEvents$Builder -> com.google.analytics.containertag.proto.Debug$DebugEvents$Builder:
    int bitField0_ -> a
    java.util.List event_ -> b
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder clear() -> clear
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder clone() -> clone
    com.google.analytics.containertag.proto.Debug$DebugEvents getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$DebugEvents build() -> build
    com.google.analytics.containertag.proto.Debug$DebugEvents buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder mergeFrom(com.google.analytics.containertag.proto.Debug$DebugEvents) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void ensureEventIsMutable() -> b
    java.util.List getEventList() -> getEventList
    int getEventCount() -> getEventCount
    com.google.analytics.containertag.proto.Debug$EventInfo getEvent(int) -> getEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder setEvent(int,com.google.analytics.containertag.proto.Debug$EventInfo) -> setEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder setEvent(int,com.google.analytics.containertag.proto.Debug$EventInfo$Builder) -> setEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder addEvent(com.google.analytics.containertag.proto.Debug$EventInfo) -> addEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder addEvent(int,com.google.analytics.containertag.proto.Debug$EventInfo) -> addEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder addEvent(com.google.analytics.containertag.proto.Debug$EventInfo$Builder) -> addEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder addEvent(int,com.google.analytics.containertag.proto.Debug$EventInfo$Builder) -> addEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder addAllEvent(java.lang.Iterable) -> addAllEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder clearEvent() -> clearEvent
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder removeEvent(int) -> removeEvent
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Debug$DebugEvents$Builder access$100() -> a
com.google.analytics.containertag.proto.Debug$DebugEventsOrBuilder -> com.google.analytics.containertag.proto.Debug$DebugEventsOrBuilder:
    java.util.List getEventList() -> getEventList
    com.google.analytics.containertag.proto.Debug$EventInfo getEvent(int) -> getEvent
    int getEventCount() -> getEventCount
com.google.analytics.containertag.proto.Debug$EventInfo -> com.google.analytics.containertag.proto.Debug$EventInfo:
    com.google.analytics.containertag.proto.Debug$EventInfo defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int EVENT_TYPE_FIELD_NUMBER -> EVENT_TYPE_FIELD_NUMBER
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType eventType_ -> d
    int CONTAINER_VERSION_FIELD_NUMBER -> CONTAINER_VERSION_FIELD_NUMBER
    java.lang.Object containerVersion_ -> e
    int CONTAINER_ID_FIELD_NUMBER -> CONTAINER_ID_FIELD_NUMBER
    java.lang.Object containerId_ -> f
    int KEY_FIELD_NUMBER -> KEY_FIELD_NUMBER
    java.lang.Object key_ -> g
    int MACRO_RESULT_FIELD_NUMBER -> MACRO_RESULT_FIELD_NUMBER
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo macroResult_ -> h
    int DATA_LAYER_EVENT_RESULT_FIELD_NUMBER -> DATA_LAYER_EVENT_RESULT_FIELD_NUMBER
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo dataLayerEventResult_ -> i
    byte memoizedIsInitialized -> j
    int memoizedSerializedSize -> k
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> l
    com.google.analytics.containertag.proto.Debug$EventInfo getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Debug$EventInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasEventType() -> hasEventType
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType getEventType() -> getEventType
    boolean hasContainerVersion() -> hasContainerVersion
    java.lang.String getContainerVersion() -> getContainerVersion
    com.google.tagmanager.protobuf.ByteString getContainerVersionBytes() -> getContainerVersionBytes
    boolean hasContainerId() -> hasContainerId
    java.lang.String getContainerId() -> getContainerId
    com.google.tagmanager.protobuf.ByteString getContainerIdBytes() -> getContainerIdBytes
    boolean hasKey() -> hasKey
    java.lang.String getKey() -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes() -> getKeyBytes
    boolean hasMacroResult() -> hasMacroResult
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo getMacroResult() -> getMacroResult
    boolean hasDataLayerEventResult() -> hasDataLayerEventResult
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo getDataLayerEventResult() -> getDataLayerEventResult
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Debug$EventInfo parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$EventInfo parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder newBuilder(com.google.analytics.containertag.proto.Debug$EventInfo) -> newBuilder
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType access$802(com.google.analytics.containertag.proto.Debug$EventInfo,com.google.analytics.containertag.proto.Debug$EventInfo$EventType) -> a
    java.lang.Object access$902(com.google.analytics.containertag.proto.Debug$EventInfo,java.lang.Object) -> a
    java.lang.Object access$1002(com.google.analytics.containertag.proto.Debug$EventInfo,java.lang.Object) -> b
    java.lang.Object access$1102(com.google.analytics.containertag.proto.Debug$EventInfo,java.lang.Object) -> c
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo access$1202(com.google.analytics.containertag.proto.Debug$EventInfo,com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo) -> a
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo access$1302(com.google.analytics.containertag.proto.Debug$EventInfo,com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo) -> a
    int access$1402(com.google.analytics.containertag.proto.Debug$EventInfo,int) -> a
    java.lang.Object access$900(com.google.analytics.containertag.proto.Debug$EventInfo) -> a
    java.lang.Object access$1000(com.google.analytics.containertag.proto.Debug$EventInfo) -> b
    java.lang.Object access$1100(com.google.analytics.containertag.proto.Debug$EventInfo) -> c
    com.google.tagmanager.protobuf.ByteString access$1500(com.google.analytics.containertag.proto.Debug$EventInfo) -> d
com.google.analytics.containertag.proto.Debug$EventInfo$1 -> ge:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Debug$EventInfo$Builder -> com.google.analytics.containertag.proto.Debug$EventInfo$Builder:
    int bitField0_ -> a
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType eventType_ -> b
    java.lang.Object containerVersion_ -> c
    java.lang.Object containerId_ -> d
    java.lang.Object key_ -> e
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo macroResult_ -> f
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo dataLayerEventResult_ -> g
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder clear() -> clear
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder clone() -> clone
    com.google.analytics.containertag.proto.Debug$EventInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$EventInfo build() -> build
    com.google.analytics.containertag.proto.Debug$EventInfo buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder mergeFrom(com.google.analytics.containertag.proto.Debug$EventInfo) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasEventType() -> hasEventType
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType getEventType() -> getEventType
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setEventType(com.google.analytics.containertag.proto.Debug$EventInfo$EventType) -> setEventType
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder clearEventType() -> clearEventType
    boolean hasContainerVersion() -> hasContainerVersion
    java.lang.String getContainerVersion() -> getContainerVersion
    com.google.tagmanager.protobuf.ByteString getContainerVersionBytes() -> getContainerVersionBytes
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setContainerVersion(java.lang.String) -> setContainerVersion
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder clearContainerVersion() -> clearContainerVersion
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setContainerVersionBytes(com.google.tagmanager.protobuf.ByteString) -> setContainerVersionBytes
    boolean hasContainerId() -> hasContainerId
    java.lang.String getContainerId() -> getContainerId
    com.google.tagmanager.protobuf.ByteString getContainerIdBytes() -> getContainerIdBytes
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setContainerId(java.lang.String) -> setContainerId
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder clearContainerId() -> clearContainerId
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setContainerIdBytes(com.google.tagmanager.protobuf.ByteString) -> setContainerIdBytes
    boolean hasKey() -> hasKey
    java.lang.String getKey() -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes() -> getKeyBytes
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setKey(java.lang.String) -> setKey
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder clearKey() -> clearKey
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setKeyBytes(com.google.tagmanager.protobuf.ByteString) -> setKeyBytes
    boolean hasMacroResult() -> hasMacroResult
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo getMacroResult() -> getMacroResult
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setMacroResult(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo) -> setMacroResult
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setMacroResult(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder) -> setMacroResult
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder mergeMacroResult(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo) -> mergeMacroResult
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder clearMacroResult() -> clearMacroResult
    boolean hasDataLayerEventResult() -> hasDataLayerEventResult
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo getDataLayerEventResult() -> getDataLayerEventResult
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setDataLayerEventResult(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo) -> setDataLayerEventResult
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder setDataLayerEventResult(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo$Builder) -> setDataLayerEventResult
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder mergeDataLayerEventResult(com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo) -> mergeDataLayerEventResult
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder clearDataLayerEventResult() -> clearDataLayerEventResult
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Debug$EventInfo$Builder access$600() -> a
com.google.analytics.containertag.proto.Debug$EventInfo$EventType -> com.google.analytics.containertag.proto.Debug$EventInfo$EventType:
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType DATA_LAYER_EVENT -> DATA_LAYER_EVENT
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType MACRO_REFERENCE -> MACRO_REFERENCE
    int DATA_LAYER_EVENT_VALUE -> DATA_LAYER_EVENT_VALUE
    int MACRO_REFERENCE_VALUE -> MACRO_REFERENCE_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType[] $VALUES -> c
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType[] values() -> values
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.containertag.proto.Debug$EventInfo$EventType$1 -> gf:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.containertag.proto.Debug$EventInfoOrBuilder -> com.google.analytics.containertag.proto.Debug$EventInfoOrBuilder:
    boolean hasEventType() -> hasEventType
    com.google.analytics.containertag.proto.Debug$EventInfo$EventType getEventType() -> getEventType
    boolean hasContainerVersion() -> hasContainerVersion
    java.lang.String getContainerVersion() -> getContainerVersion
    com.google.tagmanager.protobuf.ByteString getContainerVersionBytes() -> getContainerVersionBytes
    boolean hasContainerId() -> hasContainerId
    java.lang.String getContainerId() -> getContainerId
    com.google.tagmanager.protobuf.ByteString getContainerIdBytes() -> getContainerIdBytes
    boolean hasKey() -> hasKey
    java.lang.String getKey() -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes() -> getKeyBytes
    boolean hasMacroResult() -> hasMacroResult
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo getMacroResult() -> getMacroResult
    boolean hasDataLayerEventResult() -> hasDataLayerEventResult
    com.google.analytics.containertag.proto.Debug$DataLayerEventEvaluationInfo getDataLayerEventResult() -> getDataLayerEventResult
com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo -> com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo:
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int RULES_EVALUATION_FIELD_NUMBER -> RULES_EVALUATION_FIELD_NUMBER
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo rulesEvaluation_ -> d
    int RESULT_FIELD_NUMBER -> RESULT_FIELD_NUMBER
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall result_ -> e
    byte memoizedIsInitialized -> f
    int memoizedSerializedSize -> g
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> h
    int MACRO_FIELD_NUMBER -> MACRO_FIELD_NUMBER
    com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension macro -> macro
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasRulesEvaluation() -> hasRulesEvaluation
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getRulesEvaluation() -> getRulesEvaluation
    boolean hasResult() -> hasResult
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getResult() -> getResult
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder newBuilder(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo) -> newBuilder
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo access$5202(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo,com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> a
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall access$5302(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> a
    int access$5402(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo,int) -> a
    com.google.tagmanager.protobuf.ByteString access$5500(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo) -> a
com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$1 -> gg:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder -> com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder:
    int bitField0_ -> a
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo rulesEvaluation_ -> b
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall result_ -> c
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder clear() -> clear
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder clone() -> clone
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo build() -> build
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder mergeFrom(com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasRulesEvaluation() -> hasRulesEvaluation
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getRulesEvaluation() -> getRulesEvaluation
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder setRulesEvaluation(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> setRulesEvaluation
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder setRulesEvaluation(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder) -> setRulesEvaluation
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder mergeRulesEvaluation(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> mergeRulesEvaluation
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder clearRulesEvaluation() -> clearRulesEvaluation
    boolean hasResult() -> hasResult
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getResult() -> getResult
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder setResult(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setResult
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder setResult(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setResult
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder mergeResult(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> mergeResult
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder clearResult() -> clearResult
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Debug$MacroEvaluationInfo$Builder access$5000() -> a
com.google.analytics.containertag.proto.Debug$MacroEvaluationInfoOrBuilder -> com.google.analytics.containertag.proto.Debug$MacroEvaluationInfoOrBuilder:
    boolean hasRulesEvaluation() -> hasRulesEvaluation
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getRulesEvaluation() -> getRulesEvaluation
    boolean hasResult() -> hasResult
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getResult() -> getResult
com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall -> com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall:
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int PROPERTIES_FIELD_NUMBER -> PROPERTIES_FIELD_NUMBER
    java.util.List properties_ -> d
    int RESULT_FIELD_NUMBER -> RESULT_FIELD_NUMBER
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value result_ -> e
    int ASSOCIATED_RULE_NAME_FIELD_NUMBER -> ASSOCIATED_RULE_NAME_FIELD_NUMBER
    java.lang.Object associatedRuleName_ -> f
    byte memoizedIsInitialized -> g
    int memoizedSerializedSize -> h
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> i
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    java.util.List getPropertiesList() -> getPropertiesList
    java.util.List getPropertiesOrBuilderList() -> getPropertiesOrBuilderList
    int getPropertiesCount() -> getPropertiesCount
    com.google.analytics.containertag.proto.Debug$ResolvedProperty getProperties(int) -> getProperties
    com.google.analytics.containertag.proto.Debug$ResolvedPropertyOrBuilder getPropertiesOrBuilder(int) -> getPropertiesOrBuilder
    boolean hasResult() -> hasResult
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getResult() -> getResult
    boolean hasAssociatedRuleName() -> hasAssociatedRuleName
    java.lang.String getAssociatedRuleName() -> getAssociatedRuleName
    com.google.tagmanager.protobuf.ByteString getAssociatedRuleNameBytes() -> getAssociatedRuleNameBytes
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder newBuilder(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> newBuilder
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.util.List access$3102(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall,java.util.List) -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value access$3202(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> a
    java.lang.Object access$3302(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall,java.lang.Object) -> a
    int access$3402(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall,int) -> a
    java.util.List access$3100(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> a
    java.lang.Object access$3300(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> b
    com.google.tagmanager.protobuf.ByteString access$3500(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> c
com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$1 -> gh:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder -> com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder:
    int bitField0_ -> a
    java.util.List properties_ -> b
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value result_ -> c
    java.lang.Object associatedRuleName_ -> d
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder clear() -> clear
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder clone() -> clone
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall build() -> build
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder mergeFrom(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void ensurePropertiesIsMutable() -> b
    java.util.List getPropertiesList() -> getPropertiesList
    int getPropertiesCount() -> getPropertiesCount
    com.google.analytics.containertag.proto.Debug$ResolvedProperty getProperties(int) -> getProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder setProperties(int,com.google.analytics.containertag.proto.Debug$ResolvedProperty) -> setProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder setProperties(int,com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder) -> setProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder addProperties(com.google.analytics.containertag.proto.Debug$ResolvedProperty) -> addProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder addProperties(int,com.google.analytics.containertag.proto.Debug$ResolvedProperty) -> addProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder addProperties(com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder) -> addProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder addProperties(int,com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder) -> addProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder addAllProperties(java.lang.Iterable) -> addAllProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder clearProperties() -> clearProperties
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder removeProperties(int) -> removeProperties
    boolean hasResult() -> hasResult
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getResult() -> getResult
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder setResult(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> setResult
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder setResult(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> setResult
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder mergeResult(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> mergeResult
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder clearResult() -> clearResult
    boolean hasAssociatedRuleName() -> hasAssociatedRuleName
    java.lang.String getAssociatedRuleName() -> getAssociatedRuleName
    com.google.tagmanager.protobuf.ByteString getAssociatedRuleNameBytes() -> getAssociatedRuleNameBytes
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder setAssociatedRuleName(java.lang.String) -> setAssociatedRuleName
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder clearAssociatedRuleName() -> clearAssociatedRuleName
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder setAssociatedRuleNameBytes(com.google.tagmanager.protobuf.ByteString) -> setAssociatedRuleNameBytes
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder access$2900() -> a
com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder -> com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder:
    java.util.List getPropertiesList() -> getPropertiesList
    com.google.analytics.containertag.proto.Debug$ResolvedProperty getProperties(int) -> getProperties
    int getPropertiesCount() -> getPropertiesCount
    boolean hasResult() -> hasResult
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getResult() -> getResult
    boolean hasAssociatedRuleName() -> hasAssociatedRuleName
    java.lang.String getAssociatedRuleName() -> getAssociatedRuleName
    com.google.tagmanager.protobuf.ByteString getAssociatedRuleNameBytes() -> getAssociatedRuleNameBytes
com.google.analytics.containertag.proto.Debug$ResolvedProperty -> com.google.analytics.containertag.proto.Debug$ResolvedProperty:
    com.google.analytics.containertag.proto.Debug$ResolvedProperty defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int KEY_FIELD_NUMBER -> KEY_FIELD_NUMBER
    java.lang.Object key_ -> d
    int VALUE_FIELD_NUMBER -> VALUE_FIELD_NUMBER
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value value_ -> e
    byte memoizedIsInitialized -> f
    int memoizedSerializedSize -> g
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> h
    com.google.analytics.containertag.proto.Debug$ResolvedProperty getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Debug$ResolvedProperty getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasKey() -> hasKey
    java.lang.String getKey() -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes() -> getKeyBytes
    boolean hasValue() -> hasValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getValue() -> getValue
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder newBuilder(com.google.analytics.containertag.proto.Debug$ResolvedProperty) -> newBuilder
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object access$5902(com.google.analytics.containertag.proto.Debug$ResolvedProperty,java.lang.Object) -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value access$6002(com.google.analytics.containertag.proto.Debug$ResolvedProperty,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> a
    int access$6102(com.google.analytics.containertag.proto.Debug$ResolvedProperty,int) -> a
    java.lang.Object access$5900(com.google.analytics.containertag.proto.Debug$ResolvedProperty) -> a
    com.google.tagmanager.protobuf.ByteString access$6200(com.google.analytics.containertag.proto.Debug$ResolvedProperty) -> b
com.google.analytics.containertag.proto.Debug$ResolvedProperty$1 -> gi:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder -> com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder:
    int bitField0_ -> a
    java.lang.Object key_ -> b
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value value_ -> c
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder clear() -> clear
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder clone() -> clone
    com.google.analytics.containertag.proto.Debug$ResolvedProperty getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$ResolvedProperty build() -> build
    com.google.analytics.containertag.proto.Debug$ResolvedProperty buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder mergeFrom(com.google.analytics.containertag.proto.Debug$ResolvedProperty) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasKey() -> hasKey
    java.lang.String getKey() -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes() -> getKeyBytes
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder setKey(java.lang.String) -> setKey
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder clearKey() -> clearKey
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder setKeyBytes(com.google.tagmanager.protobuf.ByteString) -> setKeyBytes
    boolean hasValue() -> hasValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getValue() -> getValue
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder setValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> setValue
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder setValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> setValue
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder mergeValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> mergeValue
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder clearValue() -> clearValue
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Debug$ResolvedProperty$Builder access$5700() -> a
com.google.analytics.containertag.proto.Debug$ResolvedPropertyOrBuilder -> com.google.analytics.containertag.proto.Debug$ResolvedPropertyOrBuilder:
    boolean hasKey() -> hasKey
    java.lang.String getKey() -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes() -> getKeyBytes
    boolean hasValue() -> hasValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getValue() -> getValue
com.google.analytics.containertag.proto.Debug$ResolvedRule -> com.google.analytics.containertag.proto.Debug$ResolvedRule:
    com.google.analytics.containertag.proto.Debug$ResolvedRule defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int POSITIVE_PREDICATES_FIELD_NUMBER -> POSITIVE_PREDICATES_FIELD_NUMBER
    java.util.List positivePredicates_ -> d
    int NEGATIVE_PREDICATES_FIELD_NUMBER -> NEGATIVE_PREDICATES_FIELD_NUMBER
    java.util.List negativePredicates_ -> e
    int ADD_TAGS_FIELD_NUMBER -> ADD_TAGS_FIELD_NUMBER
    java.util.List addTags_ -> f
    int REMOVE_TAGS_FIELD_NUMBER -> REMOVE_TAGS_FIELD_NUMBER
    java.util.List removeTags_ -> g
    int ADD_MACROS_FIELD_NUMBER -> ADD_MACROS_FIELD_NUMBER
    java.util.List addMacros_ -> h
    int REMOVE_MACROS_FIELD_NUMBER -> REMOVE_MACROS_FIELD_NUMBER
    java.util.List removeMacros_ -> i
    int RESULT_FIELD_NUMBER -> RESULT_FIELD_NUMBER
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value result_ -> j
    byte memoizedIsInitialized -> k
    int memoizedSerializedSize -> l
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> m
    com.google.analytics.containertag.proto.Debug$ResolvedRule getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Debug$ResolvedRule getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    java.util.List getPositivePredicatesList() -> getPositivePredicatesList
    java.util.List getPositivePredicatesOrBuilderList() -> getPositivePredicatesOrBuilderList
    int getPositivePredicatesCount() -> getPositivePredicatesCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getPositivePredicates(int) -> getPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder getPositivePredicatesOrBuilder(int) -> getPositivePredicatesOrBuilder
    java.util.List getNegativePredicatesList() -> getNegativePredicatesList
    java.util.List getNegativePredicatesOrBuilderList() -> getNegativePredicatesOrBuilderList
    int getNegativePredicatesCount() -> getNegativePredicatesCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getNegativePredicates(int) -> getNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder getNegativePredicatesOrBuilder(int) -> getNegativePredicatesOrBuilder
    java.util.List getAddTagsList() -> getAddTagsList
    java.util.List getAddTagsOrBuilderList() -> getAddTagsOrBuilderList
    int getAddTagsCount() -> getAddTagsCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getAddTags(int) -> getAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder getAddTagsOrBuilder(int) -> getAddTagsOrBuilder
    java.util.List getRemoveTagsList() -> getRemoveTagsList
    java.util.List getRemoveTagsOrBuilderList() -> getRemoveTagsOrBuilderList
    int getRemoveTagsCount() -> getRemoveTagsCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getRemoveTags(int) -> getRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder getRemoveTagsOrBuilder(int) -> getRemoveTagsOrBuilder
    java.util.List getAddMacrosList() -> getAddMacrosList
    java.util.List getAddMacrosOrBuilderList() -> getAddMacrosOrBuilderList
    int getAddMacrosCount() -> getAddMacrosCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getAddMacros(int) -> getAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder getAddMacrosOrBuilder(int) -> getAddMacrosOrBuilder
    java.util.List getRemoveMacrosList() -> getRemoveMacrosList
    java.util.List getRemoveMacrosOrBuilderList() -> getRemoveMacrosOrBuilderList
    int getRemoveMacrosCount() -> getRemoveMacrosCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getRemoveMacros(int) -> getRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder getRemoveMacrosOrBuilder(int) -> getRemoveMacrosOrBuilder
    boolean hasResult() -> hasResult
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getResult() -> getResult
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder newBuilder(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> newBuilder
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.util.List access$1902(com.google.analytics.containertag.proto.Debug$ResolvedRule,java.util.List) -> a
    java.util.List access$2002(com.google.analytics.containertag.proto.Debug$ResolvedRule,java.util.List) -> b
    java.util.List access$2102(com.google.analytics.containertag.proto.Debug$ResolvedRule,java.util.List) -> c
    java.util.List access$2202(com.google.analytics.containertag.proto.Debug$ResolvedRule,java.util.List) -> d
    java.util.List access$2302(com.google.analytics.containertag.proto.Debug$ResolvedRule,java.util.List) -> e
    java.util.List access$2402(com.google.analytics.containertag.proto.Debug$ResolvedRule,java.util.List) -> f
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value access$2502(com.google.analytics.containertag.proto.Debug$ResolvedRule,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> a
    int access$2602(com.google.analytics.containertag.proto.Debug$ResolvedRule,int) -> a
    java.util.List access$1900(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> a
    java.util.List access$2000(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> b
    java.util.List access$2100(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> c
    java.util.List access$2200(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> d
    java.util.List access$2300(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> e
    java.util.List access$2400(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> f
    com.google.tagmanager.protobuf.ByteString access$2700(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> g
com.google.analytics.containertag.proto.Debug$ResolvedRule$1 -> gj:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder -> com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder:
    int bitField0_ -> a
    java.util.List positivePredicates_ -> b
    java.util.List negativePredicates_ -> c
    java.util.List addTags_ -> d
    java.util.List removeTags_ -> e
    java.util.List addMacros_ -> f
    java.util.List removeMacros_ -> g
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value result_ -> h
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clear() -> clear
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clone() -> clone
    com.google.analytics.containertag.proto.Debug$ResolvedRule getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$ResolvedRule build() -> build
    com.google.analytics.containertag.proto.Debug$ResolvedRule buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder mergeFrom(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void ensurePositivePredicatesIsMutable() -> b
    java.util.List getPositivePredicatesList() -> getPositivePredicatesList
    int getPositivePredicatesCount() -> getPositivePredicatesCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getPositivePredicates(int) -> getPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setPositivePredicates(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setPositivePredicates(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addPositivePredicates(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addPositivePredicates(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addPositivePredicates(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addPositivePredicates(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAllPositivePredicates(java.lang.Iterable) -> addAllPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clearPositivePredicates() -> clearPositivePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder removePositivePredicates(int) -> removePositivePredicates
    void ensureNegativePredicatesIsMutable() -> c
    java.util.List getNegativePredicatesList() -> getNegativePredicatesList
    int getNegativePredicatesCount() -> getNegativePredicatesCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getNegativePredicates(int) -> getNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setNegativePredicates(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setNegativePredicates(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addNegativePredicates(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addNegativePredicates(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addNegativePredicates(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addNegativePredicates(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAllNegativePredicates(java.lang.Iterable) -> addAllNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clearNegativePredicates() -> clearNegativePredicates
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder removeNegativePredicates(int) -> removeNegativePredicates
    void ensureAddTagsIsMutable() -> d
    java.util.List getAddTagsList() -> getAddTagsList
    int getAddTagsCount() -> getAddTagsCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getAddTags(int) -> getAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setAddTags(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setAddTags(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAddTags(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAddTags(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAddTags(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAddTags(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAllAddTags(java.lang.Iterable) -> addAllAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clearAddTags() -> clearAddTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder removeAddTags(int) -> removeAddTags
    void ensureRemoveTagsIsMutable() -> e
    java.util.List getRemoveTagsList() -> getRemoveTagsList
    int getRemoveTagsCount() -> getRemoveTagsCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getRemoveTags(int) -> getRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setRemoveTags(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setRemoveTags(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addRemoveTags(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addRemoveTags(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addRemoveTags(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addRemoveTags(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAllRemoveTags(java.lang.Iterable) -> addAllRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clearRemoveTags() -> clearRemoveTags
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder removeRemoveTags(int) -> removeRemoveTags
    void ensureAddMacrosIsMutable() -> f
    java.util.List getAddMacrosList() -> getAddMacrosList
    int getAddMacrosCount() -> getAddMacrosCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getAddMacros(int) -> getAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setAddMacros(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setAddMacros(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAddMacros(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAddMacros(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAddMacros(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAddMacros(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAllAddMacros(java.lang.Iterable) -> addAllAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clearAddMacros() -> clearAddMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder removeAddMacros(int) -> removeAddMacros
    void ensureRemoveMacrosIsMutable() -> g
    java.util.List getRemoveMacrosList() -> getRemoveMacrosList
    int getRemoveMacrosCount() -> getRemoveMacrosCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getRemoveMacros(int) -> getRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setRemoveMacros(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setRemoveMacros(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addRemoveMacros(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addRemoveMacros(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addRemoveMacros(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addRemoveMacros(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder addAllRemoveMacros(java.lang.Iterable) -> addAllRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clearRemoveMacros() -> clearRemoveMacros
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder removeRemoveMacros(int) -> removeRemoveMacros
    boolean hasResult() -> hasResult
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getResult() -> getResult
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setResult(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> setResult
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder setResult(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> setResult
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder mergeResult(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> mergeResult
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder clearResult() -> clearResult
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder access$1700() -> a
com.google.analytics.containertag.proto.Debug$ResolvedRuleOrBuilder -> com.google.analytics.containertag.proto.Debug$ResolvedRuleOrBuilder:
    java.util.List getPositivePredicatesList() -> getPositivePredicatesList
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getPositivePredicates(int) -> getPositivePredicates
    int getPositivePredicatesCount() -> getPositivePredicatesCount
    java.util.List getNegativePredicatesList() -> getNegativePredicatesList
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getNegativePredicates(int) -> getNegativePredicates
    int getNegativePredicatesCount() -> getNegativePredicatesCount
    java.util.List getAddTagsList() -> getAddTagsList
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getAddTags(int) -> getAddTags
    int getAddTagsCount() -> getAddTagsCount
    java.util.List getRemoveTagsList() -> getRemoveTagsList
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getRemoveTags(int) -> getRemoveTags
    int getRemoveTagsCount() -> getRemoveTagsCount
    java.util.List getAddMacrosList() -> getAddMacrosList
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getAddMacros(int) -> getAddMacros
    int getAddMacrosCount() -> getAddMacrosCount
    java.util.List getRemoveMacrosList() -> getRemoveMacrosList
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getRemoveMacros(int) -> getRemoveMacros
    int getRemoveMacrosCount() -> getRemoveMacrosCount
    boolean hasResult() -> hasResult
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getResult() -> getResult
com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo -> com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo:
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int RULES_FIELD_NUMBER -> RULES_FIELD_NUMBER
    java.util.List rules_ -> c
    int ENABLED_FUNCTIONS_FIELD_NUMBER -> ENABLED_FUNCTIONS_FIELD_NUMBER
    java.util.List enabledFunctions_ -> d
    byte memoizedIsInitialized -> e
    int memoizedSerializedSize -> f
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> g
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    java.util.List getRulesList() -> getRulesList
    java.util.List getRulesOrBuilderList() -> getRulesOrBuilderList
    int getRulesCount() -> getRulesCount
    com.google.analytics.containertag.proto.Debug$ResolvedRule getRules(int) -> getRules
    com.google.analytics.containertag.proto.Debug$ResolvedRuleOrBuilder getRulesOrBuilder(int) -> getRulesOrBuilder
    java.util.List getEnabledFunctionsList() -> getEnabledFunctionsList
    java.util.List getEnabledFunctionsOrBuilderList() -> getEnabledFunctionsOrBuilderList
    int getEnabledFunctionsCount() -> getEnabledFunctionsCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getEnabledFunctions(int) -> getEnabledFunctions
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCallOrBuilder getEnabledFunctionsOrBuilder(int) -> getEnabledFunctionsOrBuilder
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder newBuilder(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> newBuilder
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.util.List access$3902(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo,java.util.List) -> a
    java.util.List access$4002(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo,java.util.List) -> b
    java.util.List access$3900(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> a
    java.util.List access$4000(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> b
    com.google.tagmanager.protobuf.ByteString access$4100(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> c
com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$1 -> gk:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder -> com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder:
    int bitField0_ -> a
    java.util.List rules_ -> b
    java.util.List enabledFunctions_ -> c
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder clear() -> clear
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder clone() -> clone
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo build() -> build
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder mergeFrom(com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void ensureRulesIsMutable() -> b
    java.util.List getRulesList() -> getRulesList
    int getRulesCount() -> getRulesCount
    com.google.analytics.containertag.proto.Debug$ResolvedRule getRules(int) -> getRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder setRules(int,com.google.analytics.containertag.proto.Debug$ResolvedRule) -> setRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder setRules(int,com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder) -> setRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addRules(com.google.analytics.containertag.proto.Debug$ResolvedRule) -> addRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addRules(int,com.google.analytics.containertag.proto.Debug$ResolvedRule) -> addRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addRules(com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder) -> addRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addRules(int,com.google.analytics.containertag.proto.Debug$ResolvedRule$Builder) -> addRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addAllRules(java.lang.Iterable) -> addAllRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder clearRules() -> clearRules
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder removeRules(int) -> removeRules
    void ensureEnabledFunctionsIsMutable() -> c
    java.util.List getEnabledFunctionsList() -> getEnabledFunctionsList
    int getEnabledFunctionsCount() -> getEnabledFunctionsCount
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getEnabledFunctions(int) -> getEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder setEnabledFunctions(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> setEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder setEnabledFunctions(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> setEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addEnabledFunctions(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addEnabledFunctions(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall) -> addEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addEnabledFunctions(com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addEnabledFunctions(int,com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall$Builder) -> addEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder addAllEnabledFunctions(java.lang.Iterable) -> addAllEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder clearEnabledFunctions() -> clearEnabledFunctions
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder removeEnabledFunctions(int) -> removeEnabledFunctions
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfo$Builder access$3700() -> a
com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfoOrBuilder -> com.google.analytics.containertag.proto.Debug$RuleEvaluationStepInfoOrBuilder:
    java.util.List getRulesList() -> getRulesList
    com.google.analytics.containertag.proto.Debug$ResolvedRule getRules(int) -> getRules
    int getRulesCount() -> getRulesCount
    java.util.List getEnabledFunctionsList() -> getEnabledFunctionsList
    com.google.analytics.containertag.proto.Debug$ResolvedFunctionCall getEnabledFunctions(int) -> getEnabledFunctions
    int getEnabledFunctionsCount() -> getEnabledFunctionsCount
com.google.analytics.containertag.proto.MutableDebug -> com.google.analytics.containertag.proto.MutableDebug:
    void registerAllExtensions(com.google.tagmanager.protobuf.ExtensionRegistryLite) -> registerAllExtensions
com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo -> com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo:
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int RULES_EVALUATION_FIELD_NUMBER -> RULES_EVALUATION_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo rulesEvaluation_ -> c
    int RESULTS_FIELD_NUMBER -> RESULTS_FIELD_NUMBER
    java.util.List results_ -> d
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> e
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensureRulesEvaluationInitialized() -> b
    boolean hasRulesEvaluation() -> hasRulesEvaluation
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo getRulesEvaluation() -> getRulesEvaluation
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo getMutableRulesEvaluation() -> getMutableRulesEvaluation
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo setRulesEvaluation(com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo) -> setRulesEvaluation
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo clearRulesEvaluation() -> clearRulesEvaluation
    void ensureResultsInitialized() -> c
    int getResultsCount() -> getResultsCount
    java.util.List getResultsList() -> getResultsList
    java.util.List getMutableResultsList() -> getMutableResultsList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getResults(int) -> getResults
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutableResults(int) -> getMutableResults
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addResults() -> addResults
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo addResults(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> addResults
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo addAllResults(java.lang.Iterable) -> addAllResults
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo setResults(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setResults
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo clearResults() -> clearResults
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo clone() -> clone
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo mergeFrom(com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableDebug$DebugEvents -> com.google.analytics.containertag.proto.MutableDebug$DebugEvents:
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int EVENT_FIELD_NUMBER -> EVENT_FIELD_NUMBER
    java.util.List event_ -> b
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> c
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensureEventInitialized() -> b
    int getEventCount() -> getEventCount
    java.util.List getEventList() -> getEventList
    java.util.List getMutableEventList() -> getMutableEventList
    com.google.analytics.containertag.proto.MutableDebug$EventInfo getEvent(int) -> getEvent
    com.google.analytics.containertag.proto.MutableDebug$EventInfo getMutableEvent(int) -> getMutableEvent
    com.google.analytics.containertag.proto.MutableDebug$EventInfo addEvent() -> addEvent
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents addEvent(com.google.analytics.containertag.proto.MutableDebug$EventInfo) -> addEvent
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents addAllEvent(java.lang.Iterable) -> addAllEvent
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents setEvent(int,com.google.analytics.containertag.proto.MutableDebug$EventInfo) -> setEvent
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents clearEvent() -> clearEvent
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents clone() -> clone
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents mergeFrom(com.google.analytics.containertag.proto.MutableDebug$DebugEvents) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableDebug$DebugEvents clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableDebug$EventInfo -> com.google.analytics.containertag.proto.MutableDebug$EventInfo:
    com.google.analytics.containertag.proto.MutableDebug$EventInfo defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int EVENT_TYPE_FIELD_NUMBER -> EVENT_TYPE_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType eventType_ -> c
    int CONTAINER_VERSION_FIELD_NUMBER -> CONTAINER_VERSION_FIELD_NUMBER
    java.lang.Object containerVersion_ -> d
    int CONTAINER_ID_FIELD_NUMBER -> CONTAINER_ID_FIELD_NUMBER
    java.lang.Object containerId_ -> e
    int KEY_FIELD_NUMBER -> KEY_FIELD_NUMBER
    java.lang.Object key_ -> f
    int MACRO_RESULT_FIELD_NUMBER -> MACRO_RESULT_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo macroResult_ -> g
    int DATA_LAYER_EVENT_RESULT_FIELD_NUMBER -> DATA_LAYER_EVENT_RESULT_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo dataLayerEventResult_ -> h
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> i
    com.google.analytics.containertag.proto.MutableDebug$EventInfo newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableDebug$EventInfo newMessage() -> newMessage
    void initFields() -> b
    com.google.analytics.containertag.proto.MutableDebug$EventInfo getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableDebug$EventInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasEventType() -> hasEventType
    com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType getEventType() -> getEventType
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setEventType(com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType) -> setEventType
    com.google.analytics.containertag.proto.MutableDebug$EventInfo clearEventType() -> clearEventType
    boolean hasContainerVersion() -> hasContainerVersion
    java.lang.String getContainerVersion() -> getContainerVersion
    byte[] getContainerVersionAsBytes() -> getContainerVersionAsBytes
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setContainerVersion(java.lang.String) -> setContainerVersion
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setContainerVersionAsBytes(byte[]) -> setContainerVersionAsBytes
    com.google.analytics.containertag.proto.MutableDebug$EventInfo clearContainerVersion() -> clearContainerVersion
    boolean hasContainerId() -> hasContainerId
    java.lang.String getContainerId() -> getContainerId
    byte[] getContainerIdAsBytes() -> getContainerIdAsBytes
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setContainerId(java.lang.String) -> setContainerId
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setContainerIdAsBytes(byte[]) -> setContainerIdAsBytes
    com.google.analytics.containertag.proto.MutableDebug$EventInfo clearContainerId() -> clearContainerId
    boolean hasKey() -> hasKey
    java.lang.String getKey() -> getKey
    byte[] getKeyAsBytes() -> getKeyAsBytes
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setKey(java.lang.String) -> setKey
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setKeyAsBytes(byte[]) -> setKeyAsBytes
    com.google.analytics.containertag.proto.MutableDebug$EventInfo clearKey() -> clearKey
    void ensureMacroResultInitialized() -> c
    boolean hasMacroResult() -> hasMacroResult
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo getMacroResult() -> getMacroResult
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo getMutableMacroResult() -> getMutableMacroResult
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setMacroResult(com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo) -> setMacroResult
    com.google.analytics.containertag.proto.MutableDebug$EventInfo clearMacroResult() -> clearMacroResult
    void ensureDataLayerEventResultInitialized() -> d
    boolean hasDataLayerEventResult() -> hasDataLayerEventResult
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo getDataLayerEventResult() -> getDataLayerEventResult
    com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo getMutableDataLayerEventResult() -> getMutableDataLayerEventResult
    com.google.analytics.containertag.proto.MutableDebug$EventInfo setDataLayerEventResult(com.google.analytics.containertag.proto.MutableDebug$DataLayerEventEvaluationInfo) -> setDataLayerEventResult
    com.google.analytics.containertag.proto.MutableDebug$EventInfo clearDataLayerEventResult() -> clearDataLayerEventResult
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableDebug$EventInfo clone() -> clone
    com.google.analytics.containertag.proto.MutableDebug$EventInfo mergeFrom(com.google.analytics.containertag.proto.MutableDebug$EventInfo) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableDebug$EventInfo clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType -> com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType:
    com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType DATA_LAYER_EVENT -> DATA_LAYER_EVENT
    com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType MACRO_REFERENCE -> MACRO_REFERENCE
    int DATA_LAYER_EVENT_VALUE -> DATA_LAYER_EVENT_VALUE
    int MACRO_REFERENCE_VALUE -> MACRO_REFERENCE_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType[] $VALUES -> c
    com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType[] values() -> values
    com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.containertag.proto.MutableDebug$EventInfo$EventType$1 -> gl:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo -> com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo:
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int RULES_EVALUATION_FIELD_NUMBER -> RULES_EVALUATION_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo rulesEvaluation_ -> c
    int RESULT_FIELD_NUMBER -> RESULT_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall result_ -> d
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> e
    int MACRO_FIELD_NUMBER -> MACRO_FIELD_NUMBER
    com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension macro -> macro
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo newMessage() -> newMessage
    void initFields() -> b
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensureRulesEvaluationInitialized() -> c
    boolean hasRulesEvaluation() -> hasRulesEvaluation
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo getRulesEvaluation() -> getRulesEvaluation
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo getMutableRulesEvaluation() -> getMutableRulesEvaluation
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo setRulesEvaluation(com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo) -> setRulesEvaluation
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo clearRulesEvaluation() -> clearRulesEvaluation
    void ensureResultInitialized() -> d
    boolean hasResult() -> hasResult
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getResult() -> getResult
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutableResult() -> getMutableResult
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo setResult(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setResult
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo clearResult() -> clearResult
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo clone() -> clone
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo mergeFrom(com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableDebug$MacroEvaluationInfo clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall -> com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall:
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int PROPERTIES_FIELD_NUMBER -> PROPERTIES_FIELD_NUMBER
    java.util.List properties_ -> c
    int RESULT_FIELD_NUMBER -> RESULT_FIELD_NUMBER
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value result_ -> d
    int ASSOCIATED_RULE_NAME_FIELD_NUMBER -> ASSOCIATED_RULE_NAME_FIELD_NUMBER
    java.lang.Object associatedRuleName_ -> e
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> f
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensurePropertiesInitialized() -> b
    int getPropertiesCount() -> getPropertiesCount
    java.util.List getPropertiesList() -> getPropertiesList
    java.util.List getMutablePropertiesList() -> getMutablePropertiesList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty getProperties(int) -> getProperties
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty getMutableProperties(int) -> getMutableProperties
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty addProperties() -> addProperties
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addProperties(com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty) -> addProperties
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addAllProperties(java.lang.Iterable) -> addAllProperties
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall setProperties(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty) -> setProperties
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall clearProperties() -> clearProperties
    void ensureResultInitialized() -> c
    boolean hasResult() -> hasResult
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getResult() -> getResult
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMutableResult() -> getMutableResult
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall setResult(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> setResult
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall clearResult() -> clearResult
    boolean hasAssociatedRuleName() -> hasAssociatedRuleName
    java.lang.String getAssociatedRuleName() -> getAssociatedRuleName
    byte[] getAssociatedRuleNameAsBytes() -> getAssociatedRuleNameAsBytes
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall setAssociatedRuleName(java.lang.String) -> setAssociatedRuleName
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall setAssociatedRuleNameAsBytes(byte[]) -> setAssociatedRuleNameAsBytes
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall clearAssociatedRuleName() -> clearAssociatedRuleName
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall clone() -> clone
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall mergeFrom(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty -> com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty:
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int KEY_FIELD_NUMBER -> KEY_FIELD_NUMBER
    java.lang.Object key_ -> c
    int VALUE_FIELD_NUMBER -> VALUE_FIELD_NUMBER
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value value_ -> d
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> e
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasKey() -> hasKey
    java.lang.String getKey() -> getKey
    byte[] getKeyAsBytes() -> getKeyAsBytes
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty setKey(java.lang.String) -> setKey
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty setKeyAsBytes(byte[]) -> setKeyAsBytes
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty clearKey() -> clearKey
    void ensureValueInitialized() -> b
    boolean hasValue() -> hasValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getValue() -> getValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMutableValue() -> getMutableValue
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty setValue(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> setValue
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty clearValue() -> clearValue
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty clone() -> clone
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty mergeFrom(com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableDebug$ResolvedProperty clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableDebug$ResolvedRule -> com.google.analytics.containertag.proto.MutableDebug$ResolvedRule:
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int POSITIVE_PREDICATES_FIELD_NUMBER -> POSITIVE_PREDICATES_FIELD_NUMBER
    java.util.List positivePredicates_ -> c
    int NEGATIVE_PREDICATES_FIELD_NUMBER -> NEGATIVE_PREDICATES_FIELD_NUMBER
    java.util.List negativePredicates_ -> d
    int ADD_TAGS_FIELD_NUMBER -> ADD_TAGS_FIELD_NUMBER
    java.util.List addTags_ -> e
    int REMOVE_TAGS_FIELD_NUMBER -> REMOVE_TAGS_FIELD_NUMBER
    java.util.List removeTags_ -> f
    int ADD_MACROS_FIELD_NUMBER -> ADD_MACROS_FIELD_NUMBER
    java.util.List addMacros_ -> g
    int REMOVE_MACROS_FIELD_NUMBER -> REMOVE_MACROS_FIELD_NUMBER
    java.util.List removeMacros_ -> h
    int RESULT_FIELD_NUMBER -> RESULT_FIELD_NUMBER
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value result_ -> i
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> j
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensurePositivePredicatesInitialized() -> b
    int getPositivePredicatesCount() -> getPositivePredicatesCount
    java.util.List getPositivePredicatesList() -> getPositivePredicatesList
    java.util.List getMutablePositivePredicatesList() -> getMutablePositivePredicatesList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getPositivePredicates(int) -> getPositivePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutablePositivePredicates(int) -> getMutablePositivePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addPositivePredicates() -> addPositivePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addPositivePredicates(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> addPositivePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addAllPositivePredicates(java.lang.Iterable) -> addAllPositivePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule setPositivePredicates(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setPositivePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clearPositivePredicates() -> clearPositivePredicates
    void ensureNegativePredicatesInitialized() -> c
    int getNegativePredicatesCount() -> getNegativePredicatesCount
    java.util.List getNegativePredicatesList() -> getNegativePredicatesList
    java.util.List getMutableNegativePredicatesList() -> getMutableNegativePredicatesList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getNegativePredicates(int) -> getNegativePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutableNegativePredicates(int) -> getMutableNegativePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addNegativePredicates() -> addNegativePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addNegativePredicates(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> addNegativePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addAllNegativePredicates(java.lang.Iterable) -> addAllNegativePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule setNegativePredicates(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setNegativePredicates
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clearNegativePredicates() -> clearNegativePredicates
    void ensureAddTagsInitialized() -> d
    int getAddTagsCount() -> getAddTagsCount
    java.util.List getAddTagsList() -> getAddTagsList
    java.util.List getMutableAddTagsList() -> getMutableAddTagsList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getAddTags(int) -> getAddTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutableAddTags(int) -> getMutableAddTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addAddTags() -> addAddTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addAddTags(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> addAddTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addAllAddTags(java.lang.Iterable) -> addAllAddTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule setAddTags(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setAddTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clearAddTags() -> clearAddTags
    void ensureRemoveTagsInitialized() -> e
    int getRemoveTagsCount() -> getRemoveTagsCount
    java.util.List getRemoveTagsList() -> getRemoveTagsList
    java.util.List getMutableRemoveTagsList() -> getMutableRemoveTagsList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getRemoveTags(int) -> getRemoveTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutableRemoveTags(int) -> getMutableRemoveTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addRemoveTags() -> addRemoveTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addRemoveTags(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> addRemoveTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addAllRemoveTags(java.lang.Iterable) -> addAllRemoveTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule setRemoveTags(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setRemoveTags
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clearRemoveTags() -> clearRemoveTags
    void ensureAddMacrosInitialized() -> f
    int getAddMacrosCount() -> getAddMacrosCount
    java.util.List getAddMacrosList() -> getAddMacrosList
    java.util.List getMutableAddMacrosList() -> getMutableAddMacrosList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getAddMacros(int) -> getAddMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutableAddMacros(int) -> getMutableAddMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addAddMacros() -> addAddMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addAddMacros(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> addAddMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addAllAddMacros(java.lang.Iterable) -> addAllAddMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule setAddMacros(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setAddMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clearAddMacros() -> clearAddMacros
    void ensureRemoveMacrosInitialized() -> g
    int getRemoveMacrosCount() -> getRemoveMacrosCount
    java.util.List getRemoveMacrosList() -> getRemoveMacrosList
    java.util.List getMutableRemoveMacrosList() -> getMutableRemoveMacrosList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getRemoveMacros(int) -> getRemoveMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutableRemoveMacros(int) -> getMutableRemoveMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addRemoveMacros() -> addRemoveMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addRemoveMacros(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> addRemoveMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addAllRemoveMacros(java.lang.Iterable) -> addAllRemoveMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule setRemoveMacros(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setRemoveMacros
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clearRemoveMacros() -> clearRemoveMacros
    void ensureResultInitialized() -> h
    boolean hasResult() -> hasResult
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getResult() -> getResult
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMutableResult() -> getMutableResult
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule setResult(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> setResult
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clearResult() -> clearResult
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clone() -> clone
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule mergeFrom(com.google.analytics.containertag.proto.MutableDebug$ResolvedRule) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo -> com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo:
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int RULES_FIELD_NUMBER -> RULES_FIELD_NUMBER
    java.util.List rules_ -> b
    int ENABLED_FUNCTIONS_FIELD_NUMBER -> ENABLED_FUNCTIONS_FIELD_NUMBER
    java.util.List enabledFunctions_ -> c
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> d
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensureRulesInitialized() -> b
    int getRulesCount() -> getRulesCount
    java.util.List getRulesList() -> getRulesList
    java.util.List getMutableRulesList() -> getMutableRulesList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule getRules(int) -> getRules
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule getMutableRules(int) -> getMutableRules
    com.google.analytics.containertag.proto.MutableDebug$ResolvedRule addRules() -> addRules
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo addRules(com.google.analytics.containertag.proto.MutableDebug$ResolvedRule) -> addRules
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo addAllRules(java.lang.Iterable) -> addAllRules
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo setRules(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedRule) -> setRules
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo clearRules() -> clearRules
    void ensureEnabledFunctionsInitialized() -> c
    int getEnabledFunctionsCount() -> getEnabledFunctionsCount
    java.util.List getEnabledFunctionsList() -> getEnabledFunctionsList
    java.util.List getMutableEnabledFunctionsList() -> getMutableEnabledFunctionsList
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getEnabledFunctions(int) -> getEnabledFunctions
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall getMutableEnabledFunctions(int) -> getMutableEnabledFunctions
    com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall addEnabledFunctions() -> addEnabledFunctions
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo addEnabledFunctions(com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> addEnabledFunctions
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo addAllEnabledFunctions(java.lang.Iterable) -> addAllEnabledFunctions
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo setEnabledFunctions(int,com.google.analytics.containertag.proto.MutableDebug$ResolvedFunctionCall) -> setEnabledFunctions
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo clearEnabledFunctions() -> clearEnabledFunctions
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo clone() -> clone
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo mergeFrom(com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableDebug$RuleEvaluationStepInfo clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableServing -> com.google.analytics.containertag.proto.MutableServing:
    void registerAllExtensions(com.google.tagmanager.protobuf.ExtensionRegistryLite) -> registerAllExtensions
com.google.analytics.containertag.proto.MutableServing$CacheOption -> com.google.analytics.containertag.proto.MutableServing$CacheOption:
    com.google.analytics.containertag.proto.MutableServing$CacheOption defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int LEVEL_FIELD_NUMBER -> LEVEL_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel level_ -> c
    int EXPIRATION_SECONDS_FIELD_NUMBER -> EXPIRATION_SECONDS_FIELD_NUMBER
    int expirationSeconds_ -> d
    int GCACHE_EXPIRATION_SECONDS_FIELD_NUMBER -> GCACHE_EXPIRATION_SECONDS_FIELD_NUMBER
    int gcacheExpirationSeconds_ -> e
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> f
    com.google.analytics.containertag.proto.MutableServing$CacheOption newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableServing$CacheOption newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableServing$CacheOption getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableServing$CacheOption getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasLevel() -> hasLevel
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel getLevel() -> getLevel
    com.google.analytics.containertag.proto.MutableServing$CacheOption setLevel(com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel) -> setLevel
    com.google.analytics.containertag.proto.MutableServing$CacheOption clearLevel() -> clearLevel
    boolean hasExpirationSeconds() -> hasExpirationSeconds
    int getExpirationSeconds() -> getExpirationSeconds
    com.google.analytics.containertag.proto.MutableServing$CacheOption setExpirationSeconds(int) -> setExpirationSeconds
    com.google.analytics.containertag.proto.MutableServing$CacheOption clearExpirationSeconds() -> clearExpirationSeconds
    boolean hasGcacheExpirationSeconds() -> hasGcacheExpirationSeconds
    int getGcacheExpirationSeconds() -> getGcacheExpirationSeconds
    com.google.analytics.containertag.proto.MutableServing$CacheOption setGcacheExpirationSeconds(int) -> setGcacheExpirationSeconds
    com.google.analytics.containertag.proto.MutableServing$CacheOption clearGcacheExpirationSeconds() -> clearGcacheExpirationSeconds
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableServing$CacheOption clone() -> clone
    com.google.analytics.containertag.proto.MutableServing$CacheOption mergeFrom(com.google.analytics.containertag.proto.MutableServing$CacheOption) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableServing$CacheOption clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel -> com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel:
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel NO_CACHE -> NO_CACHE
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel PRIVATE -> PRIVATE
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel PUBLIC -> PUBLIC
    int NO_CACHE_VALUE -> NO_CACHE_VALUE
    int PRIVATE_VALUE -> PRIVATE_VALUE
    int PUBLIC_VALUE -> PUBLIC_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel[] $VALUES -> c
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel[] values() -> values
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.containertag.proto.MutableServing$CacheOption$CacheLevel$1 -> gm:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.containertag.proto.MutableServing$Container -> com.google.analytics.containertag.proto.MutableServing$Container:
    com.google.analytics.containertag.proto.MutableServing$Container defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int JS_RESOURCE_FIELD_NUMBER -> JS_RESOURCE_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableServing$Resource jsResource_ -> c
    int CONTAINER_ID_FIELD_NUMBER -> CONTAINER_ID_FIELD_NUMBER
    java.lang.Object containerId_ -> d
    int STATE_FIELD_NUMBER -> STATE_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableServing$ResourceState state_ -> e
    int VERSION_FIELD_NUMBER -> VERSION_FIELD_NUMBER
    java.lang.Object version_ -> f
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> g
    com.google.analytics.containertag.proto.MutableServing$Container newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableServing$Container newMessage() -> newMessage
    void initFields() -> b
    com.google.analytics.containertag.proto.MutableServing$Container getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableServing$Container getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensureJsResourceInitialized() -> c
    boolean hasJsResource() -> hasJsResource
    com.google.analytics.containertag.proto.MutableServing$Resource getJsResource() -> getJsResource
    com.google.analytics.containertag.proto.MutableServing$Resource getMutableJsResource() -> getMutableJsResource
    com.google.analytics.containertag.proto.MutableServing$Container setJsResource(com.google.analytics.containertag.proto.MutableServing$Resource) -> setJsResource
    com.google.analytics.containertag.proto.MutableServing$Container clearJsResource() -> clearJsResource
    boolean hasContainerId() -> hasContainerId
    java.lang.String getContainerId() -> getContainerId
    byte[] getContainerIdAsBytes() -> getContainerIdAsBytes
    com.google.analytics.containertag.proto.MutableServing$Container setContainerId(java.lang.String) -> setContainerId
    com.google.analytics.containertag.proto.MutableServing$Container setContainerIdAsBytes(byte[]) -> setContainerIdAsBytes
    com.google.analytics.containertag.proto.MutableServing$Container clearContainerId() -> clearContainerId
    boolean hasState() -> hasState
    com.google.analytics.containertag.proto.MutableServing$ResourceState getState() -> getState
    com.google.analytics.containertag.proto.MutableServing$Container setState(com.google.analytics.containertag.proto.MutableServing$ResourceState) -> setState
    com.google.analytics.containertag.proto.MutableServing$Container clearState() -> clearState
    boolean hasVersion() -> hasVersion
    java.lang.String getVersion() -> getVersion
    byte[] getVersionAsBytes() -> getVersionAsBytes
    com.google.analytics.containertag.proto.MutableServing$Container setVersion(java.lang.String) -> setVersion
    com.google.analytics.containertag.proto.MutableServing$Container setVersionAsBytes(byte[]) -> setVersionAsBytes
    com.google.analytics.containertag.proto.MutableServing$Container clearVersion() -> clearVersion
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableServing$Container clone() -> clone
    com.google.analytics.containertag.proto.MutableServing$Container mergeFrom(com.google.analytics.containertag.proto.MutableServing$Container) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableServing$Container clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableServing$FunctionCall -> com.google.analytics.containertag.proto.MutableServing$FunctionCall:
    com.google.analytics.containertag.proto.MutableServing$FunctionCall defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int PROPERTY_FIELD_NUMBER -> PROPERTY_FIELD_NUMBER
    java.util.List property_ -> c
    int FUNCTION_FIELD_NUMBER -> FUNCTION_FIELD_NUMBER
    int function_ -> d
    int NAME_FIELD_NUMBER -> NAME_FIELD_NUMBER
    int name_ -> e
    int LIVE_ONLY_FIELD_NUMBER -> LIVE_ONLY_FIELD_NUMBER
    boolean liveOnly_ -> f
    int SERVER_SIDE_FIELD_NUMBER -> SERVER_SIDE_FIELD_NUMBER
    boolean serverSide_ -> g
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> h
    com.google.analytics.containertag.proto.MutableServing$FunctionCall newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableServing$FunctionCall newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableServing$FunctionCall getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableServing$FunctionCall getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensurePropertyInitialized() -> b
    java.util.List getPropertyList() -> getPropertyList
    java.util.List getMutablePropertyList() -> getMutablePropertyList
    int getPropertyCount() -> getPropertyCount
    int getProperty(int) -> getProperty
    com.google.analytics.containertag.proto.MutableServing$FunctionCall setProperty(int,int) -> setProperty
    com.google.analytics.containertag.proto.MutableServing$FunctionCall addProperty(int) -> addProperty
    com.google.analytics.containertag.proto.MutableServing$FunctionCall addAllProperty(java.lang.Iterable) -> addAllProperty
    com.google.analytics.containertag.proto.MutableServing$FunctionCall clearProperty() -> clearProperty
    boolean hasFunction() -> hasFunction
    int getFunction() -> getFunction
    com.google.analytics.containertag.proto.MutableServing$FunctionCall setFunction(int) -> setFunction
    com.google.analytics.containertag.proto.MutableServing$FunctionCall clearFunction() -> clearFunction
    boolean hasName() -> hasName
    int getName() -> getName
    com.google.analytics.containertag.proto.MutableServing$FunctionCall setName(int) -> setName
    com.google.analytics.containertag.proto.MutableServing$FunctionCall clearName() -> clearName
    boolean hasLiveOnly() -> hasLiveOnly
    boolean getLiveOnly() -> getLiveOnly
    com.google.analytics.containertag.proto.MutableServing$FunctionCall setLiveOnly(boolean) -> setLiveOnly
    com.google.analytics.containertag.proto.MutableServing$FunctionCall clearLiveOnly() -> clearLiveOnly
    boolean hasServerSide() -> hasServerSide
    boolean getServerSide() -> getServerSide
    com.google.analytics.containertag.proto.MutableServing$FunctionCall setServerSide(boolean) -> setServerSide
    com.google.analytics.containertag.proto.MutableServing$FunctionCall clearServerSide() -> clearServerSide
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableServing$FunctionCall clone() -> clone
    com.google.analytics.containertag.proto.MutableServing$FunctionCall mergeFrom(com.google.analytics.containertag.proto.MutableServing$FunctionCall) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableServing$FunctionCall clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableServing$OptionalResource -> com.google.analytics.containertag.proto.MutableServing$OptionalResource:
    com.google.analytics.containertag.proto.MutableServing$OptionalResource defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int RESOURCE_FIELD_NUMBER -> RESOURCE_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableServing$Resource resource_ -> c
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> d
    com.google.analytics.containertag.proto.MutableServing$OptionalResource newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableServing$OptionalResource newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableServing$OptionalResource getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableServing$OptionalResource getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensureResourceInitialized() -> b
    boolean hasResource() -> hasResource
    com.google.analytics.containertag.proto.MutableServing$Resource getResource() -> getResource
    com.google.analytics.containertag.proto.MutableServing$Resource getMutableResource() -> getMutableResource
    com.google.analytics.containertag.proto.MutableServing$OptionalResource setResource(com.google.analytics.containertag.proto.MutableServing$Resource) -> setResource
    com.google.analytics.containertag.proto.MutableServing$OptionalResource clearResource() -> clearResource
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableServing$OptionalResource clone() -> clone
    com.google.analytics.containertag.proto.MutableServing$OptionalResource mergeFrom(com.google.analytics.containertag.proto.MutableServing$OptionalResource) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableServing$OptionalResource clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableServing$Property -> com.google.analytics.containertag.proto.MutableServing$Property:
    com.google.analytics.containertag.proto.MutableServing$Property defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int KEY_FIELD_NUMBER -> KEY_FIELD_NUMBER
    int key_ -> c
    int VALUE_FIELD_NUMBER -> VALUE_FIELD_NUMBER
    int value_ -> d
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> e
    com.google.analytics.containertag.proto.MutableServing$Property newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableServing$Property newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableServing$Property getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableServing$Property getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasKey() -> hasKey
    int getKey() -> getKey
    com.google.analytics.containertag.proto.MutableServing$Property setKey(int) -> setKey
    com.google.analytics.containertag.proto.MutableServing$Property clearKey() -> clearKey
    boolean hasValue() -> hasValue
    int getValue() -> getValue
    com.google.analytics.containertag.proto.MutableServing$Property setValue(int) -> setValue
    com.google.analytics.containertag.proto.MutableServing$Property clearValue() -> clearValue
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableServing$Property clone() -> clone
    com.google.analytics.containertag.proto.MutableServing$Property mergeFrom(com.google.analytics.containertag.proto.MutableServing$Property) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableServing$Property clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableServing$Resource -> com.google.analytics.containertag.proto.MutableServing$Resource:
    com.google.analytics.containertag.proto.MutableServing$Resource defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int KEY_FIELD_NUMBER -> KEY_FIELD_NUMBER
    com.google.tagmanager.protobuf.LazyStringList key_ -> c
    int VALUE_FIELD_NUMBER -> VALUE_FIELD_NUMBER
    java.util.List value_ -> d
    int PROPERTY_FIELD_NUMBER -> PROPERTY_FIELD_NUMBER
    java.util.List property_ -> e
    int MACRO_FIELD_NUMBER -> MACRO_FIELD_NUMBER
    java.util.List macro_ -> f
    int TAG_FIELD_NUMBER -> TAG_FIELD_NUMBER
    java.util.List tag_ -> g
    int PREDICATE_FIELD_NUMBER -> PREDICATE_FIELD_NUMBER
    java.util.List predicate_ -> h
    int RULE_FIELD_NUMBER -> RULE_FIELD_NUMBER
    java.util.List rule_ -> i
    int PREVIEW_AUTH_CODE_FIELD_NUMBER -> PREVIEW_AUTH_CODE_FIELD_NUMBER
    java.lang.Object previewAuthCode_ -> j
    int MALWARE_SCAN_AUTH_CODE_FIELD_NUMBER -> MALWARE_SCAN_AUTH_CODE_FIELD_NUMBER
    java.lang.Object malwareScanAuthCode_ -> k
    int TEMPLATE_VERSION_SET_FIELD_NUMBER -> TEMPLATE_VERSION_SET_FIELD_NUMBER
    java.lang.Object templateVersionSet_ -> l
    int VERSION_FIELD_NUMBER -> VERSION_FIELD_NUMBER
    java.lang.Object version_ -> m
    int LIVE_JS_CACHE_OPTION_FIELD_NUMBER -> LIVE_JS_CACHE_OPTION_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableServing$CacheOption liveJsCacheOption_ -> n
    int REPORTING_SAMPLE_RATE_FIELD_NUMBER -> REPORTING_SAMPLE_RATE_FIELD_NUMBER
    float reportingSampleRate_ -> o
    int ENABLE_AUTO_EVENT_TRACKING_FIELD_NUMBER -> ENABLE_AUTO_EVENT_TRACKING_FIELD_NUMBER
    boolean enableAutoEventTracking_ -> p
    int USAGE_CONTEXT_FIELD_NUMBER -> USAGE_CONTEXT_FIELD_NUMBER
    com.google.tagmanager.protobuf.LazyStringList usageContext_ -> q
    int RESOURCE_FORMAT_VERSION_FIELD_NUMBER -> RESOURCE_FORMAT_VERSION_FIELD_NUMBER
    int resourceFormatVersion_ -> r
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> s
    com.google.analytics.containertag.proto.MutableServing$Resource newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableServing$Resource newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableServing$Resource getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableServing$Resource getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensureKeyInitialized() -> b
    int getKeyCount() -> getKeyCount
    java.util.List getKeyList() -> getKeyList
    java.util.List getKeyListAsBytes() -> getKeyListAsBytes
    java.util.List getMutableKeyList() -> getMutableKeyList
    java.util.List getMutableKeyListAsBytes() -> getMutableKeyListAsBytes
    java.lang.String getKey(int) -> getKey
    byte[] getKeyAsBytes(int) -> getKeyAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource addKey(java.lang.String) -> addKey
    com.google.analytics.containertag.proto.MutableServing$Resource addKeyAsBytes(byte[]) -> addKeyAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource addAllKey(java.lang.Iterable) -> addAllKey
    com.google.analytics.containertag.proto.MutableServing$Resource setKey(int,java.lang.String) -> setKey
    com.google.analytics.containertag.proto.MutableServing$Resource setKeyAsBytes(int,byte[]) -> setKeyAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource clearKey() -> clearKey
    void ensureValueInitialized() -> c
    int getValueCount() -> getValueCount
    java.util.List getValueList() -> getValueList
    java.util.List getMutableValueList() -> getMutableValueList
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getValue(int) -> getValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMutableValue(int) -> getMutableValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addValue() -> addValue
    com.google.analytics.containertag.proto.MutableServing$Resource addValue(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> addValue
    com.google.analytics.containertag.proto.MutableServing$Resource addAllValue(java.lang.Iterable) -> addAllValue
    com.google.analytics.containertag.proto.MutableServing$Resource setValue(int,com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> setValue
    com.google.analytics.containertag.proto.MutableServing$Resource clearValue() -> clearValue
    void ensurePropertyInitialized() -> d
    int getPropertyCount() -> getPropertyCount
    java.util.List getPropertyList() -> getPropertyList
    java.util.List getMutablePropertyList() -> getMutablePropertyList
    com.google.analytics.containertag.proto.MutableServing$Property getProperty(int) -> getProperty
    com.google.analytics.containertag.proto.MutableServing$Property getMutableProperty(int) -> getMutableProperty
    com.google.analytics.containertag.proto.MutableServing$Property addProperty() -> addProperty
    com.google.analytics.containertag.proto.MutableServing$Resource addProperty(com.google.analytics.containertag.proto.MutableServing$Property) -> addProperty
    com.google.analytics.containertag.proto.MutableServing$Resource addAllProperty(java.lang.Iterable) -> addAllProperty
    com.google.analytics.containertag.proto.MutableServing$Resource setProperty(int,com.google.analytics.containertag.proto.MutableServing$Property) -> setProperty
    com.google.analytics.containertag.proto.MutableServing$Resource clearProperty() -> clearProperty
    void ensureMacroInitialized() -> e
    int getMacroCount() -> getMacroCount
    java.util.List getMacroList() -> getMacroList
    java.util.List getMutableMacroList() -> getMutableMacroList
    com.google.analytics.containertag.proto.MutableServing$FunctionCall getMacro(int) -> getMacro
    com.google.analytics.containertag.proto.MutableServing$FunctionCall getMutableMacro(int) -> getMutableMacro
    com.google.analytics.containertag.proto.MutableServing$FunctionCall addMacro() -> addMacro
    com.google.analytics.containertag.proto.MutableServing$Resource addMacro(com.google.analytics.containertag.proto.MutableServing$FunctionCall) -> addMacro
    com.google.analytics.containertag.proto.MutableServing$Resource addAllMacro(java.lang.Iterable) -> addAllMacro
    com.google.analytics.containertag.proto.MutableServing$Resource setMacro(int,com.google.analytics.containertag.proto.MutableServing$FunctionCall) -> setMacro
    com.google.analytics.containertag.proto.MutableServing$Resource clearMacro() -> clearMacro
    void ensureTagInitialized() -> f
    int getTagCount() -> getTagCount
    java.util.List getTagList() -> getTagList
    java.util.List getMutableTagList() -> getMutableTagList
    com.google.analytics.containertag.proto.MutableServing$FunctionCall getTag(int) -> getTag
    com.google.analytics.containertag.proto.MutableServing$FunctionCall getMutableTag(int) -> getMutableTag
    com.google.analytics.containertag.proto.MutableServing$FunctionCall addTag() -> addTag
    com.google.analytics.containertag.proto.MutableServing$Resource addTag(com.google.analytics.containertag.proto.MutableServing$FunctionCall) -> addTag
    com.google.analytics.containertag.proto.MutableServing$Resource addAllTag(java.lang.Iterable) -> addAllTag
    com.google.analytics.containertag.proto.MutableServing$Resource setTag(int,com.google.analytics.containertag.proto.MutableServing$FunctionCall) -> setTag
    com.google.analytics.containertag.proto.MutableServing$Resource clearTag() -> clearTag
    void ensurePredicateInitialized() -> g
    int getPredicateCount() -> getPredicateCount
    java.util.List getPredicateList() -> getPredicateList
    java.util.List getMutablePredicateList() -> getMutablePredicateList
    com.google.analytics.containertag.proto.MutableServing$FunctionCall getPredicate(int) -> getPredicate
    com.google.analytics.containertag.proto.MutableServing$FunctionCall getMutablePredicate(int) -> getMutablePredicate
    com.google.analytics.containertag.proto.MutableServing$FunctionCall addPredicate() -> addPredicate
    com.google.analytics.containertag.proto.MutableServing$Resource addPredicate(com.google.analytics.containertag.proto.MutableServing$FunctionCall) -> addPredicate
    com.google.analytics.containertag.proto.MutableServing$Resource addAllPredicate(java.lang.Iterable) -> addAllPredicate
    com.google.analytics.containertag.proto.MutableServing$Resource setPredicate(int,com.google.analytics.containertag.proto.MutableServing$FunctionCall) -> setPredicate
    com.google.analytics.containertag.proto.MutableServing$Resource clearPredicate() -> clearPredicate
    void ensureRuleInitialized() -> h
    int getRuleCount() -> getRuleCount
    java.util.List getRuleList() -> getRuleList
    java.util.List getMutableRuleList() -> getMutableRuleList
    com.google.analytics.containertag.proto.MutableServing$Rule getRule(int) -> getRule
    com.google.analytics.containertag.proto.MutableServing$Rule getMutableRule(int) -> getMutableRule
    com.google.analytics.containertag.proto.MutableServing$Rule addRule() -> addRule
    com.google.analytics.containertag.proto.MutableServing$Resource addRule(com.google.analytics.containertag.proto.MutableServing$Rule) -> addRule
    com.google.analytics.containertag.proto.MutableServing$Resource addAllRule(java.lang.Iterable) -> addAllRule
    com.google.analytics.containertag.proto.MutableServing$Resource setRule(int,com.google.analytics.containertag.proto.MutableServing$Rule) -> setRule
    com.google.analytics.containertag.proto.MutableServing$Resource clearRule() -> clearRule
    boolean hasPreviewAuthCode() -> hasPreviewAuthCode
    java.lang.String getPreviewAuthCode() -> getPreviewAuthCode
    byte[] getPreviewAuthCodeAsBytes() -> getPreviewAuthCodeAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource setPreviewAuthCode(java.lang.String) -> setPreviewAuthCode
    com.google.analytics.containertag.proto.MutableServing$Resource setPreviewAuthCodeAsBytes(byte[]) -> setPreviewAuthCodeAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource clearPreviewAuthCode() -> clearPreviewAuthCode
    boolean hasMalwareScanAuthCode() -> hasMalwareScanAuthCode
    java.lang.String getMalwareScanAuthCode() -> getMalwareScanAuthCode
    byte[] getMalwareScanAuthCodeAsBytes() -> getMalwareScanAuthCodeAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource setMalwareScanAuthCode(java.lang.String) -> setMalwareScanAuthCode
    com.google.analytics.containertag.proto.MutableServing$Resource setMalwareScanAuthCodeAsBytes(byte[]) -> setMalwareScanAuthCodeAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource clearMalwareScanAuthCode() -> clearMalwareScanAuthCode
    boolean hasTemplateVersionSet() -> hasTemplateVersionSet
    java.lang.String getTemplateVersionSet() -> getTemplateVersionSet
    byte[] getTemplateVersionSetAsBytes() -> getTemplateVersionSetAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource setTemplateVersionSet(java.lang.String) -> setTemplateVersionSet
    com.google.analytics.containertag.proto.MutableServing$Resource setTemplateVersionSetAsBytes(byte[]) -> setTemplateVersionSetAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource clearTemplateVersionSet() -> clearTemplateVersionSet
    boolean hasVersion() -> hasVersion
    java.lang.String getVersion() -> getVersion
    byte[] getVersionAsBytes() -> getVersionAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource setVersion(java.lang.String) -> setVersion
    com.google.analytics.containertag.proto.MutableServing$Resource setVersionAsBytes(byte[]) -> setVersionAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource clearVersion() -> clearVersion
    void ensureLiveJsCacheOptionInitialized() -> i
    boolean hasLiveJsCacheOption() -> hasLiveJsCacheOption
    com.google.analytics.containertag.proto.MutableServing$CacheOption getLiveJsCacheOption() -> getLiveJsCacheOption
    com.google.analytics.containertag.proto.MutableServing$CacheOption getMutableLiveJsCacheOption() -> getMutableLiveJsCacheOption
    com.google.analytics.containertag.proto.MutableServing$Resource setLiveJsCacheOption(com.google.analytics.containertag.proto.MutableServing$CacheOption) -> setLiveJsCacheOption
    com.google.analytics.containertag.proto.MutableServing$Resource clearLiveJsCacheOption() -> clearLiveJsCacheOption
    boolean hasReportingSampleRate() -> hasReportingSampleRate
    float getReportingSampleRate() -> getReportingSampleRate
    com.google.analytics.containertag.proto.MutableServing$Resource setReportingSampleRate(float) -> setReportingSampleRate
    com.google.analytics.containertag.proto.MutableServing$Resource clearReportingSampleRate() -> clearReportingSampleRate
    boolean hasEnableAutoEventTracking() -> hasEnableAutoEventTracking
    boolean getEnableAutoEventTracking() -> getEnableAutoEventTracking
    com.google.analytics.containertag.proto.MutableServing$Resource setEnableAutoEventTracking(boolean) -> setEnableAutoEventTracking
    com.google.analytics.containertag.proto.MutableServing$Resource clearEnableAutoEventTracking() -> clearEnableAutoEventTracking
    void ensureUsageContextInitialized() -> j
    int getUsageContextCount() -> getUsageContextCount
    java.util.List getUsageContextList() -> getUsageContextList
    java.util.List getUsageContextListAsBytes() -> getUsageContextListAsBytes
    java.util.List getMutableUsageContextList() -> getMutableUsageContextList
    java.util.List getMutableUsageContextListAsBytes() -> getMutableUsageContextListAsBytes
    java.lang.String getUsageContext(int) -> getUsageContext
    byte[] getUsageContextAsBytes(int) -> getUsageContextAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource addUsageContext(java.lang.String) -> addUsageContext
    com.google.analytics.containertag.proto.MutableServing$Resource addUsageContextAsBytes(byte[]) -> addUsageContextAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource addAllUsageContext(java.lang.Iterable) -> addAllUsageContext
    com.google.analytics.containertag.proto.MutableServing$Resource setUsageContext(int,java.lang.String) -> setUsageContext
    com.google.analytics.containertag.proto.MutableServing$Resource setUsageContextAsBytes(int,byte[]) -> setUsageContextAsBytes
    com.google.analytics.containertag.proto.MutableServing$Resource clearUsageContext() -> clearUsageContext
    boolean hasResourceFormatVersion() -> hasResourceFormatVersion
    int getResourceFormatVersion() -> getResourceFormatVersion
    com.google.analytics.containertag.proto.MutableServing$Resource setResourceFormatVersion(int) -> setResourceFormatVersion
    com.google.analytics.containertag.proto.MutableServing$Resource clearResourceFormatVersion() -> clearResourceFormatVersion
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableServing$Resource clone() -> clone
    com.google.analytics.containertag.proto.MutableServing$Resource mergeFrom(com.google.analytics.containertag.proto.MutableServing$Resource) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableServing$Resource clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableServing$ResourceState -> com.google.analytics.containertag.proto.MutableServing$ResourceState:
    com.google.analytics.containertag.proto.MutableServing$ResourceState PREVIEW -> PREVIEW
    com.google.analytics.containertag.proto.MutableServing$ResourceState LIVE -> LIVE
    int PREVIEW_VALUE -> PREVIEW_VALUE
    int LIVE_VALUE -> LIVE_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.containertag.proto.MutableServing$ResourceState[] $VALUES -> c
    com.google.analytics.containertag.proto.MutableServing$ResourceState[] values() -> values
    com.google.analytics.containertag.proto.MutableServing$ResourceState valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.containertag.proto.MutableServing$ResourceState valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.containertag.proto.MutableServing$ResourceState$1 -> gn:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.containertag.proto.MutableServing$ResourceType -> com.google.analytics.containertag.proto.MutableServing$ResourceType:
    com.google.analytics.containertag.proto.MutableServing$ResourceType JS_RESOURCE -> JS_RESOURCE
    com.google.analytics.containertag.proto.MutableServing$ResourceType NS_RESOURCE -> NS_RESOURCE
    com.google.analytics.containertag.proto.MutableServing$ResourceType PIXEL_COLLECTION -> PIXEL_COLLECTION
    com.google.analytics.containertag.proto.MutableServing$ResourceType SET_COOKIE -> SET_COOKIE
    com.google.analytics.containertag.proto.MutableServing$ResourceType GET_COOKIE -> GET_COOKIE
    com.google.analytics.containertag.proto.MutableServing$ResourceType CLEAR_CACHE -> CLEAR_CACHE
    com.google.analytics.containertag.proto.MutableServing$ResourceType RAW_PROTO -> RAW_PROTO
    int JS_RESOURCE_VALUE -> JS_RESOURCE_VALUE
    int NS_RESOURCE_VALUE -> NS_RESOURCE_VALUE
    int PIXEL_COLLECTION_VALUE -> PIXEL_COLLECTION_VALUE
    int SET_COOKIE_VALUE -> SET_COOKIE_VALUE
    int GET_COOKIE_VALUE -> GET_COOKIE_VALUE
    int CLEAR_CACHE_VALUE -> CLEAR_CACHE_VALUE
    int RAW_PROTO_VALUE -> RAW_PROTO_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.containertag.proto.MutableServing$ResourceType[] $VALUES -> c
    com.google.analytics.containertag.proto.MutableServing$ResourceType[] values() -> values
    com.google.analytics.containertag.proto.MutableServing$ResourceType valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.containertag.proto.MutableServing$ResourceType valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.containertag.proto.MutableServing$ResourceType$1 -> go:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.containertag.proto.MutableServing$Rule -> com.google.analytics.containertag.proto.MutableServing$Rule:
    com.google.analytics.containertag.proto.MutableServing$Rule defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int POSITIVE_PREDICATE_FIELD_NUMBER -> POSITIVE_PREDICATE_FIELD_NUMBER
    java.util.List positivePredicate_ -> b
    int NEGATIVE_PREDICATE_FIELD_NUMBER -> NEGATIVE_PREDICATE_FIELD_NUMBER
    java.util.List negativePredicate_ -> c
    int ADD_TAG_FIELD_NUMBER -> ADD_TAG_FIELD_NUMBER
    java.util.List addTag_ -> d
    int REMOVE_TAG_FIELD_NUMBER -> REMOVE_TAG_FIELD_NUMBER
    java.util.List removeTag_ -> e
    int ADD_TAG_RULE_NAME_FIELD_NUMBER -> ADD_TAG_RULE_NAME_FIELD_NUMBER
    java.util.List addTagRuleName_ -> f
    int REMOVE_TAG_RULE_NAME_FIELD_NUMBER -> REMOVE_TAG_RULE_NAME_FIELD_NUMBER
    java.util.List removeTagRuleName_ -> g
    int ADD_MACRO_FIELD_NUMBER -> ADD_MACRO_FIELD_NUMBER
    java.util.List addMacro_ -> h
    int REMOVE_MACRO_FIELD_NUMBER -> REMOVE_MACRO_FIELD_NUMBER
    java.util.List removeMacro_ -> i
    int ADD_MACRO_RULE_NAME_FIELD_NUMBER -> ADD_MACRO_RULE_NAME_FIELD_NUMBER
    java.util.List addMacroRuleName_ -> j
    int REMOVE_MACRO_RULE_NAME_FIELD_NUMBER -> REMOVE_MACRO_RULE_NAME_FIELD_NUMBER
    java.util.List removeMacroRuleName_ -> k
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> l
    com.google.analytics.containertag.proto.MutableServing$Rule newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableServing$Rule newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableServing$Rule getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableServing$Rule getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensurePositivePredicateInitialized() -> b
    java.util.List getPositivePredicateList() -> getPositivePredicateList
    java.util.List getMutablePositivePredicateList() -> getMutablePositivePredicateList
    int getPositivePredicateCount() -> getPositivePredicateCount
    int getPositivePredicate(int) -> getPositivePredicate
    com.google.analytics.containertag.proto.MutableServing$Rule setPositivePredicate(int,int) -> setPositivePredicate
    com.google.analytics.containertag.proto.MutableServing$Rule addPositivePredicate(int) -> addPositivePredicate
    com.google.analytics.containertag.proto.MutableServing$Rule addAllPositivePredicate(java.lang.Iterable) -> addAllPositivePredicate
    com.google.analytics.containertag.proto.MutableServing$Rule clearPositivePredicate() -> clearPositivePredicate
    void ensureNegativePredicateInitialized() -> c
    java.util.List getNegativePredicateList() -> getNegativePredicateList
    java.util.List getMutableNegativePredicateList() -> getMutableNegativePredicateList
    int getNegativePredicateCount() -> getNegativePredicateCount
    int getNegativePredicate(int) -> getNegativePredicate
    com.google.analytics.containertag.proto.MutableServing$Rule setNegativePredicate(int,int) -> setNegativePredicate
    com.google.analytics.containertag.proto.MutableServing$Rule addNegativePredicate(int) -> addNegativePredicate
    com.google.analytics.containertag.proto.MutableServing$Rule addAllNegativePredicate(java.lang.Iterable) -> addAllNegativePredicate
    com.google.analytics.containertag.proto.MutableServing$Rule clearNegativePredicate() -> clearNegativePredicate
    void ensureAddTagInitialized() -> d
    java.util.List getAddTagList() -> getAddTagList
    java.util.List getMutableAddTagList() -> getMutableAddTagList
    int getAddTagCount() -> getAddTagCount
    int getAddTag(int) -> getAddTag
    com.google.analytics.containertag.proto.MutableServing$Rule setAddTag(int,int) -> setAddTag
    com.google.analytics.containertag.proto.MutableServing$Rule addAddTag(int) -> addAddTag
    com.google.analytics.containertag.proto.MutableServing$Rule addAllAddTag(java.lang.Iterable) -> addAllAddTag
    com.google.analytics.containertag.proto.MutableServing$Rule clearAddTag() -> clearAddTag
    void ensureRemoveTagInitialized() -> e
    java.util.List getRemoveTagList() -> getRemoveTagList
    java.util.List getMutableRemoveTagList() -> getMutableRemoveTagList
    int getRemoveTagCount() -> getRemoveTagCount
    int getRemoveTag(int) -> getRemoveTag
    com.google.analytics.containertag.proto.MutableServing$Rule setRemoveTag(int,int) -> setRemoveTag
    com.google.analytics.containertag.proto.MutableServing$Rule addRemoveTag(int) -> addRemoveTag
    com.google.analytics.containertag.proto.MutableServing$Rule addAllRemoveTag(java.lang.Iterable) -> addAllRemoveTag
    com.google.analytics.containertag.proto.MutableServing$Rule clearRemoveTag() -> clearRemoveTag
    void ensureAddTagRuleNameInitialized() -> f
    java.util.List getAddTagRuleNameList() -> getAddTagRuleNameList
    java.util.List getMutableAddTagRuleNameList() -> getMutableAddTagRuleNameList
    int getAddTagRuleNameCount() -> getAddTagRuleNameCount
    int getAddTagRuleName(int) -> getAddTagRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule setAddTagRuleName(int,int) -> setAddTagRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule addAddTagRuleName(int) -> addAddTagRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule addAllAddTagRuleName(java.lang.Iterable) -> addAllAddTagRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule clearAddTagRuleName() -> clearAddTagRuleName
    void ensureRemoveTagRuleNameInitialized() -> g
    java.util.List getRemoveTagRuleNameList() -> getRemoveTagRuleNameList
    java.util.List getMutableRemoveTagRuleNameList() -> getMutableRemoveTagRuleNameList
    int getRemoveTagRuleNameCount() -> getRemoveTagRuleNameCount
    int getRemoveTagRuleName(int) -> getRemoveTagRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule setRemoveTagRuleName(int,int) -> setRemoveTagRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule addRemoveTagRuleName(int) -> addRemoveTagRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule addAllRemoveTagRuleName(java.lang.Iterable) -> addAllRemoveTagRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule clearRemoveTagRuleName() -> clearRemoveTagRuleName
    void ensureAddMacroInitialized() -> h
    java.util.List getAddMacroList() -> getAddMacroList
    java.util.List getMutableAddMacroList() -> getMutableAddMacroList
    int getAddMacroCount() -> getAddMacroCount
    int getAddMacro(int) -> getAddMacro
    com.google.analytics.containertag.proto.MutableServing$Rule setAddMacro(int,int) -> setAddMacro
    com.google.analytics.containertag.proto.MutableServing$Rule addAddMacro(int) -> addAddMacro
    com.google.analytics.containertag.proto.MutableServing$Rule addAllAddMacro(java.lang.Iterable) -> addAllAddMacro
    com.google.analytics.containertag.proto.MutableServing$Rule clearAddMacro() -> clearAddMacro
    void ensureRemoveMacroInitialized() -> i
    java.util.List getRemoveMacroList() -> getRemoveMacroList
    java.util.List getMutableRemoveMacroList() -> getMutableRemoveMacroList
    int getRemoveMacroCount() -> getRemoveMacroCount
    int getRemoveMacro(int) -> getRemoveMacro
    com.google.analytics.containertag.proto.MutableServing$Rule setRemoveMacro(int,int) -> setRemoveMacro
    com.google.analytics.containertag.proto.MutableServing$Rule addRemoveMacro(int) -> addRemoveMacro
    com.google.analytics.containertag.proto.MutableServing$Rule addAllRemoveMacro(java.lang.Iterable) -> addAllRemoveMacro
    com.google.analytics.containertag.proto.MutableServing$Rule clearRemoveMacro() -> clearRemoveMacro
    void ensureAddMacroRuleNameInitialized() -> j
    java.util.List getAddMacroRuleNameList() -> getAddMacroRuleNameList
    java.util.List getMutableAddMacroRuleNameList() -> getMutableAddMacroRuleNameList
    int getAddMacroRuleNameCount() -> getAddMacroRuleNameCount
    int getAddMacroRuleName(int) -> getAddMacroRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule setAddMacroRuleName(int,int) -> setAddMacroRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule addAddMacroRuleName(int) -> addAddMacroRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule addAllAddMacroRuleName(java.lang.Iterable) -> addAllAddMacroRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule clearAddMacroRuleName() -> clearAddMacroRuleName
    void ensureRemoveMacroRuleNameInitialized() -> k
    java.util.List getRemoveMacroRuleNameList() -> getRemoveMacroRuleNameList
    java.util.List getMutableRemoveMacroRuleNameList() -> getMutableRemoveMacroRuleNameList
    int getRemoveMacroRuleNameCount() -> getRemoveMacroRuleNameCount
    int getRemoveMacroRuleName(int) -> getRemoveMacroRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule setRemoveMacroRuleName(int,int) -> setRemoveMacroRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule addRemoveMacroRuleName(int) -> addRemoveMacroRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule addAllRemoveMacroRuleName(java.lang.Iterable) -> addAllRemoveMacroRuleName
    com.google.analytics.containertag.proto.MutableServing$Rule clearRemoveMacroRuleName() -> clearRemoveMacroRuleName
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableServing$Rule clone() -> clone
    com.google.analytics.containertag.proto.MutableServing$Rule mergeFrom(com.google.analytics.containertag.proto.MutableServing$Rule) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableServing$Rule clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.MutableServing$ServingValue -> com.google.analytics.containertag.proto.MutableServing$ServingValue:
    com.google.analytics.containertag.proto.MutableServing$ServingValue defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int LIST_ITEM_FIELD_NUMBER -> LIST_ITEM_FIELD_NUMBER
    java.util.List listItem_ -> c
    int MAP_KEY_FIELD_NUMBER -> MAP_KEY_FIELD_NUMBER
    java.util.List mapKey_ -> d
    int MAP_VALUE_FIELD_NUMBER -> MAP_VALUE_FIELD_NUMBER
    java.util.List mapValue_ -> e
    int MACRO_REFERENCE_FIELD_NUMBER -> MACRO_REFERENCE_FIELD_NUMBER
    int macroReference_ -> f
    int TEMPLATE_TOKEN_FIELD_NUMBER -> TEMPLATE_TOKEN_FIELD_NUMBER
    java.util.List templateToken_ -> g
    int MACRO_NAME_REFERENCE_FIELD_NUMBER -> MACRO_NAME_REFERENCE_FIELD_NUMBER
    int macroNameReference_ -> h
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> i
    int EXT_FIELD_NUMBER -> EXT_FIELD_NUMBER
    com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension ext -> ext
    com.google.analytics.containertag.proto.MutableServing$ServingValue newMessageForType() -> newMessageForType
    com.google.analytics.containertag.proto.MutableServing$ServingValue newMessage() -> newMessage
    com.google.analytics.containertag.proto.MutableServing$ServingValue getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.MutableServing$ServingValue getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    void ensureListItemInitialized() -> b
    java.util.List getListItemList() -> getListItemList
    java.util.List getMutableListItemList() -> getMutableListItemList
    int getListItemCount() -> getListItemCount
    int getListItem(int) -> getListItem
    com.google.analytics.containertag.proto.MutableServing$ServingValue setListItem(int,int) -> setListItem
    com.google.analytics.containertag.proto.MutableServing$ServingValue addListItem(int) -> addListItem
    com.google.analytics.containertag.proto.MutableServing$ServingValue addAllListItem(java.lang.Iterable) -> addAllListItem
    com.google.analytics.containertag.proto.MutableServing$ServingValue clearListItem() -> clearListItem
    void ensureMapKeyInitialized() -> c
    java.util.List getMapKeyList() -> getMapKeyList
    java.util.List getMutableMapKeyList() -> getMutableMapKeyList
    int getMapKeyCount() -> getMapKeyCount
    int getMapKey(int) -> getMapKey
    com.google.analytics.containertag.proto.MutableServing$ServingValue setMapKey(int,int) -> setMapKey
    com.google.analytics.containertag.proto.MutableServing$ServingValue addMapKey(int) -> addMapKey
    com.google.analytics.containertag.proto.MutableServing$ServingValue addAllMapKey(java.lang.Iterable) -> addAllMapKey
    com.google.analytics.containertag.proto.MutableServing$ServingValue clearMapKey() -> clearMapKey
    void ensureMapValueInitialized() -> d
    java.util.List getMapValueList() -> getMapValueList
    java.util.List getMutableMapValueList() -> getMutableMapValueList
    int getMapValueCount() -> getMapValueCount
    int getMapValue(int) -> getMapValue
    com.google.analytics.containertag.proto.MutableServing$ServingValue setMapValue(int,int) -> setMapValue
    com.google.analytics.containertag.proto.MutableServing$ServingValue addMapValue(int) -> addMapValue
    com.google.analytics.containertag.proto.MutableServing$ServingValue addAllMapValue(java.lang.Iterable) -> addAllMapValue
    com.google.analytics.containertag.proto.MutableServing$ServingValue clearMapValue() -> clearMapValue
    boolean hasMacroReference() -> hasMacroReference
    int getMacroReference() -> getMacroReference
    com.google.analytics.containertag.proto.MutableServing$ServingValue setMacroReference(int) -> setMacroReference
    com.google.analytics.containertag.proto.MutableServing$ServingValue clearMacroReference() -> clearMacroReference
    void ensureTemplateTokenInitialized() -> e
    java.util.List getTemplateTokenList() -> getTemplateTokenList
    java.util.List getMutableTemplateTokenList() -> getMutableTemplateTokenList
    int getTemplateTokenCount() -> getTemplateTokenCount
    int getTemplateToken(int) -> getTemplateToken
    com.google.analytics.containertag.proto.MutableServing$ServingValue setTemplateToken(int,int) -> setTemplateToken
    com.google.analytics.containertag.proto.MutableServing$ServingValue addTemplateToken(int) -> addTemplateToken
    com.google.analytics.containertag.proto.MutableServing$ServingValue addAllTemplateToken(java.lang.Iterable) -> addAllTemplateToken
    com.google.analytics.containertag.proto.MutableServing$ServingValue clearTemplateToken() -> clearTemplateToken
    boolean hasMacroNameReference() -> hasMacroNameReference
    int getMacroNameReference() -> getMacroNameReference
    com.google.analytics.containertag.proto.MutableServing$ServingValue setMacroNameReference(int) -> setMacroNameReference
    com.google.analytics.containertag.proto.MutableServing$ServingValue clearMacroNameReference() -> clearMacroNameReference
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.MutableServing$ServingValue clone() -> clone
    com.google.analytics.containertag.proto.MutableServing$ServingValue mergeFrom(com.google.analytics.containertag.proto.MutableServing$ServingValue) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.containertag.proto.MutableServing$ServingValue clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.containertag.proto.Serving -> com.google.analytics.containertag.proto.Serving:
    void registerAllExtensions(com.google.tagmanager.protobuf.ExtensionRegistryLite) -> registerAllExtensions
com.google.analytics.containertag.proto.Serving$CacheOption -> com.google.analytics.containertag.proto.Serving$CacheOption:
    com.google.analytics.containertag.proto.Serving$CacheOption defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int LEVEL_FIELD_NUMBER -> LEVEL_FIELD_NUMBER
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel level_ -> d
    int EXPIRATION_SECONDS_FIELD_NUMBER -> EXPIRATION_SECONDS_FIELD_NUMBER
    int expirationSeconds_ -> e
    int GCACHE_EXPIRATION_SECONDS_FIELD_NUMBER -> GCACHE_EXPIRATION_SECONDS_FIELD_NUMBER
    int gcacheExpirationSeconds_ -> f
    byte memoizedIsInitialized -> g
    int memoizedSerializedSize -> h
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> i
    com.google.analytics.containertag.proto.Serving$CacheOption getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Serving$CacheOption getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasLevel() -> hasLevel
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel getLevel() -> getLevel
    boolean hasExpirationSeconds() -> hasExpirationSeconds
    int getExpirationSeconds() -> getExpirationSeconds
    boolean hasGcacheExpirationSeconds() -> hasGcacheExpirationSeconds
    int getGcacheExpirationSeconds() -> getGcacheExpirationSeconds
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Serving$CacheOption parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$CacheOption parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder newBuilder(com.google.analytics.containertag.proto.Serving$CacheOption) -> newBuilder
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel access$5402(com.google.analytics.containertag.proto.Serving$CacheOption,com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel) -> a
    int access$5502(com.google.analytics.containertag.proto.Serving$CacheOption,int) -> a
    int access$5602(com.google.analytics.containertag.proto.Serving$CacheOption,int) -> b
    int access$5702(com.google.analytics.containertag.proto.Serving$CacheOption,int) -> c
    com.google.tagmanager.protobuf.ByteString access$5800(com.google.analytics.containertag.proto.Serving$CacheOption) -> a
com.google.analytics.containertag.proto.Serving$CacheOption$1 -> gp:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Serving$CacheOption$Builder -> com.google.analytics.containertag.proto.Serving$CacheOption$Builder:
    int bitField0_ -> a
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel level_ -> b
    int expirationSeconds_ -> c
    int gcacheExpirationSeconds_ -> d
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder clear() -> clear
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder clone() -> clone
    com.google.analytics.containertag.proto.Serving$CacheOption getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$CacheOption build() -> build
    com.google.analytics.containertag.proto.Serving$CacheOption buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder mergeFrom(com.google.analytics.containertag.proto.Serving$CacheOption) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasLevel() -> hasLevel
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel getLevel() -> getLevel
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder setLevel(com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel) -> setLevel
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder clearLevel() -> clearLevel
    boolean hasExpirationSeconds() -> hasExpirationSeconds
    int getExpirationSeconds() -> getExpirationSeconds
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder setExpirationSeconds(int) -> setExpirationSeconds
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder clearExpirationSeconds() -> clearExpirationSeconds
    boolean hasGcacheExpirationSeconds() -> hasGcacheExpirationSeconds
    int getGcacheExpirationSeconds() -> getGcacheExpirationSeconds
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder setGcacheExpirationSeconds(int) -> setGcacheExpirationSeconds
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder clearGcacheExpirationSeconds() -> clearGcacheExpirationSeconds
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Serving$CacheOption$Builder access$5200() -> a
com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel -> com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel:
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel NO_CACHE -> NO_CACHE
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel PRIVATE -> PRIVATE
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel PUBLIC -> PUBLIC
    int NO_CACHE_VALUE -> NO_CACHE_VALUE
    int PRIVATE_VALUE -> PRIVATE_VALUE
    int PUBLIC_VALUE -> PUBLIC_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel[] $VALUES -> c
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel[] values() -> values
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel$1 -> gq:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.containertag.proto.Serving$CacheOptionOrBuilder -> com.google.analytics.containertag.proto.Serving$CacheOptionOrBuilder:
    boolean hasLevel() -> hasLevel
    com.google.analytics.containertag.proto.Serving$CacheOption$CacheLevel getLevel() -> getLevel
    boolean hasExpirationSeconds() -> hasExpirationSeconds
    int getExpirationSeconds() -> getExpirationSeconds
    boolean hasGcacheExpirationSeconds() -> hasGcacheExpirationSeconds
    int getGcacheExpirationSeconds() -> getGcacheExpirationSeconds
com.google.analytics.containertag.proto.Serving$Container -> com.google.analytics.containertag.proto.Serving$Container:
    com.google.analytics.containertag.proto.Serving$Container defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int JS_RESOURCE_FIELD_NUMBER -> JS_RESOURCE_FIELD_NUMBER
    com.google.analytics.containertag.proto.Serving$Resource jsResource_ -> d
    int CONTAINER_ID_FIELD_NUMBER -> CONTAINER_ID_FIELD_NUMBER
    java.lang.Object containerId_ -> e
    int STATE_FIELD_NUMBER -> STATE_FIELD_NUMBER
    com.google.analytics.containertag.proto.Serving$ResourceState state_ -> f
    int VERSION_FIELD_NUMBER -> VERSION_FIELD_NUMBER
    java.lang.Object version_ -> g
    byte memoizedIsInitialized -> h
    int memoizedSerializedSize -> i
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> j
    com.google.analytics.containertag.proto.Serving$Container getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Serving$Container getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasJsResource() -> hasJsResource
    com.google.analytics.containertag.proto.Serving$Resource getJsResource() -> getJsResource
    boolean hasContainerId() -> hasContainerId
    java.lang.String getContainerId() -> getContainerId
    com.google.tagmanager.protobuf.ByteString getContainerIdBytes() -> getContainerIdBytes
    boolean hasState() -> hasState
    com.google.analytics.containertag.proto.Serving$ResourceState getState() -> getState
    boolean hasVersion() -> hasVersion
    java.lang.String getVersion() -> getVersion
    com.google.tagmanager.protobuf.ByteString getVersionBytes() -> getVersionBytes
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Serving$Container parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Container parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Container parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Container parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Container parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Container parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Container parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$Container parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$Container parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Container parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Container$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Serving$Container$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Serving$Container$Builder newBuilder(com.google.analytics.containertag.proto.Serving$Container) -> newBuilder
    com.google.analytics.containertag.proto.Serving$Container$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$Resource access$302(com.google.analytics.containertag.proto.Serving$Container,com.google.analytics.containertag.proto.Serving$Resource) -> a
    java.lang.Object access$402(com.google.analytics.containertag.proto.Serving$Container,java.lang.Object) -> a
    com.google.analytics.containertag.proto.Serving$ResourceState access$502(com.google.analytics.containertag.proto.Serving$Container,com.google.analytics.containertag.proto.Serving$ResourceState) -> a
    java.lang.Object access$602(com.google.analytics.containertag.proto.Serving$Container,java.lang.Object) -> b
    int access$702(com.google.analytics.containertag.proto.Serving$Container,int) -> a
    java.lang.Object access$400(com.google.analytics.containertag.proto.Serving$Container) -> a
    java.lang.Object access$600(com.google.analytics.containertag.proto.Serving$Container) -> b
    com.google.tagmanager.protobuf.ByteString access$800(com.google.analytics.containertag.proto.Serving$Container) -> c
com.google.analytics.containertag.proto.Serving$Container$1 -> gr:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Serving$Container$Builder -> com.google.analytics.containertag.proto.Serving$Container$Builder:
    int bitField0_ -> a
    com.google.analytics.containertag.proto.Serving$Resource jsResource_ -> b
    java.lang.Object containerId_ -> c
    com.google.analytics.containertag.proto.Serving$ResourceState state_ -> d
    java.lang.Object version_ -> e
    com.google.analytics.containertag.proto.Serving$Container$Builder clear() -> clear
    com.google.analytics.containertag.proto.Serving$Container$Builder clone() -> clone
    com.google.analytics.containertag.proto.Serving$Container getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$Container build() -> build
    com.google.analytics.containertag.proto.Serving$Container buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Serving$Container$Builder mergeFrom(com.google.analytics.containertag.proto.Serving$Container) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Serving$Container$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasJsResource() -> hasJsResource
    com.google.analytics.containertag.proto.Serving$Resource getJsResource() -> getJsResource
    com.google.analytics.containertag.proto.Serving$Container$Builder setJsResource(com.google.analytics.containertag.proto.Serving$Resource) -> setJsResource
    com.google.analytics.containertag.proto.Serving$Container$Builder setJsResource(com.google.analytics.containertag.proto.Serving$Resource$Builder) -> setJsResource
    com.google.analytics.containertag.proto.Serving$Container$Builder mergeJsResource(com.google.analytics.containertag.proto.Serving$Resource) -> mergeJsResource
    com.google.analytics.containertag.proto.Serving$Container$Builder clearJsResource() -> clearJsResource
    boolean hasContainerId() -> hasContainerId
    java.lang.String getContainerId() -> getContainerId
    com.google.tagmanager.protobuf.ByteString getContainerIdBytes() -> getContainerIdBytes
    com.google.analytics.containertag.proto.Serving$Container$Builder setContainerId(java.lang.String) -> setContainerId
    com.google.analytics.containertag.proto.Serving$Container$Builder clearContainerId() -> clearContainerId
    com.google.analytics.containertag.proto.Serving$Container$Builder setContainerIdBytes(com.google.tagmanager.protobuf.ByteString) -> setContainerIdBytes
    boolean hasState() -> hasState
    com.google.analytics.containertag.proto.Serving$ResourceState getState() -> getState
    com.google.analytics.containertag.proto.Serving$Container$Builder setState(com.google.analytics.containertag.proto.Serving$ResourceState) -> setState
    com.google.analytics.containertag.proto.Serving$Container$Builder clearState() -> clearState
    boolean hasVersion() -> hasVersion
    java.lang.String getVersion() -> getVersion
    com.google.tagmanager.protobuf.ByteString getVersionBytes() -> getVersionBytes
    com.google.analytics.containertag.proto.Serving$Container$Builder setVersion(java.lang.String) -> setVersion
    com.google.analytics.containertag.proto.Serving$Container$Builder clearVersion() -> clearVersion
    com.google.analytics.containertag.proto.Serving$Container$Builder setVersionBytes(com.google.tagmanager.protobuf.ByteString) -> setVersionBytes
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Serving$Container$Builder access$100() -> a
com.google.analytics.containertag.proto.Serving$ContainerOrBuilder -> com.google.analytics.containertag.proto.Serving$ContainerOrBuilder:
    boolean hasJsResource() -> hasJsResource
    com.google.analytics.containertag.proto.Serving$Resource getJsResource() -> getJsResource
    boolean hasContainerId() -> hasContainerId
    java.lang.String getContainerId() -> getContainerId
    com.google.tagmanager.protobuf.ByteString getContainerIdBytes() -> getContainerIdBytes
    boolean hasState() -> hasState
    com.google.analytics.containertag.proto.Serving$ResourceState getState() -> getState
    boolean hasVersion() -> hasVersion
    java.lang.String getVersion() -> getVersion
    com.google.tagmanager.protobuf.ByteString getVersionBytes() -> getVersionBytes
com.google.analytics.containertag.proto.Serving$FunctionCall -> com.google.analytics.containertag.proto.Serving$FunctionCall:
    com.google.analytics.containertag.proto.Serving$FunctionCall defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int PROPERTY_FIELD_NUMBER -> PROPERTY_FIELD_NUMBER
    java.util.List property_ -> d
    int FUNCTION_FIELD_NUMBER -> FUNCTION_FIELD_NUMBER
    int function_ -> e
    int NAME_FIELD_NUMBER -> NAME_FIELD_NUMBER
    int name_ -> f
    int LIVE_ONLY_FIELD_NUMBER -> LIVE_ONLY_FIELD_NUMBER
    boolean liveOnly_ -> g
    int SERVER_SIDE_FIELD_NUMBER -> SERVER_SIDE_FIELD_NUMBER
    boolean serverSide_ -> h
    byte memoizedIsInitialized -> i
    int memoizedSerializedSize -> j
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> k
    com.google.analytics.containertag.proto.Serving$FunctionCall getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Serving$FunctionCall getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    java.util.List getPropertyList() -> getPropertyList
    int getPropertyCount() -> getPropertyCount
    int getProperty(int) -> getProperty
    boolean hasFunction() -> hasFunction
    int getFunction() -> getFunction
    boolean hasName() -> hasName
    int getName() -> getName
    boolean hasLiveOnly() -> hasLiveOnly
    boolean getLiveOnly() -> getLiveOnly
    boolean hasServerSide() -> hasServerSide
    boolean getServerSide() -> getServerSide
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Serving$FunctionCall parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder newBuilder(com.google.analytics.containertag.proto.Serving$FunctionCall) -> newBuilder
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.util.List access$3002(com.google.analytics.containertag.proto.Serving$FunctionCall,java.util.List) -> a
    int access$3102(com.google.analytics.containertag.proto.Serving$FunctionCall,int) -> a
    int access$3202(com.google.analytics.containertag.proto.Serving$FunctionCall,int) -> b
    boolean access$3302(com.google.analytics.containertag.proto.Serving$FunctionCall,boolean) -> a
    boolean access$3402(com.google.analytics.containertag.proto.Serving$FunctionCall,boolean) -> b
    int access$3502(com.google.analytics.containertag.proto.Serving$FunctionCall,int) -> c
    java.util.List access$3000(com.google.analytics.containertag.proto.Serving$FunctionCall) -> a
    com.google.tagmanager.protobuf.ByteString access$3600(com.google.analytics.containertag.proto.Serving$FunctionCall) -> b
com.google.analytics.containertag.proto.Serving$FunctionCall$1 -> gs:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Serving$FunctionCall$Builder -> com.google.analytics.containertag.proto.Serving$FunctionCall$Builder:
    int bitField0_ -> a
    java.util.List property_ -> b
    int function_ -> c
    int name_ -> d
    boolean liveOnly_ -> e
    boolean serverSide_ -> f
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder clear() -> clear
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder clone() -> clone
    com.google.analytics.containertag.proto.Serving$FunctionCall getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$FunctionCall build() -> build
    com.google.analytics.containertag.proto.Serving$FunctionCall buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder mergeFrom(com.google.analytics.containertag.proto.Serving$FunctionCall) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void ensurePropertyIsMutable() -> b
    java.util.List getPropertyList() -> getPropertyList
    int getPropertyCount() -> getPropertyCount
    int getProperty(int) -> getProperty
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder setProperty(int,int) -> setProperty
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder addProperty(int) -> addProperty
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder addAllProperty(java.lang.Iterable) -> addAllProperty
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder clearProperty() -> clearProperty
    boolean hasFunction() -> hasFunction
    int getFunction() -> getFunction
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder setFunction(int) -> setFunction
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder clearFunction() -> clearFunction
    boolean hasName() -> hasName
    int getName() -> getName
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder setName(int) -> setName
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder clearName() -> clearName
    boolean hasLiveOnly() -> hasLiveOnly
    boolean getLiveOnly() -> getLiveOnly
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder setLiveOnly(boolean) -> setLiveOnly
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder clearLiveOnly() -> clearLiveOnly
    boolean hasServerSide() -> hasServerSide
    boolean getServerSide() -> getServerSide
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder setServerSide(boolean) -> setServerSide
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder clearServerSide() -> clearServerSide
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Serving$FunctionCall$Builder access$2800() -> a
com.google.analytics.containertag.proto.Serving$FunctionCallOrBuilder -> com.google.analytics.containertag.proto.Serving$FunctionCallOrBuilder:
    java.util.List getPropertyList() -> getPropertyList
    int getPropertyCount() -> getPropertyCount
    int getProperty(int) -> getProperty
    boolean hasFunction() -> hasFunction
    int getFunction() -> getFunction
    boolean hasName() -> hasName
    int getName() -> getName
    boolean hasLiveOnly() -> hasLiveOnly
    boolean getLiveOnly() -> getLiveOnly
    boolean hasServerSide() -> hasServerSide
    boolean getServerSide() -> getServerSide
com.google.analytics.containertag.proto.Serving$OptionalResource -> com.google.analytics.containertag.proto.Serving$OptionalResource:
    com.google.analytics.containertag.proto.Serving$OptionalResource defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int RESOURCE_FIELD_NUMBER -> RESOURCE_FIELD_NUMBER
    com.google.analytics.containertag.proto.Serving$Resource resource_ -> d
    byte memoizedIsInitialized -> e
    int memoizedSerializedSize -> f
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> g
    com.google.analytics.containertag.proto.Serving$OptionalResource getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Serving$OptionalResource getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasResource() -> hasResource
    com.google.analytics.containertag.proto.Serving$Resource getResource() -> getResource
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Serving$OptionalResource parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder newBuilder(com.google.analytics.containertag.proto.Serving$OptionalResource) -> newBuilder
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$Resource access$8302(com.google.analytics.containertag.proto.Serving$OptionalResource,com.google.analytics.containertag.proto.Serving$Resource) -> a
    int access$8402(com.google.analytics.containertag.proto.Serving$OptionalResource,int) -> a
    com.google.tagmanager.protobuf.ByteString access$8500(com.google.analytics.containertag.proto.Serving$OptionalResource) -> a
com.google.analytics.containertag.proto.Serving$OptionalResource$1 -> gt:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Serving$OptionalResource$Builder -> com.google.analytics.containertag.proto.Serving$OptionalResource$Builder:
    int bitField0_ -> a
    com.google.analytics.containertag.proto.Serving$Resource resource_ -> b
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder clear() -> clear
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder clone() -> clone
    com.google.analytics.containertag.proto.Serving$OptionalResource getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$OptionalResource build() -> build
    com.google.analytics.containertag.proto.Serving$OptionalResource buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder mergeFrom(com.google.analytics.containertag.proto.Serving$OptionalResource) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasResource() -> hasResource
    com.google.analytics.containertag.proto.Serving$Resource getResource() -> getResource
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder setResource(com.google.analytics.containertag.proto.Serving$Resource) -> setResource
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder setResource(com.google.analytics.containertag.proto.Serving$Resource$Builder) -> setResource
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder mergeResource(com.google.analytics.containertag.proto.Serving$Resource) -> mergeResource
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder clearResource() -> clearResource
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Serving$OptionalResource$Builder access$8100() -> a
com.google.analytics.containertag.proto.Serving$OptionalResourceOrBuilder -> com.google.analytics.containertag.proto.Serving$OptionalResourceOrBuilder:
    boolean hasResource() -> hasResource
    com.google.analytics.containertag.proto.Serving$Resource getResource() -> getResource
com.google.analytics.containertag.proto.Serving$Property -> com.google.analytics.containertag.proto.Serving$Property:
    com.google.analytics.containertag.proto.Serving$Property defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int KEY_FIELD_NUMBER -> KEY_FIELD_NUMBER
    int key_ -> d
    int VALUE_FIELD_NUMBER -> VALUE_FIELD_NUMBER
    int value_ -> e
    byte memoizedIsInitialized -> f
    int memoizedSerializedSize -> g
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> h
    com.google.analytics.containertag.proto.Serving$Property getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Serving$Property getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasKey() -> hasKey
    int getKey() -> getKey
    boolean hasValue() -> hasValue
    int getValue() -> getValue
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Serving$Property parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Property parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Property parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Property parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Property parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Property parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Property parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$Property parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$Property parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Property parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Property$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Serving$Property$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Serving$Property$Builder newBuilder(com.google.analytics.containertag.proto.Serving$Property) -> newBuilder
    com.google.analytics.containertag.proto.Serving$Property$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    int access$2302(com.google.analytics.containertag.proto.Serving$Property,int) -> a
    int access$2402(com.google.analytics.containertag.proto.Serving$Property,int) -> b
    int access$2502(com.google.analytics.containertag.proto.Serving$Property,int) -> c
    com.google.tagmanager.protobuf.ByteString access$2600(com.google.analytics.containertag.proto.Serving$Property) -> a
com.google.analytics.containertag.proto.Serving$Property$1 -> gu:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Serving$Property$Builder -> com.google.analytics.containertag.proto.Serving$Property$Builder:
    int bitField0_ -> a
    int key_ -> b
    int value_ -> c
    com.google.analytics.containertag.proto.Serving$Property$Builder clear() -> clear
    com.google.analytics.containertag.proto.Serving$Property$Builder clone() -> clone
    com.google.analytics.containertag.proto.Serving$Property getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$Property build() -> build
    com.google.analytics.containertag.proto.Serving$Property buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Serving$Property$Builder mergeFrom(com.google.analytics.containertag.proto.Serving$Property) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Serving$Property$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasKey() -> hasKey
    int getKey() -> getKey
    com.google.analytics.containertag.proto.Serving$Property$Builder setKey(int) -> setKey
    com.google.analytics.containertag.proto.Serving$Property$Builder clearKey() -> clearKey
    boolean hasValue() -> hasValue
    int getValue() -> getValue
    com.google.analytics.containertag.proto.Serving$Property$Builder setValue(int) -> setValue
    com.google.analytics.containertag.proto.Serving$Property$Builder clearValue() -> clearValue
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Serving$Property$Builder access$2100() -> a
com.google.analytics.containertag.proto.Serving$PropertyOrBuilder -> com.google.analytics.containertag.proto.Serving$PropertyOrBuilder:
    boolean hasKey() -> hasKey
    int getKey() -> getKey
    boolean hasValue() -> hasValue
    int getValue() -> getValue
com.google.analytics.containertag.proto.Serving$Resource -> com.google.analytics.containertag.proto.Serving$Resource:
    com.google.analytics.containertag.proto.Serving$Resource defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int KEY_FIELD_NUMBER -> KEY_FIELD_NUMBER
    com.google.tagmanager.protobuf.LazyStringList key_ -> d
    int VALUE_FIELD_NUMBER -> VALUE_FIELD_NUMBER
    java.util.List value_ -> e
    int PROPERTY_FIELD_NUMBER -> PROPERTY_FIELD_NUMBER
    java.util.List property_ -> f
    int MACRO_FIELD_NUMBER -> MACRO_FIELD_NUMBER
    java.util.List macro_ -> g
    int TAG_FIELD_NUMBER -> TAG_FIELD_NUMBER
    java.util.List tag_ -> h
    int PREDICATE_FIELD_NUMBER -> PREDICATE_FIELD_NUMBER
    java.util.List predicate_ -> i
    int RULE_FIELD_NUMBER -> RULE_FIELD_NUMBER
    java.util.List rule_ -> j
    int PREVIEW_AUTH_CODE_FIELD_NUMBER -> PREVIEW_AUTH_CODE_FIELD_NUMBER
    java.lang.Object previewAuthCode_ -> k
    int MALWARE_SCAN_AUTH_CODE_FIELD_NUMBER -> MALWARE_SCAN_AUTH_CODE_FIELD_NUMBER
    java.lang.Object malwareScanAuthCode_ -> l
    int TEMPLATE_VERSION_SET_FIELD_NUMBER -> TEMPLATE_VERSION_SET_FIELD_NUMBER
    java.lang.Object templateVersionSet_ -> m
    int VERSION_FIELD_NUMBER -> VERSION_FIELD_NUMBER
    java.lang.Object version_ -> n
    int LIVE_JS_CACHE_OPTION_FIELD_NUMBER -> LIVE_JS_CACHE_OPTION_FIELD_NUMBER
    com.google.analytics.containertag.proto.Serving$CacheOption liveJsCacheOption_ -> o
    int REPORTING_SAMPLE_RATE_FIELD_NUMBER -> REPORTING_SAMPLE_RATE_FIELD_NUMBER
    float reportingSampleRate_ -> p
    int ENABLE_AUTO_EVENT_TRACKING_FIELD_NUMBER -> ENABLE_AUTO_EVENT_TRACKING_FIELD_NUMBER
    boolean enableAutoEventTracking_ -> q
    int USAGE_CONTEXT_FIELD_NUMBER -> USAGE_CONTEXT_FIELD_NUMBER
    com.google.tagmanager.protobuf.LazyStringList usageContext_ -> r
    int RESOURCE_FORMAT_VERSION_FIELD_NUMBER -> RESOURCE_FORMAT_VERSION_FIELD_NUMBER
    int resourceFormatVersion_ -> s
    byte memoizedIsInitialized -> t
    int memoizedSerializedSize -> u
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> v
    com.google.analytics.containertag.proto.Serving$Resource getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Serving$Resource getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    java.util.List getKeyList() -> getKeyList
    int getKeyCount() -> getKeyCount
    java.lang.String getKey(int) -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes(int) -> getKeyBytes
    java.util.List getValueList() -> getValueList
    java.util.List getValueOrBuilderList() -> getValueOrBuilderList
    int getValueCount() -> getValueCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getValue(int) -> getValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$ValueOrBuilder getValueOrBuilder(int) -> getValueOrBuilder
    java.util.List getPropertyList() -> getPropertyList
    java.util.List getPropertyOrBuilderList() -> getPropertyOrBuilderList
    int getPropertyCount() -> getPropertyCount
    com.google.analytics.containertag.proto.Serving$Property getProperty(int) -> getProperty
    com.google.analytics.containertag.proto.Serving$PropertyOrBuilder getPropertyOrBuilder(int) -> getPropertyOrBuilder
    java.util.List getMacroList() -> getMacroList
    java.util.List getMacroOrBuilderList() -> getMacroOrBuilderList
    int getMacroCount() -> getMacroCount
    com.google.analytics.containertag.proto.Serving$FunctionCall getMacro(int) -> getMacro
    com.google.analytics.containertag.proto.Serving$FunctionCallOrBuilder getMacroOrBuilder(int) -> getMacroOrBuilder
    java.util.List getTagList() -> getTagList
    java.util.List getTagOrBuilderList() -> getTagOrBuilderList
    int getTagCount() -> getTagCount
    com.google.analytics.containertag.proto.Serving$FunctionCall getTag(int) -> getTag
    com.google.analytics.containertag.proto.Serving$FunctionCallOrBuilder getTagOrBuilder(int) -> getTagOrBuilder
    java.util.List getPredicateList() -> getPredicateList
    java.util.List getPredicateOrBuilderList() -> getPredicateOrBuilderList
    int getPredicateCount() -> getPredicateCount
    com.google.analytics.containertag.proto.Serving$FunctionCall getPredicate(int) -> getPredicate
    com.google.analytics.containertag.proto.Serving$FunctionCallOrBuilder getPredicateOrBuilder(int) -> getPredicateOrBuilder
    java.util.List getRuleList() -> getRuleList
    java.util.List getRuleOrBuilderList() -> getRuleOrBuilderList
    int getRuleCount() -> getRuleCount
    com.google.analytics.containertag.proto.Serving$Rule getRule(int) -> getRule
    com.google.analytics.containertag.proto.Serving$RuleOrBuilder getRuleOrBuilder(int) -> getRuleOrBuilder
    boolean hasPreviewAuthCode() -> hasPreviewAuthCode
    java.lang.String getPreviewAuthCode() -> getPreviewAuthCode
    com.google.tagmanager.protobuf.ByteString getPreviewAuthCodeBytes() -> getPreviewAuthCodeBytes
    boolean hasMalwareScanAuthCode() -> hasMalwareScanAuthCode
    java.lang.String getMalwareScanAuthCode() -> getMalwareScanAuthCode
    com.google.tagmanager.protobuf.ByteString getMalwareScanAuthCodeBytes() -> getMalwareScanAuthCodeBytes
    boolean hasTemplateVersionSet() -> hasTemplateVersionSet
    java.lang.String getTemplateVersionSet() -> getTemplateVersionSet
    com.google.tagmanager.protobuf.ByteString getTemplateVersionSetBytes() -> getTemplateVersionSetBytes
    boolean hasVersion() -> hasVersion
    java.lang.String getVersion() -> getVersion
    com.google.tagmanager.protobuf.ByteString getVersionBytes() -> getVersionBytes
    boolean hasLiveJsCacheOption() -> hasLiveJsCacheOption
    com.google.analytics.containertag.proto.Serving$CacheOption getLiveJsCacheOption() -> getLiveJsCacheOption
    boolean hasReportingSampleRate() -> hasReportingSampleRate
    float getReportingSampleRate() -> getReportingSampleRate
    boolean hasEnableAutoEventTracking() -> hasEnableAutoEventTracking
    boolean getEnableAutoEventTracking() -> getEnableAutoEventTracking
    java.util.List getUsageContextList() -> getUsageContextList
    int getUsageContextCount() -> getUsageContextCount
    java.lang.String getUsageContext(int) -> getUsageContext
    com.google.tagmanager.protobuf.ByteString getUsageContextBytes(int) -> getUsageContextBytes
    boolean hasResourceFormatVersion() -> hasResourceFormatVersion
    int getResourceFormatVersion() -> getResourceFormatVersion
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Serving$Resource parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Resource parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Resource parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Resource parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Resource parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Resource parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Resource parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$Resource parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$Resource parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Resource parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Resource$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Serving$Resource$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Serving$Resource$Builder newBuilder(com.google.analytics.containertag.proto.Serving$Resource) -> newBuilder
    com.google.analytics.containertag.proto.Serving$Resource$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.LazyStringList access$6202(com.google.analytics.containertag.proto.Serving$Resource,com.google.tagmanager.protobuf.LazyStringList) -> a
    java.util.List access$6302(com.google.analytics.containertag.proto.Serving$Resource,java.util.List) -> a
    java.util.List access$6402(com.google.analytics.containertag.proto.Serving$Resource,java.util.List) -> b
    java.util.List access$6502(com.google.analytics.containertag.proto.Serving$Resource,java.util.List) -> c
    java.util.List access$6602(com.google.analytics.containertag.proto.Serving$Resource,java.util.List) -> d
    java.util.List access$6702(com.google.analytics.containertag.proto.Serving$Resource,java.util.List) -> e
    java.util.List access$6802(com.google.analytics.containertag.proto.Serving$Resource,java.util.List) -> f
    java.lang.Object access$6902(com.google.analytics.containertag.proto.Serving$Resource,java.lang.Object) -> a
    java.lang.Object access$7002(com.google.analytics.containertag.proto.Serving$Resource,java.lang.Object) -> b
    java.lang.Object access$7102(com.google.analytics.containertag.proto.Serving$Resource,java.lang.Object) -> c
    java.lang.Object access$7202(com.google.analytics.containertag.proto.Serving$Resource,java.lang.Object) -> d
    com.google.analytics.containertag.proto.Serving$CacheOption access$7302(com.google.analytics.containertag.proto.Serving$Resource,com.google.analytics.containertag.proto.Serving$CacheOption) -> a
    float access$7402(com.google.analytics.containertag.proto.Serving$Resource,float) -> a
    boolean access$7502(com.google.analytics.containertag.proto.Serving$Resource,boolean) -> a
    com.google.tagmanager.protobuf.LazyStringList access$7602(com.google.analytics.containertag.proto.Serving$Resource,com.google.tagmanager.protobuf.LazyStringList) -> b
    int access$7702(com.google.analytics.containertag.proto.Serving$Resource,int) -> a
    int access$7802(com.google.analytics.containertag.proto.Serving$Resource,int) -> b
    com.google.tagmanager.protobuf.LazyStringList access$6200(com.google.analytics.containertag.proto.Serving$Resource) -> a
    java.util.List access$6300(com.google.analytics.containertag.proto.Serving$Resource) -> b
    java.util.List access$6400(com.google.analytics.containertag.proto.Serving$Resource) -> c
    java.util.List access$6500(com.google.analytics.containertag.proto.Serving$Resource) -> d
    java.util.List access$6600(com.google.analytics.containertag.proto.Serving$Resource) -> e
    java.util.List access$6700(com.google.analytics.containertag.proto.Serving$Resource) -> f
    java.util.List access$6800(com.google.analytics.containertag.proto.Serving$Resource) -> g
    java.lang.Object access$6900(com.google.analytics.containertag.proto.Serving$Resource) -> h
    java.lang.Object access$7000(com.google.analytics.containertag.proto.Serving$Resource) -> i
    java.lang.Object access$7100(com.google.analytics.containertag.proto.Serving$Resource) -> j
    java.lang.Object access$7200(com.google.analytics.containertag.proto.Serving$Resource) -> k
    com.google.tagmanager.protobuf.LazyStringList access$7600(com.google.analytics.containertag.proto.Serving$Resource) -> l
    com.google.tagmanager.protobuf.ByteString access$7900(com.google.analytics.containertag.proto.Serving$Resource) -> m
com.google.analytics.containertag.proto.Serving$Resource$1 -> gv:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Serving$Resource$Builder -> com.google.analytics.containertag.proto.Serving$Resource$Builder:
    int bitField0_ -> a
    com.google.tagmanager.protobuf.LazyStringList key_ -> b
    java.util.List value_ -> c
    java.util.List property_ -> d
    java.util.List macro_ -> e
    java.util.List tag_ -> f
    java.util.List predicate_ -> g
    java.util.List rule_ -> h
    java.lang.Object previewAuthCode_ -> i
    java.lang.Object malwareScanAuthCode_ -> j
    java.lang.Object templateVersionSet_ -> k
    java.lang.Object version_ -> l
    com.google.analytics.containertag.proto.Serving$CacheOption liveJsCacheOption_ -> m
    float reportingSampleRate_ -> n
    boolean enableAutoEventTracking_ -> o
    com.google.tagmanager.protobuf.LazyStringList usageContext_ -> p
    int resourceFormatVersion_ -> q
    com.google.analytics.containertag.proto.Serving$Resource$Builder clear() -> clear
    com.google.analytics.containertag.proto.Serving$Resource$Builder clone() -> clone
    com.google.analytics.containertag.proto.Serving$Resource getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$Resource build() -> build
    com.google.analytics.containertag.proto.Serving$Resource buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Serving$Resource$Builder mergeFrom(com.google.analytics.containertag.proto.Serving$Resource) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Serving$Resource$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void ensureKeyIsMutable() -> b
    java.util.List getKeyList() -> getKeyList
    int getKeyCount() -> getKeyCount
    java.lang.String getKey(int) -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes(int) -> getKeyBytes
    com.google.analytics.containertag.proto.Serving$Resource$Builder setKey(int,java.lang.String) -> setKey
    com.google.analytics.containertag.proto.Serving$Resource$Builder addKey(java.lang.String) -> addKey
    com.google.analytics.containertag.proto.Serving$Resource$Builder addAllKey(java.lang.Iterable) -> addAllKey
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearKey() -> clearKey
    com.google.analytics.containertag.proto.Serving$Resource$Builder addKeyBytes(com.google.tagmanager.protobuf.ByteString) -> addKeyBytes
    void ensureValueIsMutable() -> c
    java.util.List getValueList() -> getValueList
    int getValueCount() -> getValueCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getValue(int) -> getValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder setValue(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> setValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder setValue(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> setValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder addValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder addValue(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder addValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder addValue(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder addAllValue(java.lang.Iterable) -> addAllValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearValue() -> clearValue
    com.google.analytics.containertag.proto.Serving$Resource$Builder removeValue(int) -> removeValue
    void ensurePropertyIsMutable() -> d
    java.util.List getPropertyList() -> getPropertyList
    int getPropertyCount() -> getPropertyCount
    com.google.analytics.containertag.proto.Serving$Property getProperty(int) -> getProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder setProperty(int,com.google.analytics.containertag.proto.Serving$Property) -> setProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder setProperty(int,com.google.analytics.containertag.proto.Serving$Property$Builder) -> setProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder addProperty(com.google.analytics.containertag.proto.Serving$Property) -> addProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder addProperty(int,com.google.analytics.containertag.proto.Serving$Property) -> addProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder addProperty(com.google.analytics.containertag.proto.Serving$Property$Builder) -> addProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder addProperty(int,com.google.analytics.containertag.proto.Serving$Property$Builder) -> addProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder addAllProperty(java.lang.Iterable) -> addAllProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearProperty() -> clearProperty
    com.google.analytics.containertag.proto.Serving$Resource$Builder removeProperty(int) -> removeProperty
    void ensureMacroIsMutable() -> e
    java.util.List getMacroList() -> getMacroList
    int getMacroCount() -> getMacroCount
    com.google.analytics.containertag.proto.Serving$FunctionCall getMacro(int) -> getMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder setMacro(int,com.google.analytics.containertag.proto.Serving$FunctionCall) -> setMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder setMacro(int,com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> setMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder addMacro(com.google.analytics.containertag.proto.Serving$FunctionCall) -> addMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder addMacro(int,com.google.analytics.containertag.proto.Serving$FunctionCall) -> addMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder addMacro(com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> addMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder addMacro(int,com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> addMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder addAllMacro(java.lang.Iterable) -> addAllMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearMacro() -> clearMacro
    com.google.analytics.containertag.proto.Serving$Resource$Builder removeMacro(int) -> removeMacro
    void ensureTagIsMutable() -> f
    java.util.List getTagList() -> getTagList
    int getTagCount() -> getTagCount
    com.google.analytics.containertag.proto.Serving$FunctionCall getTag(int) -> getTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder setTag(int,com.google.analytics.containertag.proto.Serving$FunctionCall) -> setTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder setTag(int,com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> setTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder addTag(com.google.analytics.containertag.proto.Serving$FunctionCall) -> addTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder addTag(int,com.google.analytics.containertag.proto.Serving$FunctionCall) -> addTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder addTag(com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> addTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder addTag(int,com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> addTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder addAllTag(java.lang.Iterable) -> addAllTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearTag() -> clearTag
    com.google.analytics.containertag.proto.Serving$Resource$Builder removeTag(int) -> removeTag
    void ensurePredicateIsMutable() -> g
    java.util.List getPredicateList() -> getPredicateList
    int getPredicateCount() -> getPredicateCount
    com.google.analytics.containertag.proto.Serving$FunctionCall getPredicate(int) -> getPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder setPredicate(int,com.google.analytics.containertag.proto.Serving$FunctionCall) -> setPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder setPredicate(int,com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> setPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder addPredicate(com.google.analytics.containertag.proto.Serving$FunctionCall) -> addPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder addPredicate(int,com.google.analytics.containertag.proto.Serving$FunctionCall) -> addPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder addPredicate(com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> addPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder addPredicate(int,com.google.analytics.containertag.proto.Serving$FunctionCall$Builder) -> addPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder addAllPredicate(java.lang.Iterable) -> addAllPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearPredicate() -> clearPredicate
    com.google.analytics.containertag.proto.Serving$Resource$Builder removePredicate(int) -> removePredicate
    void ensureRuleIsMutable() -> h
    java.util.List getRuleList() -> getRuleList
    int getRuleCount() -> getRuleCount
    com.google.analytics.containertag.proto.Serving$Rule getRule(int) -> getRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder setRule(int,com.google.analytics.containertag.proto.Serving$Rule) -> setRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder setRule(int,com.google.analytics.containertag.proto.Serving$Rule$Builder) -> setRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder addRule(com.google.analytics.containertag.proto.Serving$Rule) -> addRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder addRule(int,com.google.analytics.containertag.proto.Serving$Rule) -> addRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder addRule(com.google.analytics.containertag.proto.Serving$Rule$Builder) -> addRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder addRule(int,com.google.analytics.containertag.proto.Serving$Rule$Builder) -> addRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder addAllRule(java.lang.Iterable) -> addAllRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearRule() -> clearRule
    com.google.analytics.containertag.proto.Serving$Resource$Builder removeRule(int) -> removeRule
    boolean hasPreviewAuthCode() -> hasPreviewAuthCode
    java.lang.String getPreviewAuthCode() -> getPreviewAuthCode
    com.google.tagmanager.protobuf.ByteString getPreviewAuthCodeBytes() -> getPreviewAuthCodeBytes
    com.google.analytics.containertag.proto.Serving$Resource$Builder setPreviewAuthCode(java.lang.String) -> setPreviewAuthCode
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearPreviewAuthCode() -> clearPreviewAuthCode
    com.google.analytics.containertag.proto.Serving$Resource$Builder setPreviewAuthCodeBytes(com.google.tagmanager.protobuf.ByteString) -> setPreviewAuthCodeBytes
    boolean hasMalwareScanAuthCode() -> hasMalwareScanAuthCode
    java.lang.String getMalwareScanAuthCode() -> getMalwareScanAuthCode
    com.google.tagmanager.protobuf.ByteString getMalwareScanAuthCodeBytes() -> getMalwareScanAuthCodeBytes
    com.google.analytics.containertag.proto.Serving$Resource$Builder setMalwareScanAuthCode(java.lang.String) -> setMalwareScanAuthCode
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearMalwareScanAuthCode() -> clearMalwareScanAuthCode
    com.google.analytics.containertag.proto.Serving$Resource$Builder setMalwareScanAuthCodeBytes(com.google.tagmanager.protobuf.ByteString) -> setMalwareScanAuthCodeBytes
    boolean hasTemplateVersionSet() -> hasTemplateVersionSet
    java.lang.String getTemplateVersionSet() -> getTemplateVersionSet
    com.google.tagmanager.protobuf.ByteString getTemplateVersionSetBytes() -> getTemplateVersionSetBytes
    com.google.analytics.containertag.proto.Serving$Resource$Builder setTemplateVersionSet(java.lang.String) -> setTemplateVersionSet
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearTemplateVersionSet() -> clearTemplateVersionSet
    com.google.analytics.containertag.proto.Serving$Resource$Builder setTemplateVersionSetBytes(com.google.tagmanager.protobuf.ByteString) -> setTemplateVersionSetBytes
    boolean hasVersion() -> hasVersion
    java.lang.String getVersion() -> getVersion
    com.google.tagmanager.protobuf.ByteString getVersionBytes() -> getVersionBytes
    com.google.analytics.containertag.proto.Serving$Resource$Builder setVersion(java.lang.String) -> setVersion
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearVersion() -> clearVersion
    com.google.analytics.containertag.proto.Serving$Resource$Builder setVersionBytes(com.google.tagmanager.protobuf.ByteString) -> setVersionBytes
    boolean hasLiveJsCacheOption() -> hasLiveJsCacheOption
    com.google.analytics.containertag.proto.Serving$CacheOption getLiveJsCacheOption() -> getLiveJsCacheOption
    com.google.analytics.containertag.proto.Serving$Resource$Builder setLiveJsCacheOption(com.google.analytics.containertag.proto.Serving$CacheOption) -> setLiveJsCacheOption
    com.google.analytics.containertag.proto.Serving$Resource$Builder setLiveJsCacheOption(com.google.analytics.containertag.proto.Serving$CacheOption$Builder) -> setLiveJsCacheOption
    com.google.analytics.containertag.proto.Serving$Resource$Builder mergeLiveJsCacheOption(com.google.analytics.containertag.proto.Serving$CacheOption) -> mergeLiveJsCacheOption
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearLiveJsCacheOption() -> clearLiveJsCacheOption
    boolean hasReportingSampleRate() -> hasReportingSampleRate
    float getReportingSampleRate() -> getReportingSampleRate
    com.google.analytics.containertag.proto.Serving$Resource$Builder setReportingSampleRate(float) -> setReportingSampleRate
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearReportingSampleRate() -> clearReportingSampleRate
    boolean hasEnableAutoEventTracking() -> hasEnableAutoEventTracking
    boolean getEnableAutoEventTracking() -> getEnableAutoEventTracking
    com.google.analytics.containertag.proto.Serving$Resource$Builder setEnableAutoEventTracking(boolean) -> setEnableAutoEventTracking
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearEnableAutoEventTracking() -> clearEnableAutoEventTracking
    void ensureUsageContextIsMutable() -> i
    java.util.List getUsageContextList() -> getUsageContextList
    int getUsageContextCount() -> getUsageContextCount
    java.lang.String getUsageContext(int) -> getUsageContext
    com.google.tagmanager.protobuf.ByteString getUsageContextBytes(int) -> getUsageContextBytes
    com.google.analytics.containertag.proto.Serving$Resource$Builder setUsageContext(int,java.lang.String) -> setUsageContext
    com.google.analytics.containertag.proto.Serving$Resource$Builder addUsageContext(java.lang.String) -> addUsageContext
    com.google.analytics.containertag.proto.Serving$Resource$Builder addAllUsageContext(java.lang.Iterable) -> addAllUsageContext
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearUsageContext() -> clearUsageContext
    com.google.analytics.containertag.proto.Serving$Resource$Builder addUsageContextBytes(com.google.tagmanager.protobuf.ByteString) -> addUsageContextBytes
    boolean hasResourceFormatVersion() -> hasResourceFormatVersion
    int getResourceFormatVersion() -> getResourceFormatVersion
    com.google.analytics.containertag.proto.Serving$Resource$Builder setResourceFormatVersion(int) -> setResourceFormatVersion
    com.google.analytics.containertag.proto.Serving$Resource$Builder clearResourceFormatVersion() -> clearResourceFormatVersion
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Serving$Resource$Builder access$6000() -> a
com.google.analytics.containertag.proto.Serving$ResourceOrBuilder -> com.google.analytics.containertag.proto.Serving$ResourceOrBuilder:
    java.util.List getKeyList() -> getKeyList
    int getKeyCount() -> getKeyCount
    java.lang.String getKey(int) -> getKey
    com.google.tagmanager.protobuf.ByteString getKeyBytes(int) -> getKeyBytes
    java.util.List getValueList() -> getValueList
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getValue(int) -> getValue
    int getValueCount() -> getValueCount
    java.util.List getPropertyList() -> getPropertyList
    com.google.analytics.containertag.proto.Serving$Property getProperty(int) -> getProperty
    int getPropertyCount() -> getPropertyCount
    java.util.List getMacroList() -> getMacroList
    com.google.analytics.containertag.proto.Serving$FunctionCall getMacro(int) -> getMacro
    int getMacroCount() -> getMacroCount
    java.util.List getTagList() -> getTagList
    com.google.analytics.containertag.proto.Serving$FunctionCall getTag(int) -> getTag
    int getTagCount() -> getTagCount
    java.util.List getPredicateList() -> getPredicateList
    com.google.analytics.containertag.proto.Serving$FunctionCall getPredicate(int) -> getPredicate
    int getPredicateCount() -> getPredicateCount
    java.util.List getRuleList() -> getRuleList
    com.google.analytics.containertag.proto.Serving$Rule getRule(int) -> getRule
    int getRuleCount() -> getRuleCount
    boolean hasPreviewAuthCode() -> hasPreviewAuthCode
    java.lang.String getPreviewAuthCode() -> getPreviewAuthCode
    com.google.tagmanager.protobuf.ByteString getPreviewAuthCodeBytes() -> getPreviewAuthCodeBytes
    boolean hasMalwareScanAuthCode() -> hasMalwareScanAuthCode
    java.lang.String getMalwareScanAuthCode() -> getMalwareScanAuthCode
    com.google.tagmanager.protobuf.ByteString getMalwareScanAuthCodeBytes() -> getMalwareScanAuthCodeBytes
    boolean hasTemplateVersionSet() -> hasTemplateVersionSet
    java.lang.String getTemplateVersionSet() -> getTemplateVersionSet
    com.google.tagmanager.protobuf.ByteString getTemplateVersionSetBytes() -> getTemplateVersionSetBytes
    boolean hasVersion() -> hasVersion
    java.lang.String getVersion() -> getVersion
    com.google.tagmanager.protobuf.ByteString getVersionBytes() -> getVersionBytes
    boolean hasLiveJsCacheOption() -> hasLiveJsCacheOption
    com.google.analytics.containertag.proto.Serving$CacheOption getLiveJsCacheOption() -> getLiveJsCacheOption
    boolean hasReportingSampleRate() -> hasReportingSampleRate
    float getReportingSampleRate() -> getReportingSampleRate
    boolean hasEnableAutoEventTracking() -> hasEnableAutoEventTracking
    boolean getEnableAutoEventTracking() -> getEnableAutoEventTracking
    java.util.List getUsageContextList() -> getUsageContextList
    int getUsageContextCount() -> getUsageContextCount
    java.lang.String getUsageContext(int) -> getUsageContext
    com.google.tagmanager.protobuf.ByteString getUsageContextBytes(int) -> getUsageContextBytes
    boolean hasResourceFormatVersion() -> hasResourceFormatVersion
    int getResourceFormatVersion() -> getResourceFormatVersion
com.google.analytics.containertag.proto.Serving$ResourceState -> com.google.analytics.containertag.proto.Serving$ResourceState:
    com.google.analytics.containertag.proto.Serving$ResourceState PREVIEW -> PREVIEW
    com.google.analytics.containertag.proto.Serving$ResourceState LIVE -> LIVE
    int PREVIEW_VALUE -> PREVIEW_VALUE
    int LIVE_VALUE -> LIVE_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.containertag.proto.Serving$ResourceState[] $VALUES -> c
    com.google.analytics.containertag.proto.Serving$ResourceState[] values() -> values
    com.google.analytics.containertag.proto.Serving$ResourceState valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.containertag.proto.Serving$ResourceState valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.containertag.proto.Serving$ResourceState$1 -> gw:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.containertag.proto.Serving$ResourceType -> com.google.analytics.containertag.proto.Serving$ResourceType:
    com.google.analytics.containertag.proto.Serving$ResourceType JS_RESOURCE -> JS_RESOURCE
    com.google.analytics.containertag.proto.Serving$ResourceType NS_RESOURCE -> NS_RESOURCE
    com.google.analytics.containertag.proto.Serving$ResourceType PIXEL_COLLECTION -> PIXEL_COLLECTION
    com.google.analytics.containertag.proto.Serving$ResourceType SET_COOKIE -> SET_COOKIE
    com.google.analytics.containertag.proto.Serving$ResourceType GET_COOKIE -> GET_COOKIE
    com.google.analytics.containertag.proto.Serving$ResourceType CLEAR_CACHE -> CLEAR_CACHE
    com.google.analytics.containertag.proto.Serving$ResourceType RAW_PROTO -> RAW_PROTO
    int JS_RESOURCE_VALUE -> JS_RESOURCE_VALUE
    int NS_RESOURCE_VALUE -> NS_RESOURCE_VALUE
    int PIXEL_COLLECTION_VALUE -> PIXEL_COLLECTION_VALUE
    int SET_COOKIE_VALUE -> SET_COOKIE_VALUE
    int GET_COOKIE_VALUE -> GET_COOKIE_VALUE
    int CLEAR_CACHE_VALUE -> CLEAR_CACHE_VALUE
    int RAW_PROTO_VALUE -> RAW_PROTO_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.containertag.proto.Serving$ResourceType[] $VALUES -> c
    com.google.analytics.containertag.proto.Serving$ResourceType[] values() -> values
    com.google.analytics.containertag.proto.Serving$ResourceType valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.containertag.proto.Serving$ResourceType valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.containertag.proto.Serving$ResourceType$1 -> gx:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.containertag.proto.Serving$Rule -> com.google.analytics.containertag.proto.Serving$Rule:
    com.google.analytics.containertag.proto.Serving$Rule defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int POSITIVE_PREDICATE_FIELD_NUMBER -> POSITIVE_PREDICATE_FIELD_NUMBER
    java.util.List positivePredicate_ -> c
    int NEGATIVE_PREDICATE_FIELD_NUMBER -> NEGATIVE_PREDICATE_FIELD_NUMBER
    java.util.List negativePredicate_ -> d
    int ADD_TAG_FIELD_NUMBER -> ADD_TAG_FIELD_NUMBER
    java.util.List addTag_ -> e
    int REMOVE_TAG_FIELD_NUMBER -> REMOVE_TAG_FIELD_NUMBER
    java.util.List removeTag_ -> f
    int ADD_TAG_RULE_NAME_FIELD_NUMBER -> ADD_TAG_RULE_NAME_FIELD_NUMBER
    java.util.List addTagRuleName_ -> g
    int REMOVE_TAG_RULE_NAME_FIELD_NUMBER -> REMOVE_TAG_RULE_NAME_FIELD_NUMBER
    java.util.List removeTagRuleName_ -> h
    int ADD_MACRO_FIELD_NUMBER -> ADD_MACRO_FIELD_NUMBER
    java.util.List addMacro_ -> i
    int REMOVE_MACRO_FIELD_NUMBER -> REMOVE_MACRO_FIELD_NUMBER
    java.util.List removeMacro_ -> j
    int ADD_MACRO_RULE_NAME_FIELD_NUMBER -> ADD_MACRO_RULE_NAME_FIELD_NUMBER
    java.util.List addMacroRuleName_ -> k
    int REMOVE_MACRO_RULE_NAME_FIELD_NUMBER -> REMOVE_MACRO_RULE_NAME_FIELD_NUMBER
    java.util.List removeMacroRuleName_ -> l
    byte memoizedIsInitialized -> m
    int memoizedSerializedSize -> n
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> o
    com.google.analytics.containertag.proto.Serving$Rule getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Serving$Rule getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    java.util.List getPositivePredicateList() -> getPositivePredicateList
    int getPositivePredicateCount() -> getPositivePredicateCount
    int getPositivePredicate(int) -> getPositivePredicate
    java.util.List getNegativePredicateList() -> getNegativePredicateList
    int getNegativePredicateCount() -> getNegativePredicateCount
    int getNegativePredicate(int) -> getNegativePredicate
    java.util.List getAddTagList() -> getAddTagList
    int getAddTagCount() -> getAddTagCount
    int getAddTag(int) -> getAddTag
    java.util.List getRemoveTagList() -> getRemoveTagList
    int getRemoveTagCount() -> getRemoveTagCount
    int getRemoveTag(int) -> getRemoveTag
    java.util.List getAddTagRuleNameList() -> getAddTagRuleNameList
    int getAddTagRuleNameCount() -> getAddTagRuleNameCount
    int getAddTagRuleName(int) -> getAddTagRuleName
    java.util.List getRemoveTagRuleNameList() -> getRemoveTagRuleNameList
    int getRemoveTagRuleNameCount() -> getRemoveTagRuleNameCount
    int getRemoveTagRuleName(int) -> getRemoveTagRuleName
    java.util.List getAddMacroList() -> getAddMacroList
    int getAddMacroCount() -> getAddMacroCount
    int getAddMacro(int) -> getAddMacro
    java.util.List getRemoveMacroList() -> getRemoveMacroList
    int getRemoveMacroCount() -> getRemoveMacroCount
    int getRemoveMacro(int) -> getRemoveMacro
    java.util.List getAddMacroRuleNameList() -> getAddMacroRuleNameList
    int getAddMacroRuleNameCount() -> getAddMacroRuleNameCount
    int getAddMacroRuleName(int) -> getAddMacroRuleName
    java.util.List getRemoveMacroRuleNameList() -> getRemoveMacroRuleNameList
    int getRemoveMacroRuleNameCount() -> getRemoveMacroRuleNameCount
    int getRemoveMacroRuleName(int) -> getRemoveMacroRuleName
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Serving$Rule parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Rule parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Rule parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Rule parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Rule parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Rule parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Rule parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$Rule parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$Rule parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Rule parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$Rule$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Serving$Rule$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Serving$Rule$Builder newBuilder(com.google.analytics.containertag.proto.Serving$Rule) -> newBuilder
    com.google.analytics.containertag.proto.Serving$Rule$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.util.List access$4002(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> a
    java.util.List access$4102(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> b
    java.util.List access$4202(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> c
    java.util.List access$4302(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> d
    java.util.List access$4402(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> e
    java.util.List access$4502(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> f
    java.util.List access$4602(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> g
    java.util.List access$4702(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> h
    java.util.List access$4802(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> i
    java.util.List access$4902(com.google.analytics.containertag.proto.Serving$Rule,java.util.List) -> j
    java.util.List access$4000(com.google.analytics.containertag.proto.Serving$Rule) -> a
    java.util.List access$4100(com.google.analytics.containertag.proto.Serving$Rule) -> b
    java.util.List access$4200(com.google.analytics.containertag.proto.Serving$Rule) -> c
    java.util.List access$4300(com.google.analytics.containertag.proto.Serving$Rule) -> d
    java.util.List access$4400(com.google.analytics.containertag.proto.Serving$Rule) -> e
    java.util.List access$4500(com.google.analytics.containertag.proto.Serving$Rule) -> f
    java.util.List access$4600(com.google.analytics.containertag.proto.Serving$Rule) -> g
    java.util.List access$4700(com.google.analytics.containertag.proto.Serving$Rule) -> h
    java.util.List access$4800(com.google.analytics.containertag.proto.Serving$Rule) -> i
    java.util.List access$4900(com.google.analytics.containertag.proto.Serving$Rule) -> j
    com.google.tagmanager.protobuf.ByteString access$5000(com.google.analytics.containertag.proto.Serving$Rule) -> k
com.google.analytics.containertag.proto.Serving$Rule$1 -> gy:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Serving$Rule$Builder -> com.google.analytics.containertag.proto.Serving$Rule$Builder:
    int bitField0_ -> a
    java.util.List positivePredicate_ -> b
    java.util.List negativePredicate_ -> c
    java.util.List addTag_ -> d
    java.util.List removeTag_ -> e
    java.util.List addTagRuleName_ -> f
    java.util.List removeTagRuleName_ -> g
    java.util.List addMacro_ -> h
    java.util.List removeMacro_ -> i
    java.util.List addMacroRuleName_ -> j
    java.util.List removeMacroRuleName_ -> k
    com.google.analytics.containertag.proto.Serving$Rule$Builder clear() -> clear
    com.google.analytics.containertag.proto.Serving$Rule$Builder clone() -> clone
    com.google.analytics.containertag.proto.Serving$Rule getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$Rule build() -> build
    com.google.analytics.containertag.proto.Serving$Rule buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Serving$Rule$Builder mergeFrom(com.google.analytics.containertag.proto.Serving$Rule) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Serving$Rule$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void ensurePositivePredicateIsMutable() -> b
    java.util.List getPositivePredicateList() -> getPositivePredicateList
    int getPositivePredicateCount() -> getPositivePredicateCount
    int getPositivePredicate(int) -> getPositivePredicate
    com.google.analytics.containertag.proto.Serving$Rule$Builder setPositivePredicate(int,int) -> setPositivePredicate
    com.google.analytics.containertag.proto.Serving$Rule$Builder addPositivePredicate(int) -> addPositivePredicate
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllPositivePredicate(java.lang.Iterable) -> addAllPositivePredicate
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearPositivePredicate() -> clearPositivePredicate
    void ensureNegativePredicateIsMutable() -> c
    java.util.List getNegativePredicateList() -> getNegativePredicateList
    int getNegativePredicateCount() -> getNegativePredicateCount
    int getNegativePredicate(int) -> getNegativePredicate
    com.google.analytics.containertag.proto.Serving$Rule$Builder setNegativePredicate(int,int) -> setNegativePredicate
    com.google.analytics.containertag.proto.Serving$Rule$Builder addNegativePredicate(int) -> addNegativePredicate
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllNegativePredicate(java.lang.Iterable) -> addAllNegativePredicate
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearNegativePredicate() -> clearNegativePredicate
    void ensureAddTagIsMutable() -> d
    java.util.List getAddTagList() -> getAddTagList
    int getAddTagCount() -> getAddTagCount
    int getAddTag(int) -> getAddTag
    com.google.analytics.containertag.proto.Serving$Rule$Builder setAddTag(int,int) -> setAddTag
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAddTag(int) -> addAddTag
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllAddTag(java.lang.Iterable) -> addAllAddTag
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearAddTag() -> clearAddTag
    void ensureRemoveTagIsMutable() -> e
    java.util.List getRemoveTagList() -> getRemoveTagList
    int getRemoveTagCount() -> getRemoveTagCount
    int getRemoveTag(int) -> getRemoveTag
    com.google.analytics.containertag.proto.Serving$Rule$Builder setRemoveTag(int,int) -> setRemoveTag
    com.google.analytics.containertag.proto.Serving$Rule$Builder addRemoveTag(int) -> addRemoveTag
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllRemoveTag(java.lang.Iterable) -> addAllRemoveTag
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearRemoveTag() -> clearRemoveTag
    void ensureAddTagRuleNameIsMutable() -> f
    java.util.List getAddTagRuleNameList() -> getAddTagRuleNameList
    int getAddTagRuleNameCount() -> getAddTagRuleNameCount
    int getAddTagRuleName(int) -> getAddTagRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder setAddTagRuleName(int,int) -> setAddTagRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAddTagRuleName(int) -> addAddTagRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllAddTagRuleName(java.lang.Iterable) -> addAllAddTagRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearAddTagRuleName() -> clearAddTagRuleName
    void ensureRemoveTagRuleNameIsMutable() -> g
    java.util.List getRemoveTagRuleNameList() -> getRemoveTagRuleNameList
    int getRemoveTagRuleNameCount() -> getRemoveTagRuleNameCount
    int getRemoveTagRuleName(int) -> getRemoveTagRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder setRemoveTagRuleName(int,int) -> setRemoveTagRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder addRemoveTagRuleName(int) -> addRemoveTagRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllRemoveTagRuleName(java.lang.Iterable) -> addAllRemoveTagRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearRemoveTagRuleName() -> clearRemoveTagRuleName
    void ensureAddMacroIsMutable() -> h
    java.util.List getAddMacroList() -> getAddMacroList
    int getAddMacroCount() -> getAddMacroCount
    int getAddMacro(int) -> getAddMacro
    com.google.analytics.containertag.proto.Serving$Rule$Builder setAddMacro(int,int) -> setAddMacro
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAddMacro(int) -> addAddMacro
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllAddMacro(java.lang.Iterable) -> addAllAddMacro
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearAddMacro() -> clearAddMacro
    void ensureRemoveMacroIsMutable() -> i
    java.util.List getRemoveMacroList() -> getRemoveMacroList
    int getRemoveMacroCount() -> getRemoveMacroCount
    int getRemoveMacro(int) -> getRemoveMacro
    com.google.analytics.containertag.proto.Serving$Rule$Builder setRemoveMacro(int,int) -> setRemoveMacro
    com.google.analytics.containertag.proto.Serving$Rule$Builder addRemoveMacro(int) -> addRemoveMacro
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllRemoveMacro(java.lang.Iterable) -> addAllRemoveMacro
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearRemoveMacro() -> clearRemoveMacro
    void ensureAddMacroRuleNameIsMutable() -> j
    java.util.List getAddMacroRuleNameList() -> getAddMacroRuleNameList
    int getAddMacroRuleNameCount() -> getAddMacroRuleNameCount
    int getAddMacroRuleName(int) -> getAddMacroRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder setAddMacroRuleName(int,int) -> setAddMacroRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAddMacroRuleName(int) -> addAddMacroRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllAddMacroRuleName(java.lang.Iterable) -> addAllAddMacroRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearAddMacroRuleName() -> clearAddMacroRuleName
    void ensureRemoveMacroRuleNameIsMutable() -> k
    java.util.List getRemoveMacroRuleNameList() -> getRemoveMacroRuleNameList
    int getRemoveMacroRuleNameCount() -> getRemoveMacroRuleNameCount
    int getRemoveMacroRuleName(int) -> getRemoveMacroRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder setRemoveMacroRuleName(int,int) -> setRemoveMacroRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder addRemoveMacroRuleName(int) -> addRemoveMacroRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder addAllRemoveMacroRuleName(java.lang.Iterable) -> addAllRemoveMacroRuleName
    com.google.analytics.containertag.proto.Serving$Rule$Builder clearRemoveMacroRuleName() -> clearRemoveMacroRuleName
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Serving$Rule$Builder access$3800() -> a
com.google.analytics.containertag.proto.Serving$RuleOrBuilder -> com.google.analytics.containertag.proto.Serving$RuleOrBuilder:
    java.util.List getPositivePredicateList() -> getPositivePredicateList
    int getPositivePredicateCount() -> getPositivePredicateCount
    int getPositivePredicate(int) -> getPositivePredicate
    java.util.List getNegativePredicateList() -> getNegativePredicateList
    int getNegativePredicateCount() -> getNegativePredicateCount
    int getNegativePredicate(int) -> getNegativePredicate
    java.util.List getAddTagList() -> getAddTagList
    int getAddTagCount() -> getAddTagCount
    int getAddTag(int) -> getAddTag
    java.util.List getRemoveTagList() -> getRemoveTagList
    int getRemoveTagCount() -> getRemoveTagCount
    int getRemoveTag(int) -> getRemoveTag
    java.util.List getAddTagRuleNameList() -> getAddTagRuleNameList
    int getAddTagRuleNameCount() -> getAddTagRuleNameCount
    int getAddTagRuleName(int) -> getAddTagRuleName
    java.util.List getRemoveTagRuleNameList() -> getRemoveTagRuleNameList
    int getRemoveTagRuleNameCount() -> getRemoveTagRuleNameCount
    int getRemoveTagRuleName(int) -> getRemoveTagRuleName
    java.util.List getAddMacroList() -> getAddMacroList
    int getAddMacroCount() -> getAddMacroCount
    int getAddMacro(int) -> getAddMacro
    java.util.List getRemoveMacroList() -> getRemoveMacroList
    int getRemoveMacroCount() -> getRemoveMacroCount
    int getRemoveMacro(int) -> getRemoveMacro
    java.util.List getAddMacroRuleNameList() -> getAddMacroRuleNameList
    int getAddMacroRuleNameCount() -> getAddMacroRuleNameCount
    int getAddMacroRuleName(int) -> getAddMacroRuleName
    java.util.List getRemoveMacroRuleNameList() -> getRemoveMacroRuleNameList
    int getRemoveMacroRuleNameCount() -> getRemoveMacroRuleNameCount
    int getRemoveMacroRuleName(int) -> getRemoveMacroRuleName
com.google.analytics.containertag.proto.Serving$ServingValue -> com.google.analytics.containertag.proto.Serving$ServingValue:
    com.google.analytics.containertag.proto.Serving$ServingValue defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int LIST_ITEM_FIELD_NUMBER -> LIST_ITEM_FIELD_NUMBER
    java.util.List listItem_ -> d
    int MAP_KEY_FIELD_NUMBER -> MAP_KEY_FIELD_NUMBER
    java.util.List mapKey_ -> e
    int MAP_VALUE_FIELD_NUMBER -> MAP_VALUE_FIELD_NUMBER
    java.util.List mapValue_ -> f
    int MACRO_REFERENCE_FIELD_NUMBER -> MACRO_REFERENCE_FIELD_NUMBER
    int macroReference_ -> g
    int TEMPLATE_TOKEN_FIELD_NUMBER -> TEMPLATE_TOKEN_FIELD_NUMBER
    java.util.List templateToken_ -> h
    int MACRO_NAME_REFERENCE_FIELD_NUMBER -> MACRO_NAME_REFERENCE_FIELD_NUMBER
    int macroNameReference_ -> i
    byte memoizedIsInitialized -> j
    int memoizedSerializedSize -> k
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> l
    int EXT_FIELD_NUMBER -> EXT_FIELD_NUMBER
    com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension ext -> ext
    com.google.analytics.containertag.proto.Serving$ServingValue getDefaultInstance() -> getDefaultInstance
    com.google.analytics.containertag.proto.Serving$ServingValue getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    java.util.List getListItemList() -> getListItemList
    int getListItemCount() -> getListItemCount
    int getListItem(int) -> getListItem
    java.util.List getMapKeyList() -> getMapKeyList
    int getMapKeyCount() -> getMapKeyCount
    int getMapKey(int) -> getMapKey
    java.util.List getMapValueList() -> getMapValueList
    int getMapValueCount() -> getMapValueCount
    int getMapValue(int) -> getMapValue
    boolean hasMacroReference() -> hasMacroReference
    int getMacroReference() -> getMacroReference
    java.util.List getTemplateTokenList() -> getTemplateTokenList
    int getTemplateTokenCount() -> getTemplateTokenCount
    int getTemplateToken(int) -> getTemplateToken
    boolean hasMacroNameReference() -> hasMacroNameReference
    int getMacroNameReference() -> getMacroNameReference
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.containertag.proto.Serving$ServingValue parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseFrom(byte[]) -> parseFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.containertag.proto.Serving$ServingValue parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder newBuilder() -> newBuilder
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder newBuilder(com.google.analytics.containertag.proto.Serving$ServingValue) -> newBuilder
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.util.List access$1202(com.google.analytics.containertag.proto.Serving$ServingValue,java.util.List) -> a
    java.util.List access$1302(com.google.analytics.containertag.proto.Serving$ServingValue,java.util.List) -> b
    java.util.List access$1402(com.google.analytics.containertag.proto.Serving$ServingValue,java.util.List) -> c
    int access$1502(com.google.analytics.containertag.proto.Serving$ServingValue,int) -> a
    java.util.List access$1602(com.google.analytics.containertag.proto.Serving$ServingValue,java.util.List) -> d
    int access$1702(com.google.analytics.containertag.proto.Serving$ServingValue,int) -> b
    int access$1802(com.google.analytics.containertag.proto.Serving$ServingValue,int) -> c
    java.util.List access$1200(com.google.analytics.containertag.proto.Serving$ServingValue) -> a
    java.util.List access$1300(com.google.analytics.containertag.proto.Serving$ServingValue) -> b
    java.util.List access$1400(com.google.analytics.containertag.proto.Serving$ServingValue) -> c
    java.util.List access$1600(com.google.analytics.containertag.proto.Serving$ServingValue) -> d
    com.google.tagmanager.protobuf.ByteString access$1900(com.google.analytics.containertag.proto.Serving$ServingValue) -> e
com.google.analytics.containertag.proto.Serving$ServingValue$1 -> gz:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.containertag.proto.Serving$ServingValue$Builder -> com.google.analytics.containertag.proto.Serving$ServingValue$Builder:
    int bitField0_ -> a
    java.util.List listItem_ -> b
    java.util.List mapKey_ -> c
    java.util.List mapValue_ -> d
    int macroReference_ -> e
    java.util.List templateToken_ -> f
    int macroNameReference_ -> g
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder clear() -> clear
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder clone() -> clone
    com.google.analytics.containertag.proto.Serving$ServingValue getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.containertag.proto.Serving$ServingValue build() -> build
    com.google.analytics.containertag.proto.Serving$ServingValue buildPartial() -> buildPartial
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder mergeFrom(com.google.analytics.containertag.proto.Serving$ServingValue) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void ensureListItemIsMutable() -> b
    java.util.List getListItemList() -> getListItemList
    int getListItemCount() -> getListItemCount
    int getListItem(int) -> getListItem
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder setListItem(int,int) -> setListItem
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder addListItem(int) -> addListItem
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder addAllListItem(java.lang.Iterable) -> addAllListItem
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder clearListItem() -> clearListItem
    void ensureMapKeyIsMutable() -> c
    java.util.List getMapKeyList() -> getMapKeyList
    int getMapKeyCount() -> getMapKeyCount
    int getMapKey(int) -> getMapKey
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder setMapKey(int,int) -> setMapKey
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder addMapKey(int) -> addMapKey
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder addAllMapKey(java.lang.Iterable) -> addAllMapKey
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder clearMapKey() -> clearMapKey
    void ensureMapValueIsMutable() -> d
    java.util.List getMapValueList() -> getMapValueList
    int getMapValueCount() -> getMapValueCount
    int getMapValue(int) -> getMapValue
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder setMapValue(int,int) -> setMapValue
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder addMapValue(int) -> addMapValue
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder addAllMapValue(java.lang.Iterable) -> addAllMapValue
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder clearMapValue() -> clearMapValue
    boolean hasMacroReference() -> hasMacroReference
    int getMacroReference() -> getMacroReference
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder setMacroReference(int) -> setMacroReference
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder clearMacroReference() -> clearMacroReference
    void ensureTemplateTokenIsMutable() -> e
    java.util.List getTemplateTokenList() -> getTemplateTokenList
    int getTemplateTokenCount() -> getTemplateTokenCount
    int getTemplateToken(int) -> getTemplateToken
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder setTemplateToken(int,int) -> setTemplateToken
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder addTemplateToken(int) -> addTemplateToken
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder addAllTemplateToken(java.lang.Iterable) -> addAllTemplateToken
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder clearTemplateToken() -> clearTemplateToken
    boolean hasMacroNameReference() -> hasMacroNameReference
    int getMacroNameReference() -> getMacroNameReference
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder setMacroNameReference(int) -> setMacroNameReference
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder clearMacroNameReference() -> clearMacroNameReference
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.analytics.containertag.proto.Serving$ServingValue$Builder access$1000() -> a
com.google.analytics.containertag.proto.Serving$ServingValueOrBuilder -> com.google.analytics.containertag.proto.Serving$ServingValueOrBuilder:
    java.util.List getListItemList() -> getListItemList
    int getListItemCount() -> getListItemCount
    int getListItem(int) -> getListItem
    java.util.List getMapKeyList() -> getMapKeyList
    int getMapKeyCount() -> getMapKeyCount
    int getMapKey(int) -> getMapKey
    java.util.List getMapValueList() -> getMapValueList
    int getMapValueCount() -> getMapValueCount
    int getMapValue(int) -> getMapValue
    boolean hasMacroReference() -> hasMacroReference
    int getMacroReference() -> getMacroReference
    java.util.List getTemplateTokenList() -> getTemplateTokenList
    int getTemplateTokenCount() -> getTemplateTokenCount
    int getTemplateToken(int) -> getTemplateToken
    boolean hasMacroNameReference() -> hasMacroNameReference
    int getMacroNameReference() -> getMacroNameReference
com.google.analytics.midtier.proto.containertag.MutableTypeSystem -> com.google.analytics.midtier.proto.containertag.MutableTypeSystem:
    void registerAllExtensions(com.google.tagmanager.protobuf.ExtensionRegistryLite) -> registerAllExtensions
com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value -> com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value:
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int TYPE_FIELD_NUMBER -> TYPE_FIELD_NUMBER
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type type_ -> c
    int STRING_FIELD_NUMBER -> STRING_FIELD_NUMBER
    java.lang.Object string_ -> d
    int LIST_ITEM_FIELD_NUMBER -> LIST_ITEM_FIELD_NUMBER
    java.util.List listItem_ -> e
    int MAP_KEY_FIELD_NUMBER -> MAP_KEY_FIELD_NUMBER
    java.util.List mapKey_ -> f
    int MAP_VALUE_FIELD_NUMBER -> MAP_VALUE_FIELD_NUMBER
    java.util.List mapValue_ -> g
    int MACRO_REFERENCE_FIELD_NUMBER -> MACRO_REFERENCE_FIELD_NUMBER
    java.lang.Object macroReference_ -> h
    int FUNCTION_ID_FIELD_NUMBER -> FUNCTION_ID_FIELD_NUMBER
    java.lang.Object functionId_ -> i
    int INTEGER_FIELD_NUMBER -> INTEGER_FIELD_NUMBER
    long integer_ -> j
    int BOOLEAN_FIELD_NUMBER -> BOOLEAN_FIELD_NUMBER
    boolean boolean_ -> k
    int TEMPLATE_TOKEN_FIELD_NUMBER -> TEMPLATE_TOKEN_FIELD_NUMBER
    java.util.List templateToken_ -> l
    int ESCAPING_FIELD_NUMBER -> ESCAPING_FIELD_NUMBER
    java.util.List escaping_ -> m
    int CONTAINS_REFERENCES_FIELD_NUMBER -> CONTAINS_REFERENCES_FIELD_NUMBER
    boolean containsReferences_ -> n
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> o
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value newMessageForType() -> newMessageForType
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value newMessage() -> newMessage
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getDefaultInstance() -> getDefaultInstance
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasType() -> hasType
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type getType() -> getType
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setType(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type) -> setType
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearType() -> clearType
    boolean hasString() -> hasString
    java.lang.String getString() -> getString
    byte[] getStringAsBytes() -> getStringAsBytes
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setString(java.lang.String) -> setString
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setStringAsBytes(byte[]) -> setStringAsBytes
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearString() -> clearString
    void ensureListItemInitialized() -> b
    int getListItemCount() -> getListItemCount
    java.util.List getListItemList() -> getListItemList
    java.util.List getMutableListItemList() -> getMutableListItemList
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getListItem(int) -> getListItem
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMutableListItem(int) -> getMutableListItem
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addListItem() -> addListItem
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addListItem(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> addListItem
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addAllListItem(java.lang.Iterable) -> addAllListItem
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setListItem(int,com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> setListItem
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearListItem() -> clearListItem
    void ensureMapKeyInitialized() -> c
    int getMapKeyCount() -> getMapKeyCount
    java.util.List getMapKeyList() -> getMapKeyList
    java.util.List getMutableMapKeyList() -> getMutableMapKeyList
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMapKey(int) -> getMapKey
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMutableMapKey(int) -> getMutableMapKey
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addMapKey() -> addMapKey
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addMapKey(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> addMapKey
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addAllMapKey(java.lang.Iterable) -> addAllMapKey
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setMapKey(int,com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> setMapKey
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearMapKey() -> clearMapKey
    void ensureMapValueInitialized() -> d
    int getMapValueCount() -> getMapValueCount
    java.util.List getMapValueList() -> getMapValueList
    java.util.List getMutableMapValueList() -> getMutableMapValueList
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMapValue(int) -> getMapValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMutableMapValue(int) -> getMutableMapValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addMapValue() -> addMapValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addMapValue(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> addMapValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addAllMapValue(java.lang.Iterable) -> addAllMapValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setMapValue(int,com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> setMapValue
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearMapValue() -> clearMapValue
    boolean hasMacroReference() -> hasMacroReference
    java.lang.String getMacroReference() -> getMacroReference
    byte[] getMacroReferenceAsBytes() -> getMacroReferenceAsBytes
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setMacroReference(java.lang.String) -> setMacroReference
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setMacroReferenceAsBytes(byte[]) -> setMacroReferenceAsBytes
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearMacroReference() -> clearMacroReference
    boolean hasFunctionId() -> hasFunctionId
    java.lang.String getFunctionId() -> getFunctionId
    byte[] getFunctionIdAsBytes() -> getFunctionIdAsBytes
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setFunctionId(java.lang.String) -> setFunctionId
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setFunctionIdAsBytes(byte[]) -> setFunctionIdAsBytes
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearFunctionId() -> clearFunctionId
    boolean hasInteger() -> hasInteger
    long getInteger() -> getInteger
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setInteger(long) -> setInteger
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearInteger() -> clearInteger
    boolean hasBoolean() -> hasBoolean
    boolean getBoolean() -> getBoolean
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setBoolean(boolean) -> setBoolean
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearBoolean() -> clearBoolean
    void ensureTemplateTokenInitialized() -> e
    int getTemplateTokenCount() -> getTemplateTokenCount
    java.util.List getTemplateTokenList() -> getTemplateTokenList
    java.util.List getMutableTemplateTokenList() -> getMutableTemplateTokenList
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getTemplateToken(int) -> getTemplateToken
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value getMutableTemplateToken(int) -> getMutableTemplateToken
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addTemplateToken() -> addTemplateToken
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addTemplateToken(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> addTemplateToken
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addAllTemplateToken(java.lang.Iterable) -> addAllTemplateToken
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setTemplateToken(int,com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> setTemplateToken
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearTemplateToken() -> clearTemplateToken
    void ensureEscapingInitialized() -> f
    java.util.List getEscapingList() -> getEscapingList
    java.util.List getMutableEscapingList() -> getMutableEscapingList
    int getEscapingCount() -> getEscapingCount
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping getEscaping(int) -> getEscaping
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setEscaping(int,com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping) -> setEscaping
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addEscaping(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping) -> addEscaping
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value addAllEscaping(java.lang.Iterable) -> addAllEscaping
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearEscaping() -> clearEscaping
    boolean hasContainsReferences() -> hasContainsReferences
    boolean getContainsReferences() -> getContainsReferences
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value setContainsReferences(boolean) -> setContainsReferences
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clearContainsReferences() -> clearContainsReferences
    boolean isInitialized() -> isInitialized
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clone() -> clone
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value mergeFrom(com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping -> com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping:
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_HTML -> ESCAPE_HTML
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_HTML_RCDATA -> ESCAPE_HTML_RCDATA
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_HTML_ATTRIBUTE -> ESCAPE_HTML_ATTRIBUTE
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_HTML_ATTRIBUTE_NOSPACE -> ESCAPE_HTML_ATTRIBUTE_NOSPACE
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping FILTER_HTML_ELEMENT_NAME -> FILTER_HTML_ELEMENT_NAME
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping FILTER_HTML_ATTRIBUTES -> FILTER_HTML_ATTRIBUTES
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_JS_STRING -> ESCAPE_JS_STRING
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_JS_VALUE -> ESCAPE_JS_VALUE
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_JS_REGEX -> ESCAPE_JS_REGEX
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_CSS_STRING -> ESCAPE_CSS_STRING
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping FILTER_CSS_VALUE -> FILTER_CSS_VALUE
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping ESCAPE_URI -> ESCAPE_URI
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping NORMALIZE_URI -> NORMALIZE_URI
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping FILTER_NORMALIZE_URI -> FILTER_NORMALIZE_URI
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping NO_AUTOESCAPE -> NO_AUTOESCAPE
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping TEXT -> TEXT
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping CONVERT_JS_VALUE_TO_EXPRESSION -> CONVERT_JS_VALUE_TO_EXPRESSION
    int ESCAPE_HTML_VALUE -> ESCAPE_HTML_VALUE
    int ESCAPE_HTML_RCDATA_VALUE -> ESCAPE_HTML_RCDATA_VALUE
    int ESCAPE_HTML_ATTRIBUTE_VALUE -> ESCAPE_HTML_ATTRIBUTE_VALUE
    int ESCAPE_HTML_ATTRIBUTE_NOSPACE_VALUE -> ESCAPE_HTML_ATTRIBUTE_NOSPACE_VALUE
    int FILTER_HTML_ELEMENT_NAME_VALUE -> FILTER_HTML_ELEMENT_NAME_VALUE
    int FILTER_HTML_ATTRIBUTES_VALUE -> FILTER_HTML_ATTRIBUTES_VALUE
    int ESCAPE_JS_STRING_VALUE -> ESCAPE_JS_STRING_VALUE
    int ESCAPE_JS_VALUE_VALUE -> ESCAPE_JS_VALUE_VALUE
    int ESCAPE_JS_REGEX_VALUE -> ESCAPE_JS_REGEX_VALUE
    int ESCAPE_CSS_STRING_VALUE -> ESCAPE_CSS_STRING_VALUE
    int FILTER_CSS_VALUE_VALUE -> FILTER_CSS_VALUE_VALUE
    int ESCAPE_URI_VALUE -> ESCAPE_URI_VALUE
    int NORMALIZE_URI_VALUE -> NORMALIZE_URI_VALUE
    int FILTER_NORMALIZE_URI_VALUE -> FILTER_NORMALIZE_URI_VALUE
    int NO_AUTOESCAPE_VALUE -> NO_AUTOESCAPE_VALUE
    int TEXT_VALUE -> TEXT_VALUE
    int CONVERT_JS_VALUE_TO_EXPRESSION_VALUE -> CONVERT_JS_VALUE_TO_EXPRESSION_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping[] $VALUES -> c
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping[] values() -> values
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Escaping$1 -> gA:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type -> com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type:
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type STRING -> STRING
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type LIST -> LIST
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type MAP -> MAP
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type MACRO_REFERENCE -> MACRO_REFERENCE
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type FUNCTION_ID -> FUNCTION_ID
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type INTEGER -> INTEGER
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type TEMPLATE -> TEMPLATE
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type BOOLEAN -> BOOLEAN
    int STRING_VALUE -> STRING_VALUE
    int LIST_VALUE -> LIST_VALUE
    int MAP_VALUE -> MAP_VALUE
    int MACRO_REFERENCE_VALUE -> MACRO_REFERENCE_VALUE
    int FUNCTION_ID_VALUE -> FUNCTION_ID_VALUE
    int INTEGER_VALUE -> INTEGER_VALUE
    int TEMPLATE_VALUE -> TEMPLATE_VALUE
    int BOOLEAN_VALUE -> BOOLEAN_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type[] $VALUES -> c
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type[] values() -> values
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.midtier.proto.containertag.MutableTypeSystem$Value$Type$1 -> gB:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.midtier.proto.containertag.TypeSystem -> com.google.analytics.midtier.proto.containertag.TypeSystem:
    void registerAllExtensions(com.google.tagmanager.protobuf.ExtensionRegistryLite) -> registerAllExtensions
com.google.analytics.midtier.proto.containertag.TypeSystem$Value -> com.google.analytics.midtier.proto.containertag.TypeSystem$Value:
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int TYPE_FIELD_NUMBER -> TYPE_FIELD_NUMBER
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type type_ -> d
    int STRING_FIELD_NUMBER -> STRING_FIELD_NUMBER
    java.lang.Object string_ -> e
    int LIST_ITEM_FIELD_NUMBER -> LIST_ITEM_FIELD_NUMBER
    java.util.List listItem_ -> f
    int MAP_KEY_FIELD_NUMBER -> MAP_KEY_FIELD_NUMBER
    java.util.List mapKey_ -> g
    int MAP_VALUE_FIELD_NUMBER -> MAP_VALUE_FIELD_NUMBER
    java.util.List mapValue_ -> h
    int MACRO_REFERENCE_FIELD_NUMBER -> MACRO_REFERENCE_FIELD_NUMBER
    java.lang.Object macroReference_ -> i
    int FUNCTION_ID_FIELD_NUMBER -> FUNCTION_ID_FIELD_NUMBER
    java.lang.Object functionId_ -> j
    int INTEGER_FIELD_NUMBER -> INTEGER_FIELD_NUMBER
    long integer_ -> k
    int BOOLEAN_FIELD_NUMBER -> BOOLEAN_FIELD_NUMBER
    boolean boolean_ -> l
    int TEMPLATE_TOKEN_FIELD_NUMBER -> TEMPLATE_TOKEN_FIELD_NUMBER
    java.util.List templateToken_ -> m
    int ESCAPING_FIELD_NUMBER -> ESCAPING_FIELD_NUMBER
    java.util.List escaping_ -> n
    int CONTAINS_REFERENCES_FIELD_NUMBER -> CONTAINS_REFERENCES_FIELD_NUMBER
    boolean containsReferences_ -> o
    byte memoizedIsInitialized -> p
    int memoizedSerializedSize -> q
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> r
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getDefaultInstance() -> getDefaultInstance
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasType() -> hasType
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type getType() -> getType
    boolean hasString() -> hasString
    java.lang.String getString() -> getString
    com.google.tagmanager.protobuf.ByteString getStringBytes() -> getStringBytes
    java.util.List getListItemList() -> getListItemList
    java.util.List getListItemOrBuilderList() -> getListItemOrBuilderList
    int getListItemCount() -> getListItemCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getListItem(int) -> getListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$ValueOrBuilder getListItemOrBuilder(int) -> getListItemOrBuilder
    java.util.List getMapKeyList() -> getMapKeyList
    java.util.List getMapKeyOrBuilderList() -> getMapKeyOrBuilderList
    int getMapKeyCount() -> getMapKeyCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getMapKey(int) -> getMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$ValueOrBuilder getMapKeyOrBuilder(int) -> getMapKeyOrBuilder
    java.util.List getMapValueList() -> getMapValueList
    java.util.List getMapValueOrBuilderList() -> getMapValueOrBuilderList
    int getMapValueCount() -> getMapValueCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getMapValue(int) -> getMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$ValueOrBuilder getMapValueOrBuilder(int) -> getMapValueOrBuilder
    boolean hasMacroReference() -> hasMacroReference
    java.lang.String getMacroReference() -> getMacroReference
    com.google.tagmanager.protobuf.ByteString getMacroReferenceBytes() -> getMacroReferenceBytes
    boolean hasFunctionId() -> hasFunctionId
    java.lang.String getFunctionId() -> getFunctionId
    com.google.tagmanager.protobuf.ByteString getFunctionIdBytes() -> getFunctionIdBytes
    boolean hasInteger() -> hasInteger
    long getInteger() -> getInteger
    boolean hasBoolean() -> hasBoolean
    boolean getBoolean() -> getBoolean
    java.util.List getTemplateTokenList() -> getTemplateTokenList
    java.util.List getTemplateTokenOrBuilderList() -> getTemplateTokenOrBuilderList
    int getTemplateTokenCount() -> getTemplateTokenCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getTemplateToken(int) -> getTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$ValueOrBuilder getTemplateTokenOrBuilder(int) -> getTemplateTokenOrBuilder
    java.util.List getEscapingList() -> getEscapingList
    int getEscapingCount() -> getEscapingCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping getEscaping(int) -> getEscaping
    boolean hasContainsReferences() -> hasContainsReferences
    boolean getContainsReferences() -> getContainsReferences
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseFrom(byte[]) -> parseFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseFrom(java.io.InputStream) -> parseFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder newBuilder() -> newBuilder
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder newBuilder(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> newBuilder
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type access$302(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type) -> a
    java.lang.Object access$402(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.lang.Object) -> a
    java.util.List access$502(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.List) -> a
    java.util.List access$602(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.List) -> b
    java.util.List access$702(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.List) -> c
    java.lang.Object access$802(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.lang.Object) -> b
    java.lang.Object access$902(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.lang.Object) -> c
    long access$1002(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,long) -> a
    boolean access$1102(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,boolean) -> a
    java.util.List access$1202(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.List) -> d
    java.util.List access$1302(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.List) -> e
    boolean access$1402(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,boolean) -> b
    int access$1502(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,int) -> a
    java.lang.Object access$400(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> a
    java.util.List access$500(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> b
    java.util.List access$600(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> c
    java.util.List access$700(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> d
    java.lang.Object access$800(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> e
    java.lang.Object access$900(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> f
    java.util.List access$1200(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> g
    java.util.List access$1300(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> h
    com.google.tagmanager.protobuf.ByteString access$1600(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> i
com.google.analytics.midtier.proto.containertag.TypeSystem$Value$1 -> gC:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder -> com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder:
    int bitField0_ -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type type_ -> b
    java.lang.Object string_ -> c
    java.util.List listItem_ -> d
    java.util.List mapKey_ -> e
    java.util.List mapValue_ -> f
    java.lang.Object macroReference_ -> g
    java.lang.Object functionId_ -> h
    long integer_ -> i
    boolean boolean_ -> j
    java.util.List templateToken_ -> k
    java.util.List escaping_ -> l
    boolean containsReferences_ -> m
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clear() -> clear
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clone() -> clone
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value build() -> build
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value buildPartial() -> buildPartial
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder mergeFrom(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasType() -> hasType
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type getType() -> getType
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setType(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type) -> setType
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearType() -> clearType
    boolean hasString() -> hasString
    java.lang.String getString() -> getString
    com.google.tagmanager.protobuf.ByteString getStringBytes() -> getStringBytes
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setString(java.lang.String) -> setString
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearString() -> clearString
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setStringBytes(com.google.tagmanager.protobuf.ByteString) -> setStringBytes
    void ensureListItemIsMutable() -> b
    java.util.List getListItemList() -> getListItemList
    int getListItemCount() -> getListItemCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getListItem(int) -> getListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setListItem(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> setListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setListItem(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> setListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addListItem(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addListItem(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addListItem(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addListItem(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addAllListItem(java.lang.Iterable) -> addAllListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearListItem() -> clearListItem
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder removeListItem(int) -> removeListItem
    void ensureMapKeyIsMutable() -> c
    java.util.List getMapKeyList() -> getMapKeyList
    int getMapKeyCount() -> getMapKeyCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getMapKey(int) -> getMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setMapKey(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> setMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setMapKey(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> setMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addMapKey(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addMapKey(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addMapKey(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addMapKey(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addAllMapKey(java.lang.Iterable) -> addAllMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearMapKey() -> clearMapKey
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder removeMapKey(int) -> removeMapKey
    void ensureMapValueIsMutable() -> d
    java.util.List getMapValueList() -> getMapValueList
    int getMapValueCount() -> getMapValueCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getMapValue(int) -> getMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setMapValue(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> setMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setMapValue(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> setMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addMapValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addMapValue(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addMapValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addMapValue(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addAllMapValue(java.lang.Iterable) -> addAllMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearMapValue() -> clearMapValue
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder removeMapValue(int) -> removeMapValue
    boolean hasMacroReference() -> hasMacroReference
    java.lang.String getMacroReference() -> getMacroReference
    com.google.tagmanager.protobuf.ByteString getMacroReferenceBytes() -> getMacroReferenceBytes
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setMacroReference(java.lang.String) -> setMacroReference
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearMacroReference() -> clearMacroReference
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setMacroReferenceBytes(com.google.tagmanager.protobuf.ByteString) -> setMacroReferenceBytes
    boolean hasFunctionId() -> hasFunctionId
    java.lang.String getFunctionId() -> getFunctionId
    com.google.tagmanager.protobuf.ByteString getFunctionIdBytes() -> getFunctionIdBytes
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setFunctionId(java.lang.String) -> setFunctionId
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearFunctionId() -> clearFunctionId
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setFunctionIdBytes(com.google.tagmanager.protobuf.ByteString) -> setFunctionIdBytes
    boolean hasInteger() -> hasInteger
    long getInteger() -> getInteger
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setInteger(long) -> setInteger
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearInteger() -> clearInteger
    boolean hasBoolean() -> hasBoolean
    boolean getBoolean() -> getBoolean
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setBoolean(boolean) -> setBoolean
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearBoolean() -> clearBoolean
    void ensureTemplateTokenIsMutable() -> e
    java.util.List getTemplateTokenList() -> getTemplateTokenList
    int getTemplateTokenCount() -> getTemplateTokenCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getTemplateToken(int) -> getTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setTemplateToken(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> setTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setTemplateToken(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> setTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addTemplateToken(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addTemplateToken(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addTemplateToken(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addTemplateToken(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder) -> addTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addAllTemplateToken(java.lang.Iterable) -> addAllTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearTemplateToken() -> clearTemplateToken
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder removeTemplateToken(int) -> removeTemplateToken
    void ensureEscapingIsMutable() -> f
    java.util.List getEscapingList() -> getEscapingList
    int getEscapingCount() -> getEscapingCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping getEscaping(int) -> getEscaping
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setEscaping(int,com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping) -> setEscaping
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addEscaping(com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping) -> addEscaping
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder addAllEscaping(java.lang.Iterable) -> addAllEscaping
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearEscaping() -> clearEscaping
    boolean hasContainsReferences() -> hasContainsReferences
    boolean getContainsReferences() -> getContainsReferences
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder setContainsReferences(boolean) -> setContainsReferences
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder clearContainsReferences() -> clearContainsReferences
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    java.lang.Object clone() -> clone
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder access$100() -> a
com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping -> com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping:
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_HTML -> ESCAPE_HTML
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_HTML_RCDATA -> ESCAPE_HTML_RCDATA
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_HTML_ATTRIBUTE -> ESCAPE_HTML_ATTRIBUTE
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_HTML_ATTRIBUTE_NOSPACE -> ESCAPE_HTML_ATTRIBUTE_NOSPACE
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping FILTER_HTML_ELEMENT_NAME -> FILTER_HTML_ELEMENT_NAME
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping FILTER_HTML_ATTRIBUTES -> FILTER_HTML_ATTRIBUTES
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_JS_STRING -> ESCAPE_JS_STRING
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_JS_VALUE -> ESCAPE_JS_VALUE
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_JS_REGEX -> ESCAPE_JS_REGEX
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_CSS_STRING -> ESCAPE_CSS_STRING
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping FILTER_CSS_VALUE -> FILTER_CSS_VALUE
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping ESCAPE_URI -> ESCAPE_URI
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping NORMALIZE_URI -> NORMALIZE_URI
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping FILTER_NORMALIZE_URI -> FILTER_NORMALIZE_URI
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping NO_AUTOESCAPE -> NO_AUTOESCAPE
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping TEXT -> TEXT
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping CONVERT_JS_VALUE_TO_EXPRESSION -> CONVERT_JS_VALUE_TO_EXPRESSION
    int ESCAPE_HTML_VALUE -> ESCAPE_HTML_VALUE
    int ESCAPE_HTML_RCDATA_VALUE -> ESCAPE_HTML_RCDATA_VALUE
    int ESCAPE_HTML_ATTRIBUTE_VALUE -> ESCAPE_HTML_ATTRIBUTE_VALUE
    int ESCAPE_HTML_ATTRIBUTE_NOSPACE_VALUE -> ESCAPE_HTML_ATTRIBUTE_NOSPACE_VALUE
    int FILTER_HTML_ELEMENT_NAME_VALUE -> FILTER_HTML_ELEMENT_NAME_VALUE
    int FILTER_HTML_ATTRIBUTES_VALUE -> FILTER_HTML_ATTRIBUTES_VALUE
    int ESCAPE_JS_STRING_VALUE -> ESCAPE_JS_STRING_VALUE
    int ESCAPE_JS_VALUE_VALUE -> ESCAPE_JS_VALUE_VALUE
    int ESCAPE_JS_REGEX_VALUE -> ESCAPE_JS_REGEX_VALUE
    int ESCAPE_CSS_STRING_VALUE -> ESCAPE_CSS_STRING_VALUE
    int FILTER_CSS_VALUE_VALUE -> FILTER_CSS_VALUE_VALUE
    int ESCAPE_URI_VALUE -> ESCAPE_URI_VALUE
    int NORMALIZE_URI_VALUE -> NORMALIZE_URI_VALUE
    int FILTER_NORMALIZE_URI_VALUE -> FILTER_NORMALIZE_URI_VALUE
    int NO_AUTOESCAPE_VALUE -> NO_AUTOESCAPE_VALUE
    int TEXT_VALUE -> TEXT_VALUE
    int CONVERT_JS_VALUE_TO_EXPRESSION_VALUE -> CONVERT_JS_VALUE_TO_EXPRESSION_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping[] $VALUES -> c
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping[] values() -> values
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping$1 -> gD:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type -> com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type:
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type STRING -> STRING
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type LIST -> LIST
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type MAP -> MAP
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type MACRO_REFERENCE -> MACRO_REFERENCE
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type FUNCTION_ID -> FUNCTION_ID
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type INTEGER -> INTEGER
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type TEMPLATE -> TEMPLATE
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type BOOLEAN -> BOOLEAN
    int STRING_VALUE -> STRING_VALUE
    int LIST_VALUE -> LIST_VALUE
    int MAP_VALUE -> MAP_VALUE
    int MACRO_REFERENCE_VALUE -> MACRO_REFERENCE_VALUE
    int FUNCTION_ID_VALUE -> FUNCTION_ID_VALUE
    int INTEGER_VALUE -> INTEGER_VALUE
    int TEMPLATE_VALUE -> TEMPLATE_VALUE
    int BOOLEAN_VALUE -> BOOLEAN_VALUE
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalValueMap -> a
    int value -> b
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type[] $VALUES -> c
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type[] values() -> values
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type valueOf(java.lang.String) -> valueOf
    int getNumber() -> getNumber
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type valueOf(int) -> valueOf
    com.google.tagmanager.protobuf.Internal$EnumLiteMap internalGetValueMap() -> internalGetValueMap
com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type$1 -> gE:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.analytics.midtier.proto.containertag.TypeSystem$ValueOrBuilder -> com.google.analytics.midtier.proto.containertag.TypeSystem$ValueOrBuilder:
    boolean hasType() -> hasType
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Type getType() -> getType
    boolean hasString() -> hasString
    java.lang.String getString() -> getString
    com.google.tagmanager.protobuf.ByteString getStringBytes() -> getStringBytes
    java.util.List getListItemList() -> getListItemList
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getListItem(int) -> getListItem
    int getListItemCount() -> getListItemCount
    java.util.List getMapKeyList() -> getMapKeyList
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getMapKey(int) -> getMapKey
    int getMapKeyCount() -> getMapKeyCount
    java.util.List getMapValueList() -> getMapValueList
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getMapValue(int) -> getMapValue
    int getMapValueCount() -> getMapValueCount
    boolean hasMacroReference() -> hasMacroReference
    java.lang.String getMacroReference() -> getMacroReference
    com.google.tagmanager.protobuf.ByteString getMacroReferenceBytes() -> getMacroReferenceBytes
    boolean hasFunctionId() -> hasFunctionId
    java.lang.String getFunctionId() -> getFunctionId
    com.google.tagmanager.protobuf.ByteString getFunctionIdBytes() -> getFunctionIdBytes
    boolean hasInteger() -> hasInteger
    long getInteger() -> getInteger
    boolean hasBoolean() -> hasBoolean
    boolean getBoolean() -> getBoolean
    java.util.List getTemplateTokenList() -> getTemplateTokenList
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getTemplateToken(int) -> getTemplateToken
    int getTemplateTokenCount() -> getTemplateTokenCount
    java.util.List getEscapingList() -> getEscapingList
    int getEscapingCount() -> getEscapingCount
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Escaping getEscaping(int) -> getEscaping
    boolean hasContainsReferences() -> hasContainsReferences
    boolean getContainsReferences() -> getContainsReferences
com.google.analytics.tracking.android.AnalyticsClient -> gF:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    void connect() -> b
    void disconnect() -> c
com.google.analytics.tracking.android.AnalyticsGmsCoreClient -> com.google.analytics.tracking.android.AnalyticsGmsCoreClient:
    android.content.ServiceConnection mConnection -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener mOnConnectedListener -> b
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener mOnConnectionFailedListener -> c
    android.content.Context mContext -> d
    com.google.android.gms.analytics.internal.IAnalyticsService mService -> e
    void connect() -> b
    void disconnect() -> c
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    com.google.android.gms.analytics.internal.IAnalyticsService getService() -> d
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$AnalyticsServiceConnection -> gG:
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient this$0 -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener -> com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener:
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener -> com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener:
    void onConnectionFailed(int,android.content.Intent) -> onConnectionFailed
com.google.analytics.tracking.android.AnalyticsStore -> gH:
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void clearHits(long) -> a
    void dispatch() -> a
    com.google.analytics.tracking.android.Dispatcher getDispatcher() -> b
com.google.analytics.tracking.android.AnalyticsStoreStateListener -> gI:
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.AnalyticsThread -> gJ:
    void sendHit(java.util.Map) -> a
    void dispatch() -> a
    void clearHits() -> b
    void setForceLocalDispatch() -> c
    java.util.concurrent.LinkedBlockingQueue getQueue() -> d
    java.lang.Thread getThread() -> e
com.google.analytics.tracking.android.AppFieldsDefaultProvider -> gK:
    java.lang.String mAppName -> a
    java.lang.String mAppVersion -> b
    java.lang.String mAppId -> c
    java.lang.String mAppInstallerId -> d
    com.google.analytics.tracking.android.AppFieldsDefaultProvider sInstance -> e
    java.lang.Object sInstanceLock -> f
    void initializeProvider(android.content.Context) -> a
    com.google.analytics.tracking.android.AppFieldsDefaultProvider getProvider() -> a
    boolean providesField(java.lang.String) -> a
    java.lang.String getValue(java.lang.String) -> b
com.google.analytics.tracking.android.CampaignTrackingReceiver -> com.google.analytics.tracking.android.CampaignTrackingReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.analytics.tracking.android.CampaignTrackingService -> com.google.analytics.tracking.android.CampaignTrackingService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void processIntent(android.content.Context,android.content.Intent) -> processIntent
com.google.analytics.tracking.android.ClientIdDefaultProvider -> gL:
    com.google.analytics.tracking.android.ClientIdDefaultProvider sInstance -> a
    java.lang.Object sInstanceLock -> b
    android.content.Context mContext -> c
    java.lang.String mClientId -> d
    boolean mClientIdLoaded -> e
    java.lang.Object mClientIdLock -> f
    void initializeProvider(android.content.Context) -> a
    com.google.analytics.tracking.android.ClientIdDefaultProvider getProvider() -> a
    boolean providesField(java.lang.String) -> a
    java.lang.String getValue(java.lang.String) -> b
    java.lang.String blockingGetClientId() -> c
    boolean storeClientId(java.lang.String) -> c
    java.lang.String initializeClientId() -> b
    java.lang.Object access$000(com.google.analytics.tracking.android.ClientIdDefaultProvider) -> a
    java.lang.String access$102(com.google.analytics.tracking.android.ClientIdDefaultProvider,java.lang.String) -> a
    boolean access$202(com.google.analytics.tracking.android.ClientIdDefaultProvider,boolean) -> a
com.google.analytics.tracking.android.ClientIdDefaultProvider$1 -> gM:
    com.google.analytics.tracking.android.ClientIdDefaultProvider this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.Clock -> gN:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.DefaultLoggerImpl -> gO:
    com.google.analytics.tracking.android.Logger$LogLevel mLogLevel -> a
    void verbose(java.lang.String) -> verbose
    void info(java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.Exception) -> error
    void setLogLevel(com.google.analytics.tracking.android.Logger$LogLevel) -> setLogLevel
    com.google.analytics.tracking.android.Logger$LogLevel getLogLevel() -> getLogLevel
    java.lang.String formatMessage(java.lang.String) -> a
com.google.analytics.tracking.android.DefaultProvider -> gP:
    java.lang.String getValue(java.lang.String) -> b
com.google.analytics.tracking.android.Dispatcher -> gQ:
    int dispatchHits(java.util.List) -> a
    boolean okToDispatch() -> a
    void overrideHostUrl(java.lang.String) -> a
com.google.analytics.tracking.android.EasyTracker -> com.google.analytics.tracking.android.EasyTracker:
    com.google.analytics.tracking.android.EasyTracker sInstance -> a
    java.lang.String sResourcePackageName -> b
    com.google.analytics.tracking.android.GoogleAnalytics mGoogleAnalytics -> c
    boolean mIsReportUncaughtExceptionsEnabled -> d
    boolean mIsAutoActivityTracking -> e
    int mActivitiesActive -> f
    long mSessionTimeout -> g
    long mLastOnStopTime -> h
    android.content.Context mContext -> i
    java.util.Map mActivityNameMap -> j
    com.google.analytics.tracking.android.ParameterLoader mParameterFetcher -> k
    com.google.analytics.tracking.android.ServiceManager mServiceManager -> l
    com.google.analytics.tracking.android.Clock mClock -> m
    java.util.Timer mTimer -> n
    java.util.TimerTask mTimerTask -> o
    boolean mIsInForeground -> p
    boolean mStartSessionOnNextSend -> q
    com.google.analytics.tracking.android.EasyTracker getInstance(android.content.Context) -> getInstance
    com.google.analytics.tracking.android.Logger$LogLevel getLogLevelFromString(java.lang.String) -> a
    void activityStart(android.app.Activity) -> activityStart
    void activityStop(android.app.Activity) -> activityStop
    void dispatchLocalHits() -> dispatchLocalHits
    void clearExistingTimer() -> a
    void send(java.util.Map) -> send
    void setResourcePackageName(java.lang.String) -> setResourcePackageName
    boolean access$102(com.google.analytics.tracking.android.EasyTracker,boolean) -> a
com.google.analytics.tracking.android.EasyTracker$1 -> gR:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.EasyTracker$NotInForegroundTimerTask -> gS:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.ExceptionParser -> com.google.analytics.tracking.android.ExceptionParser:
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> getDescription
com.google.analytics.tracking.android.ExceptionReporter -> com.google.analytics.tracking.android.ExceptionReporter:
    java.lang.Thread$UncaughtExceptionHandler mOriginalHandler -> a
    com.google.analytics.tracking.android.Tracker mTracker -> b
    com.google.analytics.tracking.android.ServiceManager mServiceManager -> c
    com.google.analytics.tracking.android.ExceptionParser mExceptionParser -> d
    com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> getExceptionParser
    void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> setExceptionParser
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.analytics.tracking.android.Fields -> com.google.analytics.tracking.android.Fields:
    java.lang.String ANONYMIZE_IP -> ANONYMIZE_IP
    java.lang.String HIT_TYPE -> HIT_TYPE
    java.lang.String SESSION_CONTROL -> SESSION_CONTROL
    java.lang.String NON_INTERACTION -> NON_INTERACTION
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String SCREEN_NAME -> SCREEN_NAME
    java.lang.String LOCATION -> LOCATION
    java.lang.String REFERRER -> REFERRER
    java.lang.String PAGE -> PAGE
    java.lang.String HOSTNAME -> HOSTNAME
    java.lang.String TITLE -> TITLE
    java.lang.String LANGUAGE -> LANGUAGE
    java.lang.String ENCODING -> ENCODING
    java.lang.String SCREEN_COLORS -> SCREEN_COLORS
    java.lang.String SCREEN_RESOLUTION -> SCREEN_RESOLUTION
    java.lang.String VIEWPORT_SIZE -> VIEWPORT_SIZE
    java.lang.String CLIENT_ID -> CLIENT_ID
    java.lang.String CAMPAIGN_NAME -> CAMPAIGN_NAME
    java.lang.String CAMPAIGN_SOURCE -> CAMPAIGN_SOURCE
    java.lang.String CAMPAIGN_MEDIUM -> CAMPAIGN_MEDIUM
    java.lang.String CAMPAIGN_KEYWORD -> CAMPAIGN_KEYWORD
    java.lang.String CAMPAIGN_CONTENT -> CAMPAIGN_CONTENT
    java.lang.String CAMPAIGN_ID -> CAMPAIGN_ID
    java.lang.String EVENT_CATEGORY -> EVENT_CATEGORY
    java.lang.String EVENT_ACTION -> EVENT_ACTION
    java.lang.String EVENT_LABEL -> EVENT_LABEL
    java.lang.String EVENT_VALUE -> EVENT_VALUE
    java.lang.String SOCIAL_NETWORK -> SOCIAL_NETWORK
    java.lang.String SOCIAL_ACTION -> SOCIAL_ACTION
    java.lang.String SOCIAL_TARGET -> SOCIAL_TARGET
    java.lang.String TIMING_VAR -> TIMING_VAR
    java.lang.String TIMING_VALUE -> TIMING_VALUE
    java.lang.String TIMING_CATEGORY -> TIMING_CATEGORY
    java.lang.String TIMING_LABEL -> TIMING_LABEL
    java.lang.String APP_NAME -> APP_NAME
    java.lang.String APP_ID -> APP_ID
    java.lang.String APP_INSTALLER_ID -> APP_INSTALLER_ID
    java.lang.String APP_VERSION -> APP_VERSION
    java.lang.String EX_DESCRIPTION -> EX_DESCRIPTION
    java.lang.String EX_FATAL -> EX_FATAL
    java.lang.String CURRENCY_CODE -> CURRENCY_CODE
    java.lang.String TRANSACTION_ID -> TRANSACTION_ID
    java.lang.String TRANSACTION_AFFILIATION -> TRANSACTION_AFFILIATION
    java.lang.String TRANSACTION_SHIPPING -> TRANSACTION_SHIPPING
    java.lang.String TRANSACTION_TAX -> TRANSACTION_TAX
    java.lang.String TRANSACTION_REVENUE -> TRANSACTION_REVENUE
    java.lang.String ITEM_SKU -> ITEM_SKU
    java.lang.String ITEM_NAME -> ITEM_NAME
    java.lang.String ITEM_CATEGORY -> ITEM_CATEGORY
    java.lang.String ITEM_PRICE -> ITEM_PRICE
    java.lang.String ITEM_QUANTITY -> ITEM_QUANTITY
    java.lang.String TRACKING_ID -> TRACKING_ID
    java.lang.String SAMPLE_RATE -> SAMPLE_RATE
    java.lang.String JAVA_ENABLED -> JAVA_ENABLED
    java.lang.String FLASH_VERSION -> FLASH_VERSION
    java.lang.String USE_SECURE -> USE_SECURE
    java.lang.String ANDROID_APP_UID -> ANDROID_APP_UID
    java.lang.String customDimension(int) -> customDimension
    java.lang.String customMetric(int) -> customMetric
    java.lang.String contentGroup(int) -> contentGroup
    java.lang.String getParam(java.lang.String,int) -> a
com.google.analytics.tracking.android.FutureApis -> gT:
    int version() -> a
com.google.analytics.tracking.android.GANetworkReceiver -> gU:
    java.lang.String SELF_IDENTIFYING_EXTRA -> a
    com.google.analytics.tracking.android.ServiceManager mManager -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void register(android.content.Context) -> a
    void sendRadioPoweredBroadcast(android.content.Context) -> b
com.google.analytics.tracking.android.GAServiceManager -> com.google.analytics.tracking.android.GAServiceManager:
    java.lang.Object MSG_OBJECT -> a
    android.content.Context ctx -> b
    com.google.analytics.tracking.android.AnalyticsStore store -> c
    com.google.analytics.tracking.android.AnalyticsThread thread -> d
    int dispatchPeriodInSeconds -> e
    boolean pendingDispatch -> f
    boolean pendingForceLocalDispatch -> g
    java.lang.String pendingHostOverride -> h
    boolean connected -> i
    boolean listenForNetwork -> j
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> k
    android.os.Handler handler -> l
    com.google.analytics.tracking.android.GANetworkReceiver networkReceiver -> m
    boolean storeIsEmpty -> n
    com.google.analytics.tracking.android.GAServiceManager instance -> o
    com.google.analytics.tracking.android.GAServiceManager getInstance() -> getInstance
    void initialize(android.content.Context,com.google.analytics.tracking.android.AnalyticsThread) -> a
    com.google.analytics.tracking.android.AnalyticsStore getStore() -> a
    void dispatchLocalHits() -> dispatchLocalHits
    void setLocalDispatchPeriod(int) -> setLocalDispatchPeriod
    void setForceLocalDispatch() -> setForceLocalDispatch
    void updatePowerSaveMode(boolean,boolean) -> a
    void updateConnectivityStatus(boolean) -> a
    void onRadioPowered() -> b
    boolean access$000(com.google.analytics.tracking.android.GAServiceManager) -> a
    java.lang.Object access$100() -> c
    int access$200(com.google.analytics.tracking.android.GAServiceManager) -> b
    boolean access$300(com.google.analytics.tracking.android.GAServiceManager) -> c
    android.os.Handler access$400(com.google.analytics.tracking.android.GAServiceManager) -> d
com.google.analytics.tracking.android.GAServiceManager$1 -> gV:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.GAServiceManager$2 -> gW:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.google.analytics.tracking.android.GAServiceProxy -> gX:
    long lastRequestTime -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState state -> b
    com.google.analytics.tracking.android.AnalyticsClient client -> c
    com.google.analytics.tracking.android.AnalyticsStore store -> d
    com.google.analytics.tracking.android.AnalyticsStore testStore -> e
    com.google.analytics.tracking.android.GoogleAnalytics gaInstance -> f
    com.google.analytics.tracking.android.AnalyticsThread thread -> g
    android.content.Context ctx -> h
    java.util.Queue queue -> i
    int connectTries -> j
    java.util.Timer reConnectTimer -> k
    java.util.Timer failedConnectTimer -> l
    java.util.Timer disconnectCheckTimer -> m
    boolean pendingDispatch -> n
    boolean pendingClearHits -> o
    boolean pendingServiceDisconnect -> p
    boolean forceLocalDispatch -> q
    com.google.analytics.tracking.android.Clock clock -> r
    long idleTimeout -> s
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void dispatch() -> a
    void clearHits() -> b
    void setForceLocalDispatch() -> c
    java.util.Timer cancelTimer(java.util.Timer) -> a
    void clearAllTimers() -> e
    void createService() -> d
    void sendQueue() -> f
    void dispatchToStore() -> g
    void useStore() -> h
    void connectToService() -> i
    void disconnectFromService() -> j
    void onConnected() -> onConnected
    void onDisconnected() -> onDisconnected
    void onConnectionFailed(int,android.content.Intent) -> onConnectionFailed
    void fireReconnectAttempt() -> k
    void access$000(com.google.analytics.tracking.android.GAServiceProxy) -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState access$400(com.google.analytics.tracking.android.GAServiceProxy) -> b
    void access$500(com.google.analytics.tracking.android.GAServiceProxy) -> c
    void access$600(com.google.analytics.tracking.android.GAServiceProxy) -> d
    java.util.Queue access$700(com.google.analytics.tracking.android.GAServiceProxy) -> e
    long access$800(com.google.analytics.tracking.android.GAServiceProxy) -> f
    long access$900(com.google.analytics.tracking.android.GAServiceProxy) -> g
    com.google.analytics.tracking.android.Clock access$1000(com.google.analytics.tracking.android.GAServiceProxy) -> h
    void access$1100(com.google.analytics.tracking.android.GAServiceProxy) -> i
    java.util.Timer access$1200(com.google.analytics.tracking.android.GAServiceProxy) -> j
com.google.analytics.tracking.android.GAServiceProxy$1 -> gY:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.GAServiceProxy$2 -> gZ:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$3 -> ha:
    int[] $SwitchMap$com$google$analytics$tracking$android$GAServiceProxy$ConnectState -> a
com.google.analytics.tracking.android.GAServiceProxy$ConnectState -> hb:
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTING -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_SERVICE -> b
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_LOCAL -> c
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState BLOCKED -> d
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_CONNECTION -> e
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_DISCONNECT -> f
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState DISCONNECTED -> g
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] $VALUES -> h
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] values() -> values
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GAServiceProxy$DisconnectCheckTask -> hc:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$FailedConnectTask -> hd:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$HitParams -> he:
    java.util.Map wireFormatParams -> a
    long hitTimeInMilliseconds -> b
    java.lang.String path -> c
    java.util.List commands -> d
    java.lang.String toString() -> toString
com.google.analytics.tracking.android.GAServiceProxy$ReconnectTask -> hf:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread -> hg:
    java.util.concurrent.LinkedBlockingQueue queue -> a
    boolean mDisabled -> b
    boolean mClosed -> c
    java.util.List mCommands -> d
    java.lang.String mInstallCampaign -> e
    java.lang.String mClientId -> f
    com.google.analytics.tracking.android.GAThread sInstance -> g
    com.google.analytics.tracking.android.ServiceProxy mServiceProxy -> h
    android.content.Context mContext -> i
    com.google.analytics.tracking.android.GAThread getInstance(android.content.Context) -> a
    void sendHit(java.util.Map) -> a
    void dispatch() -> a
    void clearHits() -> b
    void setForceLocalDispatch() -> c
    void queueToThread(java.lang.Runnable) -> a
    java.lang.String getAndClearCampaign(android.content.Context) -> b
    java.lang.String printStackTrace(java.lang.Throwable) -> a
    void run() -> run
    java.util.concurrent.LinkedBlockingQueue getQueue() -> d
    java.lang.Thread getThread() -> e
    java.lang.String access$000(com.google.analytics.tracking.android.GAThread) -> a
    android.content.Context access$100(com.google.analytics.tracking.android.GAThread) -> b
    boolean access$200(com.google.analytics.tracking.android.GAThread,java.util.Map) -> a
    java.lang.String access$300(com.google.analytics.tracking.android.GAThread) -> c
    java.lang.String access$302(com.google.analytics.tracking.android.GAThread,java.lang.String) -> a
    void access$400(com.google.analytics.tracking.android.GAThread,java.util.Map) -> b
    java.lang.String access$500(com.google.analytics.tracking.android.GAThread,java.util.Map) -> c
    java.util.List access$600(com.google.analytics.tracking.android.GAThread) -> d
    com.google.analytics.tracking.android.ServiceProxy access$700(com.google.analytics.tracking.android.GAThread) -> e
com.google.analytics.tracking.android.GAThread$1 -> hh:
    java.util.Map val$hitCopy -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    void run() -> run
com.google.analytics.tracking.android.GAThread$2 -> hi:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread$3 -> hj:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAThread$4 -> hk:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    void run() -> run
com.google.analytics.tracking.android.GAUsage -> com.google.analytics.tracking.android.GAUsage:
    java.util.SortedSet mUsedFields -> a
    java.lang.StringBuilder mSequence -> b
    boolean mDisableUsage -> c
    com.google.analytics.tracking.android.GAUsage INSTANCE -> d
    com.google.analytics.tracking.android.GAUsage getInstance() -> a
    void setDisableUsage(boolean) -> a
    void setUsage(com.google.analytics.tracking.android.GAUsage$Field) -> a
    java.lang.String getAndClearUsage() -> b
    java.lang.String getAndClearSequence() -> c
com.google.analytics.tracking.android.GAUsage$Field -> com.google.analytics.tracking.android.GAUsage$Field:
    com.google.analytics.tracking.android.GAUsage$Field MAP_BUILDER_SET -> MAP_BUILDER_SET
    com.google.analytics.tracking.android.GAUsage$Field MAP_BUILDER_SET_ALL -> MAP_BUILDER_SET_ALL
    com.google.analytics.tracking.android.GAUsage$Field MAP_BUILDER_GET -> MAP_BUILDER_GET
    com.google.analytics.tracking.android.GAUsage$Field MAP_BUILDER_SET_CAMPAIGN_PARAMS -> MAP_BUILDER_SET_CAMPAIGN_PARAMS
    com.google.analytics.tracking.android.GAUsage$Field BLANK_04 -> BLANK_04
    com.google.analytics.tracking.android.GAUsage$Field BLANK_05 -> BLANK_05
    com.google.analytics.tracking.android.GAUsage$Field BLANK_06 -> BLANK_06
    com.google.analytics.tracking.android.GAUsage$Field BLANK_07 -> BLANK_07
    com.google.analytics.tracking.android.GAUsage$Field BLANK_08 -> BLANK_08
    com.google.analytics.tracking.android.GAUsage$Field GET -> GET
    com.google.analytics.tracking.android.GAUsage$Field SET -> SET
    com.google.analytics.tracking.android.GAUsage$Field SEND -> SEND
    com.google.analytics.tracking.android.GAUsage$Field BLANK_12 -> BLANK_12
    com.google.analytics.tracking.android.GAUsage$Field BLANK_13 -> BLANK_13
    com.google.analytics.tracking.android.GAUsage$Field BLANK_14 -> BLANK_14
    com.google.analytics.tracking.android.GAUsage$Field BLANK_15 -> BLANK_15
    com.google.analytics.tracking.android.GAUsage$Field BLANK_16 -> BLANK_16
    com.google.analytics.tracking.android.GAUsage$Field BLANK_17 -> BLANK_17
    com.google.analytics.tracking.android.GAUsage$Field BLANK_18 -> BLANK_18
    com.google.analytics.tracking.android.GAUsage$Field BLANK_19 -> BLANK_19
    com.google.analytics.tracking.android.GAUsage$Field BLANK_20 -> BLANK_20
    com.google.analytics.tracking.android.GAUsage$Field BLANK_21 -> BLANK_21
    com.google.analytics.tracking.android.GAUsage$Field BLANK_22 -> BLANK_22
    com.google.analytics.tracking.android.GAUsage$Field BLANK_23 -> BLANK_23
    com.google.analytics.tracking.android.GAUsage$Field BLANK_24 -> BLANK_24
    com.google.analytics.tracking.android.GAUsage$Field BLANK_25 -> BLANK_25
    com.google.analytics.tracking.android.GAUsage$Field BLANK_26 -> BLANK_26
    com.google.analytics.tracking.android.GAUsage$Field BLANK_27 -> BLANK_27
    com.google.analytics.tracking.android.GAUsage$Field BLANK_28 -> BLANK_28
    com.google.analytics.tracking.android.GAUsage$Field BLANK_29 -> BLANK_29
    com.google.analytics.tracking.android.GAUsage$Field SET_EXCEPTION_PARSER -> SET_EXCEPTION_PARSER
    com.google.analytics.tracking.android.GAUsage$Field GET_EXCEPTION_PARSER -> GET_EXCEPTION_PARSER
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TRANSACTION -> CONSTRUCT_TRANSACTION
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EXCEPTION -> CONSTRUCT_EXCEPTION
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_RAW_EXCEPTION -> CONSTRUCT_RAW_EXCEPTION
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TIMING -> CONSTRUCT_TIMING
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_SOCIAL -> CONSTRUCT_SOCIAL
    com.google.analytics.tracking.android.GAUsage$Field BLANK_37 -> BLANK_37
    com.google.analytics.tracking.android.GAUsage$Field BLANK_38 -> BLANK_38
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER -> GET_TRACKER
    com.google.analytics.tracking.android.GAUsage$Field GET_DEFAULT_TRACKER -> GET_DEFAULT_TRACKER
    com.google.analytics.tracking.android.GAUsage$Field SET_DEFAULT_TRACKER -> SET_DEFAULT_TRACKER
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_OPT_OUT -> SET_APP_OPT_OUT
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_OPT_OUT -> GET_APP_OPT_OUT
    com.google.analytics.tracking.android.GAUsage$Field DISPATCH -> DISPATCH
    com.google.analytics.tracking.android.GAUsage$Field SET_DISPATCH_PERIOD -> SET_DISPATCH_PERIOD
    com.google.analytics.tracking.android.GAUsage$Field BLANK_46 -> BLANK_46
    com.google.analytics.tracking.android.GAUsage$Field REPORT_UNCAUGHT_EXCEPTIONS -> REPORT_UNCAUGHT_EXCEPTIONS
    com.google.analytics.tracking.android.GAUsage$Field SET_AUTO_ACTIVITY_TRACKING -> SET_AUTO_ACTIVITY_TRACKING
    com.google.analytics.tracking.android.GAUsage$Field SET_SESSION_TIMEOUT -> SET_SESSION_TIMEOUT
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EVENT -> CONSTRUCT_EVENT
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_ITEM -> CONSTRUCT_ITEM
    com.google.analytics.tracking.android.GAUsage$Field BLANK_52 -> BLANK_52
    com.google.analytics.tracking.android.GAUsage$Field BLANK_53 -> BLANK_53
    com.google.analytics.tracking.android.GAUsage$Field SET_DRY_RUN -> SET_DRY_RUN
    com.google.analytics.tracking.android.GAUsage$Field GET_DRY_RUN -> GET_DRY_RUN
    com.google.analytics.tracking.android.GAUsage$Field SET_LOGGER -> SET_LOGGER
    com.google.analytics.tracking.android.GAUsage$Field SET_FORCE_LOCAL_DISPATCH -> SET_FORCE_LOCAL_DISPATCH
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER_NAME -> GET_TRACKER_NAME
    com.google.analytics.tracking.android.GAUsage$Field CLOSE_TRACKER -> CLOSE_TRACKER
    com.google.analytics.tracking.android.GAUsage$Field EASY_TRACKER_ACTIVITY_START -> EASY_TRACKER_ACTIVITY_START
    com.google.analytics.tracking.android.GAUsage$Field EASY_TRACKER_ACTIVITY_STOP -> EASY_TRACKER_ACTIVITY_STOP
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_APP_VIEW -> CONSTRUCT_APP_VIEW
    com.google.analytics.tracking.android.GAUsage$Field[] $VALUES -> a
    com.google.analytics.tracking.android.GAUsage$Field[] values() -> values
    com.google.analytics.tracking.android.GAUsage$Field valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GoogleAnalytics -> com.google.analytics.tracking.android.GoogleAnalytics:
    boolean mDryRun -> a
    com.google.analytics.tracking.android.AnalyticsThread mThread -> b
    android.content.Context mContext -> c
    com.google.analytics.tracking.android.Tracker mDefaultTracker -> d
    java.lang.Boolean mAppOptOut -> e
    java.util.Map mTrackers -> f
    com.google.analytics.tracking.android.Logger mLogger -> g
    com.google.analytics.tracking.android.GoogleAnalytics sInstance -> h
    com.google.analytics.tracking.android.GoogleAnalytics getInstance(android.content.Context) -> getInstance
    com.google.analytics.tracking.android.GoogleAnalytics getInstance() -> a
    void setDryRun(boolean) -> setDryRun
    boolean isDryRunEnabled() -> isDryRunEnabled
    com.google.analytics.tracking.android.Tracker getTracker(java.lang.String,java.lang.String) -> getTracker
    com.google.analytics.tracking.android.Tracker getTracker(java.lang.String) -> getTracker
    com.google.analytics.tracking.android.Tracker getDefaultTracker() -> getDefaultTracker
    void setDefaultTracker(com.google.analytics.tracking.android.Tracker) -> setDefaultTracker
    void closeTracker(java.lang.String) -> closeTracker
    void sendHit(java.util.Map) -> a
    void setAppOptOut(boolean) -> setAppOptOut
    boolean getAppOptOut() -> getAppOptOut
    com.google.analytics.tracking.android.Logger getLogger() -> getLogger
    void setLogger(com.google.analytics.tracking.android.Logger) -> setLogger
com.google.analytics.tracking.android.Hit -> hl:
    java.lang.String mHitString -> a
    long mHitId -> b
    long mHitTime -> c
    java.lang.String mHitUrlScheme -> d
com.google.analytics.tracking.android.HitBuilder -> hm:
    java.lang.String encode(java.lang.String) -> a
com.google.analytics.tracking.android.HitTypes -> com.google.analytics.tracking.android.HitTypes:
    java.lang.String EVENT -> EVENT
    java.lang.String ITEM -> ITEM
    java.lang.String APP_VIEW -> APP_VIEW
    java.lang.String SOCIAL -> SOCIAL
    java.lang.String TIMING -> TIMING
    java.lang.String TRANSACTION -> TRANSACTION
    java.lang.String EXCEPTION -> EXCEPTION
com.google.analytics.tracking.android.Log -> com.google.analytics.tracking.android.Log:
    com.google.analytics.tracking.android.GoogleAnalytics sGaInstance -> a
    void e(java.lang.String) -> e
    void e(java.lang.Exception) -> e
    void i(java.lang.String) -> i
    void v(java.lang.String) -> v
    void w(java.lang.String) -> w
    boolean isVerbose() -> isVerbose
    com.google.analytics.tracking.android.Logger getLogger() -> a
com.google.analytics.tracking.android.Logger -> com.google.analytics.tracking.android.Logger:
    void verbose(java.lang.String) -> verbose
    void info(java.lang.String) -> info
    void warn(java.lang.String) -> warn
    void error(java.lang.String) -> error
    void error(java.lang.Exception) -> error
    void setLogLevel(com.google.analytics.tracking.android.Logger$LogLevel) -> setLogLevel
    com.google.analytics.tracking.android.Logger$LogLevel getLogLevel() -> getLogLevel
com.google.analytics.tracking.android.Logger$LogLevel -> com.google.analytics.tracking.android.Logger$LogLevel:
    com.google.analytics.tracking.android.Logger$LogLevel VERBOSE -> VERBOSE
    com.google.analytics.tracking.android.Logger$LogLevel INFO -> INFO
    com.google.analytics.tracking.android.Logger$LogLevel WARNING -> WARNING
    com.google.analytics.tracking.android.Logger$LogLevel ERROR -> ERROR
    com.google.analytics.tracking.android.Logger$LogLevel[] $VALUES -> a
    com.google.analytics.tracking.android.Logger$LogLevel[] values() -> values
    com.google.analytics.tracking.android.Logger$LogLevel valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.MapBuilder -> com.google.analytics.tracking.android.MapBuilder:
    java.util.Map map -> a
    com.google.analytics.tracking.android.MapBuilder set(java.lang.String,java.lang.String) -> set
    com.google.analytics.tracking.android.MapBuilder setAll(java.util.Map) -> setAll
    java.lang.String get(java.lang.String) -> get
    java.util.Map build() -> build
    com.google.analytics.tracking.android.MapBuilder createAppView() -> createAppView
    com.google.analytics.tracking.android.MapBuilder createEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> createEvent
    com.google.analytics.tracking.android.MapBuilder createTransaction(java.lang.String,java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.String) -> createTransaction
    com.google.analytics.tracking.android.MapBuilder createItem(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Long,java.lang.String) -> createItem
    com.google.analytics.tracking.android.MapBuilder createException(java.lang.String,java.lang.Boolean) -> createException
    com.google.analytics.tracking.android.MapBuilder createTiming(java.lang.String,java.lang.Long,java.lang.String,java.lang.String) -> createTiming
    com.google.analytics.tracking.android.MapBuilder createSocial(java.lang.String,java.lang.String,java.lang.String) -> createSocial
    com.google.analytics.tracking.android.MapBuilder setCampaignParamsFromUrl(java.lang.String) -> setCampaignParamsFromUrl
com.google.analytics.tracking.android.ParameterLoader -> hn:
    java.lang.String getString(java.lang.String) -> a
    java.lang.Double getDoubleFromString(java.lang.String) -> b
    boolean getBoolean(java.lang.String) -> c
    int getInt(java.lang.String,int) -> a
    void setResourcePackageName(java.lang.String) -> d
com.google.analytics.tracking.android.ParameterLoaderImpl -> ho:
    android.content.Context mContext -> a
    java.lang.String mOverrideResourcePackageName -> b
    int getResourceIdForType(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> a
    boolean getBoolean(java.lang.String) -> c
    int getInt(java.lang.String,int) -> a
    java.lang.Double getDoubleFromString(java.lang.String) -> b
    void setResourcePackageName(java.lang.String) -> d
com.google.analytics.tracking.android.PersistentAnalyticsStore -> hp:
    java.lang.String CREATE_HITS_TABLE -> a
    com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper mDbHelper -> b
    com.google.analytics.tracking.android.Dispatcher mDispatcher -> c
    com.google.analytics.tracking.android.AnalyticsStoreStateListener mListener -> d
    android.content.Context mContext -> e
    java.lang.String mDatabaseName -> f
    long mLastDeleteStaleHitsTime -> g
    com.google.analytics.tracking.android.Clock mClock -> h
    void clearHits(long) -> a
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void fillVersionParameter(java.util.Map,java.util.Collection) -> a
    java.lang.String generateHitString(java.util.Map) -> a
    java.util.List peekHitIds(int) -> a
    java.util.List peekHits(int) -> b
    void deleteHits(java.util.Collection) -> a
    void deleteHits(java.lang.String[]) -> a
    int getNumStoredHits() -> d
    void dispatch() -> a
    com.google.analytics.tracking.android.Dispatcher getDispatcher() -> b
    android.database.sqlite.SQLiteDatabase getWritableDatabase(java.lang.String) -> a
    com.google.analytics.tracking.android.Clock access$000(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> a
    java.lang.String access$100(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> b
    android.content.Context access$200(com.google.analytics.tracking.android.PersistentAnalyticsStore) -> c
    java.lang.String access$300() -> c
com.google.analytics.tracking.android.PersistentAnalyticsStore$1 -> hq:
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper -> hr:
    boolean mBadDatabase -> b
    long mLastDatabaseCheckTime -> c
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    boolean tablePresent(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.analytics.tracking.android.ScreenResolutionDefaultProvider -> hs:
    com.google.analytics.tracking.android.ScreenResolutionDefaultProvider sInstance -> a
    java.lang.Object sInstanceLock -> b
    android.content.Context mContext -> c
    void initializeProvider(android.content.Context) -> a
    com.google.analytics.tracking.android.ScreenResolutionDefaultProvider getProvider() -> a
    boolean providesField(java.lang.String) -> a
    java.lang.String getValue(java.lang.String) -> b
com.google.analytics.tracking.android.ServiceManager -> com.google.analytics.tracking.android.ServiceManager:
    void dispatchLocalHits() -> dispatchLocalHits
    void setLocalDispatchPeriod(int) -> setLocalDispatchPeriod
    void setForceLocalDispatch() -> setForceLocalDispatch
    void updateConnectivityStatus(boolean) -> a
    void onRadioPowered() -> b
com.google.analytics.tracking.android.ServiceProxy -> ht:
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> b
    void setForceLocalDispatch() -> c
    void dispatch() -> a
    void createService() -> d
com.google.analytics.tracking.android.SimpleNetworkDispatcher -> hu:
    java.lang.String userAgent -> a
    org.apache.http.client.HttpClient httpClient -> b
    android.content.Context ctx -> c
    com.google.analytics.tracking.android.GoogleAnalytics gaInstance -> d
    java.net.URL mOverrideHostUrl -> e
    boolean okToDispatch() -> a
    int dispatchHits(java.util.List) -> a
    org.apache.http.HttpEntityEnclosingRequest buildRequest(java.lang.String,java.lang.String) -> a
    void logDebugInformation(org.apache.http.HttpEntityEnclosingRequest) -> a
    java.net.URL getUrl(com.google.analytics.tracking.android.Hit) -> a
    void overrideHostUrl(java.lang.String) -> a
com.google.analytics.tracking.android.StandardExceptionParser -> com.google.analytics.tracking.android.StandardExceptionParser:
    java.util.TreeSet includedPackages -> a
    void setIncludedPackages(android.content.Context,java.util.Collection) -> setIncludedPackages
    java.lang.Throwable getCause(java.lang.Throwable) -> getCause
    java.lang.StackTraceElement getBestStackTraceElement(java.lang.Throwable) -> getBestStackTraceElement
    java.lang.String getDescription(java.lang.Throwable,java.lang.StackTraceElement,java.lang.String) -> getDescription
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> getDescription
com.google.analytics.tracking.android.Tracker -> com.google.analytics.tracking.android.Tracker:
    java.lang.String mName -> a
    com.google.analytics.tracking.android.TrackerHandler mHandler -> b
    java.util.Map mParams -> c
    long mTokens -> d
    long mLastTrackTime -> e
    com.google.analytics.tracking.android.ClientIdDefaultProvider mClientIdDefaultProvider -> f
    com.google.analytics.tracking.android.ScreenResolutionDefaultProvider mScreenResolutionDefaultProvider -> g
    com.google.analytics.tracking.android.AppFieldsDefaultProvider mAppFieldsDefaultProvider -> h
    java.lang.String getName() -> getName
    void send(java.util.Map) -> send
    java.lang.String get(java.lang.String) -> get
    void set(java.lang.String,java.lang.String) -> set
    boolean tokensAvailable() -> a
com.google.analytics.tracking.android.TrackerHandler -> hv:
    void sendHit(java.util.Map) -> a
com.google.analytics.tracking.android.Utils -> hw:
    char[] HEXBYTES -> a
    java.util.Map parseURLParameters(java.lang.String) -> a
    double safeParseDouble(java.lang.String,double) -> a
    boolean safeParseBoolean(java.lang.String,boolean) -> a
    java.lang.String filterCampaign(java.lang.String) -> b
    java.lang.String getLanguage(java.util.Locale) -> a
    void putIfAbsent(java.util.Map,java.lang.String,java.lang.String) -> a
com.google.android.gms.analytics.internal.Command -> com.google.android.gms.analytics.internal.Command:
    java.lang.String APPEND_VERSION -> APPEND_VERSION
    java.lang.String APPEND_QUEUE_TIME -> APPEND_QUEUE_TIME
    java.lang.String APPEND_CACHE_BUSTER -> APPEND_CACHE_BUSTER
    java.lang.String id -> a
    java.lang.String urlParam -> b
    java.lang.String value -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> getId
    java.lang.String getUrlParam() -> getUrlParam
    java.lang.String getValue() -> getValue
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.google.android.gms.analytics.internal.Command$1 -> hx:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.analytics.internal.IAnalyticsService -> com.google.android.gms.analytics.internal.IAnalyticsService:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> sendHit
    void clearHits() -> clearHits
com.google.android.gms.analytics.internal.IAnalyticsService$Stub -> com.google.android.gms.analytics.internal.IAnalyticsService$Stub:
    com.google.android.gms.analytics.internal.IAnalyticsService asInterface(android.os.IBinder) -> asInterface
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.analytics.internal.IAnalyticsService$Stub$Proxy -> hy:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> sendHit
    void clearHits() -> clearHits
com.google.android.gms.common.util.VisibleForTesting -> com.google.android.gms.common.util.VisibleForTesting:
com.google.api.client.auth.oauth.AbstractOAuthGetToken -> com.google.api.client.auth.oauth.AbstractOAuthGetToken:
    com.google.api.client.http.HttpTransport transport -> transport
    java.lang.String consumerKey -> consumerKey
    com.google.api.client.auth.oauth.OAuthSigner signer -> signer
    boolean usePost -> usePost
    com.google.api.client.auth.oauth.OAuthCredentialsResponse execute() -> execute
    com.google.api.client.auth.oauth.OAuthParameters createParameters() -> createParameters
com.google.api.client.auth.oauth.OAuthAuthorizeTemporaryTokenUrl -> com.google.api.client.auth.oauth.OAuthAuthorizeTemporaryTokenUrl:
    java.lang.String temporaryToken -> temporaryToken
com.google.api.client.auth.oauth.OAuthCallbackUrl -> com.google.api.client.auth.oauth.OAuthCallbackUrl:
    java.lang.String token -> token
    java.lang.String verifier -> verifier
com.google.api.client.auth.oauth.OAuthCredentialsResponse -> com.google.api.client.auth.oauth.OAuthCredentialsResponse:
    java.lang.String token -> token
    java.lang.String tokenSecret -> tokenSecret
    java.lang.Boolean callbackConfirmed -> callbackConfirmed
com.google.api.client.auth.oauth.OAuthGetAccessToken -> com.google.api.client.auth.oauth.OAuthGetAccessToken:
    java.lang.String temporaryToken -> temporaryToken
    java.lang.String verifier -> verifier
    com.google.api.client.auth.oauth.OAuthParameters createParameters() -> createParameters
com.google.api.client.auth.oauth.OAuthGetTemporaryToken -> com.google.api.client.auth.oauth.OAuthGetTemporaryToken:
    java.lang.String callback -> callback
    com.google.api.client.auth.oauth.OAuthParameters createParameters() -> createParameters
com.google.api.client.auth.oauth.OAuthHmacSigner -> com.google.api.client.auth.oauth.OAuthHmacSigner:
    java.lang.String clientSharedSecret -> clientSharedSecret
    java.lang.String tokenSharedSecret -> tokenSharedSecret
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String computeSignature(java.lang.String) -> computeSignature
com.google.api.client.auth.oauth.OAuthParameters -> com.google.api.client.auth.oauth.OAuthParameters:
    java.security.SecureRandom RANDOM -> a
    com.google.api.client.auth.oauth.OAuthSigner signer -> signer
    java.lang.String callback -> callback
    java.lang.String consumerKey -> consumerKey
    java.lang.String nonce -> nonce
    java.lang.String realm -> realm
    java.lang.String signature -> signature
    java.lang.String signatureMethod -> signatureMethod
    java.lang.String timestamp -> timestamp
    java.lang.String token -> token
    java.lang.String verifier -> verifier
    java.lang.String version -> version
    com.google.api.client.util.escape.PercentEscaper ESCAPER -> b
    void computeNonce() -> computeNonce
    void computeTimestamp() -> computeTimestamp
    void computeSignature(java.lang.String,com.google.api.client.http.GenericUrl) -> computeSignature
    java.lang.String getAuthorizationHeader() -> getAuthorizationHeader
    void appendParameter(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    void putParameterIfValueNotNull(java.util.TreeMap,java.lang.String,java.lang.String) -> a
    void putParameter(java.util.TreeMap,java.lang.String,java.lang.Object) -> a
    java.lang.String escape(java.lang.String) -> escape
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.auth.oauth.OAuthRsaSigner -> com.google.api.client.auth.oauth.OAuthRsaSigner:
    java.security.PrivateKey privateKey -> privateKey
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String computeSignature(java.lang.String) -> computeSignature
com.google.api.client.auth.oauth.OAuthSigner -> com.google.api.client.auth.oauth.OAuthSigner:
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String computeSignature(java.lang.String) -> computeSignature
com.google.api.client.auth.oauth2.AuthorizationCodeFlow -> com.google.api.client.auth.oauth2.AuthorizationCodeFlow:
    com.google.api.client.auth.oauth2.Credential$AccessMethod method -> a
    com.google.api.client.http.HttpTransport transport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    java.lang.String tokenServerEncodedUrl -> d
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> e
    java.lang.String clientId -> f
    java.lang.String authorizationServerEncodedUrl -> g
    com.google.api.client.auth.oauth2.CredentialStore credentialStore -> h
    com.google.api.client.util.store.DataStore credentialDataStore -> i
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> j
    com.google.api.client.util.Clock clock -> k
    java.util.Collection scopes -> l
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener credentialCreatedListener -> m
    java.util.Collection refreshListeners -> n
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl newAuthorizationUrl() -> newAuthorizationUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest newTokenRequest(java.lang.String) -> newTokenRequest
    com.google.api.client.auth.oauth2.Credential createAndStoreCredential(com.google.api.client.auth.oauth2.TokenResponse,java.lang.String) -> createAndStoreCredential
    com.google.api.client.auth.oauth2.Credential loadCredential(java.lang.String) -> loadCredential
    com.google.api.client.auth.oauth2.Credential newCredential(java.lang.String) -> a
    com.google.api.client.auth.oauth2.Credential$AccessMethod getMethod() -> getMethod
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getTokenServerEncodedUrl() -> getTokenServerEncodedUrl
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    java.lang.String getClientId() -> getClientId
    java.lang.String getAuthorizationServerEncodedUrl() -> getAuthorizationServerEncodedUrl
    com.google.api.client.auth.oauth2.CredentialStore getCredentialStore() -> getCredentialStore
    com.google.api.client.util.store.DataStore getCredentialDataStore() -> getCredentialDataStore
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    java.lang.String getScopesAsString() -> getScopesAsString
    java.util.Collection getScopes() -> getScopes
    com.google.api.client.util.Clock getClock() -> getClock
    java.util.Collection getRefreshListeners() -> getRefreshListeners
com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder -> com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder:
    com.google.api.client.auth.oauth2.Credential$AccessMethod method -> a
    com.google.api.client.http.HttpTransport transport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    com.google.api.client.http.GenericUrl tokenServerUrl -> d
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> e
    java.lang.String clientId -> f
    java.lang.String authorizationServerEncodedUrl -> g
    com.google.api.client.auth.oauth2.CredentialStore credentialStore -> h
    com.google.api.client.util.store.DataStore credentialDataStore -> i
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> j
    java.util.Collection scopes -> k
    com.google.api.client.util.Clock clock -> l
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener credentialCreatedListener -> m
    java.util.Collection refreshListeners -> n
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow build() -> build
    com.google.api.client.auth.oauth2.Credential$AccessMethod getMethod() -> getMethod
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setMethod(com.google.api.client.auth.oauth2.Credential$AccessMethod) -> setMethod
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.http.GenericUrl getTokenServerUrl() -> getTokenServerUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    java.lang.String getClientId() -> getClientId
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClientId(java.lang.String) -> setClientId
    java.lang.String getAuthorizationServerEncodedUrl() -> getAuthorizationServerEncodedUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setAuthorizationServerEncodedUrl(java.lang.String) -> setAuthorizationServerEncodedUrl
    com.google.api.client.auth.oauth2.CredentialStore getCredentialStore() -> getCredentialStore
    com.google.api.client.util.store.DataStore getCredentialDataStore() -> getCredentialDataStore
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialStore(com.google.api.client.auth.oauth2.CredentialStore) -> setCredentialStore
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setDataStoreFactory(com.google.api.client.util.store.DataStoreFactory) -> setDataStoreFactory
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialDataStore(com.google.api.client.util.store.DataStore) -> setCredentialDataStore
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setScopes(java.util.Collection) -> setScopes
    java.util.Collection getScopes() -> getScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialCreatedListener(com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener) -> setCredentialCreatedListener
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    java.util.Collection getRefreshListeners() -> getRefreshListeners
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setRefreshListeners(java.util.Collection) -> setRefreshListeners
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener getCredentialCreatedListener() -> getCredentialCreatedListener
com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener -> com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener:
    void onCredentialCreated(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenResponse) -> onCredentialCreated
com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl -> com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl:
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl -> com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl:
    java.lang.String code -> code
    java.lang.String state -> state
    java.lang.String error -> error
    java.lang.String errorDescription -> errorDescription
    java.lang.String errorUri -> errorUri
    java.lang.String getCode() -> getCode
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setCode(java.lang.String) -> setCode
    java.lang.String getState() -> getState
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setState(java.lang.String) -> setState
    java.lang.String getError() -> getError
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setError(java.lang.String) -> setError
    java.lang.String getErrorDescription() -> getErrorDescription
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setErrorDescription(java.lang.String) -> setErrorDescription
    java.lang.String getErrorUri() -> getErrorUri
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setErrorUri(java.lang.String) -> setErrorUri
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl clone() -> clone
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest -> com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest:
    java.lang.String code -> code
    java.lang.String redirectUri -> redirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    java.lang.String getCode() -> getCode
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setCode(java.lang.String) -> setCode
    java.lang.String getRedirectUri() -> getRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.AuthorizationRequestUrl -> com.google.api.client.auth.oauth2.AuthorizationRequestUrl:
    java.lang.String responseTypes -> responseTypes
    java.lang.String redirectUri -> redirectUri
    java.lang.String scopes -> scopes
    java.lang.String clientId -> clientId
    java.lang.String state -> state
    java.lang.String getResponseTypes() -> getResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    java.lang.String getRedirectUri() -> getRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    java.lang.String getScopes() -> getScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.util.Collection) -> setScopes
    java.lang.String getClientId() -> getClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    java.lang.String getState() -> getState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.BearerToken -> com.google.api.client.auth.oauth2.BearerToken:
    java.util.regex.Pattern INVALID_TOKEN_ERROR -> a
    com.google.api.client.auth.oauth2.Credential$AccessMethod authorizationHeaderAccessMethod() -> authorizationHeaderAccessMethod
    com.google.api.client.auth.oauth2.Credential$AccessMethod formEncodedBodyAccessMethod() -> formEncodedBodyAccessMethod
    com.google.api.client.auth.oauth2.Credential$AccessMethod queryParameterAccessMethod() -> queryParameterAccessMethod
com.google.api.client.auth.oauth2.BearerToken$AuthorizationHeaderAccessMethod -> hz:
    void intercept(com.google.api.client.http.HttpRequest,java.lang.String) -> intercept
    java.lang.String getAccessTokenFromRequest(com.google.api.client.http.HttpRequest) -> getAccessTokenFromRequest
com.google.api.client.auth.oauth2.BearerToken$FormEncodedBodyAccessMethod -> hA:
    void intercept(com.google.api.client.http.HttpRequest,java.lang.String) -> intercept
    java.lang.String getAccessTokenFromRequest(com.google.api.client.http.HttpRequest) -> getAccessTokenFromRequest
    java.util.Map getData(com.google.api.client.http.HttpRequest) -> a
com.google.api.client.auth.oauth2.BearerToken$QueryParameterAccessMethod -> hB:
    void intercept(com.google.api.client.http.HttpRequest,java.lang.String) -> intercept
    java.lang.String getAccessTokenFromRequest(com.google.api.client.http.HttpRequest) -> getAccessTokenFromRequest
com.google.api.client.auth.oauth2.BrowserClientRequestUrl -> com.google.api.client.auth.oauth2.BrowserClientRequestUrl:
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest -> com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest:
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.ClientParametersAuthentication -> com.google.api.client.auth.oauth2.ClientParametersAuthentication:
    java.lang.String clientId -> a
    java.lang.String clientSecret -> b
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
    java.lang.String getClientId() -> getClientId
    java.lang.String getClientSecret() -> getClientSecret
com.google.api.client.auth.oauth2.Credential -> com.google.api.client.auth.oauth2.Credential:
    java.util.logging.Logger LOGGER -> a
    java.util.concurrent.locks.Lock lock -> b
    com.google.api.client.auth.oauth2.Credential$AccessMethod method -> c
    com.google.api.client.util.Clock clock -> d
    java.lang.String accessToken -> e
    java.lang.Long expirationTimeMilliseconds -> f
    java.lang.String refreshToken -> g
    com.google.api.client.http.HttpTransport transport -> h
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> i
    com.google.api.client.json.JsonFactory jsonFactory -> j
    java.lang.String tokenServerEncodedUrl -> k
    java.util.Collection refreshListeners -> l
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> m
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    java.lang.String getAccessToken() -> getAccessToken
    com.google.api.client.auth.oauth2.Credential setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.auth.oauth2.Credential$AccessMethod getMethod() -> getMethod
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getTokenServerEncodedUrl() -> getTokenServerEncodedUrl
    java.lang.String getRefreshToken() -> getRefreshToken
    com.google.api.client.auth.oauth2.Credential setRefreshToken(java.lang.String) -> setRefreshToken
    java.lang.Long getExpirationTimeMilliseconds() -> getExpirationTimeMilliseconds
    com.google.api.client.auth.oauth2.Credential setExpirationTimeMilliseconds(java.lang.Long) -> setExpirationTimeMilliseconds
    java.lang.Long getExpiresInSeconds() -> getExpiresInSeconds
    com.google.api.client.auth.oauth2.Credential setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    boolean refreshToken() -> refreshToken
    com.google.api.client.auth.oauth2.Credential setFromTokenResponse(com.google.api.client.auth.oauth2.TokenResponse) -> setFromTokenResponse
    com.google.api.client.auth.oauth2.TokenResponse executeRefreshToken() -> executeRefreshToken
    java.util.Collection getRefreshListeners() -> getRefreshListeners
com.google.api.client.auth.oauth2.Credential$AccessMethod -> com.google.api.client.auth.oauth2.Credential$AccessMethod:
    void intercept(com.google.api.client.http.HttpRequest,java.lang.String) -> intercept
    java.lang.String getAccessTokenFromRequest(com.google.api.client.http.HttpRequest) -> getAccessTokenFromRequest
com.google.api.client.auth.oauth2.Credential$Builder -> com.google.api.client.auth.oauth2.Credential$Builder:
    com.google.api.client.auth.oauth2.Credential$AccessMethod method -> a
    com.google.api.client.http.HttpTransport transport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    com.google.api.client.http.GenericUrl tokenServerUrl -> d
    com.google.api.client.util.Clock clock -> e
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> f
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> g
    java.util.Collection refreshListeners -> h
    com.google.api.client.auth.oauth2.Credential build() -> build
    com.google.api.client.auth.oauth2.Credential$AccessMethod getMethod() -> getMethod
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.auth.oauth2.Credential$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.auth.oauth2.Credential$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.auth.oauth2.Credential$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.http.GenericUrl getTokenServerUrl() -> getTokenServerUrl
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerEncodedUrl(java.lang.String) -> setTokenServerEncodedUrl
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    com.google.api.client.auth.oauth2.Credential$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    com.google.api.client.auth.oauth2.Credential$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.Credential$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    java.util.Collection getRefreshListeners() -> getRefreshListeners
    com.google.api.client.auth.oauth2.Credential$Builder setRefreshListeners(java.util.Collection) -> setRefreshListeners
com.google.api.client.auth.oauth2.CredentialRefreshListener -> com.google.api.client.auth.oauth2.CredentialRefreshListener:
    void onTokenResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenResponse) -> onTokenResponse
    void onTokenErrorResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenErrorResponse) -> onTokenErrorResponse
com.google.api.client.auth.oauth2.CredentialStore -> com.google.api.client.auth.oauth2.CredentialStore:
    boolean load(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> load
    void store(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> store
    void delete(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> delete
com.google.api.client.auth.oauth2.CredentialStoreRefreshListener -> com.google.api.client.auth.oauth2.CredentialStoreRefreshListener:
    com.google.api.client.auth.oauth2.CredentialStore credentialStore -> a
    java.lang.String userId -> b
    void onTokenResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenResponse) -> onTokenResponse
    void onTokenErrorResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenErrorResponse) -> onTokenErrorResponse
    com.google.api.client.auth.oauth2.CredentialStore getCredentialStore() -> getCredentialStore
    void makePersistent(com.google.api.client.auth.oauth2.Credential) -> makePersistent
com.google.api.client.auth.oauth2.DataStoreCredentialRefreshListener -> com.google.api.client.auth.oauth2.DataStoreCredentialRefreshListener:
    com.google.api.client.util.store.DataStore credentialDataStore -> a
    java.lang.String userId -> b
    void onTokenResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenResponse) -> onTokenResponse
    void onTokenErrorResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenErrorResponse) -> onTokenErrorResponse
    com.google.api.client.util.store.DataStore getCredentialDataStore() -> getCredentialDataStore
    void makePersistent(com.google.api.client.auth.oauth2.Credential) -> makePersistent
com.google.api.client.auth.oauth2.PasswordTokenRequest -> com.google.api.client.auth.oauth2.PasswordTokenRequest:
    java.lang.String username -> username
    java.lang.String password -> password
    com.google.api.client.auth.oauth2.PasswordTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.PasswordTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.PasswordTokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.PasswordTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.PasswordTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    java.lang.String getUsername() -> getUsername
    com.google.api.client.auth.oauth2.PasswordTokenRequest setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    com.google.api.client.auth.oauth2.PasswordTokenRequest setPassword(java.lang.String) -> setPassword
    com.google.api.client.auth.oauth2.PasswordTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.RefreshTokenRequest -> com.google.api.client.auth.oauth2.RefreshTokenRequest:
    java.lang.String refreshToken -> refreshToken
    com.google.api.client.auth.oauth2.RefreshTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.RefreshTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.RefreshTokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.RefreshTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.RefreshTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    java.lang.String getRefreshToken() -> getRefreshToken
    com.google.api.client.auth.oauth2.RefreshTokenRequest setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.RefreshTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.StoredCredential -> com.google.api.client.auth.oauth2.StoredCredential:
    java.lang.String DEFAULT_DATA_STORE_ID -> DEFAULT_DATA_STORE_ID
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.locks.Lock lock -> a
    java.lang.String accessToken -> b
    java.lang.Long expirationTimeMilliseconds -> c
    java.lang.String refreshToken -> d
    java.lang.String getAccessToken() -> getAccessToken
    com.google.api.client.auth.oauth2.StoredCredential setAccessToken(java.lang.String) -> setAccessToken
    java.lang.Long getExpirationTimeMilliseconds() -> getExpirationTimeMilliseconds
    com.google.api.client.auth.oauth2.StoredCredential setExpirationTimeMilliseconds(java.lang.Long) -> setExpirationTimeMilliseconds
    java.lang.String getRefreshToken() -> getRefreshToken
    com.google.api.client.auth.oauth2.StoredCredential setRefreshToken(java.lang.String) -> setRefreshToken
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.api.client.util.store.DataStore getDefaultDataStore(com.google.api.client.util.store.DataStoreFactory) -> getDefaultDataStore
com.google.api.client.auth.oauth2.TokenErrorResponse -> com.google.api.client.auth.oauth2.TokenErrorResponse:
    java.lang.String error -> error
    java.lang.String errorDescription -> errorDescription
    java.lang.String errorUri -> errorUri
    java.lang.String getError() -> getError
    com.google.api.client.auth.oauth2.TokenErrorResponse setError(java.lang.String) -> setError
    java.lang.String getErrorDescription() -> getErrorDescription
    com.google.api.client.auth.oauth2.TokenErrorResponse setErrorDescription(java.lang.String) -> setErrorDescription
    java.lang.String getErrorUri() -> getErrorUri
    com.google.api.client.auth.oauth2.TokenErrorResponse setErrorUri(java.lang.String) -> setErrorUri
    com.google.api.client.auth.oauth2.TokenErrorResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenErrorResponse clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.TokenRequest -> com.google.api.client.auth.oauth2.TokenRequest:
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> a
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> b
    com.google.api.client.http.HttpTransport transport -> e
    com.google.api.client.json.JsonFactory jsonFactory -> f
    com.google.api.client.http.GenericUrl tokenServerUrl -> g
    java.lang.String scopes -> scopes
    java.lang.String grantType -> grantType
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.http.GenericUrl getTokenServerUrl() -> getTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    java.lang.String getScopes() -> getScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.util.Collection) -> setScopes
    java.lang.String getGrantType() -> getGrantType
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.http.HttpResponse executeUnparsed() -> executeUnparsed
    com.google.api.client.auth.oauth2.TokenResponse execute() -> execute
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.TokenRequest$1 -> hC:
    com.google.api.client.auth.oauth2.TokenRequest this$0 -> a
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
com.google.api.client.auth.oauth2.TokenRequest$1$1 -> hD:
    com.google.api.client.http.HttpExecuteInterceptor val$interceptor -> a
    com.google.api.client.auth.oauth2.TokenRequest$1 this$1 -> b
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.auth.oauth2.TokenResponse -> com.google.api.client.auth.oauth2.TokenResponse:
    java.lang.String accessToken -> accessToken
    java.lang.String tokenType -> tokenType
    java.lang.Long expiresInSeconds -> expiresInSeconds
    java.lang.String refreshToken -> refreshToken
    java.lang.String scope -> scope
    java.lang.String getAccessToken() -> getAccessToken
    com.google.api.client.auth.oauth2.TokenResponse setAccessToken(java.lang.String) -> setAccessToken
    java.lang.String getTokenType() -> getTokenType
    com.google.api.client.auth.oauth2.TokenResponse setTokenType(java.lang.String) -> setTokenType
    java.lang.Long getExpiresInSeconds() -> getExpiresInSeconds
    com.google.api.client.auth.oauth2.TokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    java.lang.String getRefreshToken() -> getRefreshToken
    com.google.api.client.auth.oauth2.TokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    java.lang.String getScope() -> getScope
    com.google.api.client.auth.oauth2.TokenResponse setScope(java.lang.String) -> setScope
    com.google.api.client.auth.oauth2.TokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.TokenResponseException -> com.google.api.client.auth.oauth2.TokenResponseException:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.auth.oauth2.TokenErrorResponse details -> a
    com.google.api.client.auth.oauth2.TokenErrorResponse getDetails() -> getDetails
    com.google.api.client.auth.oauth2.TokenResponseException from(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse) -> from
com.google.api.client.auth.openidconnect.IdToken -> com.google.api.client.auth.openidconnect.IdToken:
    com.google.api.client.auth.openidconnect.IdToken$Payload getPayload() -> getPayload
    boolean verifyIssuer(java.lang.String) -> verifyIssuer
    boolean verifyAudience(java.util.Collection) -> verifyAudience
    boolean verifyTime(long,long) -> verifyTime
    boolean verifyExpirationTime(long,long) -> verifyExpirationTime
    boolean verifyIssuedAtTime(long,long) -> verifyIssuedAtTime
    com.google.api.client.auth.openidconnect.IdToken parse(com.google.api.client.json.JsonFactory,java.lang.String) -> parse
    com.google.api.client.json.webtoken.JsonWebToken$Payload getPayload() -> getPayload
com.google.api.client.auth.openidconnect.IdToken$Payload -> com.google.api.client.auth.openidconnect.IdToken$Payload:
    java.lang.Long authorizationTimeSeconds -> authorizationTimeSeconds
    java.lang.String authorizedParty -> authorizedParty
    java.lang.String nonce -> nonce
    java.lang.String accessTokenHash -> accessTokenHash
    java.lang.String classReference -> classReference
    java.util.List methodsReferences -> methodsReferences
    java.lang.Long getAuthorizationTimeSeconds() -> getAuthorizationTimeSeconds
    com.google.api.client.auth.openidconnect.IdToken$Payload setAuthorizationTimeSeconds(java.lang.Long) -> setAuthorizationTimeSeconds
    java.lang.String getAuthorizedParty() -> getAuthorizedParty
    com.google.api.client.auth.openidconnect.IdToken$Payload setAuthorizedParty(java.lang.String) -> setAuthorizedParty
    java.lang.String getNonce() -> getNonce
    com.google.api.client.auth.openidconnect.IdToken$Payload setNonce(java.lang.String) -> setNonce
    java.lang.String getAccessTokenHash() -> getAccessTokenHash
    com.google.api.client.auth.openidconnect.IdToken$Payload setAccessTokenHash(java.lang.String) -> setAccessTokenHash
    java.lang.String getClassReference() -> getClassReference
    com.google.api.client.auth.openidconnect.IdToken$Payload setClassReference(java.lang.String) -> setClassReference
    java.util.List getMethodsReferences() -> getMethodsReferences
    com.google.api.client.auth.openidconnect.IdToken$Payload setMethodsReferences(java.util.List) -> setMethodsReferences
    com.google.api.client.auth.openidconnect.IdToken$Payload setExpirationTimeSeconds(java.lang.Long) -> setExpirationTimeSeconds
    com.google.api.client.auth.openidconnect.IdToken$Payload setNotBeforeTimeSeconds(java.lang.Long) -> setNotBeforeTimeSeconds
    com.google.api.client.auth.openidconnect.IdToken$Payload setIssuedAtTimeSeconds(java.lang.Long) -> setIssuedAtTimeSeconds
    com.google.api.client.auth.openidconnect.IdToken$Payload setIssuer(java.lang.String) -> setIssuer
    com.google.api.client.auth.openidconnect.IdToken$Payload setAudience(java.lang.Object) -> setAudience
    com.google.api.client.auth.openidconnect.IdToken$Payload setJwtId(java.lang.String) -> setJwtId
    com.google.api.client.auth.openidconnect.IdToken$Payload setType(java.lang.String) -> setType
    com.google.api.client.auth.openidconnect.IdToken$Payload setSubject(java.lang.String) -> setSubject
    com.google.api.client.auth.openidconnect.IdToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.openidconnect.IdToken$Payload clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Payload clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebToken$Payload setSubject(java.lang.String) -> setSubject
    com.google.api.client.json.webtoken.JsonWebToken$Payload setType(java.lang.String) -> setType
    com.google.api.client.json.webtoken.JsonWebToken$Payload setJwtId(java.lang.String) -> setJwtId
    com.google.api.client.json.webtoken.JsonWebToken$Payload setAudience(java.lang.Object) -> setAudience
    com.google.api.client.json.webtoken.JsonWebToken$Payload setIssuer(java.lang.String) -> setIssuer
    com.google.api.client.json.webtoken.JsonWebToken$Payload setIssuedAtTimeSeconds(java.lang.Long) -> setIssuedAtTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setNotBeforeTimeSeconds(java.lang.Long) -> setNotBeforeTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setExpirationTimeSeconds(java.lang.Long) -> setExpirationTimeSeconds
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.openidconnect.IdTokenResponse -> com.google.api.client.auth.openidconnect.IdTokenResponse:
    java.lang.String idToken -> idToken
    java.lang.String getIdToken() -> getIdToken
    com.google.api.client.auth.openidconnect.IdTokenResponse setIdToken(java.lang.String) -> setIdToken
    com.google.api.client.auth.openidconnect.IdTokenResponse setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.auth.openidconnect.IdTokenResponse setTokenType(java.lang.String) -> setTokenType
    com.google.api.client.auth.openidconnect.IdTokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.auth.openidconnect.IdTokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.openidconnect.IdTokenResponse setScope(java.lang.String) -> setScope
    com.google.api.client.auth.openidconnect.IdToken parseIdToken() -> parseIdToken
    com.google.api.client.auth.openidconnect.IdTokenResponse execute(com.google.api.client.auth.oauth2.TokenRequest) -> execute
    com.google.api.client.auth.openidconnect.IdTokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.openidconnect.IdTokenResponse clone() -> clone
    com.google.api.client.auth.oauth2.TokenResponse clone() -> clone
    com.google.api.client.auth.oauth2.TokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse setScope(java.lang.String) -> setScope
    com.google.api.client.auth.oauth2.TokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.TokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.auth.oauth2.TokenResponse setTokenType(java.lang.String) -> setTokenType
    com.google.api.client.auth.oauth2.TokenResponse setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.openidconnect.IdTokenVerifier -> com.google.api.client.auth.openidconnect.IdTokenVerifier:
    long DEFAULT_TIME_SKEW_SECONDS -> DEFAULT_TIME_SKEW_SECONDS
    com.google.api.client.util.Clock clock -> a
    long acceptableTimeSkewSeconds -> b
    java.lang.String issuer -> c
    java.util.Collection audience -> d
    com.google.api.client.util.Clock getClock() -> getClock
    long getAcceptableTimeSkewSeconds() -> getAcceptableTimeSkewSeconds
    java.lang.String getIssuer() -> getIssuer
    java.util.Collection getAudience() -> getAudience
    boolean verify(com.google.api.client.auth.openidconnect.IdToken) -> verify
com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder -> com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder:
    com.google.api.client.util.Clock clock -> a
    long acceptableTimeSkewSeconds -> b
    java.lang.String issuer -> c
    java.util.Collection audience -> d
    com.google.api.client.auth.openidconnect.IdTokenVerifier build() -> build
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder setClock(com.google.api.client.util.Clock) -> setClock
    java.lang.String getIssuer() -> getIssuer
    com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder setIssuer(java.lang.String) -> setIssuer
    java.util.Collection getAudience() -> getAudience
    com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder setAudience(java.util.Collection) -> setAudience
    long getAcceptableTimeSkewSeconds() -> getAcceptableTimeSkewSeconds
    com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder setAcceptableTimeSkewSeconds(long) -> setAcceptableTimeSkewSeconds
com.google.api.client.googleapis.GoogleUtils -> com.google.api.client.googleapis.GoogleUtils:
    java.lang.Integer MAJOR_VERSION -> MAJOR_VERSION
    java.lang.Integer MINOR_VERSION -> MINOR_VERSION
    java.lang.Integer BUGFIX_VERSION -> BUGFIX_VERSION
    java.lang.String VERSION -> VERSION
    java.security.KeyStore certTrustStore -> a
    java.security.KeyStore getCertificateTrustStore() -> getCertificateTrustStore
com.google.api.client.googleapis.MethodOverride -> com.google.api.client.googleapis.MethodOverride:
    java.lang.String HEADER -> HEADER
    boolean overrideAllMethods -> a
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.googleapis.MethodOverride$Builder -> com.google.api.client.googleapis.MethodOverride$Builder:
    boolean overrideAllMethods -> a
    com.google.api.client.googleapis.MethodOverride build() -> build
    boolean getOverrideAllMethods() -> getOverrideAllMethods
    com.google.api.client.googleapis.MethodOverride$Builder setOverrideAllMethods(boolean) -> setOverrideAllMethods
com.google.api.client.googleapis.apache.GoogleApacheHttpTransport -> com.google.api.client.googleapis.apache.GoogleApacheHttpTransport:
    com.google.api.client.http.apache.ApacheHttpTransport newTrustedTransport() -> newTrustedTransport
com.google.api.client.googleapis.auth.clientlogin.AuthKeyValueParser -> hE:
    com.google.api.client.googleapis.auth.clientlogin.AuthKeyValueParser INSTANCE -> a
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
com.google.api.client.googleapis.auth.clientlogin.ClientLogin -> com.google.api.client.googleapis.auth.clientlogin.ClientLogin:
    com.google.api.client.http.HttpTransport transport -> transport
    com.google.api.client.http.GenericUrl serverUrl -> serverUrl
    java.lang.String applicationName -> applicationName
    java.lang.String authTokenType -> authTokenType
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String accountType -> accountType
    java.lang.String captchaToken -> captchaToken
    java.lang.String captchaAnswer -> captchaAnswer
    com.google.api.client.googleapis.auth.clientlogin.ClientLogin$Response authenticate() -> authenticate
    java.lang.String getAuthorizationHeaderValue(java.lang.String) -> getAuthorizationHeaderValue
com.google.api.client.googleapis.auth.clientlogin.ClientLogin$ErrorInfo -> com.google.api.client.googleapis.auth.clientlogin.ClientLogin$ErrorInfo:
    java.lang.String error -> error
    java.lang.String url -> url
    java.lang.String captchaToken -> captchaToken
    java.lang.String captchaUrl -> captchaUrl
com.google.api.client.googleapis.auth.clientlogin.ClientLogin$Response -> com.google.api.client.googleapis.auth.clientlogin.ClientLogin$Response:
    java.lang.String auth -> auth
    java.lang.String getAuthorizationHeaderValue() -> getAuthorizationHeaderValue
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.googleapis.auth.clientlogin.ClientLoginResponseException -> com.google.api.client.googleapis.auth.clientlogin.ClientLoginResponseException:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.googleapis.auth.clientlogin.ClientLogin$ErrorInfo details -> a
    com.google.api.client.googleapis.auth.clientlogin.ClientLogin$ErrorInfo getDetails() -> getDetails
com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow -> com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow:
    java.lang.String approvalPrompt -> a
    java.lang.String accessType -> b
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest newTokenRequest(java.lang.String) -> newTokenRequest
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl newAuthorizationUrl() -> newAuthorizationUrl
    java.lang.String getApprovalPrompt() -> getApprovalPrompt
    java.lang.String getAccessType() -> getAccessType
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest newTokenRequest(java.lang.String) -> newTokenRequest
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl newAuthorizationUrl() -> newAuthorizationUrl
com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder -> com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder:
    java.lang.String approvalPrompt -> o
    java.lang.String accessType -> p
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow build() -> build
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setDataStoreFactory(com.google.api.client.util.store.DataStoreFactory) -> setDataStoreFactory
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setCredentialDataStore(com.google.api.client.util.store.DataStore) -> setCredentialDataStore
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setCredentialCreatedListener(com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener) -> setCredentialCreatedListener
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setCredentialStore(com.google.api.client.auth.oauth2.CredentialStore) -> setCredentialStore
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setScopes(java.util.Collection) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setMethod(com.google.api.client.auth.oauth2.Credential$AccessMethod) -> setMethod
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setClientId(java.lang.String) -> setClientId
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setAuthorizationServerEncodedUrl(java.lang.String) -> setAuthorizationServerEncodedUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setRefreshListeners(java.util.Collection) -> setRefreshListeners
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setApprovalPrompt(java.lang.String) -> setApprovalPrompt
    java.lang.String getApprovalPrompt() -> getApprovalPrompt
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setAccessType(java.lang.String) -> setAccessType
    java.lang.String getAccessType() -> getAccessType
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setRefreshListeners(java.util.Collection) -> setRefreshListeners
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialCreatedListener(com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener) -> setCredentialCreatedListener
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialDataStore(com.google.api.client.util.store.DataStore) -> setCredentialDataStore
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setDataStoreFactory(com.google.api.client.util.store.DataStoreFactory) -> setDataStoreFactory
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialStore(com.google.api.client.auth.oauth2.CredentialStore) -> setCredentialStore
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setAuthorizationServerEncodedUrl(java.lang.String) -> setAuthorizationServerEncodedUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setMethod(com.google.api.client.auth.oauth2.Credential$AccessMethod) -> setMethod
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow build() -> build
com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl -> com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl:
    java.lang.String approvalPrompt -> approvalPrompt
    java.lang.String accessType -> accessType
    java.lang.String getApprovalPrompt() -> getApprovalPrompt
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setApprovalPrompt(java.lang.String) -> setApprovalPrompt
    java.lang.String getAccessType() -> getAccessType
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setAccessType(java.lang.String) -> setAccessType
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest -> com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest:
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setCode(java.lang.String) -> setCode
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse execute() -> execute
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setCode(java.lang.String) -> setCode
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse execute() -> execute
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl -> com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl:
    java.lang.String approvalPrompt -> approvalPrompt
    java.lang.String getApprovalPrompt() -> getApprovalPrompt
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setApprovalPrompt(java.lang.String) -> setApprovalPrompt
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.util.Collection) -> setResponseTypes
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets -> com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets:
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details installed -> installed
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details web -> web
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details getInstalled() -> getInstalled
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets setInstalled(com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details) -> setInstalled
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details getWeb() -> getWeb
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets setWeb(com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details) -> setWeb
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details getDetails() -> getDetails
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets clone() -> clone
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets load(com.google.api.client.json.JsonFactory,java.io.Reader) -> load
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details -> com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details:
    java.lang.String clientId -> clientId
    java.lang.String clientSecret -> clientSecret
    java.util.List redirectUris -> redirectUris
    java.lang.String authUri -> authUri
    java.lang.String tokenUri -> tokenUri
    java.lang.String getClientId() -> getClientId
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setClientId(java.lang.String) -> setClientId
    java.lang.String getClientSecret() -> getClientSecret
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setClientSecret(java.lang.String) -> setClientSecret
    java.util.List getRedirectUris() -> getRedirectUris
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setRedirectUris(java.util.List) -> setRedirectUris
    java.lang.String getAuthUri() -> getAuthUri
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setAuthUri(java.lang.String) -> setAuthUri
    java.lang.String getTokenUri() -> getTokenUri
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setTokenUri(java.lang.String) -> setTokenUri
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleCredential -> com.google.api.client.googleapis.auth.oauth2.GoogleCredential:
    java.lang.String serviceAccountId -> b
    java.util.Collection serviceAccountScopes -> c
    java.security.PrivateKey serviceAccountPrivateKey -> d
    java.lang.String serviceAccountUser -> e
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setExpirationTimeMilliseconds(java.lang.Long) -> setExpirationTimeMilliseconds
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setFromTokenResponse(com.google.api.client.auth.oauth2.TokenResponse) -> setFromTokenResponse
    com.google.api.client.auth.oauth2.TokenResponse executeRefreshToken() -> executeRefreshToken
    java.lang.String getServiceAccountId() -> getServiceAccountId
    java.util.Collection getServiceAccountScopes() -> getServiceAccountScopes
    java.lang.String getServiceAccountScopesAsString() -> getServiceAccountScopesAsString
    java.security.PrivateKey getServiceAccountPrivateKey() -> getServiceAccountPrivateKey
    java.lang.String getServiceAccountUser() -> getServiceAccountUser
    com.google.api.client.auth.oauth2.Credential setFromTokenResponse(com.google.api.client.auth.oauth2.TokenResponse) -> setFromTokenResponse
    com.google.api.client.auth.oauth2.Credential setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.auth.oauth2.Credential setExpirationTimeMilliseconds(java.lang.Long) -> setExpirationTimeMilliseconds
    com.google.api.client.auth.oauth2.Credential setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.Credential setAccessToken(java.lang.String) -> setAccessToken
com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder -> com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder:
    java.lang.String serviceAccountId -> i
    java.util.Collection serviceAccountScopes -> j
    java.security.PrivateKey serviceAccountPrivateKey -> k
    java.lang.String serviceAccountUser -> l
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential build() -> build
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setClientSecrets(java.lang.String,java.lang.String) -> setClientSecrets
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setClientSecrets(com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets) -> setClientSecrets
    java.lang.String getServiceAccountId() -> getServiceAccountId
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountId(java.lang.String) -> setServiceAccountId
    java.util.Collection getServiceAccountScopes() -> getServiceAccountScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountScopes(java.util.Collection) -> setServiceAccountScopes
    java.security.PrivateKey getServiceAccountPrivateKey() -> getServiceAccountPrivateKey
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountPrivateKey(java.security.PrivateKey) -> setServiceAccountPrivateKey
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountPrivateKeyFromP12File(java.io.File) -> setServiceAccountPrivateKeyFromP12File
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountPrivateKeyFromPemFile(java.io.File) -> setServiceAccountPrivateKeyFromPemFile
    java.lang.String getServiceAccountUser() -> getServiceAccountUser
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountUser(java.lang.String) -> setServiceAccountUser
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setRefreshListeners(java.util.Collection) -> setRefreshListeners
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setTokenServerEncodedUrl(java.lang.String) -> setTokenServerEncodedUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.Credential$Builder setRefreshListeners(java.util.Collection) -> setRefreshListeners
    com.google.api.client.auth.oauth2.Credential$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    com.google.api.client.auth.oauth2.Credential$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.Credential$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerEncodedUrl(java.lang.String) -> setTokenServerEncodedUrl
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.Credential$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.auth.oauth2.Credential$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.oauth2.Credential$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.auth.oauth2.Credential build() -> build
com.google.api.client.googleapis.auth.oauth2.GoogleIdToken -> com.google.api.client.googleapis.auth.oauth2.GoogleIdToken:
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken parse(com.google.api.client.json.JsonFactory,java.lang.String) -> parse
    boolean verify(com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier) -> verify
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload getPayload() -> getPayload
    com.google.api.client.auth.openidconnect.IdToken$Payload getPayload() -> getPayload
    com.google.api.client.json.webtoken.JsonWebToken$Payload getPayload() -> getPayload
com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload -> com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload:
    java.lang.String hostedDomain -> hostedDomain
    java.lang.String email -> email
    java.lang.Object emailVerified -> emailVerified
    java.lang.String getUserId() -> getUserId
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setUserId(java.lang.String) -> setUserId
    java.lang.String getIssuee() -> getIssuee
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setIssuee(java.lang.String) -> setIssuee
    java.lang.String getHostedDomain() -> getHostedDomain
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setHostedDomain(java.lang.String) -> setHostedDomain
    java.lang.String getEmail() -> getEmail
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setEmail(java.lang.String) -> setEmail
    java.lang.Boolean getEmailVerified() -> getEmailVerified
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setEmailVerified(java.lang.Boolean) -> setEmailVerified
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setAuthorizationTimeSeconds(java.lang.Long) -> setAuthorizationTimeSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setAuthorizedParty(java.lang.String) -> setAuthorizedParty
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setNonce(java.lang.String) -> setNonce
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setAccessTokenHash(java.lang.String) -> setAccessTokenHash
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setClassReference(java.lang.String) -> setClassReference
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setMethodsReferences(java.util.List) -> setMethodsReferences
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setExpirationTimeSeconds(java.lang.Long) -> setExpirationTimeSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setNotBeforeTimeSeconds(java.lang.Long) -> setNotBeforeTimeSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setIssuedAtTimeSeconds(java.lang.Long) -> setIssuedAtTimeSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setIssuer(java.lang.String) -> setIssuer
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setAudience(java.lang.Object) -> setAudience
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setJwtId(java.lang.String) -> setJwtId
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setType(java.lang.String) -> setType
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setSubject(java.lang.String) -> setSubject
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload clone() -> clone
    com.google.api.client.auth.openidconnect.IdToken$Payload clone() -> clone
    com.google.api.client.auth.openidconnect.IdToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.openidconnect.IdToken$Payload setSubject(java.lang.String) -> setSubject
    com.google.api.client.auth.openidconnect.IdToken$Payload setType(java.lang.String) -> setType
    com.google.api.client.auth.openidconnect.IdToken$Payload setJwtId(java.lang.String) -> setJwtId
    com.google.api.client.auth.openidconnect.IdToken$Payload setAudience(java.lang.Object) -> setAudience
    com.google.api.client.auth.openidconnect.IdToken$Payload setIssuer(java.lang.String) -> setIssuer
    com.google.api.client.auth.openidconnect.IdToken$Payload setIssuedAtTimeSeconds(java.lang.Long) -> setIssuedAtTimeSeconds
    com.google.api.client.auth.openidconnect.IdToken$Payload setNotBeforeTimeSeconds(java.lang.Long) -> setNotBeforeTimeSeconds
    com.google.api.client.auth.openidconnect.IdToken$Payload setExpirationTimeSeconds(java.lang.Long) -> setExpirationTimeSeconds
    com.google.api.client.auth.openidconnect.IdToken$Payload setMethodsReferences(java.util.List) -> setMethodsReferences
    com.google.api.client.auth.openidconnect.IdToken$Payload setClassReference(java.lang.String) -> setClassReference
    com.google.api.client.auth.openidconnect.IdToken$Payload setAccessTokenHash(java.lang.String) -> setAccessTokenHash
    com.google.api.client.auth.openidconnect.IdToken$Payload setNonce(java.lang.String) -> setNonce
    com.google.api.client.auth.openidconnect.IdToken$Payload setAuthorizedParty(java.lang.String) -> setAuthorizedParty
    com.google.api.client.auth.openidconnect.IdToken$Payload setAuthorizationTimeSeconds(java.lang.Long) -> setAuthorizationTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebToken$Payload setSubject(java.lang.String) -> setSubject
    com.google.api.client.json.webtoken.JsonWebToken$Payload setType(java.lang.String) -> setType
    com.google.api.client.json.webtoken.JsonWebToken$Payload setJwtId(java.lang.String) -> setJwtId
    com.google.api.client.json.webtoken.JsonWebToken$Payload setAudience(java.lang.Object) -> setAudience
    com.google.api.client.json.webtoken.JsonWebToken$Payload setIssuer(java.lang.String) -> setIssuer
    com.google.api.client.json.webtoken.JsonWebToken$Payload setIssuedAtTimeSeconds(java.lang.Long) -> setIssuedAtTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setNotBeforeTimeSeconds(java.lang.Long) -> setNotBeforeTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setExpirationTimeSeconds(java.lang.Long) -> setExpirationTimeSeconds
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier -> com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier:
    com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager publicKeys -> a
    com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager getPublicKeysManager() -> getPublicKeysManager
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getPublicCertsEncodedUrl() -> getPublicCertsEncodedUrl
    java.util.List getPublicKeys() -> getPublicKeys
    long getExpirationTimeMilliseconds() -> getExpirationTimeMilliseconds
    boolean verify(com.google.api.client.googleapis.auth.oauth2.GoogleIdToken) -> verify
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken verify(java.lang.String) -> verify
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier loadPublicCerts() -> loadPublicCerts
com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder -> com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder:
    com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager publicKeys -> e
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier build() -> build
    com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager getPublicCerts() -> getPublicCerts
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getPublicCertsEncodedUrl() -> getPublicCertsEncodedUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder setPublicCertsEncodedUrl(java.lang.String) -> setPublicCertsEncodedUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder setIssuer(java.lang.String) -> setIssuer
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder setAudience(java.util.Collection) -> setAudience
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder setAcceptableTimeSkewSeconds(long) -> setAcceptableTimeSkewSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder setAcceptableTimeSkewSeconds(long) -> setAcceptableTimeSkewSeconds
    com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder setAudience(java.util.Collection) -> setAudience
    com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder setIssuer(java.lang.String) -> setIssuer
    com.google.api.client.auth.openidconnect.IdTokenVerifier$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.openidconnect.IdTokenVerifier build() -> build
com.google.api.client.googleapis.auth.oauth2.GoogleOAuthConstants -> com.google.api.client.googleapis.auth.oauth2.GoogleOAuthConstants:
    java.lang.String AUTHORIZATION_SERVER_URL -> AUTHORIZATION_SERVER_URL
    java.lang.String TOKEN_SERVER_URL -> TOKEN_SERVER_URL
    java.lang.String DEFAULT_PUBLIC_CERTS_ENCODED_URL -> DEFAULT_PUBLIC_CERTS_ENCODED_URL
    java.lang.String OOB_REDIRECT_URI -> OOB_REDIRECT_URI
com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager -> com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager:
    java.util.regex.Pattern MAX_AGE_PATTERN -> a
    com.google.api.client.json.JsonFactory jsonFactory -> b
    java.util.List publicKeys -> c
    long expirationTimeMilliseconds -> d
    com.google.api.client.http.HttpTransport transport -> e
    java.util.concurrent.locks.Lock lock -> f
    com.google.api.client.util.Clock clock -> g
    java.lang.String publicCertsEncodedUrl -> h
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getPublicCertsEncodedUrl() -> getPublicCertsEncodedUrl
    com.google.api.client.util.Clock getClock() -> getClock
    java.util.List getPublicKeys() -> getPublicKeys
    long getExpirationTimeMilliseconds() -> getExpirationTimeMilliseconds
    com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager refresh() -> refresh
    long getCacheTimeInSec(com.google.api.client.http.HttpHeaders) -> a
com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager$Builder -> com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager$Builder:
    com.google.api.client.util.Clock clock -> a
    com.google.api.client.http.HttpTransport transport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    java.lang.String publicCertsEncodedUrl -> d
    com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager build() -> build
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getPublicCertsEncodedUrl() -> getPublicCertsEncodedUrl
    com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager$Builder setPublicCertsEncodedUrl(java.lang.String) -> setPublicCertsEncodedUrl
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.googleapis.auth.oauth2.GooglePublicKeysManager$Builder setClock(com.google.api.client.util.Clock) -> setClock
com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest -> com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest:
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse execute() -> execute
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.RefreshTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.RefreshTokenRequest setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.RefreshTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.RefreshTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.RefreshTokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.RefreshTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.RefreshTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse execute() -> execute
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.util.Collection) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse -> com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse:
    java.lang.String idToken -> idToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setTokenType(java.lang.String) -> setTokenType
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setScope(java.lang.String) -> setScope
    java.lang.String getIdToken() -> getIdToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setIdToken(java.lang.String) -> setIdToken
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken parseIdToken() -> parseIdToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse clone() -> clone
    com.google.api.client.auth.oauth2.TokenResponse clone() -> clone
    com.google.api.client.auth.oauth2.TokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse setScope(java.lang.String) -> setScope
    com.google.api.client.auth.oauth2.TokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.TokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.auth.oauth2.TokenResponse setTokenType(java.lang.String) -> setTokenType
    com.google.api.client.auth.oauth2.TokenResponse setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.batch.BatchCallback -> com.google.api.client.googleapis.batch.BatchCallback:
    void onSuccess(java.lang.Object,com.google.api.client.http.HttpHeaders) -> onSuccess
    void onFailure(java.lang.Object,com.google.api.client.http.HttpHeaders) -> onFailure
com.google.api.client.googleapis.batch.BatchRequest -> com.google.api.client.googleapis.batch.BatchRequest:
    com.google.api.client.http.GenericUrl batchUrl -> b
    com.google.api.client.http.HttpRequestFactory requestFactory -> c
    java.util.List requestInfos -> a
    com.google.api.client.util.Sleeper sleeper -> d
    com.google.api.client.googleapis.batch.BatchRequest setBatchUrl(com.google.api.client.http.GenericUrl) -> setBatchUrl
    com.google.api.client.http.GenericUrl getBatchUrl() -> getBatchUrl
    com.google.api.client.util.Sleeper getSleeper() -> getSleeper
    com.google.api.client.googleapis.batch.BatchRequest setSleeper(com.google.api.client.util.Sleeper) -> setSleeper
    com.google.api.client.googleapis.batch.BatchRequest queue(com.google.api.client.http.HttpRequest,java.lang.Class,java.lang.Class,com.google.api.client.googleapis.batch.BatchCallback) -> queue
    int size() -> size
    void execute() -> execute
com.google.api.client.googleapis.batch.BatchRequest$BatchInterceptor -> hF:
    com.google.api.client.http.HttpExecuteInterceptor originalInterceptor -> b
    com.google.api.client.googleapis.batch.BatchRequest this$0 -> a
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.googleapis.batch.BatchRequest$RequestInfo -> hG:
    com.google.api.client.googleapis.batch.BatchCallback callback -> a
    java.lang.Class dataClass -> b
    java.lang.Class errorClass -> c
    com.google.api.client.http.HttpRequest request -> d
com.google.api.client.googleapis.batch.BatchUnparsedResponse -> hH:
    java.lang.String boundary -> d
    java.util.List requestInfos -> e
    java.io.BufferedReader bufferedReader -> f
    boolean hasNext -> a
    java.util.List unsuccessfulRequestInfos -> b
    boolean backOffRequired -> c
    int contentId -> g
    boolean retryAllowed -> h
    void parseNextResponse() -> a
    java.lang.Object getParsedDataClass$6c94ac50(java.lang.Class,com.google.api.client.http.HttpResponse,com.google.api.client.googleapis.batch.BatchRequest$RequestInfo) -> a
    void checkForFinalBoundary(java.lang.String) -> a
com.google.api.client.googleapis.batch.BatchUnparsedResponse$FakeLowLevelHttpRequest -> hI:
    java.lang.String partContent -> a
    int statusCode -> b
    java.util.List headerNames -> c
    java.util.List headerValues -> d
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.googleapis.batch.BatchUnparsedResponse$FakeLowLevelHttpResponse -> hJ:
    java.io.InputStream partContent -> a
    int statusCode -> b
    java.util.List headerNames -> c
    java.util.List headerValues -> d
    java.io.InputStream getContent() -> getContent
    int getStatusCode() -> getStatusCode
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getStatusLine() -> getStatusLine
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
com.google.api.client.googleapis.batch.BatchUnparsedResponse$FakeResponseHttpTransport -> hK:
    int statusCode -> b
    java.lang.String partContent -> c
    java.util.List headerNames -> d
    java.util.List headerValues -> e
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
com.google.api.client.googleapis.batch.HttpRequestContent -> hL:
    com.google.api.client.http.HttpRequest request -> a
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.googleapis.batch.json.JsonBatchCallback -> com.google.api.client.googleapis.batch.json.JsonBatchCallback:
    void onFailure(com.google.api.client.googleapis.json.GoogleJsonErrorContainer,com.google.api.client.http.HttpHeaders) -> onFailure
    void onFailure(com.google.api.client.googleapis.json.GoogleJsonError,com.google.api.client.http.HttpHeaders) -> onFailure
    void onFailure(java.lang.Object,com.google.api.client.http.HttpHeaders) -> onFailure
com.google.api.client.googleapis.compute.ComputeCredential -> com.google.api.client.googleapis.compute.ComputeCredential:
    java.lang.String TOKEN_SERVER_ENCODED_URL -> TOKEN_SERVER_ENCODED_URL
    com.google.api.client.auth.oauth2.TokenResponse executeRefreshToken() -> executeRefreshToken
com.google.api.client.googleapis.compute.ComputeCredential$Builder -> com.google.api.client.googleapis.compute.ComputeCredential$Builder:
    com.google.api.client.googleapis.compute.ComputeCredential build() -> build
    com.google.api.client.googleapis.compute.ComputeCredential$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.googleapis.compute.ComputeCredential$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.googleapis.compute.ComputeCredential$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.googleapis.compute.ComputeCredential$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.compute.ComputeCredential$Builder setTokenServerEncodedUrl(java.lang.String) -> setTokenServerEncodedUrl
    com.google.api.client.googleapis.compute.ComputeCredential$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.googleapis.compute.ComputeCredential$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.compute.ComputeCredential$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    com.google.api.client.googleapis.compute.ComputeCredential$Builder setRefreshListeners(java.util.Collection) -> setRefreshListeners
    com.google.api.client.auth.oauth2.Credential$Builder setRefreshListeners(java.util.Collection) -> setRefreshListeners
    com.google.api.client.auth.oauth2.Credential$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    com.google.api.client.auth.oauth2.Credential$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.Credential$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerEncodedUrl(java.lang.String) -> setTokenServerEncodedUrl
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.Credential$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.auth.oauth2.Credential$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.oauth2.Credential$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.auth.oauth2.Credential build() -> build
com.google.api.client.googleapis.javanet.GoogleNetHttpTransport -> com.google.api.client.googleapis.javanet.GoogleNetHttpTransport:
    com.google.api.client.http.javanet.NetHttpTransport newTrustedTransport() -> newTrustedTransport
com.google.api.client.googleapis.json.GoogleJsonError -> com.google.api.client.googleapis.json.GoogleJsonError:
    java.util.List errors -> errors
    int code -> code
    java.lang.String message -> message
    com.google.api.client.googleapis.json.GoogleJsonError parse(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse) -> parse
    java.util.List getErrors() -> getErrors
    void setErrors(java.util.List) -> setErrors
    int getCode() -> getCode
    void setCode(int) -> setCode
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    com.google.api.client.googleapis.json.GoogleJsonError set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.json.GoogleJsonError clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.json.GoogleJsonError$ErrorInfo -> com.google.api.client.googleapis.json.GoogleJsonError$ErrorInfo:
    java.lang.String domain -> domain
    java.lang.String reason -> reason
    java.lang.String message -> message
    java.lang.String location -> location
    java.lang.String locationType -> locationType
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getReason() -> getReason
    void setReason(java.lang.String) -> setReason
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getLocation() -> getLocation
    void setLocation(java.lang.String) -> setLocation
    java.lang.String getLocationType() -> getLocationType
    void setLocationType(java.lang.String) -> setLocationType
    com.google.api.client.googleapis.json.GoogleJsonError$ErrorInfo set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.json.GoogleJsonError$ErrorInfo clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.json.GoogleJsonErrorContainer -> com.google.api.client.googleapis.json.GoogleJsonErrorContainer:
    com.google.api.client.googleapis.json.GoogleJsonError error -> error
    com.google.api.client.googleapis.json.GoogleJsonError getError() -> getError
    void setError(com.google.api.client.googleapis.json.GoogleJsonError) -> setError
    com.google.api.client.googleapis.json.GoogleJsonErrorContainer set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.json.GoogleJsonErrorContainer clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.json.GoogleJsonResponseException -> com.google.api.client.googleapis.json.GoogleJsonResponseException:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.googleapis.json.GoogleJsonError details -> a
    com.google.api.client.googleapis.json.GoogleJsonError getDetails() -> getDetails
    com.google.api.client.googleapis.json.GoogleJsonResponseException from(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse) -> from
    com.google.api.client.http.HttpResponse execute(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpRequest) -> execute
com.google.api.client.googleapis.media.MediaHttpDownloader -> com.google.api.client.googleapis.media.MediaHttpDownloader:
    int MAXIMUM_CHUNK_SIZE -> MAXIMUM_CHUNK_SIZE
    com.google.api.client.http.HttpRequestFactory requestFactory -> a
    com.google.api.client.http.HttpTransport transport -> b
    boolean directDownloadEnabled -> c
    com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener progressListener -> d
    int chunkSize -> e
    long mediaContentLength -> f
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState downloadState -> g
    long bytesDownloaded -> h
    long lastBytePos -> i
    void download(com.google.api.client.http.GenericUrl,java.io.OutputStream) -> download
    void download(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpHeaders,java.io.OutputStream) -> download
    com.google.api.client.http.HttpResponse executeCurrentRequest(long,com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpHeaders,java.io.OutputStream) -> a
    com.google.api.client.googleapis.media.MediaHttpDownloader setBytesDownloaded(long) -> setBytesDownloaded
    com.google.api.client.googleapis.media.MediaHttpDownloader setContentRange(long,int) -> setContentRange
    boolean isDirectDownloadEnabled() -> isDirectDownloadEnabled
    com.google.api.client.googleapis.media.MediaHttpDownloader setDirectDownloadEnabled(boolean) -> setDirectDownloadEnabled
    com.google.api.client.googleapis.media.MediaHttpDownloader setProgressListener(com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener) -> setProgressListener
    com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener getProgressListener() -> getProgressListener
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.googleapis.media.MediaHttpDownloader setChunkSize(int) -> setChunkSize
    int getChunkSize() -> getChunkSize
    long getNumBytesDownloaded() -> getNumBytesDownloaded
    long getLastBytePosition() -> getLastBytePosition
    void updateStateAndNotifyListener(com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState) -> a
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState getDownloadState() -> getDownloadState
    double getProgress() -> getProgress
com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState -> com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState:
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState NOT_STARTED -> NOT_STARTED
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState MEDIA_IN_PROGRESS -> MEDIA_IN_PROGRESS
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState MEDIA_COMPLETE -> MEDIA_COMPLETE
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState[] $VALUES -> a
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState[] values() -> values
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState valueOf(java.lang.String) -> valueOf
com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener -> com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener:
    void progressChanged(com.google.api.client.googleapis.media.MediaHttpDownloader) -> progressChanged
com.google.api.client.googleapis.media.MediaHttpUploader -> com.google.api.client.googleapis.media.MediaHttpUploader:
    java.lang.String CONTENT_LENGTH_HEADER -> CONTENT_LENGTH_HEADER
    java.lang.String CONTENT_TYPE_HEADER -> CONTENT_TYPE_HEADER
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState uploadState -> c
    int MINIMUM_CHUNK_SIZE -> MINIMUM_CHUNK_SIZE
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    com.google.api.client.http.AbstractInputStreamContent mediaContent -> d
    com.google.api.client.http.HttpRequestFactory requestFactory -> e
    com.google.api.client.http.HttpTransport transport -> f
    com.google.api.client.http.HttpContent metadata -> g
    long mediaContentLength -> h
    boolean isMediaContentLengthCalculated -> i
    java.lang.String initiationRequestMethod -> j
    com.google.api.client.http.HttpHeaders initiationHeaders -> k
    com.google.api.client.http.HttpRequest currentRequest -> l
    java.io.InputStream contentInputStream -> m
    boolean directUploadEnabled -> n
    com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener progressListener -> o
    java.lang.String mediaContentLengthStr -> a
    long totalBytesServerReceived -> p
    int chunkSize -> q
    java.lang.Byte cachedByte -> r
    long totalBytesClientSent -> s
    int currentChunkLength -> t
    byte[] currentRequestContentBuffer -> u
    boolean disableGZipContent -> v
    com.google.api.client.util.Sleeper sleeper -> b
    com.google.api.client.http.HttpResponse upload(com.google.api.client.http.GenericUrl) -> upload
    com.google.api.client.http.HttpResponse directUpload(com.google.api.client.http.GenericUrl) -> a
    com.google.api.client.http.HttpResponse resumableUpload(com.google.api.client.http.GenericUrl) -> b
    boolean isMediaLengthKnown() -> b
    long getMediaContentLength() -> c
    com.google.api.client.http.HttpResponse executeUploadInitiation(com.google.api.client.http.GenericUrl) -> c
    com.google.api.client.http.HttpResponse executeCurrentRequestWithoutGZip(com.google.api.client.http.HttpRequest) -> a
    com.google.api.client.http.HttpResponse executeCurrentRequest(com.google.api.client.http.HttpRequest) -> b
    void serverErrorCallback() -> a
    com.google.api.client.http.HttpContent getMetadata() -> getMetadata
    com.google.api.client.googleapis.media.MediaHttpUploader setMetadata(com.google.api.client.http.HttpContent) -> setMetadata
    com.google.api.client.http.HttpContent getMediaContent() -> getMediaContent
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.googleapis.media.MediaHttpUploader setDirectUploadEnabled(boolean) -> setDirectUploadEnabled
    boolean isDirectUploadEnabled() -> isDirectUploadEnabled
    com.google.api.client.googleapis.media.MediaHttpUploader setProgressListener(com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener) -> setProgressListener
    com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener getProgressListener() -> getProgressListener
    com.google.api.client.googleapis.media.MediaHttpUploader setChunkSize(int) -> setChunkSize
    int getChunkSize() -> getChunkSize
    boolean getDisableGZipContent() -> getDisableGZipContent
    com.google.api.client.googleapis.media.MediaHttpUploader setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.util.Sleeper getSleeper() -> getSleeper
    com.google.api.client.googleapis.media.MediaHttpUploader setSleeper(com.google.api.client.util.Sleeper) -> setSleeper
    java.lang.String getInitiationRequestMethod() -> getInitiationRequestMethod
    com.google.api.client.googleapis.media.MediaHttpUploader setInitiationRequestMethod(java.lang.String) -> setInitiationRequestMethod
    com.google.api.client.googleapis.media.MediaHttpUploader setInitiationHeaders(com.google.api.client.http.HttpHeaders) -> setInitiationHeaders
    com.google.api.client.http.HttpHeaders getInitiationHeaders() -> getInitiationHeaders
    long getNumBytesUploaded() -> getNumBytesUploaded
    void updateStateAndNotifyListener(com.google.api.client.googleapis.media.MediaHttpUploader$UploadState) -> a
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState getUploadState() -> getUploadState
    double getProgress() -> getProgress
com.google.api.client.googleapis.media.MediaHttpUploader$UploadState -> com.google.api.client.googleapis.media.MediaHttpUploader$UploadState:
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState NOT_STARTED -> NOT_STARTED
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState INITIATION_STARTED -> INITIATION_STARTED
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState INITIATION_COMPLETE -> INITIATION_COMPLETE
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState MEDIA_IN_PROGRESS -> MEDIA_IN_PROGRESS
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState MEDIA_COMPLETE -> MEDIA_COMPLETE
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState[] $VALUES -> a
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState[] values() -> values
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState valueOf(java.lang.String) -> valueOf
com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener -> com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener:
    void progressChanged(com.google.api.client.googleapis.media.MediaHttpUploader) -> progressChanged
com.google.api.client.googleapis.media.MediaUploadErrorHandler -> hM:
    java.util.logging.Logger LOGGER -> a
    com.google.api.client.googleapis.media.MediaHttpUploader uploader -> b
    com.google.api.client.http.HttpIOExceptionHandler originalIOExceptionHandler -> c
    com.google.api.client.http.HttpUnsuccessfulResponseHandler originalUnsuccessfulHandler -> d
    boolean handleIOException(com.google.api.client.http.HttpRequest,boolean) -> handleIOException
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
com.google.api.client.googleapis.notifications.AbstractNotification -> com.google.api.client.googleapis.notifications.AbstractNotification:
    long messageNumber -> a
    java.lang.String resourceState -> b
    java.lang.String resourceId -> c
    java.lang.String resourceUri -> d
    java.lang.String channelId -> e
    java.lang.String channelExpiration -> f
    java.lang.String channelToken -> g
    java.lang.String changed -> h
    java.lang.String toString() -> toString
    com.google.api.client.util.Objects$ToStringHelper toStringHelper() -> toStringHelper
    long getMessageNumber() -> getMessageNumber
    com.google.api.client.googleapis.notifications.AbstractNotification setMessageNumber(long) -> setMessageNumber
    java.lang.String getResourceState() -> getResourceState
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceState(java.lang.String) -> setResourceState
    java.lang.String getResourceId() -> getResourceId
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceId(java.lang.String) -> setResourceId
    java.lang.String getResourceUri() -> getResourceUri
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceUri(java.lang.String) -> setResourceUri
    java.lang.String getChannelId() -> getChannelId
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelId(java.lang.String) -> setChannelId
    java.lang.String getChannelExpiration() -> getChannelExpiration
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelExpiration(java.lang.String) -> setChannelExpiration
    java.lang.String getChannelToken() -> getChannelToken
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelToken(java.lang.String) -> setChannelToken
    java.lang.String getChanged() -> getChanged
    com.google.api.client.googleapis.notifications.AbstractNotification setChanged(java.lang.String) -> setChanged
com.google.api.client.googleapis.notifications.NotificationUtils -> com.google.api.client.googleapis.notifications.NotificationUtils:
    java.lang.String randomUuidString() -> randomUuidString
com.google.api.client.googleapis.notifications.ResourceStates -> com.google.api.client.googleapis.notifications.ResourceStates:
    java.lang.String SYNC -> SYNC
    java.lang.String EXISTS -> EXISTS
    java.lang.String NOT_EXISTS -> NOT_EXISTS
com.google.api.client.googleapis.notifications.StoredChannel -> com.google.api.client.googleapis.notifications.StoredChannel:
    java.lang.String DEFAULT_DATA_STORE_ID -> DEFAULT_DATA_STORE_ID
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.locks.Lock lock -> a
    com.google.api.client.googleapis.notifications.UnparsedNotificationCallback notificationCallback -> b
    java.lang.String clientToken -> c
    java.lang.Long expiration -> d
    java.lang.String id -> e
    java.lang.String topicId -> f
    com.google.api.client.googleapis.notifications.StoredChannel store(com.google.api.client.util.store.DataStoreFactory) -> store
    com.google.api.client.googleapis.notifications.StoredChannel store(com.google.api.client.util.store.DataStore) -> store
    com.google.api.client.googleapis.notifications.UnparsedNotificationCallback getNotificationCallback() -> getNotificationCallback
    java.lang.String getClientToken() -> getClientToken
    com.google.api.client.googleapis.notifications.StoredChannel setClientToken(java.lang.String) -> setClientToken
    java.lang.Long getExpiration() -> getExpiration
    com.google.api.client.googleapis.notifications.StoredChannel setExpiration(java.lang.Long) -> setExpiration
    java.lang.String getId() -> getId
    java.lang.String getTopicId() -> getTopicId
    com.google.api.client.googleapis.notifications.StoredChannel setTopicId(java.lang.String) -> setTopicId
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.api.client.util.store.DataStore getDefaultDataStore(com.google.api.client.util.store.DataStoreFactory) -> getDefaultDataStore
com.google.api.client.googleapis.notifications.TypedNotification -> com.google.api.client.googleapis.notifications.TypedNotification:
    java.lang.Object content -> a
    java.lang.Object getContent() -> getContent
    com.google.api.client.googleapis.notifications.TypedNotification setContent(java.lang.Object) -> setContent
    com.google.api.client.googleapis.notifications.TypedNotification setMessageNumber(long) -> setMessageNumber
    com.google.api.client.googleapis.notifications.TypedNotification setResourceState(java.lang.String) -> setResourceState
    com.google.api.client.googleapis.notifications.TypedNotification setResourceId(java.lang.String) -> setResourceId
    com.google.api.client.googleapis.notifications.TypedNotification setResourceUri(java.lang.String) -> setResourceUri
    com.google.api.client.googleapis.notifications.TypedNotification setChannelId(java.lang.String) -> setChannelId
    com.google.api.client.googleapis.notifications.TypedNotification setChannelExpiration(java.lang.String) -> setChannelExpiration
    com.google.api.client.googleapis.notifications.TypedNotification setChannelToken(java.lang.String) -> setChannelToken
    com.google.api.client.googleapis.notifications.TypedNotification setChanged(java.lang.String) -> setChanged
    java.lang.String toString() -> toString
    com.google.api.client.googleapis.notifications.AbstractNotification setChanged(java.lang.String) -> setChanged
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelToken(java.lang.String) -> setChannelToken
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelExpiration(java.lang.String) -> setChannelExpiration
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelId(java.lang.String) -> setChannelId
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceUri(java.lang.String) -> setResourceUri
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceId(java.lang.String) -> setResourceId
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceState(java.lang.String) -> setResourceState
    com.google.api.client.googleapis.notifications.AbstractNotification setMessageNumber(long) -> setMessageNumber
com.google.api.client.googleapis.notifications.TypedNotificationCallback -> com.google.api.client.googleapis.notifications.TypedNotificationCallback:
    long serialVersionUID -> serialVersionUID
    void onNotification(com.google.api.client.googleapis.notifications.StoredChannel,com.google.api.client.googleapis.notifications.TypedNotification) -> onNotification
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
    java.lang.Class getDataClass() -> getDataClass
    void onNotification(com.google.api.client.googleapis.notifications.StoredChannel,com.google.api.client.googleapis.notifications.UnparsedNotification) -> onNotification
com.google.api.client.googleapis.notifications.UnparsedNotification -> com.google.api.client.googleapis.notifications.UnparsedNotification:
    java.lang.String contentType -> a
    java.io.InputStream contentStream -> b
    java.lang.String getContentType() -> getContentType
    com.google.api.client.googleapis.notifications.UnparsedNotification setContentType(java.lang.String) -> setContentType
    java.io.InputStream getContentStream() -> getContentStream
    com.google.api.client.googleapis.notifications.UnparsedNotification setContentStream(java.io.InputStream) -> setContentStream
    com.google.api.client.googleapis.notifications.UnparsedNotification setMessageNumber(long) -> setMessageNumber
    com.google.api.client.googleapis.notifications.UnparsedNotification setResourceState(java.lang.String) -> setResourceState
    com.google.api.client.googleapis.notifications.UnparsedNotification setResourceId(java.lang.String) -> setResourceId
    com.google.api.client.googleapis.notifications.UnparsedNotification setResourceUri(java.lang.String) -> setResourceUri
    com.google.api.client.googleapis.notifications.UnparsedNotification setChannelId(java.lang.String) -> setChannelId
    com.google.api.client.googleapis.notifications.UnparsedNotification setChannelExpiration(java.lang.String) -> setChannelExpiration
    com.google.api.client.googleapis.notifications.UnparsedNotification setChannelToken(java.lang.String) -> setChannelToken
    com.google.api.client.googleapis.notifications.UnparsedNotification setChanged(java.lang.String) -> setChanged
    java.lang.String toString() -> toString
    com.google.api.client.googleapis.notifications.AbstractNotification setChanged(java.lang.String) -> setChanged
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelToken(java.lang.String) -> setChannelToken
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelExpiration(java.lang.String) -> setChannelExpiration
    com.google.api.client.googleapis.notifications.AbstractNotification setChannelId(java.lang.String) -> setChannelId
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceUri(java.lang.String) -> setResourceUri
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceId(java.lang.String) -> setResourceId
    com.google.api.client.googleapis.notifications.AbstractNotification setResourceState(java.lang.String) -> setResourceState
    com.google.api.client.googleapis.notifications.AbstractNotification setMessageNumber(long) -> setMessageNumber
com.google.api.client.googleapis.notifications.UnparsedNotificationCallback -> com.google.api.client.googleapis.notifications.UnparsedNotificationCallback:
    void onNotification(com.google.api.client.googleapis.notifications.StoredChannel,com.google.api.client.googleapis.notifications.UnparsedNotification) -> onNotification
com.google.api.client.googleapis.notifications.json.JsonNotificationCallback -> com.google.api.client.googleapis.notifications.json.JsonNotificationCallback:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.json.JsonObjectParser getObjectParser() -> getObjectParser
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
com.google.api.client.googleapis.services.AbstractGoogleClient -> com.google.api.client.googleapis.services.AbstractGoogleClient:
    java.util.logging.Logger LOGGER -> a
    com.google.api.client.http.HttpRequestFactory requestFactory -> b
    com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer -> c
    java.lang.String rootUrl -> d
    java.lang.String servicePath -> e
    java.lang.String applicationName -> f
    com.google.api.client.util.ObjectParser objectParser -> g
    boolean suppressPatternChecks -> h
    boolean suppressRequiredParameterChecks -> i
    java.lang.String getRootUrl() -> getRootUrl
    java.lang.String getServicePath() -> getServicePath
    java.lang.String getBaseUrl() -> getBaseUrl
    java.lang.String getApplicationName() -> getApplicationName
    com.google.api.client.http.HttpRequestFactory getRequestFactory() -> getRequestFactory
    com.google.api.client.googleapis.services.GoogleClientRequestInitializer getGoogleClientRequestInitializer() -> getGoogleClientRequestInitializer
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
    com.google.api.client.googleapis.batch.BatchRequest batch() -> batch
    com.google.api.client.googleapis.batch.BatchRequest batch(com.google.api.client.http.HttpRequestInitializer) -> batch
    boolean getSuppressPatternChecks() -> getSuppressPatternChecks
    boolean getSuppressRequiredParameterChecks() -> getSuppressRequiredParameterChecks
    java.lang.String normalizeRootUrl(java.lang.String) -> a
    java.lang.String normalizeServicePath(java.lang.String) -> b
com.google.api.client.googleapis.services.AbstractGoogleClient$Builder -> com.google.api.client.googleapis.services.AbstractGoogleClient$Builder:
    com.google.api.client.http.HttpTransport transport -> a
    com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer -> b
    com.google.api.client.http.HttpRequestInitializer httpRequestInitializer -> c
    com.google.api.client.util.ObjectParser objectParser -> d
    java.lang.String rootUrl -> e
    java.lang.String servicePath -> f
    java.lang.String applicationName -> g
    boolean suppressPatternChecks -> h
    boolean suppressRequiredParameterChecks -> i
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
    java.lang.String getRootUrl() -> getRootUrl
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    java.lang.String getServicePath() -> getServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.GoogleClientRequestInitializer getGoogleClientRequestInitializer() -> getGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.http.HttpRequestInitializer getHttpRequestInitializer() -> getHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    java.lang.String getApplicationName() -> getApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    boolean getSuppressPatternChecks() -> getSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    boolean getSuppressRequiredParameterChecks() -> getSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
com.google.api.client.googleapis.services.AbstractGoogleClientRequest -> com.google.api.client.googleapis.services.AbstractGoogleClientRequest:
    com.google.api.client.googleapis.services.AbstractGoogleClient abstractGoogleClient -> a
    java.lang.String requestMethod -> b
    java.lang.String uriTemplate -> e
    com.google.api.client.http.HttpContent httpContent -> f
    com.google.api.client.http.HttpHeaders requestHeaders -> g
    com.google.api.client.http.HttpHeaders lastResponseHeaders -> h
    int lastStatusCode -> i
    java.lang.String lastStatusMessage -> j
    boolean disableGZipContent -> k
    java.lang.Class responseClass -> l
    com.google.api.client.googleapis.media.MediaHttpUploader uploader -> m
    com.google.api.client.googleapis.media.MediaHttpDownloader downloader -> n
    boolean getDisableGZipContent() -> getDisableGZipContent
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    java.lang.String getRequestMethod() -> getRequestMethod
    java.lang.String getUriTemplate() -> getUriTemplate
    com.google.api.client.http.HttpContent getHttpContent() -> getHttpContent
    com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.http.HttpHeaders getRequestHeaders() -> getRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.http.HttpHeaders getLastResponseHeaders() -> getLastResponseHeaders
    int getLastStatusCode() -> getLastStatusCode
    java.lang.String getLastStatusMessage() -> getLastStatusMessage
    java.lang.Class getResponseClass() -> getResponseClass
    com.google.api.client.googleapis.media.MediaHttpUploader getMediaHttpUploader() -> getMediaHttpUploader
    void initializeMediaUpload(com.google.api.client.http.AbstractInputStreamContent) -> initializeMediaUpload
    com.google.api.client.googleapis.media.MediaHttpDownloader getMediaHttpDownloader() -> getMediaHttpDownloader
    void initializeMediaDownload() -> initializeMediaDownload
    com.google.api.client.http.GenericUrl buildHttpRequestUrl() -> buildHttpRequestUrl
    com.google.api.client.http.HttpRequest buildHttpRequest() -> buildHttpRequest
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequest(boolean) -> a
    com.google.api.client.http.HttpResponse executeUnparsed() -> executeUnparsed
    com.google.api.client.http.HttpResponse executeMedia() -> executeMedia
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpResponse executeUnparsed(boolean) -> b
    java.io.IOException newExceptionOnError(com.google.api.client.http.HttpResponse) -> newExceptionOnError
    java.lang.Object execute() -> execute
    java.io.InputStream executeAsInputStream() -> executeAsInputStream
    java.io.InputStream executeMediaAsInputStream() -> executeMediaAsInputStream
    void executeAndDownloadTo(java.io.OutputStream) -> executeAndDownloadTo
    void executeMediaAndDownloadTo(java.io.OutputStream) -> executeMediaAndDownloadTo
    void queue(com.google.api.client.googleapis.batch.BatchRequest,java.lang.Class,com.google.api.client.googleapis.batch.BatchCallback) -> queue
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    void checkRequiredParameter(java.lang.Object,java.lang.String) -> checkRequiredParameter
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1 -> hN:
    com.google.api.client.http.HttpResponseInterceptor val$responseInterceptor -> a
    com.google.api.client.http.HttpRequest val$httpRequest -> b
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest this$0 -> c
    void interceptResponse(com.google.api.client.http.HttpResponse) -> interceptResponse
com.google.api.client.googleapis.services.CommonGoogleClientRequestInitializer -> com.google.api.client.googleapis.services.CommonGoogleClientRequestInitializer:
    java.lang.String key -> a
    java.lang.String userIp -> b
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
    java.lang.String getKey() -> getKey
    java.lang.String getUserIp() -> getUserIp
com.google.api.client.googleapis.services.GoogleClientRequestInitializer -> com.google.api.client.googleapis.services.GoogleClientRequestInitializer:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient -> com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient:
    com.google.api.client.json.JsonObjectParser getObjectParser() -> getObjectParser
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder -> com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder:
    com.google.api.client.json.JsonObjectParser getObjectParser() -> getObjectParser
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient build() -> build
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest -> com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest:
    java.lang.Object jsonContent -> a
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    void queue(com.google.api.client.googleapis.batch.BatchRequest,com.google.api.client.googleapis.batch.json.JsonBatchCallback) -> queue
    com.google.api.client.googleapis.json.GoogleJsonResponseException newExceptionOnError(com.google.api.client.http.HttpResponse) -> newExceptionOnError
    java.lang.Object getJsonContent() -> getJsonContent
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    java.io.IOException newExceptionOnError(com.google.api.client.http.HttpResponse) -> newExceptionOnError
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.services.json.CommonGoogleJsonClientRequestInitializer -> com.google.api.client.googleapis.services.json.CommonGoogleJsonClientRequestInitializer:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
    void initializeJsonRequest(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest) -> initializeJsonRequest
com.google.api.client.googleapis.testing.notifications.MockUnparsedNotificationCallback -> com.google.api.client.googleapis.testing.notifications.MockUnparsedNotificationCallback:
    long serialVersionUID -> serialVersionUID
    boolean wasCalled -> a
    boolean wasCalled() -> wasCalled
    void onNotification(com.google.api.client.googleapis.notifications.StoredChannel,com.google.api.client.googleapis.notifications.UnparsedNotification) -> onNotification
com.google.api.client.googleapis.testing.services.MockGoogleClient -> com.google.api.client.googleapis.testing.services.MockGoogleClient:
com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder -> com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder:
    com.google.api.client.googleapis.testing.services.MockGoogleClient build() -> build
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
com.google.api.client.googleapis.testing.services.MockGoogleClientRequest -> com.google.api.client.googleapis.testing.services.MockGoogleClientRequest:
    com.google.api.client.googleapis.testing.services.MockGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.testing.services.MockGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.testing.services.MockGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient -> com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient:
com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder -> com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder:
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient build() -> build
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient build() -> build
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClientRequest -> com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClientRequest:
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
com.google.api.client.http.AbstractHttpContent -> com.google.api.client.http.AbstractHttpContent:
    com.google.api.client.http.HttpMediaType mediaType -> a
    long computedLength -> b
    long getLength() -> getLength
    com.google.api.client.http.HttpMediaType getMediaType() -> getMediaType
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getType() -> getType
    long computeLength() -> computeLength
    boolean retrySupported() -> retrySupported
    long computeLength(com.google.api.client.http.HttpContent) -> computeLength
com.google.api.client.http.AbstractInputStreamContent -> com.google.api.client.http.AbstractInputStreamContent:
    java.lang.String type -> a
    boolean closeInputStream -> b
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getType() -> getType
    boolean getCloseInputStream() -> getCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
com.google.api.client.http.BackOffPolicy -> com.google.api.client.http.BackOffPolicy:
    long STOP -> STOP
    boolean isBackOffRequired(int) -> isBackOffRequired
    void reset() -> reset
    long getNextBackOffMillis() -> getNextBackOffMillis
com.google.api.client.http.BasicAuthentication -> com.google.api.client.http.BasicAuthentication:
    java.lang.String username -> a
    java.lang.String password -> b
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
com.google.api.client.http.ByteArrayContent -> com.google.api.client.http.ByteArrayContent:
    byte[] byteArray -> a
    int offset -> b
    int length -> c
    com.google.api.client.http.ByteArrayContent fromString(java.lang.String,java.lang.String) -> fromString
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    java.io.InputStream getInputStream() -> getInputStream
    com.google.api.client.http.ByteArrayContent setType(java.lang.String) -> setType
    com.google.api.client.http.ByteArrayContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
com.google.api.client.http.EmptyContent -> com.google.api.client.http.EmptyContent:
    long getLength() -> getLength
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    boolean retrySupported() -> retrySupported
com.google.api.client.http.ExponentialBackOffPolicy -> com.google.api.client.http.ExponentialBackOffPolicy:
    int DEFAULT_INITIAL_INTERVAL_MILLIS -> DEFAULT_INITIAL_INTERVAL_MILLIS
    double DEFAULT_RANDOMIZATION_FACTOR -> DEFAULT_RANDOMIZATION_FACTOR
    double DEFAULT_MULTIPLIER -> DEFAULT_MULTIPLIER
    int DEFAULT_MAX_INTERVAL_MILLIS -> DEFAULT_MAX_INTERVAL_MILLIS
    int DEFAULT_MAX_ELAPSED_TIME_MILLIS -> DEFAULT_MAX_ELAPSED_TIME_MILLIS
    com.google.api.client.util.ExponentialBackOff exponentialBackOff -> a
    boolean isBackOffRequired(int) -> isBackOffRequired
    void reset() -> reset
    long getNextBackOffMillis() -> getNextBackOffMillis
    int getInitialIntervalMillis() -> getInitialIntervalMillis
    double getRandomizationFactor() -> getRandomizationFactor
    int getCurrentIntervalMillis() -> getCurrentIntervalMillis
    double getMultiplier() -> getMultiplier
    int getMaxIntervalMillis() -> getMaxIntervalMillis
    int getMaxElapsedTimeMillis() -> getMaxElapsedTimeMillis
    long getElapsedTimeMillis() -> getElapsedTimeMillis
    com.google.api.client.http.ExponentialBackOffPolicy$Builder builder() -> builder
com.google.api.client.http.ExponentialBackOffPolicy$Builder -> com.google.api.client.http.ExponentialBackOffPolicy$Builder:
    com.google.api.client.util.ExponentialBackOff$Builder exponentialBackOffBuilder -> a
    com.google.api.client.http.ExponentialBackOffPolicy build() -> build
    int getInitialIntervalMillis() -> getInitialIntervalMillis
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setInitialIntervalMillis(int) -> setInitialIntervalMillis
    double getRandomizationFactor() -> getRandomizationFactor
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setRandomizationFactor(double) -> setRandomizationFactor
    double getMultiplier() -> getMultiplier
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setMultiplier(double) -> setMultiplier
    int getMaxIntervalMillis() -> getMaxIntervalMillis
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setMaxIntervalMillis(int) -> setMaxIntervalMillis
    int getMaxElapsedTimeMillis() -> getMaxElapsedTimeMillis
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setMaxElapsedTimeMillis(int) -> setMaxElapsedTimeMillis
    com.google.api.client.util.NanoClock getNanoClock() -> getNanoClock
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setNanoClock(com.google.api.client.util.NanoClock) -> setNanoClock
com.google.api.client.http.FileContent -> com.google.api.client.http.FileContent:
    java.io.File file -> a
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    java.io.InputStream getInputStream() -> getInputStream
    java.io.File getFile() -> getFile
    com.google.api.client.http.FileContent setType(java.lang.String) -> setType
    com.google.api.client.http.FileContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
com.google.api.client.http.GZipEncoding -> com.google.api.client.http.GZipEncoding:
    java.lang.String getName() -> getName
    void encode(com.google.api.client.util.StreamingContent,java.io.OutputStream) -> encode
com.google.api.client.http.GZipEncoding$1 -> hO:
    com.google.api.client.http.GZipEncoding this$0 -> a
    void close() -> close
com.google.api.client.http.GenericUrl -> com.google.api.client.http.GenericUrl:
    com.google.api.client.util.escape.Escaper URI_FRAGMENT_ESCAPER -> a
    java.lang.String scheme -> b
    java.lang.String host -> e
    java.lang.String userInfo -> f
    int port -> g
    java.util.List pathParts -> h
    java.lang.String fragment -> i
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    java.lang.String getScheme() -> getScheme
    void setScheme(java.lang.String) -> setScheme
    java.lang.String getHost() -> getHost
    void setHost(java.lang.String) -> setHost
    java.lang.String getUserInfo() -> getUserInfo
    void setUserInfo(java.lang.String) -> setUserInfo
    int getPort() -> getPort
    void setPort(int) -> setPort
    java.util.List getPathParts() -> getPathParts
    void setPathParts(java.util.List) -> setPathParts
    java.lang.String getFragment() -> getFragment
    void setFragment(java.lang.String) -> setFragment
    java.lang.String build() -> build
    java.lang.String buildAuthority() -> buildAuthority
    java.lang.String buildRelativeUrl() -> buildRelativeUrl
    java.net.URI toURI() -> toURI
    java.net.URL toURL() -> toURL
    java.net.URL toURL(java.lang.String) -> toURL
    java.lang.Object getFirst(java.lang.String) -> getFirst
    java.util.Collection getAll(java.lang.String) -> getAll
    java.lang.String getRawPath() -> getRawPath
    void setRawPath(java.lang.String) -> setRawPath
    void appendRawPath(java.lang.String) -> appendRawPath
    java.util.List toPathParts(java.lang.String) -> toPathParts
    void appendRawPathFromParts(java.lang.StringBuilder) -> a
    void addQueryParams(java.util.Set,java.lang.StringBuilder) -> a
    boolean appendParam(boolean,java.lang.StringBuilder,java.lang.String,java.lang.Object) -> a
    java.net.URI toURI(java.lang.String) -> a
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.http.HttpBackOffIOExceptionHandler -> com.google.api.client.http.HttpBackOffIOExceptionHandler:
    com.google.api.client.util.BackOff backOff -> a
    com.google.api.client.util.Sleeper sleeper -> b
    com.google.api.client.util.BackOff getBackOff() -> getBackOff
    com.google.api.client.util.Sleeper getSleeper() -> getSleeper
    com.google.api.client.http.HttpBackOffIOExceptionHandler setSleeper(com.google.api.client.util.Sleeper) -> setSleeper
    boolean handleIOException(com.google.api.client.http.HttpRequest,boolean) -> handleIOException
com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler -> com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler:
    com.google.api.client.util.BackOff backOff -> a
    com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired backOffRequired -> b
    com.google.api.client.util.Sleeper sleeper -> c
    com.google.api.client.util.BackOff getBackOff() -> getBackOff
    com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired getBackOffRequired() -> getBackOffRequired
    com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler setBackOffRequired(com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired) -> setBackOffRequired
    com.google.api.client.util.Sleeper getSleeper() -> getSleeper
    com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler setSleeper(com.google.api.client.util.Sleeper) -> setSleeper
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired -> com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired:
    com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired ALWAYS -> ALWAYS
    com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired ON_SERVER_ERROR -> ON_SERVER_ERROR
    boolean isRequired(com.google.api.client.http.HttpResponse) -> isRequired
com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired$1 -> hP:
    boolean isRequired(com.google.api.client.http.HttpResponse) -> isRequired
com.google.api.client.http.HttpBackOffUnsuccessfulResponseHandler$BackOffRequired$2 -> hQ:
    boolean isRequired(com.google.api.client.http.HttpResponse) -> isRequired
com.google.api.client.http.HttpContent -> com.google.api.client.http.HttpContent:
    long getLength() -> getLength
    java.lang.String getType() -> getType
    boolean retrySupported() -> retrySupported
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.http.HttpEncoding -> com.google.api.client.http.HttpEncoding:
    java.lang.String getName() -> getName
    void encode(com.google.api.client.util.StreamingContent,java.io.OutputStream) -> encode
com.google.api.client.http.HttpEncodingStreamingContent -> com.google.api.client.http.HttpEncodingStreamingContent:
    com.google.api.client.util.StreamingContent content -> a
    com.google.api.client.http.HttpEncoding encoding -> b
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.util.StreamingContent getContent() -> getContent
    com.google.api.client.http.HttpEncoding getEncoding() -> getEncoding
com.google.api.client.http.HttpExecuteInterceptor -> com.google.api.client.http.HttpExecuteInterceptor:
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.http.HttpHeaders -> com.google.api.client.http.HttpHeaders:
    java.util.List accept -> accept
    java.util.List acceptEncoding -> acceptEncoding
    java.util.List authorization -> authorization
    java.util.List cacheControl -> cacheControl
    java.util.List contentEncoding -> contentEncoding
    java.util.List contentLength -> contentLength
    java.util.List contentMD5 -> contentMD5
    java.util.List contentRange -> contentRange
    java.util.List contentType -> contentType
    java.util.List cookie -> cookie
    java.util.List date -> date
    java.util.List etag -> etag
    java.util.List expires -> expires
    java.util.List ifModifiedSince -> ifModifiedSince
    java.util.List ifMatch -> ifMatch
    java.util.List ifNoneMatch -> ifNoneMatch
    java.util.List ifUnmodifiedSince -> ifUnmodifiedSince
    java.util.List ifRange -> ifRange
    java.util.List lastModified -> lastModified
    java.util.List location -> location
    java.util.List mimeVersion -> mimeVersion
    java.util.List range -> range
    java.util.List retryAfter -> retryAfter
    java.util.List userAgent -> userAgent
    java.util.List authenticate -> authenticate
    java.util.List age -> age
    com.google.api.client.http.HttpHeaders clone() -> clone
    com.google.api.client.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    java.lang.String getAccept() -> getAccept
    com.google.api.client.http.HttpHeaders setAccept(java.lang.String) -> setAccept
    java.lang.String getAcceptEncoding() -> getAcceptEncoding
    com.google.api.client.http.HttpHeaders setAcceptEncoding(java.lang.String) -> setAcceptEncoding
    java.lang.String getAuthorization() -> getAuthorization
    java.util.List getAuthorizationAsList() -> getAuthorizationAsList
    com.google.api.client.http.HttpHeaders setAuthorization(java.lang.String) -> setAuthorization
    com.google.api.client.http.HttpHeaders setAuthorization(java.util.List) -> setAuthorization
    java.lang.String getCacheControl() -> getCacheControl
    com.google.api.client.http.HttpHeaders setCacheControl(java.lang.String) -> setCacheControl
    java.lang.String getContentEncoding() -> getContentEncoding
    com.google.api.client.http.HttpHeaders setContentEncoding(java.lang.String) -> setContentEncoding
    java.lang.Long getContentLength() -> getContentLength
    com.google.api.client.http.HttpHeaders setContentLength(java.lang.Long) -> setContentLength
    java.lang.String getContentMD5() -> getContentMD5
    com.google.api.client.http.HttpHeaders setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getContentRange() -> getContentRange
    com.google.api.client.http.HttpHeaders setContentRange(java.lang.String) -> setContentRange
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.HttpHeaders setContentType(java.lang.String) -> setContentType
    java.lang.String getCookie() -> getCookie
    com.google.api.client.http.HttpHeaders setCookie(java.lang.String) -> setCookie
    java.lang.String getDate() -> getDate
    com.google.api.client.http.HttpHeaders setDate(java.lang.String) -> setDate
    java.lang.String getETag() -> getETag
    com.google.api.client.http.HttpHeaders setETag(java.lang.String) -> setETag
    java.lang.String getExpires() -> getExpires
    com.google.api.client.http.HttpHeaders setExpires(java.lang.String) -> setExpires
    java.lang.String getIfModifiedSince() -> getIfModifiedSince
    com.google.api.client.http.HttpHeaders setIfModifiedSince(java.lang.String) -> setIfModifiedSince
    java.lang.String getIfMatch() -> getIfMatch
    com.google.api.client.http.HttpHeaders setIfMatch(java.lang.String) -> setIfMatch
    java.lang.String getIfNoneMatch() -> getIfNoneMatch
    com.google.api.client.http.HttpHeaders setIfNoneMatch(java.lang.String) -> setIfNoneMatch
    java.lang.String getIfUnmodifiedSince() -> getIfUnmodifiedSince
    com.google.api.client.http.HttpHeaders setIfUnmodifiedSince(java.lang.String) -> setIfUnmodifiedSince
    java.lang.String getIfRange() -> getIfRange
    com.google.api.client.http.HttpHeaders setIfRange(java.lang.String) -> setIfRange
    java.lang.String getLastModified() -> getLastModified
    com.google.api.client.http.HttpHeaders setLastModified(java.lang.String) -> setLastModified
    java.lang.String getLocation() -> getLocation
    com.google.api.client.http.HttpHeaders setLocation(java.lang.String) -> setLocation
    java.lang.String getMimeVersion() -> getMimeVersion
    com.google.api.client.http.HttpHeaders setMimeVersion(java.lang.String) -> setMimeVersion
    java.lang.String getRange() -> getRange
    com.google.api.client.http.HttpHeaders setRange(java.lang.String) -> setRange
    java.lang.String getRetryAfter() -> getRetryAfter
    com.google.api.client.http.HttpHeaders setRetryAfter(java.lang.String) -> setRetryAfter
    java.lang.String getUserAgent() -> getUserAgent
    com.google.api.client.http.HttpHeaders setUserAgent(java.lang.String) -> setUserAgent
    java.lang.String getAuthenticate() -> getAuthenticate
    java.util.List getAuthenticateAsList() -> getAuthenticateAsList
    com.google.api.client.http.HttpHeaders setAuthenticate(java.lang.String) -> setAuthenticate
    java.lang.Long getAge() -> getAge
    com.google.api.client.http.HttpHeaders setAge(java.lang.Long) -> setAge
    com.google.api.client.http.HttpHeaders setBasicAuthentication(java.lang.String,java.lang.String) -> setBasicAuthentication
    void addHeader(java.util.logging.Logger,java.lang.StringBuilder,java.lang.StringBuilder,com.google.api.client.http.LowLevelHttpRequest,java.lang.String,java.lang.Object,java.io.Writer) -> a
    java.lang.String toStringValue(java.lang.Object) -> a
    void serializeHeaders(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.lang.StringBuilder,java.util.logging.Logger,com.google.api.client.http.LowLevelHttpRequest) -> a
    void serializeHeadersForMultipartRequests(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.util.logging.Logger,java.io.Writer) -> serializeHeadersForMultipartRequests
    void serializeHeaders(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.lang.StringBuilder,java.util.logging.Logger,com.google.api.client.http.LowLevelHttpRequest,java.io.Writer) -> a
    void fromHttpResponse(com.google.api.client.http.LowLevelHttpResponse,java.lang.StringBuilder) -> fromHttpResponse
    java.lang.Object getFirstHeaderValue(java.util.List) -> a
    java.util.List getAsList(java.lang.Object) -> b
    java.lang.String getFirstHeaderStringValue(java.lang.String) -> getFirstHeaderStringValue
    java.util.List getHeaderStringValues(java.lang.String) -> getHeaderStringValues
    void fromHttpHeaders(com.google.api.client.http.HttpHeaders) -> fromHttpHeaders
    void parseHeader(java.lang.String,java.lang.String,com.google.api.client.http.HttpHeaders$ParseHeaderState) -> a
    java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String) -> a
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.http.HttpHeaders$HeaderParsingFakeLevelHttpRequest -> hR:
    com.google.api.client.http.HttpHeaders target -> a
    com.google.api.client.http.HttpHeaders$ParseHeaderState state -> b
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.HttpHeaders$ParseHeaderState -> hS:
    com.google.api.client.util.ArrayValueMap arrayValueMap -> a
    java.lang.StringBuilder logger -> b
    com.google.api.client.util.ClassInfo classInfo -> c
    java.util.List context -> d
com.google.api.client.http.HttpIOExceptionHandler -> com.google.api.client.http.HttpIOExceptionHandler:
    boolean handleIOException(com.google.api.client.http.HttpRequest,boolean) -> handleIOException
com.google.api.client.http.HttpMediaType -> com.google.api.client.http.HttpMediaType:
    java.util.regex.Pattern TYPE_REGEX -> a
    java.util.regex.Pattern TOKEN_REGEX -> b
    java.util.regex.Pattern FULL_MEDIA_TYPE_REGEX -> c
    java.util.regex.Pattern PARAMETER_REGEX -> d
    java.lang.String type -> e
    java.lang.String subType -> f
    java.util.SortedMap parameters -> g
    java.lang.String cachedBuildResult -> h
    com.google.api.client.http.HttpMediaType setType(java.lang.String) -> setType
    java.lang.String getType() -> getType
    com.google.api.client.http.HttpMediaType setSubType(java.lang.String) -> setSubType
    java.lang.String getSubType() -> getSubType
    com.google.api.client.http.HttpMediaType fromString(java.lang.String) -> b
    com.google.api.client.http.HttpMediaType setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    com.google.api.client.http.HttpMediaType removeParameter(java.lang.String) -> removeParameter
    void clearParameters() -> clearParameters
    java.util.Map getParameters() -> getParameters
    boolean matchesToken(java.lang.String) -> a
    java.lang.String build() -> build
    java.lang.String toString() -> toString
    boolean equalsIgnoreParameters(com.google.api.client.http.HttpMediaType) -> equalsIgnoreParameters
    boolean equalsIgnoreParameters(java.lang.String,java.lang.String) -> equalsIgnoreParameters
    com.google.api.client.http.HttpMediaType setCharsetParameter(java.nio.charset.Charset) -> setCharsetParameter
    java.nio.charset.Charset getCharsetParameter() -> getCharsetParameter
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.api.client.http.HttpMethods -> com.google.api.client.http.HttpMethods:
    java.lang.String CONNECT -> CONNECT
    java.lang.String DELETE -> DELETE
    java.lang.String GET -> GET
    java.lang.String HEAD -> HEAD
    java.lang.String OPTIONS -> OPTIONS
    java.lang.String PATCH -> PATCH
    java.lang.String POST -> POST
    java.lang.String PUT -> PUT
    java.lang.String TRACE -> TRACE
com.google.api.client.http.HttpRequest -> com.google.api.client.http.HttpRequest:
    java.lang.String VERSION -> VERSION
    java.lang.String USER_AGENT_SUFFIX -> USER_AGENT_SUFFIX
    com.google.api.client.http.HttpExecuteInterceptor executeInterceptor -> a
    com.google.api.client.http.HttpHeaders headers -> b
    com.google.api.client.http.HttpHeaders responseHeaders -> c
    int numRetries -> d
    int contentLoggingLimit -> e
    boolean loggingEnabled -> f
    boolean curlLoggingEnabled -> g
    com.google.api.client.http.HttpContent content -> h
    com.google.api.client.http.HttpTransport transport -> i
    java.lang.String requestMethod -> j
    com.google.api.client.http.GenericUrl url -> k
    int connectTimeout -> l
    int readTimeout -> m
    com.google.api.client.http.HttpUnsuccessfulResponseHandler unsuccessfulResponseHandler -> n
    com.google.api.client.http.HttpIOExceptionHandler ioExceptionHandler -> o
    com.google.api.client.http.HttpResponseInterceptor responseInterceptor -> p
    com.google.api.client.util.ObjectParser objectParser -> q
    com.google.api.client.http.HttpEncoding encoding -> r
    com.google.api.client.http.BackOffPolicy backOffPolicy -> s
    boolean followRedirects -> t
    boolean throwExceptionOnExecuteError -> u
    boolean retryOnExecuteIOException -> v
    boolean suppressUserAgentSuffix -> w
    com.google.api.client.util.Sleeper sleeper -> x
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    java.lang.String getRequestMethod() -> getRequestMethod
    com.google.api.client.http.HttpRequest setRequestMethod(java.lang.String) -> setRequestMethod
    com.google.api.client.http.GenericUrl getUrl() -> getUrl
    com.google.api.client.http.HttpRequest setUrl(com.google.api.client.http.GenericUrl) -> setUrl
    com.google.api.client.http.HttpContent getContent() -> getContent
    com.google.api.client.http.HttpRequest setContent(com.google.api.client.http.HttpContent) -> setContent
    com.google.api.client.http.HttpEncoding getEncoding() -> getEncoding
    com.google.api.client.http.HttpRequest setEncoding(com.google.api.client.http.HttpEncoding) -> setEncoding
    com.google.api.client.http.BackOffPolicy getBackOffPolicy() -> getBackOffPolicy
    com.google.api.client.http.HttpRequest setBackOffPolicy(com.google.api.client.http.BackOffPolicy) -> setBackOffPolicy
    int getContentLoggingLimit() -> getContentLoggingLimit
    com.google.api.client.http.HttpRequest setContentLoggingLimit(int) -> setContentLoggingLimit
    boolean isLoggingEnabled() -> isLoggingEnabled
    com.google.api.client.http.HttpRequest setLoggingEnabled(boolean) -> setLoggingEnabled
    boolean isCurlLoggingEnabled() -> isCurlLoggingEnabled
    com.google.api.client.http.HttpRequest setCurlLoggingEnabled(boolean) -> setCurlLoggingEnabled
    int getConnectTimeout() -> getConnectTimeout
    com.google.api.client.http.HttpRequest setConnectTimeout(int) -> setConnectTimeout
    int getReadTimeout() -> getReadTimeout
    com.google.api.client.http.HttpRequest setReadTimeout(int) -> setReadTimeout
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    com.google.api.client.http.HttpRequest setHeaders(com.google.api.client.http.HttpHeaders) -> setHeaders
    com.google.api.client.http.HttpHeaders getResponseHeaders() -> getResponseHeaders
    com.google.api.client.http.HttpRequest setResponseHeaders(com.google.api.client.http.HttpHeaders) -> setResponseHeaders
    com.google.api.client.http.HttpExecuteInterceptor getInterceptor() -> getInterceptor
    com.google.api.client.http.HttpRequest setInterceptor(com.google.api.client.http.HttpExecuteInterceptor) -> setInterceptor
    com.google.api.client.http.HttpUnsuccessfulResponseHandler getUnsuccessfulResponseHandler() -> getUnsuccessfulResponseHandler
    com.google.api.client.http.HttpRequest setUnsuccessfulResponseHandler(com.google.api.client.http.HttpUnsuccessfulResponseHandler) -> setUnsuccessfulResponseHandler
    com.google.api.client.http.HttpIOExceptionHandler getIOExceptionHandler() -> getIOExceptionHandler
    com.google.api.client.http.HttpRequest setIOExceptionHandler(com.google.api.client.http.HttpIOExceptionHandler) -> setIOExceptionHandler
    com.google.api.client.http.HttpResponseInterceptor getResponseInterceptor() -> getResponseInterceptor
    com.google.api.client.http.HttpRequest setResponseInterceptor(com.google.api.client.http.HttpResponseInterceptor) -> setResponseInterceptor
    int getNumberOfRetries() -> getNumberOfRetries
    com.google.api.client.http.HttpRequest setNumberOfRetries(int) -> setNumberOfRetries
    com.google.api.client.http.HttpRequest setParser(com.google.api.client.util.ObjectParser) -> setParser
    com.google.api.client.util.ObjectParser getParser() -> getParser
    boolean getFollowRedirects() -> getFollowRedirects
    com.google.api.client.http.HttpRequest setFollowRedirects(boolean) -> setFollowRedirects
    boolean getThrowExceptionOnExecuteError() -> getThrowExceptionOnExecuteError
    com.google.api.client.http.HttpRequest setThrowExceptionOnExecuteError(boolean) -> setThrowExceptionOnExecuteError
    boolean getRetryOnExecuteIOException() -> getRetryOnExecuteIOException
    com.google.api.client.http.HttpRequest setRetryOnExecuteIOException(boolean) -> setRetryOnExecuteIOException
    boolean getSuppressUserAgentSuffix() -> getSuppressUserAgentSuffix
    com.google.api.client.http.HttpRequest setSuppressUserAgentSuffix(boolean) -> setSuppressUserAgentSuffix
    com.google.api.client.http.HttpResponse execute() -> execute
    java.util.concurrent.Future executeAsync(java.util.concurrent.Executor) -> executeAsync
    java.util.concurrent.Future executeAsync() -> executeAsync
    boolean handleRedirect(int,com.google.api.client.http.HttpHeaders) -> handleRedirect
    com.google.api.client.util.Sleeper getSleeper() -> getSleeper
    com.google.api.client.http.HttpRequest setSleeper(com.google.api.client.util.Sleeper) -> setSleeper
com.google.api.client.http.HttpRequest$1 -> hT:
    com.google.api.client.http.HttpRequest this$0 -> a
    java.lang.Object call() -> call
com.google.api.client.http.HttpRequestFactory -> com.google.api.client.http.HttpRequestFactory:
    com.google.api.client.http.HttpTransport transport -> a
    com.google.api.client.http.HttpRequestInitializer initializer -> b
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.http.HttpRequestInitializer getInitializer() -> getInitializer
    com.google.api.client.http.HttpRequest buildRequest(java.lang.String,com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildRequest
    com.google.api.client.http.HttpRequest buildDeleteRequest(com.google.api.client.http.GenericUrl) -> buildDeleteRequest
    com.google.api.client.http.HttpRequest buildGetRequest(com.google.api.client.http.GenericUrl) -> buildGetRequest
    com.google.api.client.http.HttpRequest buildPostRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPostRequest
    com.google.api.client.http.HttpRequest buildPutRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPutRequest
    com.google.api.client.http.HttpRequest buildPatchRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPatchRequest
    com.google.api.client.http.HttpRequest buildHeadRequest(com.google.api.client.http.GenericUrl) -> buildHeadRequest
com.google.api.client.http.HttpRequestInitializer -> com.google.api.client.http.HttpRequestInitializer:
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
com.google.api.client.http.HttpResponse -> com.google.api.client.http.HttpResponse:
    java.io.InputStream content -> b
    java.lang.String contentEncoding -> c
    java.lang.String contentType -> d
    com.google.api.client.http.HttpMediaType mediaType -> e
    com.google.api.client.http.LowLevelHttpResponse response -> a
    int statusCode -> f
    java.lang.String statusMessage -> g
    com.google.api.client.http.HttpRequest request -> h
    int contentLoggingLimit -> i
    boolean loggingEnabled -> j
    boolean contentRead -> k
    int getContentLoggingLimit() -> getContentLoggingLimit
    com.google.api.client.http.HttpResponse setContentLoggingLimit(int) -> setContentLoggingLimit
    boolean isLoggingEnabled() -> isLoggingEnabled
    com.google.api.client.http.HttpResponse setLoggingEnabled(boolean) -> setLoggingEnabled
    java.lang.String getContentEncoding() -> getContentEncoding
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.HttpMediaType getMediaType() -> getMediaType
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    boolean isSuccessStatusCode() -> isSuccessStatusCode
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.http.HttpRequest getRequest() -> getRequest
    java.io.InputStream getContent() -> getContent
    void download(java.io.OutputStream) -> download
    void ignore() -> ignore
    void disconnect() -> disconnect
    java.lang.Object parseAs(java.lang.Class) -> parseAs
    boolean hasMessageBody() -> a
    java.lang.Object parseAs(java.lang.reflect.Type) -> parseAs
    java.lang.String parseAsString() -> parseAsString
    java.nio.charset.Charset getContentCharset() -> getContentCharset
com.google.api.client.http.HttpResponseException -> com.google.api.client.http.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    int statusCode -> a
    java.lang.String statusMessage -> b
    com.google.api.client.http.HttpHeaders headers -> c
    java.lang.String content -> d
    boolean isSuccessStatusCode() -> isSuccessStatusCode
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    java.lang.String getContent() -> getContent
    java.lang.StringBuilder computeMessageBuffer(com.google.api.client.http.HttpResponse) -> computeMessageBuffer
com.google.api.client.http.HttpResponseException$Builder -> com.google.api.client.http.HttpResponseException$Builder:
    int statusCode -> a
    java.lang.String statusMessage -> b
    com.google.api.client.http.HttpHeaders headers -> c
    java.lang.String content -> d
    java.lang.String message -> e
    java.lang.String getMessage() -> getMessage
    com.google.api.client.http.HttpResponseException$Builder setMessage(java.lang.String) -> setMessage
    int getStatusCode() -> getStatusCode
    com.google.api.client.http.HttpResponseException$Builder setStatusCode(int) -> setStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    com.google.api.client.http.HttpResponseException$Builder setStatusMessage(java.lang.String) -> setStatusMessage
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    com.google.api.client.http.HttpResponseException$Builder setHeaders(com.google.api.client.http.HttpHeaders) -> setHeaders
    java.lang.String getContent() -> getContent
    com.google.api.client.http.HttpResponseException$Builder setContent(java.lang.String) -> setContent
    com.google.api.client.http.HttpResponseException build() -> build
com.google.api.client.http.HttpResponseInterceptor -> com.google.api.client.http.HttpResponseInterceptor:
    void interceptResponse(com.google.api.client.http.HttpResponse) -> interceptResponse
com.google.api.client.http.HttpStatusCodes -> com.google.api.client.http.HttpStatusCodes:
    int STATUS_CODE_OK -> STATUS_CODE_OK
    int STATUS_CODE_NO_CONTENT -> STATUS_CODE_NO_CONTENT
    int STATUS_CODE_MULTIPLE_CHOICES -> STATUS_CODE_MULTIPLE_CHOICES
    int STATUS_CODE_MOVED_PERMANENTLY -> STATUS_CODE_MOVED_PERMANENTLY
    int STATUS_CODE_FOUND -> STATUS_CODE_FOUND
    int STATUS_CODE_SEE_OTHER -> STATUS_CODE_SEE_OTHER
    int STATUS_CODE_NOT_MODIFIED -> STATUS_CODE_NOT_MODIFIED
    int STATUS_CODE_TEMPORARY_REDIRECT -> STATUS_CODE_TEMPORARY_REDIRECT
    int STATUS_CODE_UNAUTHORIZED -> STATUS_CODE_UNAUTHORIZED
    int STATUS_CODE_FORBIDDEN -> STATUS_CODE_FORBIDDEN
    int STATUS_CODE_NOT_FOUND -> STATUS_CODE_NOT_FOUND
    int STATUS_CODE_SERVER_ERROR -> STATUS_CODE_SERVER_ERROR
    int STATUS_CODE_BAD_GATEWAY -> STATUS_CODE_BAD_GATEWAY
    int STATUS_CODE_SERVICE_UNAVAILABLE -> STATUS_CODE_SERVICE_UNAVAILABLE
    boolean isSuccess(int) -> isSuccess
    boolean isRedirect(int) -> isRedirect
com.google.api.client.http.HttpTransport -> com.google.api.client.http.HttpTransport:
    java.util.logging.Logger LOGGER -> a
    java.lang.String[] SUPPORTED_METHODS -> b
    com.google.api.client.http.HttpRequestFactory createRequestFactory() -> createRequestFactory
    com.google.api.client.http.HttpRequestFactory createRequestFactory(com.google.api.client.http.HttpRequestInitializer) -> createRequestFactory
    com.google.api.client.http.HttpRequest buildRequest() -> a
    boolean supportsMethod(java.lang.String) -> supportsMethod
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    void shutdown() -> shutdown
com.google.api.client.http.HttpUnsuccessfulResponseHandler -> com.google.api.client.http.HttpUnsuccessfulResponseHandler:
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
com.google.api.client.http.InputStreamContent -> com.google.api.client.http.InputStreamContent:
    long length -> a
    boolean retrySupported -> b
    java.io.InputStream inputStream -> c
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    com.google.api.client.http.InputStreamContent setRetrySupported(boolean) -> setRetrySupported
    java.io.InputStream getInputStream() -> getInputStream
    com.google.api.client.http.InputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.InputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.InputStreamContent setLength(long) -> setLength
    com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
com.google.api.client.http.LowLevelHttpRequest -> com.google.api.client.http.LowLevelHttpRequest:
    long contentLength -> a
    java.lang.String contentEncoding -> b
    java.lang.String contentType -> c
    com.google.api.client.util.StreamingContent streamingContent -> d
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setContentLength(long) -> setContentLength
    long getContentLength() -> getContentLength
    void setContentEncoding(java.lang.String) -> setContentEncoding
    java.lang.String getContentEncoding() -> getContentEncoding
    void setContentType(java.lang.String) -> setContentType
    java.lang.String getContentType() -> getContentType
    void setStreamingContent(com.google.api.client.util.StreamingContent) -> setStreamingContent
    com.google.api.client.util.StreamingContent getStreamingContent() -> getStreamingContent
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.LowLevelHttpResponse -> com.google.api.client.http.LowLevelHttpResponse:
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getStatusLine() -> getStatusLine
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.MultipartContent -> com.google.api.client.http.MultipartContent:
    java.util.ArrayList parts -> a
    void writeTo(java.io.OutputStream) -> writeTo
    boolean retrySupported() -> retrySupported
    com.google.api.client.http.MultipartContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.util.Collection getParts() -> getParts
    com.google.api.client.http.MultipartContent addPart(com.google.api.client.http.MultipartContent$Part) -> addPart
    com.google.api.client.http.MultipartContent setParts(java.util.Collection) -> setParts
    com.google.api.client.http.MultipartContent setContentParts(java.util.Collection) -> setContentParts
    java.lang.String getBoundary() -> getBoundary
    com.google.api.client.http.MultipartContent setBoundary(java.lang.String) -> setBoundary
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.MultipartContent$Part -> com.google.api.client.http.MultipartContent$Part:
    com.google.api.client.http.HttpContent content -> a
    com.google.api.client.http.HttpHeaders headers -> b
    com.google.api.client.http.HttpEncoding encoding -> c
    com.google.api.client.http.MultipartContent$Part setContent(com.google.api.client.http.HttpContent) -> setContent
    com.google.api.client.http.HttpContent getContent() -> getContent
    com.google.api.client.http.MultipartContent$Part setHeaders(com.google.api.client.http.HttpHeaders) -> setHeaders
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    com.google.api.client.http.MultipartContent$Part setEncoding(com.google.api.client.http.HttpEncoding) -> setEncoding
    com.google.api.client.http.HttpEncoding getEncoding() -> getEncoding
com.google.api.client.http.UriTemplate -> com.google.api.client.http.UriTemplate:
    java.util.Map COMPOSITE_PREFIXES -> a
    java.util.Map getMap(java.lang.Object) -> a
    java.lang.String expand(java.lang.String,java.lang.String,java.lang.Object,boolean) -> expand
    java.lang.String expand(java.lang.String,java.lang.Object,boolean) -> expand
    java.lang.String getListPropertyValue(java.lang.String,java.util.Iterator,boolean,com.google.api.client.http.UriTemplate$CompositeOutput) -> a
    java.lang.String getMapPropertyValue(java.lang.String,java.util.Map,boolean,com.google.api.client.http.UriTemplate$CompositeOutput) -> a
com.google.api.client.http.UriTemplate$CompositeOutput -> hU:
    com.google.api.client.http.UriTemplate$CompositeOutput PLUS -> a
    com.google.api.client.http.UriTemplate$CompositeOutput HASH -> b
    com.google.api.client.http.UriTemplate$CompositeOutput DOT -> c
    com.google.api.client.http.UriTemplate$CompositeOutput FORWARD_SLASH -> d
    com.google.api.client.http.UriTemplate$CompositeOutput SEMI_COLON -> e
    com.google.api.client.http.UriTemplate$CompositeOutput QUERY -> f
    com.google.api.client.http.UriTemplate$CompositeOutput AMP -> g
    com.google.api.client.http.UriTemplate$CompositeOutput SIMPLE -> h
    java.lang.Character propertyPrefix -> i
    java.lang.String outputPrefix -> j
    java.lang.String explodeJoiner -> k
    boolean requiresVarAssignment -> l
    boolean reservedExpansion -> m
    com.google.api.client.http.UriTemplate$CompositeOutput[] $VALUES -> n
    com.google.api.client.http.UriTemplate$CompositeOutput[] values() -> values
    com.google.api.client.http.UriTemplate$CompositeOutput valueOf(java.lang.String) -> valueOf
    java.lang.String getOutputPrefix() -> a
    java.lang.String getExplodeJoiner() -> b
    boolean requiresVarAssignment() -> c
    int getVarNameStartIndex() -> d
    java.lang.String getEncodedValue(java.lang.String) -> a
com.google.api.client.http.UrlEncodedContent -> com.google.api.client.http.UrlEncodedContent:
    java.lang.Object data -> a
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.UrlEncodedContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.lang.Object getData() -> getData
    com.google.api.client.http.UrlEncodedContent setData(java.lang.Object) -> setData
    com.google.api.client.http.UrlEncodedContent getContent(com.google.api.client.http.HttpRequest) -> getContent
    boolean appendParam(boolean,java.io.Writer,java.lang.String,java.lang.Object) -> a
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.UrlEncodedParser -> com.google.api.client.http.UrlEncodedParser:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String MEDIA_TYPE -> MEDIA_TYPE
    void parse(java.lang.String,java.lang.Object) -> parse
    void parse(java.io.Reader,java.lang.Object) -> parse
    java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String) -> a
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
com.google.api.client.http.apache.ApacheHttpRequest -> hV:
    org.apache.http.client.HttpClient httpClient -> a
    org.apache.http.client.methods.HttpRequestBase request -> b
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.apache.ApacheHttpResponse -> hW:
    org.apache.http.client.methods.HttpRequestBase request -> a
    org.apache.http.HttpResponse response -> b
    org.apache.http.Header[] allHeaders -> c
    int getStatusCode() -> getStatusCode
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String getStatusLine() -> getStatusLine
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.apache.ApacheHttpTransport -> com.google.api.client.http.apache.ApacheHttpTransport:
    org.apache.http.client.HttpClient httpClient -> b
    org.apache.http.impl.client.DefaultHttpClient newDefaultHttpClient() -> newDefaultHttpClient
    org.apache.http.params.HttpParams newDefaultHttpParams() -> b
    org.apache.http.impl.client.DefaultHttpClient newDefaultHttpClient(org.apache.http.conn.ssl.SSLSocketFactory,org.apache.http.params.HttpParams,java.net.ProxySelector) -> a
    boolean supportsMethod(java.lang.String) -> supportsMethod
    com.google.api.client.http.apache.ApacheHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    void shutdown() -> shutdown
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
com.google.api.client.http.apache.ApacheHttpTransport$Builder -> com.google.api.client.http.apache.ApacheHttpTransport$Builder:
    org.apache.http.conn.ssl.SSLSocketFactory socketFactory -> a
    org.apache.http.params.HttpParams params -> b
    java.net.ProxySelector proxySelector -> c
    com.google.api.client.http.apache.ApacheHttpTransport$Builder setProxy(org.apache.http.HttpHost) -> setProxy
    com.google.api.client.http.apache.ApacheHttpTransport$Builder setProxySelector(java.net.ProxySelector) -> setProxySelector
    com.google.api.client.http.apache.ApacheHttpTransport$Builder trustCertificatesFromJavaKeyStore(java.io.InputStream,java.lang.String) -> trustCertificatesFromJavaKeyStore
    com.google.api.client.http.apache.ApacheHttpTransport$Builder trustCertificatesFromStream(java.io.InputStream) -> trustCertificatesFromStream
    com.google.api.client.http.apache.ApacheHttpTransport$Builder trustCertificates(java.security.KeyStore) -> trustCertificates
    com.google.api.client.http.apache.ApacheHttpTransport$Builder doNotValidateCertificate() -> doNotValidateCertificate
    com.google.api.client.http.apache.ApacheHttpTransport$Builder setSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSocketFactory
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
    org.apache.http.params.HttpParams getHttpParams() -> getHttpParams
    com.google.api.client.http.apache.ApacheHttpTransport build() -> build
com.google.api.client.http.apache.ContentEntity -> hX:
    long contentLength -> a
    com.google.api.client.util.StreamingContent streamingContent -> b
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.http.apache.HttpExtensionMethod -> hY:
    java.lang.String methodName -> a
    java.lang.String getMethod() -> getMethod
com.google.api.client.http.apache.SSLSocketFactoryExtension -> hZ:
    javax.net.ssl.SSLSocketFactory socketFactory -> a
    java.net.Socket createSocket() -> createSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
com.google.api.client.http.javanet.NetHttpRequest -> ia:
    java.net.HttpURLConnection connection -> a
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.javanet.NetHttpResponse -> ib:
    java.net.HttpURLConnection connection -> a
    int responseCode -> b
    java.lang.String responseMessage -> c
    java.util.ArrayList headerNames -> d
    java.util.ArrayList headerValues -> e
    int getStatusCode() -> getStatusCode
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String getStatusLine() -> getStatusLine
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.javanet.NetHttpTransport -> com.google.api.client.http.javanet.NetHttpTransport:
    java.lang.String[] SUPPORTED_METHODS -> b
    java.net.Proxy proxy -> c
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> d
    javax.net.ssl.HostnameVerifier hostnameVerifier -> e
    boolean supportsMethod(java.lang.String) -> supportsMethod
    com.google.api.client.http.javanet.NetHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
com.google.api.client.http.javanet.NetHttpTransport$Builder -> com.google.api.client.http.javanet.NetHttpTransport$Builder:
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> a
    javax.net.ssl.HostnameVerifier hostnameVerifier -> b
    java.net.Proxy proxy -> c
    com.google.api.client.http.javanet.NetHttpTransport$Builder setProxy(java.net.Proxy) -> setProxy
    com.google.api.client.http.javanet.NetHttpTransport$Builder trustCertificatesFromJavaKeyStore(java.io.InputStream,java.lang.String) -> trustCertificatesFromJavaKeyStore
    com.google.api.client.http.javanet.NetHttpTransport$Builder trustCertificatesFromStream(java.io.InputStream) -> trustCertificatesFromStream
    com.google.api.client.http.javanet.NetHttpTransport$Builder trustCertificates(java.security.KeyStore) -> trustCertificates
    com.google.api.client.http.javanet.NetHttpTransport$Builder doNotValidateCertificate() -> doNotValidateCertificate
    javax.net.ssl.SSLSocketFactory getSslSocketFactory() -> getSslSocketFactory
    com.google.api.client.http.javanet.NetHttpTransport$Builder setSslSocketFactory(javax.net.ssl.SSLSocketFactory) -> setSslSocketFactory
    javax.net.ssl.HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    com.google.api.client.http.javanet.NetHttpTransport$Builder setHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setHostnameVerifier
    com.google.api.client.http.javanet.NetHttpTransport build() -> build
com.google.api.client.http.json.JsonHttpContent -> com.google.api.client.http.json.JsonHttpContent:
    java.lang.Object data -> a
    com.google.api.client.json.JsonFactory jsonFactory -> b
    java.lang.String wrapperKey -> c
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.json.JsonHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.lang.Object getData() -> getData
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getWrapperKey() -> getWrapperKey
    com.google.api.client.http.json.JsonHttpContent setWrapperKey(java.lang.String) -> setWrapperKey
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.json.CustomizeJsonParser -> com.google.api.client.json.CustomizeJsonParser:
    boolean stopAt(java.lang.Object,java.lang.String) -> stopAt
    void handleUnrecognizedKey(java.lang.Object,java.lang.String) -> handleUnrecognizedKey
    java.util.Collection newInstanceForArray(java.lang.Object,java.lang.reflect.Field) -> newInstanceForArray
    java.lang.Object newInstanceForObject(java.lang.Object,java.lang.Class) -> newInstanceForObject
com.google.api.client.json.GenericJson -> com.google.api.client.json.GenericJson:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void setFactory(com.google.api.client.json.JsonFactory) -> setFactory
    java.lang.String toString() -> toString
    java.lang.String toPrettyString() -> toPrettyString
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.json.Json -> com.google.api.client.json.Json:
    java.lang.String MEDIA_TYPE -> MEDIA_TYPE
com.google.api.client.json.JsonFactory -> com.google.api.client.json.JsonFactory:
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream,java.nio.charset.Charset) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,java.nio.charset.Charset) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    com.google.api.client.json.JsonObjectParser createJsonObjectParser() -> createJsonObjectParser
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toPrettyString(java.lang.Object) -> toPrettyString
    byte[] toByteArray(java.lang.Object) -> toByteArray
    java.lang.String toString(java.lang.Object,boolean) -> a
    java.io.ByteArrayOutputStream toByteStream(java.lang.Object,boolean) -> b
    java.lang.Object fromString(java.lang.String,java.lang.Class) -> fromString
    java.lang.Object fromInputStream(java.io.InputStream,java.lang.Class) -> fromInputStream
    java.lang.Object fromInputStream(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> fromInputStream
    java.lang.Object fromReader(java.io.Reader,java.lang.Class) -> fromReader
com.google.api.client.json.JsonGenerator -> com.google.api.client.json.JsonGenerator:
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void flush() -> flush
    void close() -> close
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeString(java.lang.String) -> writeString
    void writeBoolean(boolean) -> writeBoolean
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void serialize(java.lang.Object) -> serialize
    void serialize(boolean,java.lang.Object) -> a
    void enablePrettyPrint() -> enablePrettyPrint
com.google.api.client.json.JsonObjectParser -> com.google.api.client.json.JsonObjectParser:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    java.util.Set wrapperKeys -> b
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.util.Set getWrapperKeys() -> getWrapperKeys
    void initializeParser(com.google.api.client.json.JsonParser) -> a
com.google.api.client.json.JsonObjectParser$Builder -> com.google.api.client.json.JsonObjectParser$Builder:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    java.util.Collection wrapperKeys -> b
    com.google.api.client.json.JsonObjectParser build() -> build
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.util.Collection getWrapperKeys() -> getWrapperKeys
    com.google.api.client.json.JsonObjectParser$Builder setWrapperKeys(java.util.Collection) -> setWrapperKeys
com.google.api.client.json.JsonParser -> com.google.api.client.json.JsonParser:
    java.util.WeakHashMap cachedTypemapFields -> a
    java.util.concurrent.locks.Lock lock -> b
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void close() -> close
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.Object parseAndClose(java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseAndClose
    void skipToKey(java.lang.String) -> skipToKey
    java.lang.String skipToKey(java.util.Set) -> skipToKey
    com.google.api.client.json.JsonToken startParsing() -> a
    com.google.api.client.json.JsonToken startParsingObjectOrArray() -> b
    void parseAndClose(java.lang.Object) -> parseAndClose
    void parseAndClose(java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> parseAndClose
    java.lang.Object parse(java.lang.Class) -> parse
    java.lang.Object parse(java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parse
    java.lang.Object parse(java.lang.reflect.Type,boolean) -> parse
    java.lang.Object parse(java.lang.reflect.Type,boolean,com.google.api.client.json.CustomizeJsonParser) -> parse
    void parse(java.lang.Object) -> parse
    void parse(java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> parse
    void parse(java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> a
    java.util.Collection parseArrayAndClose(java.lang.Class,java.lang.Class) -> parseArrayAndClose
    java.util.Collection parseArrayAndClose(java.lang.Class,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArrayAndClose
    void parseArrayAndClose(java.util.Collection,java.lang.Class) -> parseArrayAndClose
    void parseArrayAndClose(java.util.Collection,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArrayAndClose
    java.util.Collection parseArray(java.lang.Class,java.lang.Class) -> parseArray
    java.util.Collection parseArray(java.lang.Class,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArray
    void parseArray(java.util.Collection,java.lang.Class) -> parseArray
    void parseArray(java.util.Collection,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArray
    void parseArray(java.lang.reflect.Field,java.util.Collection,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser) -> a
    void parseMap(java.lang.reflect.Field,java.util.Map,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser) -> a
    java.lang.Object parseValue(java.lang.reflect.Field,java.lang.reflect.Type,java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser,boolean) -> a
    java.lang.reflect.Field getCachedTypemapFieldFor(java.lang.Class) -> a
com.google.api.client.json.JsonParser$1 -> ic:
    int[] $SwitchMap$com$google$api$client$json$JsonToken -> a
com.google.api.client.json.JsonPolymorphicTypeMap -> com.google.api.client.json.JsonPolymorphicTypeMap:
    com.google.api.client.json.JsonPolymorphicTypeMap$TypeDef[] typeDefinitions() -> typeDefinitions
com.google.api.client.json.JsonPolymorphicTypeMap$TypeDef -> com.google.api.client.json.JsonPolymorphicTypeMap$TypeDef:
    java.lang.String key() -> key
    java.lang.Class ref() -> ref
com.google.api.client.json.JsonString -> com.google.api.client.json.JsonString:
com.google.api.client.json.JsonToken -> com.google.api.client.json.JsonToken:
    com.google.api.client.json.JsonToken START_ARRAY -> START_ARRAY
    com.google.api.client.json.JsonToken END_ARRAY -> END_ARRAY
    com.google.api.client.json.JsonToken START_OBJECT -> START_OBJECT
    com.google.api.client.json.JsonToken END_OBJECT -> END_OBJECT
    com.google.api.client.json.JsonToken FIELD_NAME -> FIELD_NAME
    com.google.api.client.json.JsonToken VALUE_STRING -> VALUE_STRING
    com.google.api.client.json.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    com.google.api.client.json.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    com.google.api.client.json.JsonToken VALUE_TRUE -> VALUE_TRUE
    com.google.api.client.json.JsonToken VALUE_FALSE -> VALUE_FALSE
    com.google.api.client.json.JsonToken VALUE_NULL -> VALUE_NULL
    com.google.api.client.json.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    com.google.api.client.json.JsonToken[] $VALUES -> a
    com.google.api.client.json.JsonToken[] values() -> values
    com.google.api.client.json.JsonToken valueOf(java.lang.String) -> valueOf
com.google.api.client.json.jackson2.JacksonFactory -> com.google.api.client.json.jackson2.JacksonFactory:
    com.fasterxml.jackson.core.JsonFactory factory -> a
    com.google.api.client.json.jackson2.JacksonFactory getDefaultInstance() -> getDefaultInstance
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,java.nio.charset.Charset) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream,java.nio.charset.Charset) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonToken convert(com.fasterxml.jackson.core.JsonToken) -> a
com.google.api.client.json.jackson2.JacksonFactory$1 -> id:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.google.api.client.json.jackson2.JacksonFactory$InstanceHolder -> ie:
    com.google.api.client.json.jackson2.JacksonFactory INSTANCE -> a
com.google.api.client.json.jackson2.JacksonGenerator -> if:
    com.fasterxml.jackson.core.JsonGenerator generator -> a
    com.google.api.client.json.jackson2.JacksonFactory factory -> b
    void flush() -> flush
    void close() -> close
    void writeBoolean(boolean) -> writeBoolean
    void writeEndArray() -> writeEndArray
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeStartArray() -> writeStartArray
    void writeStartObject() -> writeStartObject
    void writeString(java.lang.String) -> writeString
    void enablePrettyPrint() -> enablePrettyPrint
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
com.google.api.client.json.jackson2.JacksonParser -> ig:
    com.fasterxml.jackson.core.JsonParser parser -> a
    com.google.api.client.json.jackson2.JacksonFactory factory -> b
    void close() -> close
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    byte getByteValue() -> getByteValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    short getShortValue() -> getShortValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    long getLongValue() -> getLongValue
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
com.google.api.client.json.rpc2.JsonRpcRequest -> com.google.api.client.json.rpc2.JsonRpcRequest:
    java.lang.String jsonrpc -> jsonrpc
    java.lang.Object id -> id
    java.lang.String method -> method
    java.lang.Object params -> params
    java.lang.String getVersion() -> getVersion
    java.lang.Object getId() -> getId
    void setId(java.lang.Object) -> setId
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    java.lang.Object getParameters() -> getParameters
    void setParameters(java.lang.Object) -> setParameters
    com.google.api.client.json.rpc2.JsonRpcRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.rpc2.JsonRpcRequest clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.json.webtoken.JsonWebSignature -> com.google.api.client.json.webtoken.JsonWebSignature:
    byte[] signatureBytes -> a
    byte[] signedContentBytes -> b
    com.google.api.client.json.webtoken.JsonWebSignature$Header getHeader() -> getHeader
    boolean verifySignature(java.security.PublicKey) -> verifySignature
    byte[] getSignatureBytes() -> getSignatureBytes
    byte[] getSignedContentBytes() -> getSignedContentBytes
    com.google.api.client.json.webtoken.JsonWebSignature parse(com.google.api.client.json.JsonFactory,java.lang.String) -> parse
    com.google.api.client.json.webtoken.JsonWebSignature$Parser parser(com.google.api.client.json.JsonFactory) -> parser
    java.lang.String signUsingRsaSha256(java.security.PrivateKey,com.google.api.client.json.JsonFactory,com.google.api.client.json.webtoken.JsonWebSignature$Header,com.google.api.client.json.webtoken.JsonWebToken$Payload) -> signUsingRsaSha256
    com.google.api.client.json.webtoken.JsonWebToken$Header getHeader() -> getHeader
com.google.api.client.json.webtoken.JsonWebSignature$Header -> com.google.api.client.json.webtoken.JsonWebSignature$Header:
    java.lang.String algorithm -> algorithm
    java.lang.String jwkUrl -> jwkUrl
    java.lang.String jwk -> jwk
    java.lang.String keyId -> keyId
    java.lang.String x509Url -> x509Url
    java.lang.String x509Thumbprint -> x509Thumbprint
    java.lang.String x509Certificate -> x509Certificate
    java.util.List critical -> critical
    com.google.api.client.json.webtoken.JsonWebSignature$Header setType(java.lang.String) -> setType
    java.lang.String getAlgorithm() -> getAlgorithm
    com.google.api.client.json.webtoken.JsonWebSignature$Header setAlgorithm(java.lang.String) -> setAlgorithm
    java.lang.String getJwkUrl() -> getJwkUrl
    com.google.api.client.json.webtoken.JsonWebSignature$Header setJwkUrl(java.lang.String) -> setJwkUrl
    java.lang.String getJwk() -> getJwk
    com.google.api.client.json.webtoken.JsonWebSignature$Header setJwk(java.lang.String) -> setJwk
    java.lang.String getKeyId() -> getKeyId
    com.google.api.client.json.webtoken.JsonWebSignature$Header setKeyId(java.lang.String) -> setKeyId
    java.lang.String getX509Url() -> getX509Url
    com.google.api.client.json.webtoken.JsonWebSignature$Header setX509Url(java.lang.String) -> setX509Url
    java.lang.String getX509Thumbprint() -> getX509Thumbprint
    com.google.api.client.json.webtoken.JsonWebSignature$Header setX509Thumbprint(java.lang.String) -> setX509Thumbprint
    java.lang.String getX509Certificate() -> getX509Certificate
    com.google.api.client.json.webtoken.JsonWebSignature$Header setX509Certificate(java.lang.String) -> setX509Certificate
    java.util.List getCritical() -> getCritical
    com.google.api.client.json.webtoken.JsonWebSignature$Header setCritical(java.util.List) -> setCritical
    com.google.api.client.json.webtoken.JsonWebSignature$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebSignature$Header clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Header clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebToken$Header setType(java.lang.String) -> setType
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.json.webtoken.JsonWebSignature$Parser -> com.google.api.client.json.webtoken.JsonWebSignature$Parser:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    java.lang.Class headerClass -> b
    java.lang.Class payloadClass -> c
    java.lang.Class getHeaderClass() -> getHeaderClass
    com.google.api.client.json.webtoken.JsonWebSignature$Parser setHeaderClass(java.lang.Class) -> setHeaderClass
    java.lang.Class getPayloadClass() -> getPayloadClass
    com.google.api.client.json.webtoken.JsonWebSignature$Parser setPayloadClass(java.lang.Class) -> setPayloadClass
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.json.webtoken.JsonWebSignature parse(java.lang.String) -> parse
com.google.api.client.json.webtoken.JsonWebToken -> com.google.api.client.json.webtoken.JsonWebToken:
    com.google.api.client.json.webtoken.JsonWebToken$Header header -> a
    com.google.api.client.json.webtoken.JsonWebToken$Payload payload -> b
    java.lang.String toString() -> toString
    com.google.api.client.json.webtoken.JsonWebToken$Header getHeader() -> getHeader
    com.google.api.client.json.webtoken.JsonWebToken$Payload getPayload() -> getPayload
com.google.api.client.json.webtoken.JsonWebToken$Header -> com.google.api.client.json.webtoken.JsonWebToken$Header:
    java.lang.String type -> type
    java.lang.String contentType -> contentType
    java.lang.String getType() -> getType
    com.google.api.client.json.webtoken.JsonWebToken$Header setType(java.lang.String) -> setType
    java.lang.String getContentType() -> getContentType
    com.google.api.client.json.webtoken.JsonWebToken$Header setContentType(java.lang.String) -> setContentType
    com.google.api.client.json.webtoken.JsonWebToken$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebToken$Header clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.json.webtoken.JsonWebToken$Payload -> com.google.api.client.json.webtoken.JsonWebToken$Payload:
    java.lang.Long expirationTimeSeconds -> expirationTimeSeconds
    java.lang.Long notBeforeTimeSeconds -> notBeforeTimeSeconds
    java.lang.Long issuedAtTimeSeconds -> issuedAtTimeSeconds
    java.lang.String issuer -> issuer
    java.lang.Object audience -> audience
    java.lang.String jwtId -> jwtId
    java.lang.String type -> type
    java.lang.String subject -> subject
    java.lang.Long getExpirationTimeSeconds() -> getExpirationTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setExpirationTimeSeconds(java.lang.Long) -> setExpirationTimeSeconds
    java.lang.Long getNotBeforeTimeSeconds() -> getNotBeforeTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setNotBeforeTimeSeconds(java.lang.Long) -> setNotBeforeTimeSeconds
    java.lang.Long getIssuedAtTimeSeconds() -> getIssuedAtTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setIssuedAtTimeSeconds(java.lang.Long) -> setIssuedAtTimeSeconds
    java.lang.String getIssuer() -> getIssuer
    com.google.api.client.json.webtoken.JsonWebToken$Payload setIssuer(java.lang.String) -> setIssuer
    java.lang.Object getAudience() -> getAudience
    java.util.List getAudienceAsList() -> getAudienceAsList
    com.google.api.client.json.webtoken.JsonWebToken$Payload setAudience(java.lang.Object) -> setAudience
    java.lang.String getJwtId() -> getJwtId
    com.google.api.client.json.webtoken.JsonWebToken$Payload setJwtId(java.lang.String) -> setJwtId
    java.lang.String getType() -> getType
    com.google.api.client.json.webtoken.JsonWebToken$Payload setType(java.lang.String) -> setType
    java.lang.String getSubject() -> getSubject
    com.google.api.client.json.webtoken.JsonWebToken$Payload setSubject(java.lang.String) -> setSubject
    com.google.api.client.json.webtoken.JsonWebToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebToken$Payload clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.repackaged.com.google.common.annotations.Beta -> com.google.api.client.repackaged.com.google.common.annotations.Beta:
com.google.api.client.repackaged.com.google.common.annotations.GwtCompatible -> com.google.api.client.repackaged.com.google.common.annotations.GwtCompatible:
    boolean serializable() -> serializable
    boolean emulated() -> emulated
com.google.api.client.repackaged.com.google.common.annotations.VisibleForTesting -> com.google.api.client.repackaged.com.google.common.annotations.VisibleForTesting:
com.google.api.client.repackaged.com.google.common.base.Joiner -> com.google.api.client.repackaged.com.google.common.base.Joiner:
    java.lang.String separator -> a
    com.google.api.client.repackaged.com.google.common.base.Joiner on(java.lang.String) -> on
    com.google.api.client.repackaged.com.google.common.base.Joiner on(char) -> on
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object[]) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.String join(java.lang.Object) -> join
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.util.Iterator) -> join
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[]) -> join
    com.google.api.client.repackaged.com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.api.client.repackaged.com.google.common.base.Joiner skipNulls() -> skipNulls
    com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    java.lang.CharSequence toString(java.lang.Object) -> a
    java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[]) -> a
    java.lang.String access$100(com.google.api.client.repackaged.com.google.common.base.Joiner) -> a
com.google.api.client.repackaged.com.google.common.base.Joiner$1 -> ih:
    java.lang.String val$nullText -> b
    com.google.api.client.repackaged.com.google.common.base.Joiner this$0 -> c
    java.lang.CharSequence toString(java.lang.Object) -> a
    com.google.api.client.repackaged.com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.api.client.repackaged.com.google.common.base.Joiner skipNulls() -> skipNulls
com.google.api.client.repackaged.com.google.common.base.Joiner$2 -> ii:
    com.google.api.client.repackaged.com.google.common.base.Joiner this$0 -> b
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    com.google.api.client.repackaged.com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
com.google.api.client.repackaged.com.google.common.base.Joiner$3 -> ij:
    java.lang.Object[] val$rest -> a
    java.lang.Object val$first -> b
    java.lang.Object val$second -> c
    int size() -> size
    java.lang.Object get(int) -> get
com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner -> com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner:
    com.google.api.client.repackaged.com.google.common.base.Joiner joiner -> a
    java.lang.String keyValueSeparator -> b
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Map) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map) -> appendTo
    java.lang.String join(java.util.Map) -> join
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    java.lang.String join(java.lang.Object) -> join
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.util.Iterator) -> join
    com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String) -> useForNull
com.google.api.client.repackaged.com.google.common.base.Objects -> com.google.api.client.repackaged.com.google.common.base.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hashCode(java.lang.Object[]) -> hashCode
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
    java.lang.String simpleName(java.lang.Class) -> a
    java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper -> com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper:
    java.lang.String className -> a
    java.util.List valueHolders -> b
    boolean omitNullValues -> c
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper omitNullValues() -> omitNullValues
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,boolean) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,char) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,double) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,float) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,int) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,long) -> add
    java.lang.StringBuilder checkNameAndAppend(java.lang.String) -> a
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(java.lang.Object) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(boolean) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(char) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(double) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(float) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(int) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(long) -> addValue
    java.lang.String toString() -> toString
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper$ValueHolder addHolder() -> a
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper$ValueHolder addHolder(java.lang.Object) -> a
com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper$ValueHolder -> ik:
    java.lang.StringBuilder builder -> a
    boolean isNull -> b
com.google.api.client.repackaged.com.google.common.base.Preconditions -> com.google.api.client.repackaged.com.google.common.base.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    int checkElementIndex(int,int) -> checkElementIndex
    int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    int checkPositionIndex(int,int) -> checkPositionIndex
    int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    java.lang.String badPositionIndex(int,int,java.lang.String) -> a
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> a
com.google.api.client.repackaged.com.google.common.base.Strings -> com.google.api.client.repackaged.com.google.common.base.Strings:
    java.lang.String nullToEmpty(java.lang.String) -> nullToEmpty
    java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    java.lang.String padStart(java.lang.String,int,char) -> padStart
    java.lang.String padEnd(java.lang.String,int,char) -> padEnd
    java.lang.String repeat(java.lang.String,int) -> repeat
    java.lang.String commonPrefix(java.lang.CharSequence,java.lang.CharSequence) -> commonPrefix
    java.lang.String commonSuffix(java.lang.CharSequence,java.lang.CharSequence) -> commonSuffix
    boolean validSurrogatePairAt(java.lang.CharSequence,int) -> a
com.google.api.client.repackaged.com.google.common.base.Throwables -> com.google.api.client.repackaged.com.google.common.base.Throwables:
    void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> propagateIfInstanceOf
    void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class) -> propagateIfPossible
    java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.util.List getCausalChain(java.lang.Throwable) -> getCausalChain
    java.lang.String getStackTraceAsString(java.lang.Throwable) -> getStackTraceAsString
com.google.api.client.repackaged.org.apache.commons.codec.BinaryDecoder -> com.google.api.client.repackaged.org.apache.commons.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
com.google.api.client.repackaged.org.apache.commons.codec.BinaryEncoder -> com.google.api.client.repackaged.org.apache.commons.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
com.google.api.client.repackaged.org.apache.commons.codec.Decoder -> com.google.api.client.repackaged.org.apache.commons.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
com.google.api.client.repackaged.org.apache.commons.codec.DecoderException -> com.google.api.client.repackaged.org.apache.commons.codec.DecoderException:
    long serialVersionUID -> serialVersionUID
com.google.api.client.repackaged.org.apache.commons.codec.Encoder -> com.google.api.client.repackaged.org.apache.commons.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
com.google.api.client.repackaged.org.apache.commons.codec.EncoderException -> com.google.api.client.repackaged.org.apache.commons.codec.EncoderException:
    long serialVersionUID -> serialVersionUID
com.google.api.client.repackaged.org.apache.commons.codec.binary.Base64 -> com.google.api.client.repackaged.org.apache.commons.codec.binary.Base64:
    byte[] CHUNK_SEPARATOR -> a
    byte[] STANDARD_ENCODE_TABLE -> b
    byte[] URL_SAFE_ENCODE_TABLE -> c
    byte[] DECODE_TABLE -> d
    byte[] encodeTable -> e
    byte[] decodeTable -> f
    byte[] lineSeparator -> g
    int decodeSize -> h
    int encodeSize -> i
    int bitWorkArea -> j
    boolean isUrlSafe() -> isUrlSafe
    void encode(byte[],int,int) -> a
    void decode(byte[],int,int) -> b
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    boolean isBase64(byte) -> isBase64
    boolean isBase64(java.lang.String) -> isBase64
    boolean isBase64(byte[]) -> isBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean,int) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    java.math.BigInteger decodeInteger(byte[]) -> decodeInteger
    byte[] encodeInteger(java.math.BigInteger) -> encodeInteger
    boolean isInAlphabet(byte) -> isInAlphabet
com.google.api.client.repackaged.org.apache.commons.codec.binary.BaseNCodec -> com.google.api.client.repackaged.org.apache.commons.codec.binary.BaseNCodec:
    int MIME_CHUNK_SIZE -> MIME_CHUNK_SIZE
    int PEM_CHUNK_SIZE -> PEM_CHUNK_SIZE
    int MASK_8BITS -> MASK_8BITS
    byte PAD_DEFAULT -> PAD_DEFAULT
    byte PAD -> PAD
    int unencodedBlockSize -> a
    int encodedBlockSize -> b
    int lineLength -> lineLength
    int chunkSeparatorLength -> c
    byte[] buffer -> buffer
    int pos -> pos
    int readPos -> d
    boolean eof -> eof
    int currentLinePos -> currentLinePos
    int modulus -> modulus
    int getDefaultBufferSize() -> getDefaultBufferSize
    void ensureBufferSize(int) -> ensureBufferSize
    int readResults(byte[],int,int) -> c
    boolean isWhiteSpace(byte) -> isWhiteSpace
    void reset() -> a
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.String encodeAsString(byte[]) -> encodeAsString
    void encode(byte[],int,int) -> a
    void decode(byte[],int,int) -> b
    boolean isInAlphabet(byte) -> isInAlphabet
    boolean isInAlphabet(byte[],boolean) -> isInAlphabet
    boolean isInAlphabet(java.lang.String) -> isInAlphabet
    boolean containsAlphabetOrPad(byte[]) -> containsAlphabetOrPad
    long getEncodedLength(byte[]) -> getEncodedLength
com.google.api.client.repackaged.org.apache.commons.codec.binary.StringUtils -> com.google.api.client.repackaged.org.apache.commons.codec.binary.StringUtils:
    byte[] getBytesIso8859_1(java.lang.String) -> getBytesIso8859_1
    byte[] getBytesUsAscii(java.lang.String) -> getBytesUsAscii
    byte[] getBytesUtf16(java.lang.String) -> getBytesUtf16
    byte[] getBytesUtf16Be(java.lang.String) -> getBytesUtf16Be
    byte[] getBytesUtf16Le(java.lang.String) -> getBytesUtf16Le
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> getBytesUnchecked
    java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) -> a
    java.lang.String newString(byte[],java.lang.String) -> newString
    java.lang.String newStringIso8859_1(byte[]) -> newStringIso8859_1
    java.lang.String newStringUsAscii(byte[]) -> newStringUsAscii
    java.lang.String newStringUtf16(byte[]) -> newStringUtf16
    java.lang.String newStringUtf16Be(byte[]) -> newStringUtf16Be
    java.lang.String newStringUtf16Le(byte[]) -> newStringUtf16Le
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
com.google.api.client.testing.http.FixedClock -> com.google.api.client.testing.http.FixedClock:
    java.util.concurrent.atomic.AtomicLong currentTime -> a
    com.google.api.client.testing.http.FixedClock setTime(long) -> setTime
    long currentTimeMillis() -> currentTimeMillis
com.google.api.client.testing.http.HttpTesting -> com.google.api.client.testing.http.HttpTesting:
    java.lang.String SIMPLE_URL -> SIMPLE_URL
    com.google.api.client.http.GenericUrl SIMPLE_GENERIC_URL -> SIMPLE_GENERIC_URL
com.google.api.client.testing.http.MockHttpContent -> com.google.api.client.testing.http.MockHttpContent:
    long length -> a
    java.lang.String type -> b
    byte[] content -> c
    long getLength() -> getLength
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    boolean retrySupported() -> retrySupported
    byte[] getContent() -> getContent
    com.google.api.client.testing.http.MockHttpContent setContent(byte[]) -> setContent
    com.google.api.client.testing.http.MockHttpContent setLength(long) -> setLength
    com.google.api.client.testing.http.MockHttpContent setType(java.lang.String) -> setType
com.google.api.client.testing.http.MockHttpTransport -> com.google.api.client.testing.http.MockHttpTransport:
    java.util.Set supportedMethods -> b
    boolean supportsMethod(java.lang.String) -> supportsMethod
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    java.util.Set getSupportedMethods() -> getSupportedMethods
    com.google.api.client.testing.http.MockHttpTransport$Builder builder() -> builder
com.google.api.client.testing.http.MockHttpTransport$Builder -> com.google.api.client.testing.http.MockHttpTransport$Builder:
    java.util.Set supportedMethods -> a
    com.google.api.client.testing.http.MockHttpTransport build() -> build
    java.util.Set getSupportedMethods() -> getSupportedMethods
    com.google.api.client.testing.http.MockHttpTransport$Builder setSupportedMethods(java.util.Set) -> setSupportedMethods
com.google.api.client.testing.http.MockHttpUnsuccessfulResponseHandler -> com.google.api.client.testing.http.MockHttpUnsuccessfulResponseHandler:
    boolean isCalled -> a
    boolean successfullyHandleResponse -> b
    boolean isCalled() -> isCalled
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
com.google.api.client.testing.http.MockLowLevelHttpRequest -> com.google.api.client.testing.http.MockLowLevelHttpRequest:
    java.lang.String url -> a
    java.util.Map headersMap -> b
    com.google.api.client.testing.http.MockLowLevelHttpResponse response -> c
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
    java.lang.String getUrl() -> getUrl
    java.util.Map getHeaders() -> getHeaders
    java.lang.String getFirstHeaderValue(java.lang.String) -> getFirstHeaderValue
    java.util.List getHeaderValues(java.lang.String) -> getHeaderValues
    com.google.api.client.testing.http.MockLowLevelHttpRequest setUrl(java.lang.String) -> setUrl
    java.lang.String getContentAsString() -> getContentAsString
    com.google.api.client.testing.http.MockLowLevelHttpResponse getResponse() -> getResponse
    com.google.api.client.testing.http.MockLowLevelHttpRequest setResponse(com.google.api.client.testing.http.MockLowLevelHttpResponse) -> setResponse
com.google.api.client.testing.http.MockLowLevelHttpResponse -> com.google.api.client.testing.http.MockLowLevelHttpResponse:
    java.io.InputStream content -> a
    java.lang.String contentType -> b
    int statusCode -> c
    java.lang.String reasonPhrase -> d
    java.util.List headerNames -> e
    java.util.List headerValues -> f
    java.lang.String contentEncoding -> g
    long contentLength -> h
    boolean isDisconnected -> i
    com.google.api.client.testing.http.MockLowLevelHttpResponse addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContent(java.lang.String) -> setContent
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusLine() -> getStatusLine
    java.util.List getHeaderNames() -> getHeaderNames
    com.google.api.client.testing.http.MockLowLevelHttpResponse setHeaderNames(java.util.List) -> setHeaderNames
    java.util.List getHeaderValues() -> getHeaderValues
    com.google.api.client.testing.http.MockLowLevelHttpResponse setHeaderValues(java.util.List) -> setHeaderValues
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContent(java.io.InputStream) -> setContent
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentType(java.lang.String) -> setContentType
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentEncoding(java.lang.String) -> setContentEncoding
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentLength(long) -> setContentLength
    com.google.api.client.testing.http.MockLowLevelHttpResponse setStatusCode(int) -> setStatusCode
    com.google.api.client.testing.http.MockLowLevelHttpResponse setReasonPhrase(java.lang.String) -> setReasonPhrase
    void disconnect() -> disconnect
    boolean isDisconnected() -> isDisconnected
com.google.api.client.testing.http.apache.MockHttpClient -> com.google.api.client.testing.http.apache.MockHttpClient:
    int responseCode -> a
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    int getResponseCode() -> getResponseCode
    com.google.api.client.testing.http.apache.MockHttpClient setResponseCode(int) -> setResponseCode
com.google.api.client.testing.http.apache.MockHttpClient$1 -> il:
    com.google.api.client.testing.http.apache.MockHttpClient this$0 -> a
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
com.google.api.client.testing.http.javanet.MockHttpURLConnection -> com.google.api.client.testing.http.javanet.MockHttpURLConnection:
    boolean doOutputCalled -> a
    java.io.OutputStream outputStream -> b
    byte[] INPUT_BUF -> INPUT_BUF
    byte[] ERROR_BUF -> ERROR_BUF
    java.io.InputStream inputStream -> c
    java.io.InputStream errorStream -> d
    void disconnect() -> disconnect
    boolean usingProxy() -> usingProxy
    void connect() -> connect
    int getResponseCode() -> getResponseCode
    void setDoOutput(boolean) -> setDoOutput
    java.io.OutputStream getOutputStream() -> getOutputStream
    boolean doOutputCalled() -> doOutputCalled
    com.google.api.client.testing.http.javanet.MockHttpURLConnection setOutputStream(java.io.OutputStream) -> setOutputStream
    com.google.api.client.testing.http.javanet.MockHttpURLConnection setResponseCode(int) -> setResponseCode
    java.io.InputStream getInputStream() -> getInputStream
    java.io.InputStream getErrorStream() -> getErrorStream
com.google.api.client.testing.json.MockJsonFactory -> com.google.api.client.testing.json.MockJsonFactory:
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream,java.nio.charset.Charset) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,java.nio.charset.Charset) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
com.google.api.client.testing.json.MockJsonGenerator -> com.google.api.client.testing.json.MockJsonGenerator:
    com.google.api.client.json.JsonFactory factory -> a
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void flush() -> flush
    void close() -> close
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeString(java.lang.String) -> writeString
    void writeBoolean(boolean) -> writeBoolean
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
com.google.api.client.testing.json.MockJsonParser -> com.google.api.client.testing.json.MockJsonParser:
    boolean isClosed -> a
    com.google.api.client.json.JsonFactory factory -> b
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void close() -> close
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    boolean isClosed() -> isClosed
com.google.api.client.testing.util.LogRecordingHandler -> com.google.api.client.testing.util.LogRecordingHandler:
    java.util.List records -> a
    void publish(java.util.logging.LogRecord) -> publish
    void flush() -> flush
    void close() -> close
    java.util.List messages() -> messages
com.google.api.client.testing.util.MockBackOff -> com.google.api.client.testing.util.MockBackOff:
    long backOffMillis -> a
    int maxTries -> b
    int numTries -> c
    void reset() -> reset
    long nextBackOffMillis() -> nextBackOffMillis
    com.google.api.client.testing.util.MockBackOff setBackOffMillis(long) -> setBackOffMillis
    com.google.api.client.testing.util.MockBackOff setMaxTries(int) -> setMaxTries
    int getMaxTries() -> getMaxTries
    int getNumberOfTries() -> getNumberOfTries
com.google.api.client.testing.util.MockSleeper -> com.google.api.client.testing.util.MockSleeper:
    int count -> a
    long lastMillis -> b
    void sleep(long) -> sleep
    int getCount() -> getCount
    long getLastMillis() -> getLastMillis
com.google.api.client.testing.util.SecurityTestUtils -> com.google.api.client.testing.util.SecurityTestUtils:
    byte[] ENCODED_PRIVATE_KEY -> a
    byte[] ENCODED_PUBLIC_KEY -> b
    byte[] newEncodedRsaPrivateKeyBytes() -> newEncodedRsaPrivateKeyBytes
    byte[] newEncodedRsaPublicKeyBytes() -> newEncodedRsaPublicKeyBytes
    java.security.interfaces.RSAPrivateKey newRsaPrivateKey() -> newRsaPrivateKey
    java.security.interfaces.RSAPublicKey newRsaPublicKey() -> newRsaPublicKey
com.google.api.client.testing.util.TestableByteArrayInputStream -> com.google.api.client.testing.util.TestableByteArrayInputStream:
    boolean closed -> a
    void close() -> close
    byte[] getBuffer() -> getBuffer
    boolean isClosed() -> isClosed
com.google.api.client.testing.util.TestableByteArrayOutputStream -> com.google.api.client.testing.util.TestableByteArrayOutputStream:
    boolean closed -> a
    void close() -> close
    byte[] getBuffer() -> getBuffer
    boolean isClosed() -> isClosed
com.google.api.client.util.ArrayMap -> com.google.api.client.util.ArrayMap:
    int size -> a
    java.lang.Object[] data -> b
    com.google.api.client.util.ArrayMap create() -> create
    com.google.api.client.util.ArrayMap create(int) -> create
    com.google.api.client.util.ArrayMap of(java.lang.Object[]) -> of
    int size() -> size
    java.lang.Object getKey(int) -> getKey
    java.lang.Object getValue(int) -> getValue
    java.lang.Object set(int,java.lang.Object,java.lang.Object) -> set
    java.lang.Object set(int,java.lang.Object) -> set
    void add(java.lang.Object,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    int getIndexOfKey(java.lang.Object) -> getIndexOfKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void trim() -> trim
    void ensureCapacity(int) -> ensureCapacity
    void setDataCapacity(int) -> a
    void setData(int,java.lang.Object,java.lang.Object) -> a
    java.lang.Object valueAtDataIndex(int) -> b
    int getDataIndexOfKey(java.lang.Object) -> a
    java.lang.Object removeFromDataIndexOfKey(int) -> c
    void clear() -> clear
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    com.google.api.client.util.ArrayMap clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.client.util.ArrayMap$Entry -> im:
    int index -> b
    com.google.api.client.util.ArrayMap this$0 -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.api.client.util.ArrayMap$EntryIterator -> in:
    boolean removed -> b
    int nextIndex -> c
    com.google.api.client.util.ArrayMap this$0 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.ArrayMap$EntrySet -> io:
    com.google.api.client.util.ArrayMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.api.client.util.ArrayValueMap -> com.google.api.client.util.ArrayValueMap:
    java.util.Map keyMap -> a
    java.util.Map fieldMap -> b
    java.lang.Object destination -> c
    void setValues() -> setValues
    void put(java.lang.reflect.Field,java.lang.Class,java.lang.Object) -> put
    void put(java.lang.String,java.lang.Class,java.lang.Object) -> put
com.google.api.client.util.ArrayValueMap$ArrayValue -> ip:
    java.lang.Class componentType -> a
    java.util.ArrayList values -> b
    java.lang.Object toArray() -> a
    void addValue(java.lang.Class,java.lang.Object) -> a
com.google.api.client.util.BackOff -> com.google.api.client.util.BackOff:
    long STOP -> STOP
    com.google.api.client.util.BackOff ZERO_BACKOFF -> ZERO_BACKOFF
    com.google.api.client.util.BackOff STOP_BACKOFF -> STOP_BACKOFF
    void reset() -> reset
    long nextBackOffMillis() -> nextBackOffMillis
com.google.api.client.util.BackOff$1 -> iq:
    void reset() -> reset
    long nextBackOffMillis() -> nextBackOffMillis
com.google.api.client.util.BackOff$2 -> ir:
    void reset() -> reset
    long nextBackOffMillis() -> nextBackOffMillis
com.google.api.client.util.BackOffUtils -> com.google.api.client.util.BackOffUtils:
    boolean next(com.google.api.client.util.Sleeper,com.google.api.client.util.BackOff) -> next
com.google.api.client.util.Base64 -> com.google.api.client.util.Base64:
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] decodeBase64(byte[]) -> decodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
com.google.api.client.util.Beta -> com.google.api.client.util.Beta:
com.google.api.client.util.ByteArrayStreamingContent -> com.google.api.client.util.ByteArrayStreamingContent:
    byte[] byteArray -> a
    int offset -> b
    int length -> c
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.util.ByteCountingOutputStream -> is:
    long count -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
com.google.api.client.util.ByteStreams -> com.google.api.client.util.ByteStreams:
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    java.io.InputStream limit(java.io.InputStream,long) -> limit
    int read(java.io.InputStream,byte[],int,int) -> read
com.google.api.client.util.ByteStreams$LimitedInputStream -> it:
    long left -> a
    long mark -> b
    int available() -> available
    void mark(int) -> mark
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.google.api.client.util.Charsets -> com.google.api.client.util.Charsets:
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
com.google.api.client.util.ClassInfo -> com.google.api.client.util.ClassInfo:
    java.util.Map CACHE -> b
    java.util.Map CACHE_IGNORE_CASE -> c
    java.lang.Class clazz -> d
    boolean ignoreCase -> e
    java.util.IdentityHashMap nameToFieldInfoMap -> f
    java.util.List names -> a
    com.google.api.client.util.ClassInfo of(java.lang.Class) -> of
    com.google.api.client.util.ClassInfo of(java.lang.Class,boolean) -> of
    java.lang.Class getUnderlyingClass() -> getUnderlyingClass
    boolean getIgnoreCase() -> getIgnoreCase
    com.google.api.client.util.FieldInfo getFieldInfo(java.lang.String) -> getFieldInfo
    java.lang.reflect.Field getField(java.lang.String) -> getField
    boolean isEnum() -> isEnum
    java.util.Collection getNames() -> getNames
    java.util.Collection getFieldInfos() -> getFieldInfos
com.google.api.client.util.ClassInfo$1 -> iu:
    com.google.api.client.util.ClassInfo this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.api.client.util.Clock -> com.google.api.client.util.Clock:
    com.google.api.client.util.Clock SYSTEM -> SYSTEM
    long currentTimeMillis() -> currentTimeMillis
com.google.api.client.util.Clock$1 -> iv:
    long currentTimeMillis() -> currentTimeMillis
com.google.api.client.util.Collections2 -> com.google.api.client.util.Collections2:
    java.util.Collection cast(java.lang.Iterable) -> a
com.google.api.client.util.Data -> com.google.api.client.util.Data:
    java.lang.Boolean NULL_BOOLEAN -> NULL_BOOLEAN
    java.lang.String NULL_STRING -> NULL_STRING
    java.lang.Character NULL_CHARACTER -> NULL_CHARACTER
    java.lang.Byte NULL_BYTE -> NULL_BYTE
    java.lang.Short NULL_SHORT -> NULL_SHORT
    java.lang.Integer NULL_INTEGER -> NULL_INTEGER
    java.lang.Float NULL_FLOAT -> NULL_FLOAT
    java.lang.Long NULL_LONG -> NULL_LONG
    java.lang.Double NULL_DOUBLE -> NULL_DOUBLE
    java.math.BigInteger NULL_BIG_INTEGER -> NULL_BIG_INTEGER
    java.math.BigDecimal NULL_BIG_DECIMAL -> NULL_BIG_DECIMAL
    com.google.api.client.util.DateTime NULL_DATE_TIME -> NULL_DATE_TIME
    java.util.concurrent.ConcurrentHashMap NULL_CACHE -> a
    java.lang.Object nullOf(java.lang.Class) -> nullOf
    boolean isNull(java.lang.Object) -> isNull
    java.util.Map mapOf(java.lang.Object) -> mapOf
    java.lang.Object clone(java.lang.Object) -> clone
    void deepCopy(java.lang.Object,java.lang.Object) -> deepCopy
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isValueOfPrimitiveType(java.lang.Object) -> isValueOfPrimitiveType
    java.lang.Object parsePrimitiveValue(java.lang.reflect.Type,java.lang.String) -> parsePrimitiveValue
    java.util.Collection newCollectionInstance(java.lang.reflect.Type) -> newCollectionInstance
    java.util.Map newMapInstance(java.lang.Class) -> newMapInstance
    java.lang.reflect.Type resolveWildcardTypeOrTypeVariable(java.util.List,java.lang.reflect.Type) -> resolveWildcardTypeOrTypeVariable
com.google.api.client.util.DataMap -> iw:
    java.lang.Object object -> a
    com.google.api.client.util.ClassInfo classInfo -> b
    com.google.api.client.util.DataMap$EntrySet entrySet() -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.google.api.client.util.DataMap$Entry -> ix:
    java.lang.Object fieldValue -> b
    com.google.api.client.util.FieldInfo fieldInfo -> c
    com.google.api.client.util.DataMap this$0 -> a
    java.lang.String getKey() -> a
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object getKey() -> getKey
com.google.api.client.util.DataMap$EntryIterator -> iy:
    int nextKeyIndex -> b
    com.google.api.client.util.FieldInfo nextFieldInfo -> c
    java.lang.Object nextFieldValue -> d
    boolean isRemoved -> e
    boolean isComputed -> f
    com.google.api.client.util.FieldInfo currentFieldInfo -> g
    com.google.api.client.util.DataMap this$0 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.DataMap$EntrySet -> iz:
    com.google.api.client.util.DataMap this$0 -> a
    com.google.api.client.util.DataMap$EntryIterator iterator() -> a
    int size() -> size
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.google.api.client.util.DateTime -> com.google.api.client.util.DateTime:
    long serialVersionUID -> serialVersionUID
    java.util.TimeZone GMT -> a
    long value -> b
    boolean dateOnly -> c
    int tzShift -> d
    long getValue() -> getValue
    boolean isDateOnly() -> isDateOnly
    int getTimeZoneShift() -> getTimeZoneShift
    java.lang.String toStringRfc3339() -> toStringRfc3339
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.api.client.util.DateTime parseRfc3339(java.lang.String) -> parseRfc3339
    void appendInt(java.lang.StringBuilder,int,int) -> a
com.google.api.client.util.ExponentialBackOff -> com.google.api.client.util.ExponentialBackOff:
    int DEFAULT_INITIAL_INTERVAL_MILLIS -> DEFAULT_INITIAL_INTERVAL_MILLIS
    double DEFAULT_RANDOMIZATION_FACTOR -> DEFAULT_RANDOMIZATION_FACTOR
    double DEFAULT_MULTIPLIER -> DEFAULT_MULTIPLIER
    int DEFAULT_MAX_INTERVAL_MILLIS -> DEFAULT_MAX_INTERVAL_MILLIS
    int DEFAULT_MAX_ELAPSED_TIME_MILLIS -> DEFAULT_MAX_ELAPSED_TIME_MILLIS
    int currentIntervalMillis -> b
    int initialIntervalMillis -> c
    double randomizationFactor -> d
    double multiplier -> e
    int maxIntervalMillis -> f
    long startTimeNanos -> a
    int maxElapsedTimeMillis -> g
    com.google.api.client.util.NanoClock nanoClock -> h
    void reset() -> reset
    long nextBackOffMillis() -> nextBackOffMillis
    int getInitialIntervalMillis() -> getInitialIntervalMillis
    double getRandomizationFactor() -> getRandomizationFactor
    int getCurrentIntervalMillis() -> getCurrentIntervalMillis
    double getMultiplier() -> getMultiplier
    int getMaxIntervalMillis() -> getMaxIntervalMillis
    int getMaxElapsedTimeMillis() -> getMaxElapsedTimeMillis
    long getElapsedTimeMillis() -> getElapsedTimeMillis
com.google.api.client.util.ExponentialBackOff$Builder -> com.google.api.client.util.ExponentialBackOff$Builder:
    int initialIntervalMillis -> a
    double randomizationFactor -> b
    double multiplier -> c
    int maxIntervalMillis -> d
    int maxElapsedTimeMillis -> e
    com.google.api.client.util.NanoClock nanoClock -> f
    com.google.api.client.util.ExponentialBackOff build() -> build
    int getInitialIntervalMillis() -> getInitialIntervalMillis
    com.google.api.client.util.ExponentialBackOff$Builder setInitialIntervalMillis(int) -> setInitialIntervalMillis
    double getRandomizationFactor() -> getRandomizationFactor
    com.google.api.client.util.ExponentialBackOff$Builder setRandomizationFactor(double) -> setRandomizationFactor
    double getMultiplier() -> getMultiplier
    com.google.api.client.util.ExponentialBackOff$Builder setMultiplier(double) -> setMultiplier
    int getMaxIntervalMillis() -> getMaxIntervalMillis
    com.google.api.client.util.ExponentialBackOff$Builder setMaxIntervalMillis(int) -> setMaxIntervalMillis
    int getMaxElapsedTimeMillis() -> getMaxElapsedTimeMillis
    com.google.api.client.util.ExponentialBackOff$Builder setMaxElapsedTimeMillis(int) -> setMaxElapsedTimeMillis
    com.google.api.client.util.NanoClock getNanoClock() -> getNanoClock
    com.google.api.client.util.ExponentialBackOff$Builder setNanoClock(com.google.api.client.util.NanoClock) -> setNanoClock
com.google.api.client.util.FieldInfo -> com.google.api.client.util.FieldInfo:
    java.util.Map CACHE -> a
    boolean isPrimitive -> b
    java.lang.reflect.Field field -> c
    java.lang.String name -> d
    com.google.api.client.util.FieldInfo of(java.lang.Enum) -> of
    com.google.api.client.util.FieldInfo of(java.lang.reflect.Field) -> of
    java.lang.reflect.Field getField() -> getField
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    boolean isFinal() -> isFinal
    boolean isPrimitive() -> isPrimitive
    java.lang.Object getValue(java.lang.Object) -> getValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    com.google.api.client.util.ClassInfo getClassInfo() -> getClassInfo
    java.lang.Enum enumValue() -> enumValue
    java.lang.Object getFieldValue(java.lang.reflect.Field,java.lang.Object) -> getFieldValue
    void setFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> setFieldValue
com.google.api.client.util.GenericData -> com.google.api.client.util.GenericData:
    java.util.Map unknownFields -> c
    com.google.api.client.util.ClassInfo classInfo -> d
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set entrySet() -> entrySet
    com.google.api.client.util.GenericData clone() -> clone
    java.util.Map getUnknownKeys() -> getUnknownKeys
    void setUnknownKeys(java.util.Map) -> setUnknownKeys
    com.google.api.client.util.ClassInfo getClassInfo() -> getClassInfo
    java.lang.Object clone() -> clone
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.google.api.client.util.GenericData$EntryIterator -> iA:
    boolean startedUnknown -> b
    java.util.Iterator fieldIterator -> c
    java.util.Iterator unknownIterator -> d
    com.google.api.client.util.GenericData this$0 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.GenericData$EntrySet -> iB:
    com.google.api.client.util.DataMap$EntrySet dataEntrySet -> b
    com.google.api.client.util.GenericData this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
com.google.api.client.util.GenericData$Flags -> com.google.api.client.util.GenericData$Flags:
    com.google.api.client.util.GenericData$Flags IGNORE_CASE -> IGNORE_CASE
    com.google.api.client.util.GenericData$Flags[] $VALUES -> a
    com.google.api.client.util.GenericData$Flags[] values() -> values
    com.google.api.client.util.GenericData$Flags valueOf(java.lang.String) -> valueOf
com.google.api.client.util.IOUtils -> com.google.api.client.util.IOUtils:
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    void copy(java.io.InputStream,java.io.OutputStream,boolean) -> copy
    long computeLength(com.google.api.client.util.StreamingContent) -> computeLength
    byte[] serialize(java.lang.Object) -> serialize
    void serialize(java.lang.Object,java.io.OutputStream) -> serialize
    java.io.Serializable deserialize(byte[]) -> deserialize
    java.io.Serializable deserialize(java.io.InputStream) -> deserialize
    boolean isSymbolicLink(java.io.File) -> isSymbolicLink
com.google.api.client.util.Joiner -> com.google.api.client.util.Joiner:
    com.google.api.client.repackaged.com.google.common.base.Joiner wrapped -> a
    com.google.api.client.util.Joiner on(char) -> on
    java.lang.String join(java.lang.Iterable) -> join
com.google.api.client.util.Key -> com.google.api.client.util.Key:
    java.lang.String value() -> value
com.google.api.client.util.Lists -> com.google.api.client.util.Lists:
    java.util.ArrayList newArrayList() -> newArrayList
    java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
com.google.api.client.util.LoggingByteArrayOutputStream -> com.google.api.client.util.LoggingByteArrayOutputStream:
    int bytesWritten -> a
    int maximumBytesToLog -> b
    boolean closed -> c
    java.util.logging.Level loggingLevel -> d
    java.util.logging.Logger logger -> e
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    int getMaximumBytesToLog() -> getMaximumBytesToLog
    int getBytesWritten() -> getBytesWritten
    void appendBytes(java.lang.StringBuilder,int) -> a
com.google.api.client.util.LoggingInputStream -> com.google.api.client.util.LoggingInputStream:
    com.google.api.client.util.LoggingByteArrayOutputStream logStream -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
    com.google.api.client.util.LoggingByteArrayOutputStream getLogStream() -> getLogStream
com.google.api.client.util.LoggingOutputStream -> com.google.api.client.util.LoggingOutputStream:
    com.google.api.client.util.LoggingByteArrayOutputStream logStream -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    com.google.api.client.util.LoggingByteArrayOutputStream getLogStream() -> getLogStream
com.google.api.client.util.LoggingStreamingContent -> com.google.api.client.util.LoggingStreamingContent:
    com.google.api.client.util.StreamingContent content -> a
    int contentLoggingLimit -> b
    java.util.logging.Level loggingLevel -> c
    java.util.logging.Logger logger -> d
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.util.Maps -> com.google.api.client.util.Maps:
    java.util.HashMap newHashMap() -> newHashMap
    java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    java.util.TreeMap newTreeMap() -> newTreeMap
com.google.api.client.util.NanoClock -> com.google.api.client.util.NanoClock:
    com.google.api.client.util.NanoClock SYSTEM -> SYSTEM
    long nanoTime() -> nanoTime
com.google.api.client.util.NanoClock$1 -> iC:
    long nanoTime() -> nanoTime
com.google.api.client.util.NullValue -> com.google.api.client.util.NullValue:
com.google.api.client.util.ObjectParser -> com.google.api.client.util.ObjectParser:
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
com.google.api.client.util.Objects -> com.google.api.client.util.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    com.google.api.client.util.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.google.api.client.util.Objects$ToStringHelper -> com.google.api.client.util.Objects$ToStringHelper:
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper wrapped -> a
    com.google.api.client.util.Objects$ToStringHelper omitNullValues() -> omitNullValues
    com.google.api.client.util.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    java.lang.String toString() -> toString
com.google.api.client.util.PemReader -> com.google.api.client.util.PemReader:
    java.util.regex.Pattern BEGIN_PATTERN -> a
    java.util.regex.Pattern END_PATTERN -> b
    java.io.BufferedReader reader -> c
    com.google.api.client.util.PemReader$Section readNextSection() -> readNextSection
    com.google.api.client.util.PemReader$Section readNextSection(java.lang.String) -> readNextSection
    com.google.api.client.util.PemReader$Section readFirstSectionAndClose(java.io.Reader) -> readFirstSectionAndClose
    com.google.api.client.util.PemReader$Section readFirstSectionAndClose(java.io.Reader,java.lang.String) -> readFirstSectionAndClose
    void close() -> close
com.google.api.client.util.PemReader$Section -> com.google.api.client.util.PemReader$Section:
    java.lang.String title -> a
    byte[] base64decodedBytes -> b
    java.lang.String getTitle() -> getTitle
    byte[] getBase64DecodedBytes() -> getBase64DecodedBytes
com.google.api.client.util.Preconditions -> com.google.api.client.util.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
com.google.api.client.util.SecurityUtils -> com.google.api.client.util.SecurityUtils:
    java.security.KeyStore getDefaultKeyStore() -> getDefaultKeyStore
    java.security.KeyStore getJavaKeyStore() -> getJavaKeyStore
    java.security.KeyStore getPkcs12KeyStore() -> getPkcs12KeyStore
    void loadKeyStore(java.security.KeyStore,java.io.InputStream,java.lang.String) -> loadKeyStore
    java.security.PrivateKey getPrivateKey(java.security.KeyStore,java.lang.String,java.lang.String) -> getPrivateKey
    java.security.PrivateKey loadPrivateKeyFromKeyStore(java.security.KeyStore,java.io.InputStream,java.lang.String,java.lang.String,java.lang.String) -> loadPrivateKeyFromKeyStore
    java.security.KeyFactory getRsaKeyFactory() -> getRsaKeyFactory
    java.security.Signature getSha1WithRsaSignatureAlgorithm() -> getSha1WithRsaSignatureAlgorithm
    java.security.Signature getSha256WithRsaSignatureAlgorithm() -> getSha256WithRsaSignatureAlgorithm
    byte[] sign(java.security.Signature,java.security.PrivateKey,byte[]) -> sign
    boolean verify(java.security.Signature,java.security.PublicKey,byte[],byte[]) -> verify
    java.security.cert.CertificateFactory getX509CertificateFactory() -> getX509CertificateFactory
    void loadKeyStoreFromCertificates(java.security.KeyStore,java.security.cert.CertificateFactory,java.io.InputStream) -> loadKeyStoreFromCertificates
com.google.api.client.util.Sets -> com.google.api.client.util.Sets:
    java.util.HashSet newHashSet() -> newHashSet
    java.util.TreeSet newTreeSet() -> newTreeSet
com.google.api.client.util.Sleeper -> com.google.api.client.util.Sleeper:
    com.google.api.client.util.Sleeper DEFAULT -> DEFAULT
    void sleep(long) -> sleep
com.google.api.client.util.Sleeper$1 -> iD:
    void sleep(long) -> sleep
com.google.api.client.util.SslUtils -> com.google.api.client.util.SslUtils:
    javax.net.ssl.SSLContext getSslContext() -> getSslContext
    javax.net.ssl.SSLContext getTlsSslContext() -> getTlsSslContext
    javax.net.ssl.TrustManagerFactory getDefaultTrustManagerFactory() -> getDefaultTrustManagerFactory
    javax.net.ssl.TrustManagerFactory getPkixTrustManagerFactory() -> getPkixTrustManagerFactory
    javax.net.ssl.KeyManagerFactory getDefaultKeyManagerFactory() -> getDefaultKeyManagerFactory
    javax.net.ssl.KeyManagerFactory getPkixKeyManagerFactory() -> getPkixKeyManagerFactory
    javax.net.ssl.SSLContext initSslContext(javax.net.ssl.SSLContext,java.security.KeyStore,javax.net.ssl.TrustManagerFactory) -> initSslContext
    javax.net.ssl.SSLContext trustAllSSLContext() -> trustAllSSLContext
    javax.net.ssl.HostnameVerifier trustAllHostnameVerifier() -> trustAllHostnameVerifier
com.google.api.client.util.SslUtils$1 -> iE:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.google.api.client.util.SslUtils$2 -> iF:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.google.api.client.util.StreamingContent -> com.google.api.client.util.StreamingContent:
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.util.StringUtils -> com.google.api.client.util.StringUtils:
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
com.google.api.client.util.Strings -> com.google.api.client.util.Strings:
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
com.google.api.client.util.Throwables -> com.google.api.client.util.Throwables:
    java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
com.google.api.client.util.Types -> com.google.api.client.util.Types:
    java.lang.reflect.ParameterizedType getSuperParameterizedType(java.lang.reflect.Type,java.lang.Class) -> getSuperParameterizedType
    boolean isAssignableToOrFrom(java.lang.Class,java.lang.Class) -> isAssignableToOrFrom
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.IllegalArgumentException handleExceptionForNewInstance(java.lang.Exception,java.lang.Class) -> a
    boolean isArray(java.lang.reflect.Type) -> isArray
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.Class getRawClass(java.lang.reflect.ParameterizedType) -> getRawClass
    java.lang.reflect.Type getBound(java.lang.reflect.WildcardType) -> getBound
    java.lang.reflect.Type resolveTypeVariable(java.util.List,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    java.lang.Class getRawArrayComponentType(java.util.List,java.lang.reflect.Type) -> getRawArrayComponentType
    java.lang.reflect.Type getIterableParameter(java.lang.reflect.Type) -> getIterableParameter
    java.lang.reflect.Type getMapValueParameter(java.lang.reflect.Type) -> getMapValueParameter
    java.lang.reflect.Type getActualParameterAtPosition(java.lang.reflect.Type,java.lang.Class,int) -> a
    java.lang.Iterable iterableOf(java.lang.Object) -> iterableOf
    java.lang.Object toArray(java.util.Collection,java.lang.Class) -> toArray
com.google.api.client.util.Types$1 -> iG:
    java.lang.Object val$value -> a
    java.util.Iterator iterator() -> iterator
com.google.api.client.util.Types$1$1 -> iH:
    int length -> a
    int index -> b
    com.google.api.client.util.Types$1 this$0 -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.api.client.util.Value -> com.google.api.client.util.Value:
    java.lang.String value() -> value
com.google.api.client.util.escape.CharEscapers -> com.google.api.client.util.escape.CharEscapers:
    com.google.api.client.util.escape.Escaper URI_ESCAPER -> a
    com.google.api.client.util.escape.Escaper URI_PATH_ESCAPER -> b
    com.google.api.client.util.escape.Escaper URI_USERINFO_ESCAPER -> c
    com.google.api.client.util.escape.Escaper URI_QUERY_STRING_ESCAPER -> d
    java.lang.String escapeUri(java.lang.String) -> escapeUri
    java.lang.String decodeUri(java.lang.String) -> decodeUri
    java.lang.String escapeUriPath(java.lang.String) -> escapeUriPath
    java.lang.String escapeUriUserInfo(java.lang.String) -> escapeUriUserInfo
    java.lang.String escapeUriQuery(java.lang.String) -> escapeUriQuery
com.google.api.client.util.escape.Escaper -> com.google.api.client.util.escape.Escaper:
    java.lang.String escape(java.lang.String) -> escape
com.google.api.client.util.escape.PercentEscaper -> com.google.api.client.util.escape.PercentEscaper:
    java.lang.String SAFECHARS_URLENCODER -> SAFECHARS_URLENCODER
    java.lang.String SAFEPATHCHARS_URLENCODER -> SAFEPATHCHARS_URLENCODER
    java.lang.String SAFEUSERINFOCHARS_URLENCODER -> SAFEUSERINFOCHARS_URLENCODER
    java.lang.String SAFEQUERYSTRINGCHARS_URLENCODER -> SAFEQUERYSTRINGCHARS_URLENCODER
    char[] URI_ESCAPED_SPACE -> a
    char[] UPPER_HEX_DIGITS -> b
    boolean plusForSpace -> c
    boolean[] safeOctets -> d
    boolean[] createSafeOctets(java.lang.String) -> a
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(int) -> escape
com.google.api.client.util.escape.Platform -> iI:
    java.lang.ThreadLocal DEST_TL -> a
    char[] charBufferFromThreadLocal() -> a
com.google.api.client.util.escape.Platform$1 -> iJ:
    java.lang.Object initialValue() -> initialValue
com.google.api.client.util.escape.UnicodeEscaper -> com.google.api.client.util.escape.UnicodeEscaper:
    char[] escape(int) -> escape
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    char[] growBuffer(char[],int,int) -> a
com.google.api.client.util.store.AbstractDataStore -> com.google.api.client.util.store.AbstractDataStore:
    com.google.api.client.util.store.DataStoreFactory dataStoreFactory -> a
    java.lang.String id -> b
    com.google.api.client.util.store.DataStoreFactory getDataStoreFactory() -> getDataStoreFactory
    java.lang.String getId() -> getId
    boolean containsKey(java.lang.String) -> containsKey
    boolean containsValue(java.io.Serializable) -> containsValue
    boolean isEmpty() -> isEmpty
    int size() -> size
com.google.api.client.util.store.AbstractDataStoreFactory -> com.google.api.client.util.store.AbstractDataStoreFactory:
    java.util.concurrent.locks.Lock lock -> a
    java.util.Map dataStoreMap -> b
    java.util.regex.Pattern ID_PATTERN -> c
    com.google.api.client.util.store.DataStore getDataStore(java.lang.String) -> getDataStore
    com.google.api.client.util.store.DataStore createDataStore(java.lang.String) -> createDataStore
com.google.api.client.util.store.AbstractMemoryDataStore -> iK:
    java.util.concurrent.locks.Lock lock -> b
    java.util.HashMap keyValueMap -> a
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.io.Serializable get(java.lang.String) -> get
    com.google.api.client.util.store.DataStore set(java.lang.String,java.io.Serializable) -> set
    com.google.api.client.util.store.DataStore delete(java.lang.String) -> delete
    com.google.api.client.util.store.DataStore clear() -> clear
    boolean containsKey(java.lang.String) -> containsKey
    boolean containsValue(java.io.Serializable) -> containsValue
    boolean isEmpty() -> isEmpty
    int size() -> size
    void save() -> a
    java.lang.String toString() -> toString
com.google.api.client.util.store.DataStore -> com.google.api.client.util.store.DataStore:
    com.google.api.client.util.store.DataStoreFactory getDataStoreFactory() -> getDataStoreFactory
    java.lang.String getId() -> getId
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.String) -> containsKey
    boolean containsValue(java.io.Serializable) -> containsValue
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.io.Serializable get(java.lang.String) -> get
    com.google.api.client.util.store.DataStore set(java.lang.String,java.io.Serializable) -> set
    com.google.api.client.util.store.DataStore clear() -> clear
    com.google.api.client.util.store.DataStore delete(java.lang.String) -> delete
com.google.api.client.util.store.DataStoreFactory -> com.google.api.client.util.store.DataStoreFactory:
    com.google.api.client.util.store.DataStore getDataStore(java.lang.String) -> getDataStore
com.google.api.client.util.store.DataStoreUtils -> com.google.api.client.util.store.DataStoreUtils:
    java.lang.String toString(com.google.api.client.util.store.DataStore) -> toString
com.google.api.client.util.store.FileDataStoreFactory -> com.google.api.client.util.store.FileDataStoreFactory:
    java.util.logging.Logger LOGGER -> a
    java.io.File dataDirectory -> b
    java.io.File getDataDirectory() -> getDataDirectory
    com.google.api.client.util.store.DataStore createDataStore(java.lang.String) -> createDataStore
com.google.api.client.util.store.FileDataStoreFactory$FileDataStore -> iL:
    java.io.File dataFile -> b
    void save() -> a
    com.google.api.client.util.store.DataStoreFactory getDataStoreFactory() -> getDataStoreFactory
com.google.api.client.util.store.MemoryDataStoreFactory -> com.google.api.client.util.store.MemoryDataStoreFactory:
    com.google.api.client.util.store.DataStore createDataStore(java.lang.String) -> createDataStore
    com.google.api.client.util.store.MemoryDataStoreFactory getDefaultInstance() -> getDefaultInstance
com.google.api.client.util.store.MemoryDataStoreFactory$InstanceHolder -> iM:
    com.google.api.client.util.store.MemoryDataStoreFactory INSTANCE -> a
com.google.api.client.util.store.MemoryDataStoreFactory$MemoryDataStore -> iN:
    com.google.api.client.util.store.DataStoreFactory getDataStoreFactory() -> getDataStoreFactory
com.google.api.services.freebase.Freebase -> com.google.api.services.freebase.Freebase:
    java.lang.String DEFAULT_ROOT_URL -> DEFAULT_ROOT_URL
    java.lang.String DEFAULT_SERVICE_PATH -> DEFAULT_SERVICE_PATH
    java.lang.String DEFAULT_BASE_URL -> DEFAULT_BASE_URL
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
    com.google.api.services.freebase.Freebase$Text text() -> text
    com.google.api.services.freebase.Freebase$Topic topic() -> topic
    com.google.api.services.freebase.Freebase$Image image(java.util.List) -> image
    com.google.api.services.freebase.Freebase$Mqlread mqlread(java.lang.String,java.lang.Class) -> mqlread
    com.google.api.services.freebase.Freebase$Mqlread mqlread(java.lang.String,java.lang.Class,java.lang.reflect.Type) -> mqlread
    com.google.api.services.freebase.Freebase$Mqlwrite mqlwrite(java.lang.String) -> mqlwrite
com.google.api.services.freebase.Freebase$Builder -> com.google.api.services.freebase.Freebase$Builder:
    com.google.api.services.freebase.Freebase build() -> build
    com.google.api.services.freebase.Freebase$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.services.freebase.Freebase$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.services.freebase.Freebase$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.services.freebase.Freebase$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.services.freebase.Freebase$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.services.freebase.Freebase$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.services.freebase.Freebase$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.services.freebase.Freebase$Builder setFreebaseRequestInitializer(com.google.api.services.freebase.FreebaseRequestInitializer) -> setFreebaseRequestInitializer
    com.google.api.services.freebase.Freebase$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient build() -> build
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
com.google.api.services.freebase.Freebase$Image -> com.google.api.services.freebase.Freebase$Image:
    java.util.regex.Pattern FALLBACKID_PATTERN -> b
    java.util.List id -> id
    java.lang.Long maxwidth -> maxwidth
    java.lang.Long maxheight -> maxheight
    java.lang.String fallbackid -> fallbackid
    java.lang.Boolean pad -> pad
    java.lang.String mode -> mode
    com.google.api.services.freebase.Freebase this$0 -> a
    void executeMediaAndDownloadTo(java.io.OutputStream) -> executeMediaAndDownloadTo
    java.io.InputStream executeMediaAsInputStream() -> executeMediaAsInputStream
    com.google.api.client.http.HttpResponse executeMedia() -> executeMedia
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Image setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Image setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Image setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Image setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Image setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Image setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Image setUserIp(java.lang.String) -> setUserIp
    java.util.List getId() -> getId
    com.google.api.services.freebase.Freebase$Image setId(java.util.List) -> setId
    java.lang.Long getMaxwidth() -> getMaxwidth
    com.google.api.services.freebase.Freebase$Image setMaxwidth(java.lang.Long) -> setMaxwidth
    java.lang.Long getMaxheight() -> getMaxheight
    com.google.api.services.freebase.Freebase$Image setMaxheight(java.lang.Long) -> setMaxheight
    java.lang.String getFallbackid() -> getFallbackid
    com.google.api.services.freebase.Freebase$Image setFallbackid(java.lang.String) -> setFallbackid
    java.lang.Boolean getPad() -> getPad
    com.google.api.services.freebase.Freebase$Image setPad(java.lang.Boolean) -> setPad
    boolean isPad() -> isPad
    java.lang.String getMode() -> getMode
    com.google.api.services.freebase.Freebase$Image setMode(java.lang.String) -> setMode
    com.google.api.services.freebase.Freebase$Image set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.Freebase$Mqlread -> com.google.api.services.freebase.Freebase$Mqlread:
    java.util.regex.Pattern CALLBACK_PATTERN -> b
    java.lang.reflect.Type responseType -> e
    java.lang.String query -> query
    java.lang.String lang -> lang
    java.lang.Boolean htmlEscape -> htmlEscape
    java.lang.Long indent -> indent
    java.lang.String uniquenessFailure -> uniquenessFailure
    java.lang.String dateline -> dateline
    java.lang.String cursor -> cursor
    java.lang.String callback -> callback
    java.lang.Boolean cost -> cost
    java.lang.String asOfTime -> asOfTime
    com.google.api.services.freebase.Freebase this$0 -> a
    java.lang.reflect.Type getResponseType() -> getResponseType
    void setResponseType(java.lang.reflect.Type) -> setResponseType
    java.lang.Object execute() -> execute
    void executeMediaAndDownloadTo(java.io.OutputStream) -> executeMediaAndDownloadTo
    java.io.InputStream executeMediaAsInputStream() -> executeMediaAsInputStream
    com.google.api.client.http.HttpResponse executeMedia() -> executeMedia
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Mqlread setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Mqlread setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Mqlread setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Mqlread setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Mqlread setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Mqlread setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Mqlread setUserIp(java.lang.String) -> setUserIp
    java.lang.String getQuery() -> getQuery
    com.google.api.services.freebase.Freebase$Mqlread setQuery(java.lang.String) -> setQuery
    java.lang.String getLang() -> getLang
    com.google.api.services.freebase.Freebase$Mqlread setLang(java.lang.String) -> setLang
    java.lang.Boolean getHtmlEscape() -> getHtmlEscape
    com.google.api.services.freebase.Freebase$Mqlread setHtmlEscape(java.lang.Boolean) -> setHtmlEscape
    boolean isHtmlEscape() -> isHtmlEscape
    java.lang.Long getIndent() -> getIndent
    com.google.api.services.freebase.Freebase$Mqlread setIndent(java.lang.Long) -> setIndent
    java.lang.String getUniquenessFailure() -> getUniquenessFailure
    com.google.api.services.freebase.Freebase$Mqlread setUniquenessFailure(java.lang.String) -> setUniquenessFailure
    java.lang.String getDateline() -> getDateline
    com.google.api.services.freebase.Freebase$Mqlread setDateline(java.lang.String) -> setDateline
    java.lang.String getCursor() -> getCursor
    com.google.api.services.freebase.Freebase$Mqlread setCursor(java.lang.String) -> setCursor
    java.lang.String getCallback() -> getCallback
    com.google.api.services.freebase.Freebase$Mqlread setCallback(java.lang.String) -> setCallback
    java.lang.Boolean getCost() -> getCost
    com.google.api.services.freebase.Freebase$Mqlread setCost(java.lang.Boolean) -> setCost
    boolean isCost() -> isCost
    java.lang.String getAsOfTime() -> getAsOfTime
    com.google.api.services.freebase.Freebase$Mqlread setAsOfTime(java.lang.String) -> setAsOfTime
    com.google.api.services.freebase.Freebase$Mqlread set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.Freebase$Mqlwrite -> com.google.api.services.freebase.Freebase$Mqlwrite:
    java.util.regex.Pattern CALLBACK_PATTERN -> b
    java.lang.String query -> query
    java.lang.String callback -> callback
    java.lang.String dateline -> dateline
    java.lang.Long indent -> indent
    java.lang.String usePermissionOf -> usePermissionOf
    com.google.api.services.freebase.Freebase this$0 -> a
    void executeMediaAndDownloadTo(java.io.OutputStream) -> executeMediaAndDownloadTo
    java.io.InputStream executeMediaAsInputStream() -> executeMediaAsInputStream
    com.google.api.client.http.HttpResponse executeMedia() -> executeMedia
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Mqlwrite setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Mqlwrite setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Mqlwrite setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Mqlwrite setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Mqlwrite setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Mqlwrite setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Mqlwrite setUserIp(java.lang.String) -> setUserIp
    java.lang.String getQuery() -> getQuery
    com.google.api.services.freebase.Freebase$Mqlwrite setQuery(java.lang.String) -> setQuery
    java.lang.String getCallback() -> getCallback
    com.google.api.services.freebase.Freebase$Mqlwrite setCallback(java.lang.String) -> setCallback
    java.lang.String getDateline() -> getDateline
    com.google.api.services.freebase.Freebase$Mqlwrite setDateline(java.lang.String) -> setDateline
    java.lang.Long getIndent() -> getIndent
    com.google.api.services.freebase.Freebase$Mqlwrite setIndent(java.lang.Long) -> setIndent
    java.lang.String getUsePermissionOf() -> getUsePermissionOf
    com.google.api.services.freebase.Freebase$Mqlwrite setUsePermissionOf(java.lang.String) -> setUsePermissionOf
    com.google.api.services.freebase.Freebase$Mqlwrite set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.Freebase$Text -> com.google.api.services.freebase.Freebase$Text:
    com.google.api.services.freebase.Freebase this$0 -> a
    com.google.api.services.freebase.Freebase$Text$Get get(java.util.List) -> get
com.google.api.services.freebase.Freebase$Text$Get -> com.google.api.services.freebase.Freebase$Text$Get:
    java.util.List id -> id
    java.lang.Long maxlength -> maxlength
    java.lang.String format -> format
    com.google.api.services.freebase.Freebase$Text this$1 -> a
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Text$Get setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Text$Get setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Text$Get setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Text$Get setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Text$Get setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Text$Get setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Text$Get setUserIp(java.lang.String) -> setUserIp
    java.util.List getId() -> getId
    com.google.api.services.freebase.Freebase$Text$Get setId(java.util.List) -> setId
    java.lang.Long getMaxlength() -> getMaxlength
    com.google.api.services.freebase.Freebase$Text$Get setMaxlength(java.lang.Long) -> setMaxlength
    java.lang.String getFormat() -> getFormat
    com.google.api.services.freebase.Freebase$Text$Get setFormat(java.lang.String) -> setFormat
    com.google.api.services.freebase.Freebase$Text$Get set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.Freebase$Topic -> com.google.api.services.freebase.Freebase$Topic:
    com.google.api.services.freebase.Freebase this$0 -> a
    com.google.api.services.freebase.Freebase$Topic$Lookup lookup(java.util.List) -> lookup
com.google.api.services.freebase.Freebase$Topic$Lookup -> com.google.api.services.freebase.Freebase$Topic$Lookup:
    java.util.List id -> id
    java.lang.String lang -> lang
    java.lang.String dateline -> dateline
    java.util.List filter -> filter
    java.lang.Boolean raw -> raw
    java.lang.Long limit -> limit
    com.google.api.services.freebase.Freebase$Topic this$1 -> a
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Topic$Lookup setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Topic$Lookup setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Topic$Lookup setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Topic$Lookup setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Topic$Lookup setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Topic$Lookup setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Topic$Lookup setUserIp(java.lang.String) -> setUserIp
    java.util.List getId() -> getId
    com.google.api.services.freebase.Freebase$Topic$Lookup setId(java.util.List) -> setId
    java.lang.String getLang() -> getLang
    com.google.api.services.freebase.Freebase$Topic$Lookup setLang(java.lang.String) -> setLang
    java.lang.String getDateline() -> getDateline
    com.google.api.services.freebase.Freebase$Topic$Lookup setDateline(java.lang.String) -> setDateline
    java.util.List getFilter() -> getFilter
    com.google.api.services.freebase.Freebase$Topic$Lookup setFilter(java.util.List) -> setFilter
    java.lang.Boolean getRaw() -> getRaw
    com.google.api.services.freebase.Freebase$Topic$Lookup setRaw(java.lang.Boolean) -> setRaw
    boolean isRaw() -> isRaw
    java.lang.Long getLimit() -> getLimit
    com.google.api.services.freebase.Freebase$Topic$Lookup setLimit(java.lang.Long) -> setLimit
    com.google.api.services.freebase.Freebase$Topic$Lookup set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.FreebaseRequest -> com.google.api.services.freebase.FreebaseRequest:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
    java.lang.String getAlt() -> getAlt
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    java.lang.String getFields() -> getFields
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    java.lang.String getKey() -> getKey
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    java.lang.String getOauthToken() -> getOauthToken
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    java.lang.Boolean getPrettyPrint() -> getPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    java.lang.String getQuotaUser() -> getQuotaUser
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    java.lang.String getUserIp() -> getUserIp
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.Freebase getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.services.freebase.FreebaseRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.services.freebase.FreebaseRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.FreebaseRequestInitializer -> com.google.api.services.freebase.FreebaseRequestInitializer:
    void initializeJsonRequest(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest) -> initializeJsonRequest
    void initializeFreebaseRequest(com.google.api.services.freebase.FreebaseRequest) -> initializeFreebaseRequest
com.google.api.services.freebase.FreebaseScopes -> com.google.api.services.freebase.FreebaseScopes:
    java.lang.String FREEBASE -> FREEBASE
    java.util.Set all() -> all
com.google.api.services.freebase.model.ContentserviceGet -> com.google.api.services.freebase.model.ContentserviceGet:
    java.lang.String result -> result
    java.lang.String getResult() -> getResult
    com.google.api.services.freebase.model.ContentserviceGet setResult(java.lang.String) -> setResult
    com.google.api.services.freebase.model.ContentserviceGet set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.ContentserviceGet clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicLookup -> com.google.api.services.freebase.model.TopicLookup:
    java.lang.String id -> id
    com.google.api.services.freebase.model.TopicLookup$Property property -> property
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicLookup setId(java.lang.String) -> setId
    com.google.api.services.freebase.model.TopicLookup$Property getProperty() -> getProperty
    com.google.api.services.freebase.model.TopicLookup setProperty(com.google.api.services.freebase.model.TopicLookup$Property) -> setProperty
    com.google.api.services.freebase.model.TopicLookup set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicLookup clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicLookup$Property -> com.google.api.services.freebase.model.TopicLookup$Property:
    com.google.api.services.freebase.model.TopicStatslinkcount freebaseObjectProfileLinkcount -> freebaseObjectProfileLinkcount
    com.google.api.services.freebase.model.TopicStatslinkcount getFreebaseObjectProfileLinkcount() -> getFreebaseObjectProfileLinkcount
    com.google.api.services.freebase.model.TopicLookup$Property setFreebaseObjectProfileLinkcount(com.google.api.services.freebase.model.TopicStatslinkcount) -> setFreebaseObjectProfileLinkcount
    com.google.api.services.freebase.model.TopicLookup$Property clone() -> clone
    com.google.api.client.util.ArrayMap clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicPropertyvalue -> com.google.api.services.freebase.model.TopicPropertyvalue:
    java.lang.Double count -> count
    java.lang.String status -> status
    java.util.List values -> values
    java.lang.String valuetype -> valuetype
    java.lang.Double getCount() -> getCount
    com.google.api.services.freebase.model.TopicPropertyvalue setCount(java.lang.Double) -> setCount
    java.lang.String getStatus() -> getStatus
    com.google.api.services.freebase.model.TopicPropertyvalue setStatus(java.lang.String) -> setStatus
    java.util.List getValues() -> getValues
    com.google.api.services.freebase.model.TopicPropertyvalue setValues(java.util.List) -> setValues
    java.lang.String getValuetype() -> getValuetype
    com.google.api.services.freebase.model.TopicPropertyvalue setValuetype(java.lang.String) -> setValuetype
    com.google.api.services.freebase.model.TopicPropertyvalue set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicPropertyvalue clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicStatslinkcount -> com.google.api.services.freebase.model.TopicStatslinkcount:
    java.lang.String type -> type
    java.util.List values -> values
    java.lang.String getType() -> getType
    com.google.api.services.freebase.model.TopicStatslinkcount setType(java.lang.String) -> setType
    java.util.List getValues() -> getValues
    com.google.api.services.freebase.model.TopicStatslinkcount setValues(java.util.List) -> setValues
    com.google.api.services.freebase.model.TopicStatslinkcount set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicStatslinkcount clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicStatslinkcount$Values -> com.google.api.services.freebase.model.TopicStatslinkcount$Values:
    java.lang.Integer count -> count
    java.lang.String id -> id
    java.util.List values -> values
    java.lang.Integer getCount() -> getCount
    com.google.api.services.freebase.model.TopicStatslinkcount$Values setCount(java.lang.Integer) -> setCount
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicStatslinkcount$Values setId(java.lang.String) -> setId
    java.util.List getValues() -> getValues
    com.google.api.services.freebase.model.TopicStatslinkcount$Values setValues(java.util.List) -> setValues
    com.google.api.services.freebase.model.TopicStatslinkcount$Values set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicStatslinkcount$Values clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues -> com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues:
    java.lang.Integer count -> count
    java.lang.String id -> id
    java.util.List values -> values
    java.lang.Integer getCount() -> getCount
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues setCount(java.lang.Integer) -> setCount
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues setId(java.lang.String) -> setId
    java.util.List getValues() -> getValues
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues setValues(java.util.List) -> setValues
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues -> com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues:
    java.lang.Integer count -> count
    java.lang.String id -> id
    java.lang.Integer getCount() -> getCount
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues setCount(java.lang.Integer) -> setCount
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues setId(java.lang.String) -> setId
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicValue -> com.google.api.services.freebase.model.TopicValue:
    com.google.api.services.freebase.model.TopicValue$Citation citation -> citation
    java.lang.String creator -> creator
    java.lang.String dataset -> dataset
    java.lang.String id -> id
    java.lang.String lang -> lang
    java.lang.String project -> project
    java.util.Map property -> property
    java.lang.String text -> text
    java.lang.String timestamp -> timestamp
    java.lang.Object value -> value
    com.google.api.services.freebase.model.TopicValue$Citation getCitation() -> getCitation
    com.google.api.services.freebase.model.TopicValue setCitation(com.google.api.services.freebase.model.TopicValue$Citation) -> setCitation
    java.lang.String getCreator() -> getCreator
    com.google.api.services.freebase.model.TopicValue setCreator(java.lang.String) -> setCreator
    java.lang.String getDataset() -> getDataset
    com.google.api.services.freebase.model.TopicValue setDataset(java.lang.String) -> setDataset
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicValue setId(java.lang.String) -> setId
    java.lang.String getLang() -> getLang
    com.google.api.services.freebase.model.TopicValue setLang(java.lang.String) -> setLang
    java.lang.String getProject() -> getProject
    com.google.api.services.freebase.model.TopicValue setProject(java.lang.String) -> setProject
    java.util.Map getProperty() -> getProperty
    com.google.api.services.freebase.model.TopicValue setProperty(java.util.Map) -> setProperty
    java.lang.String getText() -> getText
    com.google.api.services.freebase.model.TopicValue setText(java.lang.String) -> setText
    java.lang.String getTimestamp() -> getTimestamp
    com.google.api.services.freebase.model.TopicValue setTimestamp(java.lang.String) -> setTimestamp
    java.lang.Object getValue() -> getValue
    com.google.api.services.freebase.model.TopicValue setValue(java.lang.Object) -> setValue
    com.google.api.services.freebase.model.TopicValue set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicValue clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicValue$Citation -> com.google.api.services.freebase.model.TopicValue$Citation:
    java.lang.String provider -> provider
    java.lang.String statement -> statement
    java.lang.String uri -> uri
    java.lang.String getProvider() -> getProvider
    com.google.api.services.freebase.model.TopicValue$Citation setProvider(java.lang.String) -> setProvider
    java.lang.String getStatement() -> getStatement
    com.google.api.services.freebase.model.TopicValue$Citation setStatement(java.lang.String) -> setStatement
    java.lang.String getUri() -> getUri
    com.google.api.services.freebase.model.TopicValue$Citation setUri(java.lang.String) -> setUri
    com.google.api.services.freebase.model.TopicValue$Citation set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicValue$Citation clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.common.annotations.Beta -> com.google.common.annotations.Beta:
com.google.common.annotations.GwtCompatible -> com.google.common.annotations.GwtCompatible:
    boolean serializable() -> serializable
    boolean emulated() -> emulated
com.google.common.annotations.GwtIncompatible -> com.google.common.annotations.GwtIncompatible:
    java.lang.String value() -> value
com.google.common.annotations.VisibleForTesting -> com.google.common.annotations.VisibleForTesting:
com.google.common.base.Absent -> iO:
    com.google.common.base.Absent INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    boolean isPresent() -> isPresent
    java.lang.Object get() -> get
    java.lang.Object or(java.lang.Object) -> or
    com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    java.lang.Object or(com.google.common.base.Supplier) -> or
    java.lang.Object orNull() -> orNull
    java.util.Set asSet() -> asSet
    com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
com.google.common.base.AbstractIterator -> iP:
    com.google.common.base.AbstractIterator$State state -> a
    java.lang.Object next -> b
    java.lang.Object computeNext() -> a
    java.lang.Object endOfData() -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.base.AbstractIterator$1 -> iQ:
    int[] $SwitchMap$com$google$common$base$AbstractIterator$State -> a
com.google.common.base.AbstractIterator$State -> iR:
    com.google.common.base.AbstractIterator$State READY -> a
    com.google.common.base.AbstractIterator$State NOT_READY -> b
    com.google.common.base.AbstractIterator$State DONE -> c
    com.google.common.base.AbstractIterator$State FAILED -> d
    com.google.common.base.AbstractIterator$State[] $VALUES -> e
    com.google.common.base.AbstractIterator$State[] values() -> values
    com.google.common.base.AbstractIterator$State valueOf(java.lang.String) -> valueOf
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    byte NUL -> NUL
    byte SOH -> SOH
    byte STX -> STX
    byte ETX -> ETX
    byte EOT -> EOT
    byte ENQ -> ENQ
    byte ACK -> ACK
    byte BEL -> BEL
    byte BS -> BS
    byte HT -> HT
    byte LF -> LF
    byte NL -> NL
    byte VT -> VT
    byte FF -> FF
    byte CR -> CR
    byte SO -> SO
    byte SI -> SI
    byte DLE -> DLE
    byte DC1 -> DC1
    byte XON -> XON
    byte DC2 -> DC2
    byte DC3 -> DC3
    byte XOFF -> XOFF
    byte DC4 -> DC4
    byte NAK -> NAK
    byte SYN -> SYN
    byte ETB -> ETB
    byte CAN -> CAN
    byte EM -> EM
    byte SUB -> SUB
    byte ESC -> ESC
    byte FS -> FS
    byte GS -> GS
    byte RS -> RS
    byte US -> US
    byte SP -> SP
    byte SPACE -> SPACE
    byte DEL -> DEL
    char MIN -> MIN
    char MAX -> MAX
    java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    java.lang.String toLowerCase(java.lang.CharSequence) -> toLowerCase
    char toLowerCase(char) -> toLowerCase
    java.lang.String toUpperCase(java.lang.String) -> toUpperCase
    java.lang.String toUpperCase(java.lang.CharSequence) -> toUpperCase
    char toUpperCase(char) -> toUpperCase
    boolean isLowerCase(char) -> isLowerCase
    boolean isUpperCase(char) -> isUpperCase
com.google.common.base.CaseFormat -> com.google.common.base.CaseFormat:
    com.google.common.base.CaseFormat LOWER_HYPHEN -> LOWER_HYPHEN
    com.google.common.base.CaseFormat LOWER_UNDERSCORE -> LOWER_UNDERSCORE
    com.google.common.base.CaseFormat LOWER_CAMEL -> LOWER_CAMEL
    com.google.common.base.CaseFormat UPPER_CAMEL -> UPPER_CAMEL
    com.google.common.base.CaseFormat UPPER_UNDERSCORE -> UPPER_UNDERSCORE
    com.google.common.base.CharMatcher wordBoundary -> a
    java.lang.String wordSeparator -> b
    com.google.common.base.CaseFormat[] $VALUES -> c
    com.google.common.base.CaseFormat[] values() -> values
    com.google.common.base.CaseFormat valueOf(java.lang.String) -> valueOf
    java.lang.String to(com.google.common.base.CaseFormat,java.lang.String) -> to
    java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> a
    java.lang.String normalizeWord(java.lang.String) -> a
    java.lang.String normalizeFirstWord(java.lang.String) -> c
    java.lang.String access$100(java.lang.String) -> b
com.google.common.base.CaseFormat$1 -> iS:
    java.lang.String normalizeWord(java.lang.String) -> a
    java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> a
com.google.common.base.CaseFormat$2 -> iT:
    java.lang.String normalizeWord(java.lang.String) -> a
    java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> a
com.google.common.base.CaseFormat$3 -> iU:
    java.lang.String normalizeWord(java.lang.String) -> a
com.google.common.base.CaseFormat$4 -> iV:
    java.lang.String normalizeWord(java.lang.String) -> a
com.google.common.base.CaseFormat$5 -> iW:
    java.lang.String normalizeWord(java.lang.String) -> a
    java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> a
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    com.google.common.base.CharMatcher BREAKING_WHITESPACE -> BREAKING_WHITESPACE
    com.google.common.base.CharMatcher ASCII -> ASCII
    java.lang.String NINES -> b
    com.google.common.base.CharMatcher DIGIT -> DIGIT
    com.google.common.base.CharMatcher JAVA_DIGIT -> JAVA_DIGIT
    com.google.common.base.CharMatcher JAVA_LETTER -> JAVA_LETTER
    com.google.common.base.CharMatcher JAVA_LETTER_OR_DIGIT -> JAVA_LETTER_OR_DIGIT
    com.google.common.base.CharMatcher JAVA_UPPER_CASE -> JAVA_UPPER_CASE
    com.google.common.base.CharMatcher JAVA_LOWER_CASE -> JAVA_LOWER_CASE
    com.google.common.base.CharMatcher JAVA_ISO_CONTROL -> JAVA_ISO_CONTROL
    com.google.common.base.CharMatcher INVISIBLE -> INVISIBLE
    com.google.common.base.CharMatcher SINGLE_WIDTH -> SINGLE_WIDTH
    com.google.common.base.CharMatcher ANY -> ANY
    com.google.common.base.CharMatcher NONE -> NONE
    java.lang.String description -> a
    com.google.common.base.CharMatcher WHITESPACE -> WHITESPACE
    java.lang.String showCharacter(char) -> a
    com.google.common.base.CharMatcher is(char) -> is
    com.google.common.base.CharMatcher isNot(char) -> isNot
    com.google.common.base.CharMatcher anyOf(java.lang.CharSequence) -> anyOf
    com.google.common.base.CharMatcher isEither(char,char) -> a
    com.google.common.base.CharMatcher noneOf(java.lang.CharSequence) -> noneOf
    com.google.common.base.CharMatcher inRange(char,char) -> inRange
    com.google.common.base.CharMatcher inRange(char,char,java.lang.String) -> a
    com.google.common.base.CharMatcher forPredicate(com.google.common.base.Predicate) -> forPredicate
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher negate() -> negate
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher precomputed() -> precomputed
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
    com.google.common.base.CharMatcher precomputedInternal() -> a
    com.google.common.base.CharMatcher precomputedPositive(int,java.util.BitSet,java.lang.String) -> a
    void setBits(java.util.BitSet) -> a
    boolean matchesAnyOf(java.lang.CharSequence) -> matchesAnyOf
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    int countIn(java.lang.CharSequence) -> countIn
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String retainFrom(java.lang.CharSequence) -> retainFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    java.lang.String trimLeadingFrom(java.lang.CharSequence) -> trimLeadingFrom
    java.lang.String trimTrailingFrom(java.lang.CharSequence) -> trimTrailingFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimAndCollapseFrom(java.lang.CharSequence,char) -> trimAndCollapseFrom
    java.lang.String finishCollapseFrom(java.lang.CharSequence,int,int,char,java.lang.StringBuilder,boolean) -> a
    boolean apply(java.lang.Character) -> apply
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$1 -> iX:
    boolean matches(char) -> matches
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$10 -> iY:
    char val$match -> b
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    void setBits(java.util.BitSet) -> a
    com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$11 -> iZ:
    char[] val$chars -> b
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$12 -> ja:
    char val$match1 -> b
    char val$match2 -> c
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
com.google.common.base.CharMatcher$13 -> jb:
    char val$startInclusive -> b
    char val$endInclusive -> c
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
com.google.common.base.CharMatcher$14 -> jc:
    com.google.common.base.Predicate val$predicate -> b
    boolean matches(char) -> matches
    boolean apply(java.lang.Character) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$15 -> jd:
    boolean matches(char) -> matches
com.google.common.base.CharMatcher$2 -> je:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$3 -> jf:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$4 -> jg:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$5 -> jh:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$6 -> ji:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$7 -> jj:
    boolean matches(char) -> matches
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    int countIn(java.lang.CharSequence) -> countIn
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$8 -> jk:
    boolean matches(char) -> matches
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    java.lang.String trimLeadingFrom(java.lang.CharSequence) -> trimLeadingFrom
    java.lang.String trimTrailingFrom(java.lang.CharSequence) -> trimTrailingFrom
    int countIn(java.lang.CharSequence) -> countIn
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$9 -> jl:
    char val$match -> b
    boolean matches(char) -> matches
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
    void setBits(java.util.BitSet) -> a
com.google.common.base.CharMatcher$And -> jm:
    com.google.common.base.CharMatcher first -> b
    com.google.common.base.CharMatcher second -> c
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$BitSetMatcher -> jn:
    java.util.BitSet table -> b
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
com.google.common.base.CharMatcher$FastMatcher -> jo:
    com.google.common.base.CharMatcher precomputed() -> precomputed
    com.google.common.base.CharMatcher negate() -> negate
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$NegatedFastMatcher -> jp:
    com.google.common.base.CharMatcher precomputed() -> precomputed
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
com.google.common.base.CharMatcher$NegatedMatcher -> jq:
    com.google.common.base.CharMatcher original -> b
    boolean matches(char) -> matches
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    int countIn(java.lang.CharSequence) -> countIn
    void setBits(java.util.BitSet) -> a
    com.google.common.base.CharMatcher negate() -> negate
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$Or -> jr:
    com.google.common.base.CharMatcher first -> b
    com.google.common.base.CharMatcher second -> c
    void setBits(java.util.BitSet) -> a
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$RangesMatcher -> js:
    char[] rangeStarts -> b
    char[] rangeEnds -> c
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Charsets -> com.google.common.base.Charsets:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_16 -> UTF_16
com.google.common.base.Defaults -> com.google.common.base.Defaults:
    java.util.Map DEFAULTS -> a
    void put(java.util.Map,java.lang.Class,java.lang.Object) -> a
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
com.google.common.base.Enums -> com.google.common.base.Enums:
    java.lang.reflect.Field getField(java.lang.Enum) -> getField
    com.google.common.base.Function valueOfFunction(java.lang.Class) -> valueOfFunction
    com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String) -> getIfPresent
com.google.common.base.Enums$ValueOfFunction -> jt:
    java.lang.Class enumClass -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Enum apply(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    int hash(java.lang.Object) -> hash
    int doHash(java.lang.Object) -> doHash
    com.google.common.base.Equivalence onResultOf(com.google.common.base.Function) -> onResultOf
    com.google.common.base.Equivalence$Wrapper wrap(java.lang.Object) -> wrap
    com.google.common.base.Equivalence pairwise() -> pairwise
    com.google.common.base.Predicate equivalentTo(java.lang.Object) -> equivalentTo
    com.google.common.base.Equivalence equals() -> equals
    com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$Equals -> ju:
    com.google.common.base.Equivalence$Equals INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    int doHash(java.lang.Object) -> doHash
    java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$EquivalentToPredicate -> jv:
    com.google.common.base.Equivalence equivalence -> a
    java.lang.Object target -> b
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Equivalence$Identity -> jw:
    com.google.common.base.Equivalence$Identity INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    int doHash(java.lang.Object) -> doHash
    java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$Wrapper -> com.google.common.base.Equivalence$Wrapper:
    com.google.common.base.Equivalence equivalence -> a
    java.lang.Object reference -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.FinalizablePhantomReference -> com.google.common.base.FinalizablePhantomReference:
com.google.common.base.FinalizableReference -> com.google.common.base.FinalizableReference:
    void finalizeReferent() -> finalizeReferent
com.google.common.base.FinalizableReferenceQueue -> com.google.common.base.FinalizableReferenceQueue:
    java.util.logging.Logger logger -> d
    java.lang.reflect.Method startFinalizer -> e
    java.lang.ref.ReferenceQueue queue -> a
    java.lang.ref.PhantomReference frqRef -> b
    boolean threadStarted -> c
    void close() -> close
    void cleanUp() -> a
    java.lang.reflect.Method getStartFinalizer(java.lang.Class) -> a
    java.util.logging.Logger access$000() -> b
com.google.common.base.FinalizableReferenceQueue$DecoupledLoader -> jx:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$DirectLoader -> jy:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$FinalizerLoader -> jz:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$SystemLoader -> jA:
    boolean disabled -> a
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableSoftReference -> com.google.common.base.FinalizableSoftReference:
com.google.common.base.FinalizableWeakReference -> com.google.common.base.FinalizableWeakReference:
com.google.common.base.Function -> com.google.common.base.Function:
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.FunctionalEquivalence -> jB:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function function -> a
    com.google.common.base.Equivalence resultEquivalence -> b
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    int doHash(java.lang.Object) -> doHash
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions -> com.google.common.base.Functions:
    com.google.common.base.Function toStringFunction() -> toStringFunction
    com.google.common.base.Function identity() -> identity
    com.google.common.base.Function forMap(java.util.Map) -> forMap
    com.google.common.base.Function forMap(java.util.Map,java.lang.Object) -> forMap
    com.google.common.base.Function compose(com.google.common.base.Function,com.google.common.base.Function) -> compose
    com.google.common.base.Function forPredicate(com.google.common.base.Predicate) -> forPredicate
    com.google.common.base.Function constant(java.lang.Object) -> constant
    com.google.common.base.Function forSupplier(com.google.common.base.Supplier) -> forSupplier
com.google.common.base.Functions$ConstantFunction -> jC:
    java.lang.Object value -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$ForMapWithDefault -> jD:
    java.util.Map map -> a
    java.lang.Object defaultValue -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionComposition -> jE:
    com.google.common.base.Function g -> a
    com.google.common.base.Function f -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionForMapNoDefault -> jF:
    java.util.Map map -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$IdentityFunction -> jG:
    com.google.common.base.Functions$IdentityFunction INSTANCE -> a
    com.google.common.base.Functions$IdentityFunction[] $VALUES -> b
    com.google.common.base.Functions$IdentityFunction[] values() -> values
    com.google.common.base.Functions$IdentityFunction valueOf(java.lang.String) -> valueOf
    java.lang.Object apply(java.lang.Object) -> apply
    java.lang.String toString() -> toString
com.google.common.base.Functions$PredicateFunction -> jH:
    com.google.common.base.Predicate predicate -> a
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Functions$SupplierFunction -> jI:
    com.google.common.base.Supplier supplier -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$ToStringFunction -> jJ:
    com.google.common.base.Functions$ToStringFunction INSTANCE -> a
    com.google.common.base.Functions$ToStringFunction[] $VALUES -> b
    com.google.common.base.Functions$ToStringFunction[] values() -> values
    com.google.common.base.Functions$ToStringFunction valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    java.lang.String separator -> a
    com.google.common.base.Joiner on(java.lang.String) -> on
    com.google.common.base.Joiner on(char) -> on
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object[]) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.util.Iterator) -> join
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[]) -> join
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner skipNulls() -> skipNulls
    com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    java.lang.CharSequence toString(java.lang.Object) -> a
    java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[]) -> a
    java.lang.String access$100(com.google.common.base.Joiner) -> a
com.google.common.base.Joiner$1 -> jK:
    java.lang.String val$nullText -> b
    com.google.common.base.Joiner this$0 -> c
    java.lang.CharSequence toString(java.lang.Object) -> a
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner skipNulls() -> skipNulls
com.google.common.base.Joiner$2 -> jL:
    com.google.common.base.Joiner this$0 -> b
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
com.google.common.base.Joiner$3 -> jM:
    java.lang.Object[] val$rest -> a
    java.lang.Object val$first -> b
    java.lang.Object val$second -> c
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.base.Joiner$MapJoiner -> com.google.common.base.Joiner$MapJoiner:
    com.google.common.base.Joiner joiner -> a
    java.lang.String keyValueSeparator -> b
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Map) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map) -> appendTo
    java.lang.String join(java.util.Map) -> join
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.util.Iterator) -> join
    com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String) -> useForNull
com.google.common.base.Objects -> com.google.common.base.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hashCode(java.lang.Object[]) -> hashCode
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
    java.lang.String simpleName(java.lang.Class) -> a
    java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
com.google.common.base.Objects$ToStringHelper -> com.google.common.base.Objects$ToStringHelper:
    java.lang.String className -> a
    com.google.common.base.Objects$ToStringHelper$ValueHolder holderHead -> b
    com.google.common.base.Objects$ToStringHelper$ValueHolder holderTail -> c
    boolean omitNullValues -> d
    com.google.common.base.Objects$ToStringHelper omitNullValues() -> omitNullValues
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,boolean) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,char) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,double) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,float) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,int) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,long) -> add
    com.google.common.base.Objects$ToStringHelper addValue(java.lang.Object) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(boolean) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(char) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(double) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(float) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(int) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(long) -> addValue
    java.lang.String toString() -> toString
    com.google.common.base.Objects$ToStringHelper$ValueHolder addHolder() -> a
    com.google.common.base.Objects$ToStringHelper addHolder(java.lang.Object) -> a
    com.google.common.base.Objects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> a
com.google.common.base.Objects$ToStringHelper$ValueHolder -> jN:
    java.lang.String name -> a
    java.lang.Object value -> b
    com.google.common.base.Objects$ToStringHelper$ValueHolder next -> c
com.google.common.base.Optional -> com.google.common.base.Optional:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Optional absent() -> absent
    com.google.common.base.Optional of(java.lang.Object) -> of
    com.google.common.base.Optional fromNullable(java.lang.Object) -> fromNullable
    boolean isPresent() -> isPresent
    java.lang.Object get() -> get
    java.lang.Object or(java.lang.Object) -> or
    com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    java.lang.Object or(com.google.common.base.Supplier) -> or
    java.lang.Object orNull() -> orNull
    java.util.Set asSet() -> asSet
    com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Iterable presentInstances(java.lang.Iterable) -> presentInstances
com.google.common.base.Optional$1 -> jO:
    java.lang.Iterable val$optionals -> a
    java.util.Iterator iterator() -> iterator
com.google.common.base.Optional$1$1 -> jP:
    java.util.Iterator iterator -> b
    com.google.common.base.Optional$1 this$0 -> a
    java.lang.Object computeNext() -> a
com.google.common.base.PairwiseEquivalence -> jQ:
    com.google.common.base.Equivalence elementEquivalence -> a
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int doHash(java.lang.Object) -> doHash
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
com.google.common.base.Platform -> jR:
    java.lang.ThreadLocal DEST_TL -> a
    long systemNanoTime() -> a
    com.google.common.base.CharMatcher precomputeCharMatcher(com.google.common.base.CharMatcher) -> a
com.google.common.base.Platform$1 -> jS:
    java.lang.Object initialValue() -> initialValue
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    int checkElementIndex(int,int) -> checkElementIndex
    int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    int checkPositionIndex(int,int) -> checkPositionIndex
    int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    java.lang.String badPositionIndex(int,int,java.lang.String) -> a
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> a
com.google.common.base.Predicate -> com.google.common.base.Predicate:
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.Predicates -> com.google.common.base.Predicates:
    com.google.common.base.Joiner COMMA_JOINER -> a
    com.google.common.base.Predicate alwaysTrue() -> alwaysTrue
    com.google.common.base.Predicate alwaysFalse() -> alwaysFalse
    com.google.common.base.Predicate isNull() -> isNull
    com.google.common.base.Predicate notNull() -> notNull
    com.google.common.base.Predicate not(com.google.common.base.Predicate) -> not
    com.google.common.base.Predicate and(java.lang.Iterable) -> and
    com.google.common.base.Predicate and(com.google.common.base.Predicate[]) -> and
    com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate) -> and
    com.google.common.base.Predicate or(java.lang.Iterable) -> or
    com.google.common.base.Predicate or(com.google.common.base.Predicate[]) -> or
    com.google.common.base.Predicate or(com.google.common.base.Predicate,com.google.common.base.Predicate) -> or
    com.google.common.base.Predicate equalTo(java.lang.Object) -> equalTo
    com.google.common.base.Predicate instanceOf(java.lang.Class) -> instanceOf
    com.google.common.base.Predicate assignableFrom(java.lang.Class) -> assignableFrom
    com.google.common.base.Predicate in(java.util.Collection) -> in
    com.google.common.base.Predicate compose(com.google.common.base.Predicate,com.google.common.base.Function) -> compose
    com.google.common.base.Predicate containsPattern(java.lang.String) -> containsPattern
    com.google.common.base.Predicate contains(java.util.regex.Pattern) -> contains
    java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate) -> a
    java.util.List defensiveCopy(java.lang.Object[]) -> a
    java.util.List defensiveCopy(java.lang.Iterable) -> a
    com.google.common.base.Joiner access$800() -> a
com.google.common.base.Predicates$AndPredicate -> jT:
    java.util.List components -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$AssignableFromPredicate -> jU:
    java.lang.Class clazz -> a
    long serialVersionUID -> serialVersionUID
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$CompositionPredicate -> jV:
    com.google.common.base.Predicate p -> a
    com.google.common.base.Function f -> b
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Predicates$ContainsPatternPredicate -> jW:
    java.util.regex.Pattern pattern -> a
    long serialVersionUID -> serialVersionUID
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$InPredicate -> jX:
    java.util.Collection target -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Predicates$InstanceOfPredicate -> jY:
    java.lang.Class clazz -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$IsEqualToPredicate -> jZ:
    java.lang.Object target -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$NotPredicate -> ka:
    com.google.common.base.Predicate predicate -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate -> kb:
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE -> a
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE -> b
    com.google.common.base.Predicates$ObjectPredicate IS_NULL -> c
    com.google.common.base.Predicates$ObjectPredicate NOT_NULL -> d
    com.google.common.base.Predicates$ObjectPredicate[] $VALUES -> e
    com.google.common.base.Predicates$ObjectPredicate[] values() -> values
    com.google.common.base.Predicates$ObjectPredicate valueOf(java.lang.String) -> valueOf
    com.google.common.base.Predicate withNarrowedType() -> a
com.google.common.base.Predicates$ObjectPredicate$1 -> kc:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$2 -> kd:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$3 -> ke:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$4 -> kf:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$OrPredicate -> kg:
    java.util.List components -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Present -> kh:
    java.lang.Object reference -> a
    long serialVersionUID -> serialVersionUID
    boolean isPresent() -> isPresent
    java.lang.Object get() -> get
    java.lang.Object or(java.lang.Object) -> or
    com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    java.lang.Object or(com.google.common.base.Supplier) -> or
    java.lang.Object orNull() -> orNull
    java.util.Set asSet() -> asSet
    com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.SmallCharMatcher -> ki:
    char[] table -> b
    boolean containsZero -> c
    long filter -> d
    int smear(int) -> a
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    com.google.common.base.CharMatcher trimmer -> a
    boolean omitEmptyStrings -> b
    com.google.common.base.Splitter$Strategy strategy -> c
    int limit -> d
    com.google.common.base.Splitter on(char) -> on
    com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    com.google.common.base.Splitter on(java.lang.String) -> on
    com.google.common.base.Splitter on(java.util.regex.Pattern) -> on
    com.google.common.base.Splitter onPattern(java.lang.String) -> onPattern
    com.google.common.base.Splitter fixedLength(int) -> fixedLength
    com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    com.google.common.base.Splitter limit(int) -> limit
    com.google.common.base.Splitter trimResults() -> trimResults
    com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher) -> trimResults
    java.lang.Iterable split(java.lang.CharSequence) -> split
    java.util.Iterator spliterator(java.lang.CharSequence) -> a
    java.util.List splitToList(java.lang.CharSequence) -> splitToList
    com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(char) -> withKeyValueSeparator
    com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(com.google.common.base.Splitter) -> withKeyValueSeparator
    java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence) -> a
    com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> a
    boolean access$300(com.google.common.base.Splitter) -> b
    int access$400(com.google.common.base.Splitter) -> c
com.google.common.base.Splitter$1 -> kj:
    com.google.common.base.CharMatcher val$separatorMatcher -> a
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Splitter$1$1 -> kk:
    com.google.common.base.Splitter$1 this$0 -> a
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
com.google.common.base.Splitter$2 -> kl:
    java.lang.String val$separator -> a
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Splitter$2$1 -> km:
    com.google.common.base.Splitter$2 this$0 -> a
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
com.google.common.base.Splitter$3 -> kn:
    java.util.regex.Pattern val$separatorPattern -> a
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Splitter$3$1 -> ko:
    java.util.regex.Matcher val$matcher -> a
    com.google.common.base.Splitter$3 this$0 -> b
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
com.google.common.base.Splitter$4 -> kp:
    int val$length -> a
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Splitter$4$1 -> kq:
    com.google.common.base.Splitter$4 this$0 -> a
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
com.google.common.base.Splitter$5 -> kr:
    java.lang.CharSequence val$sequence -> a
    com.google.common.base.Splitter this$0 -> b
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.google.common.base.Splitter$MapSplitter -> com.google.common.base.Splitter$MapSplitter:
    com.google.common.base.Splitter outerSplitter -> a
    com.google.common.base.Splitter entrySplitter -> b
    java.util.Map split(java.lang.CharSequence) -> split
com.google.common.base.Splitter$SplittingIterator -> ks:
    java.lang.CharSequence toSplit -> c
    com.google.common.base.CharMatcher trimmer -> d
    boolean omitEmptyStrings -> e
    int offset -> f
    int limit -> g
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
    java.lang.Object computeNext() -> a
com.google.common.base.Splitter$Strategy -> kt:
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.StandardSystemProperty -> com.google.common.base.StandardSystemProperty:
    com.google.common.base.StandardSystemProperty JAVA_VERSION -> JAVA_VERSION
    com.google.common.base.StandardSystemProperty JAVA_VENDOR -> JAVA_VENDOR
    com.google.common.base.StandardSystemProperty JAVA_VENDOR_URL -> JAVA_VENDOR_URL
    com.google.common.base.StandardSystemProperty JAVA_HOME -> JAVA_HOME
    com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_VERSION -> JAVA_VM_SPECIFICATION_VERSION
    com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_VENDOR -> JAVA_VM_SPECIFICATION_VENDOR
    com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_NAME -> JAVA_VM_SPECIFICATION_NAME
    com.google.common.base.StandardSystemProperty JAVA_VM_VERSION -> JAVA_VM_VERSION
    com.google.common.base.StandardSystemProperty JAVA_VM_VENDOR -> JAVA_VM_VENDOR
    com.google.common.base.StandardSystemProperty JAVA_VM_NAME -> JAVA_VM_NAME
    com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_VERSION -> JAVA_SPECIFICATION_VERSION
    com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_VENDOR -> JAVA_SPECIFICATION_VENDOR
    com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_NAME -> JAVA_SPECIFICATION_NAME
    com.google.common.base.StandardSystemProperty JAVA_CLASS_VERSION -> JAVA_CLASS_VERSION
    com.google.common.base.StandardSystemProperty JAVA_CLASS_PATH -> JAVA_CLASS_PATH
    com.google.common.base.StandardSystemProperty JAVA_LIBRARY_PATH -> JAVA_LIBRARY_PATH
    com.google.common.base.StandardSystemProperty JAVA_IO_TMPDIR -> JAVA_IO_TMPDIR
    com.google.common.base.StandardSystemProperty JAVA_COMPILER -> JAVA_COMPILER
    com.google.common.base.StandardSystemProperty JAVA_EXT_DIRS -> JAVA_EXT_DIRS
    com.google.common.base.StandardSystemProperty OS_NAME -> OS_NAME
    com.google.common.base.StandardSystemProperty OS_ARCH -> OS_ARCH
    com.google.common.base.StandardSystemProperty OS_VERSION -> OS_VERSION
    com.google.common.base.StandardSystemProperty FILE_SEPARATOR -> FILE_SEPARATOR
    com.google.common.base.StandardSystemProperty PATH_SEPARATOR -> PATH_SEPARATOR
    com.google.common.base.StandardSystemProperty LINE_SEPARATOR -> LINE_SEPARATOR
    com.google.common.base.StandardSystemProperty USER_NAME -> USER_NAME
    com.google.common.base.StandardSystemProperty USER_HOME -> USER_HOME
    com.google.common.base.StandardSystemProperty USER_DIR -> USER_DIR
    java.lang.String key -> a
    com.google.common.base.StandardSystemProperty[] $VALUES -> b
    com.google.common.base.StandardSystemProperty[] values() -> values
    com.google.common.base.StandardSystemProperty valueOf(java.lang.String) -> valueOf
    java.lang.String key() -> key
    java.lang.String value() -> value
    java.lang.String toString() -> toString
com.google.common.base.Stopwatch -> com.google.common.base.Stopwatch:
    com.google.common.base.Ticker ticker -> a
    boolean isRunning -> b
    long elapsedNanos -> c
    long startTick -> d
    com.google.common.base.Stopwatch createUnstarted() -> createUnstarted
    com.google.common.base.Stopwatch createUnstarted(com.google.common.base.Ticker) -> createUnstarted
    com.google.common.base.Stopwatch createStarted() -> createStarted
    com.google.common.base.Stopwatch createStarted(com.google.common.base.Ticker) -> createStarted
    boolean isRunning() -> isRunning
    com.google.common.base.Stopwatch start() -> start
    com.google.common.base.Stopwatch stop() -> stop
    com.google.common.base.Stopwatch reset() -> reset
    long elapsedNanos() -> a
    long elapsed(java.util.concurrent.TimeUnit) -> elapsed
    long elapsedTime(java.util.concurrent.TimeUnit) -> elapsedTime
    long elapsedMillis() -> elapsedMillis
    java.lang.String toString() -> toString
com.google.common.base.Stopwatch$1 -> ku:
    int[] $SwitchMap$java$util$concurrent$TimeUnit -> a
com.google.common.base.Strings -> com.google.common.base.Strings:
    java.lang.String nullToEmpty(java.lang.String) -> nullToEmpty
    java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    java.lang.String padStart(java.lang.String,int,char) -> padStart
    java.lang.String padEnd(java.lang.String,int,char) -> padEnd
    java.lang.String repeat(java.lang.String,int) -> repeat
    java.lang.String commonPrefix(java.lang.CharSequence,java.lang.CharSequence) -> commonPrefix
    java.lang.String commonSuffix(java.lang.CharSequence,java.lang.CharSequence) -> commonSuffix
    boolean validSurrogatePairAt(java.lang.CharSequence,int) -> a
com.google.common.base.Supplier -> com.google.common.base.Supplier:
    java.lang.Object get() -> get
com.google.common.base.Suppliers -> com.google.common.base.Suppliers:
    com.google.common.base.Supplier compose(com.google.common.base.Function,com.google.common.base.Supplier) -> compose
    com.google.common.base.Supplier memoize(com.google.common.base.Supplier) -> memoize
    com.google.common.base.Supplier memoizeWithExpiration(com.google.common.base.Supplier,long,java.util.concurrent.TimeUnit) -> memoizeWithExpiration
    com.google.common.base.Supplier ofInstance(java.lang.Object) -> ofInstance
    com.google.common.base.Supplier synchronizedSupplier(com.google.common.base.Supplier) -> synchronizedSupplier
    com.google.common.base.Function supplierFunction() -> supplierFunction
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> kv:
    com.google.common.base.Supplier delegate -> a
    long durationNanos -> b
    java.lang.Object value -> c
    long expirationNanos -> d
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.common.base.Suppliers$MemoizingSupplier -> kw:
    com.google.common.base.Supplier delegate -> a
    boolean initialized -> b
    java.lang.Object value -> c
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.common.base.Suppliers$SupplierComposition -> kx:
    com.google.common.base.Function function -> a
    com.google.common.base.Supplier supplier -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Suppliers$SupplierFunction -> ky:
    com.google.common.base.Suppliers$SupplierFunction INSTANCE -> a
    com.google.common.base.Suppliers$SupplierFunction[] $VALUES -> b
    com.google.common.base.Suppliers$SupplierFunction[] values() -> values
    com.google.common.base.Suppliers$SupplierFunction valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Suppliers$SupplierOfInstance -> kz:
    java.lang.Object instance -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Suppliers$ThreadSafeSupplier -> kA:
    com.google.common.base.Supplier delegate -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.common.base.Throwables -> com.google.common.base.Throwables:
    void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> propagateIfInstanceOf
    void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class) -> propagateIfPossible
    java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.util.List getCausalChain(java.lang.Throwable) -> getCausalChain
    java.lang.String getStackTraceAsString(java.lang.Throwable) -> getStackTraceAsString
com.google.common.base.Ticker -> com.google.common.base.Ticker:
    com.google.common.base.Ticker SYSTEM_TICKER -> a
    long read() -> read
    com.google.common.base.Ticker systemTicker() -> systemTicker
com.google.common.base.Ticker$1 -> kB:
    long read() -> read
com.google.common.base.internal.Finalizer -> com.google.common.base.internal.Finalizer:
    java.util.logging.Logger logger -> a
    java.lang.ref.WeakReference finalizableReferenceClassReference -> b
    java.lang.ref.PhantomReference frqReference -> c
    java.lang.ref.ReferenceQueue queue -> d
    java.lang.reflect.Field inheritableThreadLocals -> e
    void startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference) -> startFinalizer
    void run() -> run
    boolean cleanUp(java.lang.ref.Reference) -> a
    java.lang.reflect.Method getFinalizeReferentMethod() -> a
    java.lang.reflect.Field getInheritableThreadLocalsField() -> getInheritableThreadLocalsField
com.google.common.cache.AbstractCache -> com.google.common.cache.AbstractCache:
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void cleanUp() -> cleanUp
    long size() -> size
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    com.google.common.cache.CacheStats stats() -> stats
    java.util.concurrent.ConcurrentMap asMap() -> asMap
com.google.common.cache.AbstractCache$SimpleStatsCounter -> com.google.common.cache.AbstractCache$SimpleStatsCounter:
    com.google.common.cache.LongAddable hitCount -> a
    com.google.common.cache.LongAddable missCount -> b
    com.google.common.cache.LongAddable loadSuccessCount -> c
    com.google.common.cache.LongAddable loadExceptionCount -> d
    com.google.common.cache.LongAddable totalLoadTime -> e
    com.google.common.cache.LongAddable evictionCount -> f
    void recordHits(int) -> recordHits
    void recordMisses(int) -> recordMisses
    void recordLoadSuccess(long) -> recordLoadSuccess
    void recordLoadException(long) -> recordLoadException
    void recordEviction() -> recordEviction
    com.google.common.cache.CacheStats snapshot() -> snapshot
    void incrementBy(com.google.common.cache.AbstractCache$StatsCounter) -> incrementBy
com.google.common.cache.AbstractCache$StatsCounter -> com.google.common.cache.AbstractCache$StatsCounter:
    void recordHits(int) -> recordHits
    void recordMisses(int) -> recordMisses
    void recordLoadSuccess(long) -> recordLoadSuccess
    void recordLoadException(long) -> recordLoadException
    void recordEviction() -> recordEviction
    com.google.common.cache.CacheStats snapshot() -> snapshot
com.google.common.cache.AbstractLoadingCache -> com.google.common.cache.AbstractLoadingCache:
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
com.google.common.cache.Cache -> com.google.common.cache.Cache:
    java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    long size() -> size
    com.google.common.cache.CacheStats stats() -> stats
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    void cleanUp() -> cleanUp
com.google.common.cache.CacheBuilder -> com.google.common.cache.CacheBuilder:
    com.google.common.base.Supplier NULL_STATS_COUNTER -> a
    com.google.common.cache.CacheStats EMPTY_STATS -> b
    com.google.common.base.Supplier CACHE_STATS_COUNTER -> c
    com.google.common.base.Ticker NULL_TICKER -> d
    java.util.logging.Logger logger -> u
    boolean strictParsing -> e
    int initialCapacity -> f
    int concurrencyLevel -> g
    long maximumSize -> h
    long maximumWeight -> i
    com.google.common.cache.Weigher weigher -> j
    com.google.common.cache.LocalCache$Strength keyStrength -> k
    com.google.common.cache.LocalCache$Strength valueStrength -> l
    long expireAfterWriteNanos -> m
    long expireAfterAccessNanos -> n
    long refreshNanos -> o
    com.google.common.base.Equivalence keyEquivalence -> p
    com.google.common.base.Equivalence valueEquivalence -> q
    com.google.common.cache.RemovalListener removalListener -> r
    com.google.common.base.Ticker ticker -> s
    com.google.common.base.Supplier statsCounterSupplier -> t
    com.google.common.cache.CacheBuilder newBuilder() -> newBuilder
    com.google.common.cache.CacheBuilder from(com.google.common.cache.CacheBuilderSpec) -> from
    com.google.common.cache.CacheBuilder from(java.lang.String) -> from
    com.google.common.cache.CacheBuilder keyEquivalence(com.google.common.base.Equivalence) -> a
    com.google.common.base.Equivalence getKeyEquivalence() -> a
    com.google.common.cache.CacheBuilder valueEquivalence(com.google.common.base.Equivalence) -> b
    com.google.common.base.Equivalence getValueEquivalence() -> b
    com.google.common.cache.CacheBuilder initialCapacity(int) -> initialCapacity
    int getInitialCapacity() -> c
    com.google.common.cache.CacheBuilder concurrencyLevel(int) -> concurrencyLevel
    int getConcurrencyLevel() -> d
    com.google.common.cache.CacheBuilder maximumSize(long) -> maximumSize
    com.google.common.cache.CacheBuilder maximumWeight(long) -> maximumWeight
    com.google.common.cache.CacheBuilder weigher(com.google.common.cache.Weigher) -> weigher
    long getMaximumWeight() -> e
    com.google.common.cache.Weigher getWeigher() -> f
    com.google.common.cache.CacheBuilder weakKeys() -> weakKeys
    com.google.common.cache.CacheBuilder setKeyStrength(com.google.common.cache.LocalCache$Strength) -> a
    com.google.common.cache.LocalCache$Strength getKeyStrength() -> g
    com.google.common.cache.CacheBuilder weakValues() -> weakValues
    com.google.common.cache.CacheBuilder softValues() -> softValues
    com.google.common.cache.CacheBuilder setValueStrength(com.google.common.cache.LocalCache$Strength) -> b
    com.google.common.cache.LocalCache$Strength getValueStrength() -> h
    com.google.common.cache.CacheBuilder expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    long getExpireAfterWriteNanos() -> i
    com.google.common.cache.CacheBuilder expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    long getExpireAfterAccessNanos() -> j
    com.google.common.cache.CacheBuilder refreshAfterWrite(long,java.util.concurrent.TimeUnit) -> refreshAfterWrite
    long getRefreshNanos() -> k
    com.google.common.cache.CacheBuilder ticker(com.google.common.base.Ticker) -> ticker
    com.google.common.base.Ticker getTicker(boolean) -> a
    com.google.common.cache.CacheBuilder removalListener(com.google.common.cache.RemovalListener) -> removalListener
    com.google.common.cache.RemovalListener getRemovalListener() -> l
    com.google.common.cache.CacheBuilder recordStats() -> recordStats
    com.google.common.base.Supplier getStatsCounterSupplier() -> m
    com.google.common.cache.LoadingCache build(com.google.common.cache.CacheLoader) -> build
    com.google.common.cache.Cache build() -> build
    void checkWeightWithWeigher() -> n
    java.lang.String toString() -> toString
com.google.common.cache.CacheBuilder$1 -> kC:
    void recordHits(int) -> recordHits
    void recordMisses(int) -> recordMisses
    void recordLoadSuccess(long) -> recordLoadSuccess
    void recordLoadException(long) -> recordLoadException
    void recordEviction() -> recordEviction
    com.google.common.cache.CacheStats snapshot() -> snapshot
com.google.common.cache.CacheBuilder$2 -> kD:
    java.lang.Object get() -> get
com.google.common.cache.CacheBuilder$3 -> kE:
    long read() -> read
com.google.common.cache.CacheBuilder$NullListener -> kF:
    com.google.common.cache.CacheBuilder$NullListener INSTANCE -> a
    com.google.common.cache.CacheBuilder$NullListener[] $VALUES -> b
    com.google.common.cache.CacheBuilder$NullListener[] values() -> values
    com.google.common.cache.CacheBuilder$NullListener valueOf(java.lang.String) -> valueOf
    void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
com.google.common.cache.CacheBuilder$OneWeigher -> kG:
    com.google.common.cache.CacheBuilder$OneWeigher INSTANCE -> a
    com.google.common.cache.CacheBuilder$OneWeigher[] $VALUES -> b
    com.google.common.cache.CacheBuilder$OneWeigher[] values() -> values
    com.google.common.cache.CacheBuilder$OneWeigher valueOf(java.lang.String) -> valueOf
    int weigh(java.lang.Object,java.lang.Object) -> weigh
com.google.common.cache.CacheBuilderSpec -> com.google.common.cache.CacheBuilderSpec:
    com.google.common.base.Splitter KEYS_SPLITTER -> n
    com.google.common.base.Splitter KEY_VALUE_SPLITTER -> o
    com.google.common.collect.ImmutableMap VALUE_PARSERS -> p
    java.lang.Integer initialCapacity -> a
    java.lang.Long maximumSize -> b
    java.lang.Long maximumWeight -> c
    java.lang.Integer concurrencyLevel -> d
    com.google.common.cache.LocalCache$Strength keyStrength -> e
    com.google.common.cache.LocalCache$Strength valueStrength -> f
    java.lang.Boolean recordStats -> g
    long writeExpirationDuration -> h
    java.util.concurrent.TimeUnit writeExpirationTimeUnit -> i
    long accessExpirationDuration -> j
    java.util.concurrent.TimeUnit accessExpirationTimeUnit -> k
    long refreshDuration -> l
    java.util.concurrent.TimeUnit refreshTimeUnit -> m
    java.lang.String specification -> q
    com.google.common.cache.CacheBuilderSpec parse(java.lang.String) -> parse
    com.google.common.cache.CacheBuilderSpec disableCaching() -> disableCaching
    com.google.common.cache.CacheBuilder toCacheBuilder() -> a
    java.lang.String toParsableString() -> toParsableString
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit) -> a
com.google.common.cache.CacheBuilderSpec$1 -> kH:
    int[] $SwitchMap$com$google$common$cache$LocalCache$Strength -> a
com.google.common.cache.CacheBuilderSpec$AccessDurationParser -> kI:
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> a
com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser -> kJ:
    void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> a
com.google.common.cache.CacheBuilderSpec$DurationParser -> kK:
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$InitialCapacityParser -> kL:
    void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> a
com.google.common.cache.CacheBuilderSpec$IntegerParser -> kM:
    void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$KeyStrengthParser -> kN:
    com.google.common.cache.LocalCache$Strength strength -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$LongParser -> kO:
    void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$MaximumSizeParser -> kP:
    void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> a
com.google.common.cache.CacheBuilderSpec$MaximumWeightParser -> kQ:
    void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> a
com.google.common.cache.CacheBuilderSpec$RecordStatsParser -> kR:
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$RefreshDurationParser -> kS:
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> a
com.google.common.cache.CacheBuilderSpec$ValueParser -> kT:
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$ValueStrengthParser -> kU:
    com.google.common.cache.LocalCache$Strength strength -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$WriteDurationParser -> kV:
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> a
com.google.common.cache.CacheLoader -> com.google.common.cache.CacheLoader:
    java.lang.Object load(java.lang.Object) -> load
    com.google.common.util.concurrent.ListenableFuture reload(java.lang.Object,java.lang.Object) -> reload
    java.util.Map loadAll(java.lang.Iterable) -> loadAll
    com.google.common.cache.CacheLoader from(com.google.common.base.Function) -> from
    com.google.common.cache.CacheLoader from(com.google.common.base.Supplier) -> from
com.google.common.cache.CacheLoader$FunctionToCacheLoader -> kW:
    com.google.common.base.Function computingFunction -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.CacheLoader$InvalidCacheLoadException -> com.google.common.cache.CacheLoader$InvalidCacheLoadException:
com.google.common.cache.CacheLoader$SupplierToCacheLoader -> kX:
    com.google.common.base.Supplier computingSupplier -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException -> kY:
com.google.common.cache.CacheStats -> com.google.common.cache.CacheStats:
    long hitCount -> a
    long missCount -> b
    long loadSuccessCount -> c
    long loadExceptionCount -> d
    long totalLoadTime -> e
    long evictionCount -> f
    long requestCount() -> requestCount
    long hitCount() -> hitCount
    double hitRate() -> hitRate
    long missCount() -> missCount
    double missRate() -> missRate
    long loadCount() -> loadCount
    long loadSuccessCount() -> loadSuccessCount
    long loadExceptionCount() -> loadExceptionCount
    double loadExceptionRate() -> loadExceptionRate
    long totalLoadTime() -> totalLoadTime
    double averageLoadPenalty() -> averageLoadPenalty
    long evictionCount() -> evictionCount
    com.google.common.cache.CacheStats minus(com.google.common.cache.CacheStats) -> minus
    com.google.common.cache.CacheStats plus(com.google.common.cache.CacheStats) -> plus
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.cache.ForwardingCache -> com.google.common.cache.ForwardingCache:
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    long size() -> size
    com.google.common.cache.CacheStats stats() -> stats
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    void cleanUp() -> cleanUp
    java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingCache$SimpleForwardingCache -> com.google.common.cache.ForwardingCache$SimpleForwardingCache:
    com.google.common.cache.Cache delegate -> a
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingLoadingCache -> com.google.common.cache.ForwardingLoadingCache:
    com.google.common.cache.LoadingCache delegate() -> delegate
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache -> com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache:
    com.google.common.cache.LoadingCache delegate -> a
    com.google.common.cache.LoadingCache delegate() -> delegate
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.cache.LoadingCache -> com.google.common.cache.LoadingCache:
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
    java.util.concurrent.ConcurrentMap asMap() -> asMap
com.google.common.cache.LocalCache -> kZ:
    java.util.logging.Logger logger -> a
    com.google.common.util.concurrent.ListeningExecutorService sameThreadExecutor -> b
    int segmentMask -> c
    int segmentShift -> d
    com.google.common.cache.LocalCache$Segment[] segments -> e
    int concurrencyLevel -> f
    com.google.common.base.Equivalence keyEquivalence -> g
    com.google.common.base.Equivalence valueEquivalence -> h
    com.google.common.cache.LocalCache$Strength keyStrength -> i
    com.google.common.cache.LocalCache$Strength valueStrength -> j
    long maxWeight -> k
    com.google.common.cache.Weigher weigher -> l
    long expireAfterAccessNanos -> m
    long expireAfterWriteNanos -> n
    long refreshNanos -> o
    java.util.Queue removalNotificationQueue -> p
    com.google.common.cache.RemovalListener removalListener -> q
    com.google.common.base.Ticker ticker -> r
    com.google.common.cache.LocalCache$EntryFactory entryFactory -> s
    com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter -> t
    com.google.common.cache.CacheLoader defaultLoader -> u
    com.google.common.cache.LocalCache$ValueReference UNSET -> v
    java.util.Queue DISCARDING_QUEUE -> w
    java.util.Set keySet -> x
    java.util.Collection values -> y
    java.util.Set entrySet -> z
    boolean evictsBySize() -> a
    boolean customWeigher() -> b
    boolean expiresAfterWrite() -> p
    boolean expiresAfterAccess() -> q
    boolean refreshes() -> c
    boolean usesAccessQueue() -> d
    boolean usesWriteQueue() -> e
    boolean recordsWrite() -> f
    boolean recordsAccess() -> g
    boolean usesKeyReferences() -> h
    boolean usesValueReferences() -> i
    com.google.common.cache.LocalCache$ValueReference unset() -> j
    com.google.common.cache.LocalCache$ReferenceEntry nullEntry() -> k
    java.util.Queue discardingQueue() -> l
    int hash(java.lang.Object) -> d
    void reclaimValue(com.google.common.cache.LocalCache$ValueReference) -> a
    void reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$Segment segmentFor(int) -> a
    com.google.common.cache.LocalCache$Segment createSegment(int,long,com.google.common.cache.AbstractCache$StatsCounter) -> a
    java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long) -> a
    boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long) -> b
    void connectAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void nullifyAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    void connectWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> b
    void nullifyWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    void processPendingNotifications() -> m
    void cleanUp() -> n
    boolean isEmpty() -> isEmpty
    long longSize() -> o
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getIfPresent(java.lang.Object) -> a
    java.lang.Object get(java.lang.Object,com.google.common.cache.CacheLoader) -> a
    java.lang.Object getOrLoad(java.lang.Object) -> b
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> a
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> b
    java.util.Map loadAll(java.util.Set,com.google.common.cache.CacheLoader) -> a
    void refresh(java.lang.Object) -> c
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    void clear() -> clear
    void invalidateAll(java.lang.Iterable) -> c
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
com.google.common.cache.LocalCache$1 -> la:
    java.lang.Object get() -> get
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
    java.lang.Object waitForValue() -> e
    void notifyNewValue(java.lang.Object) -> a
com.google.common.cache.LocalCache$2 -> lb:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.cache.LocalCache$AbstractCacheSet -> lc:
    java.util.concurrent.ConcurrentMap map -> a
    com.google.common.cache.LocalCache this$0 -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.cache.LocalCache$AbstractReferenceEntry -> ld:
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$AccessQueue -> le:
    com.google.common.cache.LocalCache$ReferenceEntry head -> a
    com.google.common.cache.LocalCache$ReferenceEntry peek() -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.cache.LocalCache$AccessQueue$1 -> lf:
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> a
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> b
    com.google.common.cache.LocalCache$AccessQueue this$0 -> c
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
com.google.common.cache.LocalCache$AccessQueue$2 -> lg:
    com.google.common.cache.LocalCache$AccessQueue this$0 -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.cache.LocalCache$EntryFactory -> lh:
    com.google.common.cache.LocalCache$EntryFactory STRONG -> a
    com.google.common.cache.LocalCache$EntryFactory STRONG_ACCESS -> b
    com.google.common.cache.LocalCache$EntryFactory STRONG_WRITE -> c
    com.google.common.cache.LocalCache$EntryFactory STRONG_ACCESS_WRITE -> d
    com.google.common.cache.LocalCache$EntryFactory WEAK -> e
    com.google.common.cache.LocalCache$EntryFactory WEAK_ACCESS -> f
    com.google.common.cache.LocalCache$EntryFactory WEAK_WRITE -> g
    com.google.common.cache.LocalCache$EntryFactory WEAK_ACCESS_WRITE -> h
    com.google.common.cache.LocalCache$EntryFactory[] factories -> i
    com.google.common.cache.LocalCache$EntryFactory[] $VALUES -> j
    com.google.common.cache.LocalCache$EntryFactory[] values() -> values
    com.google.common.cache.LocalCache$EntryFactory valueOf(java.lang.String) -> valueOf
    com.google.common.cache.LocalCache$EntryFactory getFactory(com.google.common.cache.LocalCache$Strength,boolean,boolean) -> a
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void copyAccessEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void copyWriteEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> b
com.google.common.cache.LocalCache$EntryFactory$1 -> li:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$2 -> lj:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$3 -> lk:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$4 -> ll:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$5 -> lm:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$6 -> ln:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$7 -> lo:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$8 -> lp:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryIterator -> lq:
    com.google.common.cache.LocalCache this$0 -> a
    java.lang.Object next() -> next
com.google.common.cache.LocalCache$EntrySet -> lr:
    com.google.common.cache.LocalCache this$0 -> c
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.cache.LocalCache$HashIterator -> ls:
    int nextSegmentIndex -> b
    int nextTableIndex -> c
    com.google.common.cache.LocalCache$Segment currentSegment -> d
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> e
    com.google.common.cache.LocalCache$ReferenceEntry nextEntry -> f
    com.google.common.cache.LocalCache$WriteThroughEntry nextExternal -> g
    com.google.common.cache.LocalCache$WriteThroughEntry lastReturned -> h
    com.google.common.cache.LocalCache this$0 -> i
    void advance() -> b
    boolean nextInChain() -> c
    boolean nextInTable() -> d
    boolean advanceTo(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean hasNext() -> hasNext
    com.google.common.cache.LocalCache$WriteThroughEntry nextEntry() -> a
    void remove() -> remove
com.google.common.cache.LocalCache$KeyIterator -> lt:
    com.google.common.cache.LocalCache this$0 -> a
    java.lang.Object next() -> next
com.google.common.cache.LocalCache$KeySet -> lu:
    com.google.common.cache.LocalCache this$0 -> c
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.cache.LocalCache$LoadingSerializationProxy -> lv:
    long serialVersionUID -> serialVersionUID
    com.google.common.cache.LoadingCache autoDelegate -> a
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
    java.lang.Object readResolve() -> readResolve
com.google.common.cache.LocalCache$LoadingValueReference -> lw:
    com.google.common.cache.LocalCache$ValueReference oldValue -> a
    com.google.common.util.concurrent.SettableFuture futureValue -> b
    com.google.common.base.Stopwatch stopwatch -> c
    boolean isLoading() -> c
    boolean isActive() -> d
    int getWeight() -> a
    boolean set(java.lang.Object) -> b
    boolean setException(java.lang.Throwable) -> a
    void notifyNewValue(java.lang.Object) -> a
    com.google.common.util.concurrent.ListenableFuture loadFuture(java.lang.Object,com.google.common.cache.CacheLoader) -> a
    long elapsedNanos() -> f
    java.lang.Object waitForValue() -> e
    java.lang.Object get() -> get
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$LoadingValueReference$1 -> lx:
    com.google.common.cache.LocalCache$LoadingValueReference this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.cache.LocalCache$LocalLoadingCache -> ly:
    long serialVersionUID -> serialVersionUID
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    void refresh(java.lang.Object) -> refresh
    java.lang.Object apply(java.lang.Object) -> apply
    java.lang.Object writeReplace() -> writeReplace
com.google.common.cache.LocalCache$LocalManualCache -> lz:
    com.google.common.cache.LocalCache localCache -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    long size() -> size
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    com.google.common.cache.CacheStats stats() -> stats
    void cleanUp() -> cleanUp
    java.lang.Object writeReplace() -> writeReplace
com.google.common.cache.LocalCache$LocalManualCache$1 -> lA:
    java.util.concurrent.Callable val$valueLoader -> a
    com.google.common.cache.LocalCache$LocalManualCache this$0 -> b
    java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.LocalCache$ManualSerializationProxy -> lB:
    long serialVersionUID -> serialVersionUID
    com.google.common.cache.LocalCache$Strength keyStrength -> b
    com.google.common.cache.LocalCache$Strength valueStrength -> c
    com.google.common.base.Equivalence keyEquivalence -> d
    com.google.common.base.Equivalence valueEquivalence -> e
    long expireAfterWriteNanos -> f
    long expireAfterAccessNanos -> g
    long maxWeight -> h
    com.google.common.cache.Weigher weigher -> i
    int concurrencyLevel -> j
    com.google.common.cache.RemovalListener removalListener -> k
    com.google.common.base.Ticker ticker -> l
    com.google.common.cache.CacheLoader loader -> m
    com.google.common.cache.Cache delegate -> n
    com.google.common.cache.CacheBuilder recreateCacheBuilder() -> a
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.cache.LocalCache$NullEntry -> lC:
    com.google.common.cache.LocalCache$NullEntry INSTANCE -> a
    com.google.common.cache.LocalCache$NullEntry[] $VALUES -> b
    com.google.common.cache.LocalCache$NullEntry[] values() -> values
    com.google.common.cache.LocalCache$NullEntry valueOf(java.lang.String) -> valueOf
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$ReferenceEntry -> lD:
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$Segment -> lE:
    com.google.common.cache.LocalCache map -> a
    int count -> b
    int totalWeight -> c
    int modCount -> d
    int threshold -> e
    java.util.concurrent.atomic.AtomicReferenceArray table -> f
    long maxSegmentWeight -> g
    java.lang.ref.ReferenceQueue keyReferenceQueue -> h
    java.lang.ref.ReferenceQueue valueReferenceQueue -> i
    java.util.Queue recencyQueue -> j
    java.util.concurrent.atomic.AtomicInteger readCount -> k
    java.util.Queue writeQueue -> l
    java.util.Queue accessQueue -> m
    com.google.common.cache.AbstractCache$StatsCounter statsCounter -> n
    java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> a
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long) -> a
    java.lang.Object get(java.lang.Object,int,com.google.common.cache.CacheLoader) -> a
    java.lang.Object lockedGetOrLoad(java.lang.Object,int,com.google.common.cache.CacheLoader) -> b
    java.lang.Object waitForLoadingValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,com.google.common.cache.LocalCache$ValueReference) -> a
    java.lang.Object getAndRecordStats(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.util.concurrent.ListenableFuture) -> a
    java.lang.Object scheduleRefresh(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,java.lang.Object,long,com.google.common.cache.CacheLoader) -> a
    java.lang.Object refresh(java.lang.Object,int,com.google.common.cache.CacheLoader,boolean) -> a
    com.google.common.cache.LocalCache$LoadingValueReference insertLoadingValueReference(java.lang.Object,int,boolean) -> a
    void tryDrainReferenceQueues() -> d
    void drainReferenceQueues() -> e
    void recordRead(com.google.common.cache.LocalCache$ReferenceEntry,long) -> b
    void recordLockedRead(com.google.common.cache.LocalCache$ReferenceEntry,long) -> c
    void drainRecencyQueue() -> f
    void tryExpireEntries(long) -> a
    void expireEntries(long) -> b
    void enqueueNotification(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.RemovalCause) -> a
    void enqueueNotification$1dd09a7a(java.lang.Object,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause) -> a
    void evictEntries() -> g
    com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object,int) -> d
    com.google.common.cache.LocalCache$ReferenceEntry getLiveEntry(java.lang.Object,int,long) -> a
    java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long) -> a
    java.lang.Object get(java.lang.Object,int) -> a
    boolean containsKey(java.lang.Object,int) -> b
    java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> a
    void expand() -> h
    boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> a
    java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object,int) -> c
    boolean storeLoadedValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,java.lang.Object) -> a
    boolean remove(java.lang.Object,int,java.lang.Object) -> b
    void clear() -> a
    com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause) -> a
    com.google.common.cache.LocalCache$ReferenceEntry removeEntryFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> b
    void removeCollectedEntry(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry,int) -> a
    boolean reclaimValue(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference) -> a
    boolean removeLoadingValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference) -> a
    boolean removeEntry(com.google.common.cache.LocalCache$ReferenceEntry,int,com.google.common.cache.RemovalCause) -> a
    void postReadCleanup() -> b
    void cleanUp() -> c
    void runLockedCleanup(long) -> c
    void runUnlockedCleanup() -> i
com.google.common.cache.LocalCache$Segment$1 -> lF:
    java.lang.Object val$key -> a
    int val$hash -> b
    com.google.common.cache.LocalCache$LoadingValueReference val$loadingValueReference -> c
    com.google.common.util.concurrent.ListenableFuture val$loadingFuture -> d
    com.google.common.cache.LocalCache$Segment this$0 -> e
    void run() -> run
com.google.common.cache.LocalCache$SoftValueReference -> lG:
    com.google.common.cache.LocalCache$ReferenceEntry entry -> a
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    void notifyNewValue(java.lang.Object) -> a
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
    java.lang.Object waitForValue() -> e
com.google.common.cache.LocalCache$Strength -> lH:
    com.google.common.cache.LocalCache$Strength STRONG -> a
    com.google.common.cache.LocalCache$Strength SOFT -> b
    com.google.common.cache.LocalCache$Strength WEAK -> c
    com.google.common.cache.LocalCache$Strength[] $VALUES -> d
    com.google.common.cache.LocalCache$Strength[] values() -> values
    com.google.common.cache.LocalCache$Strength valueOf(java.lang.String) -> valueOf
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.cache.LocalCache$Strength$1 -> lI:
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.cache.LocalCache$Strength$2 -> lJ:
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.cache.LocalCache$Strength$3 -> lK:
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.cache.LocalCache$StrongAccessEntry -> lL:
    long accessTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> c
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
com.google.common.cache.LocalCache$StrongAccessWriteEntry -> lM:
    long accessTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> c
    long writeTime -> d
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> e
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> f
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$StrongEntry -> lN:
    java.lang.Object key -> g
    int hash -> h
    com.google.common.cache.LocalCache$ReferenceEntry next -> i
    com.google.common.cache.LocalCache$ValueReference valueReference -> j
    java.lang.Object getKey() -> d
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    int getHash() -> c
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
com.google.common.cache.LocalCache$StrongValueReference -> lO:
    java.lang.Object referent -> a
    java.lang.Object get() -> get
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
    java.lang.Object waitForValue() -> e
    void notifyNewValue(java.lang.Object) -> a
com.google.common.cache.LocalCache$StrongWriteEntry -> lP:
    long writeTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> c
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$ValueIterator -> lQ:
    com.google.common.cache.LocalCache this$0 -> a
    java.lang.Object next() -> next
com.google.common.cache.LocalCache$ValueReference -> lR:
    java.lang.Object get() -> get
    java.lang.Object waitForValue() -> e
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void notifyNewValue(java.lang.Object) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
com.google.common.cache.LocalCache$Values -> lS:
    com.google.common.cache.LocalCache this$0 -> c
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
com.google.common.cache.LocalCache$WeakAccessEntry -> lT:
    long accessTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> c
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
com.google.common.cache.LocalCache$WeakAccessWriteEntry -> lU:
    long accessTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> c
    long writeTime -> d
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> e
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> f
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$WeakEntry -> lV:
    int hash -> g
    com.google.common.cache.LocalCache$ReferenceEntry next -> h
    com.google.common.cache.LocalCache$ValueReference valueReference -> i
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    int getHash() -> c
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
com.google.common.cache.LocalCache$WeakValueReference -> lW:
    com.google.common.cache.LocalCache$ReferenceEntry entry -> a
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    void notifyNewValue(java.lang.Object) -> a
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
    java.lang.Object waitForValue() -> e
com.google.common.cache.LocalCache$WeakWriteEntry -> lX:
    long writeTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> c
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$WeightedSoftValueReference -> lY:
    int weight -> b
    int getWeight() -> a
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$WeightedStrongValueReference -> lZ:
    int weight -> b
    int getWeight() -> a
com.google.common.cache.LocalCache$WeightedWeakValueReference -> ma:
    int weight -> b
    int getWeight() -> a
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$WriteQueue -> mb:
    com.google.common.cache.LocalCache$ReferenceEntry head -> a
    com.google.common.cache.LocalCache$ReferenceEntry peek() -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.cache.LocalCache$WriteQueue$1 -> mc:
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> a
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> b
    com.google.common.cache.LocalCache$WriteQueue this$0 -> c
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$WriteQueue$2 -> md:
    com.google.common.cache.LocalCache$WriteQueue this$0 -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.cache.LocalCache$WriteThroughEntry -> me:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.cache.LocalCache this$0 -> c
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.String toString() -> toString
com.google.common.cache.LongAddable -> mf:
    void increment() -> a
    void add(long) -> a
    long sum() -> b
com.google.common.cache.LongAddables -> mg:
    com.google.common.base.Supplier SUPPLIER -> a
    com.google.common.cache.LongAddable create() -> a
com.google.common.cache.LongAddables$1 -> mh:
    java.lang.Object get() -> get
com.google.common.cache.LongAddables$2 -> mi:
    java.lang.Object get() -> get
com.google.common.cache.LongAddables$PureJavaLongAddable -> mj:
    void increment() -> a
    void add(long) -> a
    long sum() -> b
com.google.common.cache.LongAdder -> mk:
    long serialVersionUID -> serialVersionUID
    long fn(long,long) -> a
    void add(long) -> a
    void increment() -> a
    long sum() -> b
    java.lang.String toString() -> toString
    long longValue() -> longValue
    int intValue() -> intValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.cache.RemovalCause -> com.google.common.cache.RemovalCause:
    com.google.common.cache.RemovalCause EXPLICIT -> EXPLICIT
    com.google.common.cache.RemovalCause REPLACED -> REPLACED
    com.google.common.cache.RemovalCause COLLECTED -> COLLECTED
    com.google.common.cache.RemovalCause EXPIRED -> EXPIRED
    com.google.common.cache.RemovalCause SIZE -> SIZE
    com.google.common.cache.RemovalCause[] $VALUES -> a
    com.google.common.cache.RemovalCause[] values() -> values
    com.google.common.cache.RemovalCause valueOf(java.lang.String) -> valueOf
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$1 -> ml:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$2 -> mm:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$3 -> mn:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$4 -> mo:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$5 -> mp:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalListener -> com.google.common.cache.RemovalListener:
    void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
com.google.common.cache.RemovalListeners -> com.google.common.cache.RemovalListeners:
    com.google.common.cache.RemovalListener asynchronous(com.google.common.cache.RemovalListener,java.util.concurrent.Executor) -> asynchronous
com.google.common.cache.RemovalListeners$1 -> mq:
    java.util.concurrent.Executor val$executor -> a
    com.google.common.cache.RemovalListener val$listener -> b
    void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
com.google.common.cache.RemovalListeners$1$1 -> mr:
    com.google.common.cache.RemovalNotification val$notification -> a
    com.google.common.cache.RemovalListeners$1 this$0 -> b
    void run() -> run
com.google.common.cache.RemovalNotification -> com.google.common.cache.RemovalNotification:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.cache.RemovalCause cause -> c
    com.google.common.cache.RemovalCause getCause() -> getCause
    boolean wasEvicted() -> wasEvicted
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.cache.Striped64 -> ms:
    com.google.common.cache.Striped64$ThreadHashCode threadHashCode -> a
    int NCPU -> b
    com.google.common.cache.Striped64$Cell[] cells -> c
    long base -> d
    int busy -> e
    sun.misc.Unsafe UNSAFE -> f
    long baseOffset -> g
    long busyOffset -> h
    boolean casBase(long,long) -> b
    boolean casBusy() -> c
    long fn(long,long) -> a
    sun.misc.Unsafe getUnsafe() -> a
    sun.misc.Unsafe access$000() -> d
com.google.common.cache.Striped64$1 -> mt:
    java.lang.Object run() -> run
com.google.common.cache.Striped64$Cell -> mu:
    long value -> a
    sun.misc.Unsafe UNSAFE -> b
    long valueOffset -> c
    boolean cas(long,long) -> a
com.google.common.cache.Striped64$HashCode -> mv:
    java.util.Random rng -> a
    int code -> b
com.google.common.cache.Striped64$ThreadHashCode -> mw:
    java.lang.Object initialValue() -> initialValue
com.google.common.cache.Weigher -> com.google.common.cache.Weigher:
    int weigh(java.lang.Object,java.lang.Object) -> weigh
com.google.common.collect.AbstractBiMap -> mx:
    java.util.Map delegate -> b
    com.google.common.collect.AbstractBiMap inverse -> a
    java.util.Set keySet -> c
    java.util.Set valueSet -> d
    java.util.Set entrySet -> e
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> delegate
    java.lang.Object checkKey(java.lang.Object) -> a
    java.lang.Object checkValue(java.lang.Object) -> b
    void setDelegates(java.util.Map,java.util.Map) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object putInBothMaps(java.lang.Object,java.lang.Object,boolean) -> a
    void updateInverseMap(java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeFromBothMaps(java.lang.Object) -> c
    void removeFromInverseMap(java.lang.Object) -> d
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set keySet() -> keySet
    java.util.Set values() -> values
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
    java.util.Map access$200(com.google.common.collect.AbstractBiMap) -> a
    java.lang.Object access$300(com.google.common.collect.AbstractBiMap,java.lang.Object) -> a
    void access$600(com.google.common.collect.AbstractBiMap,java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> a
    void access$700(com.google.common.collect.AbstractBiMap,java.lang.Object) -> b
com.google.common.collect.AbstractBiMap$EntrySet -> my:
    java.util.Set esDelegate -> a
    com.google.common.collect.AbstractBiMap this$0 -> b
    java.util.Set delegate() -> delegate
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$EntrySet$1 -> mz:
    java.util.Map$Entry entry -> a
    java.util.Iterator val$iterator -> b
    com.google.common.collect.AbstractBiMap$EntrySet this$1 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractBiMap$EntrySet$1$1 -> mA:
    java.util.Map$Entry val$finalEntry -> a
    com.google.common.collect.AbstractBiMap$EntrySet$1 this$2 -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$Inverse -> mB:
    long serialVersionUID -> serialVersionUID
    java.lang.Object checkKey(java.lang.Object) -> a
    java.lang.Object checkValue(java.lang.Object) -> b
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$KeySet -> mC:
    com.google.common.collect.AbstractBiMap this$0 -> a
    java.util.Set delegate() -> delegate
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Iterator iterator() -> iterator
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$ValueSet -> mD:
    java.util.Set valuesDelegate -> a
    com.google.common.collect.AbstractBiMap this$0 -> b
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractIndexedListIterator -> mE:
    int size -> a
    int position -> b
    java.lang.Object get(int) -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    com.google.common.collect.AbstractIterator$State state -> a
    java.lang.Object next -> b
    java.lang.Object computeNext() -> computeNext
    java.lang.Object endOfData() -> endOfData
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.lang.Object peek() -> peek
com.google.common.collect.AbstractIterator$1 -> mF:
    int[] $SwitchMap$com$google$common$collect$AbstractIterator$State -> a
com.google.common.collect.AbstractIterator$State -> mG:
    com.google.common.collect.AbstractIterator$State READY -> a
    com.google.common.collect.AbstractIterator$State NOT_READY -> b
    com.google.common.collect.AbstractIterator$State DONE -> c
    com.google.common.collect.AbstractIterator$State FAILED -> d
    com.google.common.collect.AbstractIterator$State[] $VALUES -> e
    com.google.common.collect.AbstractIterator$State[] values() -> values
    com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
com.google.common.collect.AbstractListMultimap -> mH:
    long serialVersionUID -> serialVersionUID
    java.util.List createCollection() -> a
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> b
    java.util.Collection createUnmodifiableEmptyCollection() -> c
com.google.common.collect.AbstractMapBasedMultimap -> mI:
    java.util.Map map -> a
    int totalSize -> b
    long serialVersionUID -> serialVersionUID
    void setMap(java.util.Map) -> a
    java.util.Collection createUnmodifiableEmptyCollection() -> c
    java.util.Collection createCollection() -> b
    java.util.Collection createCollection(java.lang.Object) -> a
    java.util.Map backingMap() -> d
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> a
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> a
    java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> a
    java.util.Set createKeySet() -> e
    java.util.Collection values() -> values
    java.util.Iterator valueIterator() -> f
    java.util.Collection entries() -> entries
    java.util.Iterator entryIterator() -> g
    java.util.Map createAsMap() -> h
    java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> a
    java.util.Iterator access$100(com.google.common.collect.AbstractMapBasedMultimap,java.util.Collection) -> a
    int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> b
    int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> c
    int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> a
    int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> b
    java.util.List access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> a
    int access$400(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> a
com.google.common.collect.AbstractMapBasedMultimap$1 -> mJ:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    java.lang.Object output(java.lang.Object,java.lang.Object) -> a
com.google.common.collect.AbstractMapBasedMultimap$2 -> mK:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    java.lang.Object output(java.lang.Object,java.lang.Object) -> a
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> mL:
    java.util.Map submap -> a
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> b
    java.util.Set createEntrySet() -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Set keySet() -> keySet
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> a
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> mM:
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> mN:
    java.util.Iterator delegateIterator -> a
    java.util.Collection collection -> b
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultimap$Itr -> mO:
    java.util.Iterator keyIterator -> b
    java.lang.Object key -> c
    java.util.Collection collection -> d
    java.util.Iterator valueIterator -> e
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> f
    java.lang.Object output(java.lang.Object,java.lang.Object) -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> mP:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> mQ:
    java.util.Map$Entry entry -> a
    java.util.Iterator val$entryIterator -> b
    com.google.common.collect.AbstractMapBasedMultimap$KeySet this$1 -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> mR:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> c
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.Map$Entry pollAsMapEntry(java.util.Iterator) -> a
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.NavigableSet createKeySet() -> f
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedSet createKeySet() -> b
    java.util.SortedSet keySet() -> c
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap sortedMap() -> d
    java.util.Set keySet() -> keySet
    java.util.Set createKeySet() -> e
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> mS:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> b
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedMap sortedMap() -> a
com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList -> mT:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> mU:
    java.util.SortedSet sortedKeySet -> d
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> e
    java.util.SortedMap sortedMap() -> d
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedSet keySet() -> c
    java.util.SortedSet createKeySet() -> b
    java.util.Set keySet() -> keySet
    java.util.Set createKeySet() -> e
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> mV:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> c
    java.util.SortedMap sortedMap() -> a
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> mW:
    java.lang.Object key -> b
    java.util.Collection delegate -> c
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection ancestor -> d
    java.util.Collection ancestorDelegate -> e
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> f
    void refreshIfEmpty() -> a
    void removeIfEmpty() -> b
    void addToMap() -> c
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> mX:
    java.util.Iterator delegateIterator -> a
    java.util.Collection originalDelegate -> b
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1 -> c
    void validateIterator() -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$WrappedList -> mY:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> g
    java.util.List getListDelegate() -> d
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator -> mZ:
    com.google.common.collect.AbstractMapBasedMultimap$WrappedList this$1 -> d
    java.util.ListIterator getDelegateListIterator() -> b
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet -> na:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet wrap(java.util.NavigableSet) -> a
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet getSortedSetDelegate() -> d
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> nb:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> nc:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> g
    java.util.SortedSet getSortedSetDelegate() -> d
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultiset -> nd:
    java.util.Map backingMap -> a
    long size -> b
    long serialVersionUID -> serialVersionUID
    java.util.Set entrySet() -> entrySet
    java.util.Iterator entryIterator() -> a
    void clear() -> clear
    int distinctElements() -> b
    int size() -> size
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    int getAndSet(com.google.common.collect.Count,int) -> a
    java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset) -> a
    long access$122(com.google.common.collect.AbstractMapBasedMultiset,long) -> a
    long access$110(com.google.common.collect.AbstractMapBasedMultiset) -> b
com.google.common.collect.AbstractMapBasedMultiset$1 -> ne:
    java.util.Map$Entry toRemove -> a
    java.util.Iterator val$backingEntries -> b
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultiset$1$1 -> nf:
    java.util.Map$Entry val$mapEntry -> a
    com.google.common.collect.AbstractMapBasedMultiset$1 this$1 -> b
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator -> ng:
    java.util.Iterator entryIterator -> a
    java.util.Map$Entry currentEntry -> b
    int occurrencesLeft -> c
    boolean canRemove -> d
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapEntry -> nh:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> ni:
    java.util.Collection entries -> a
    java.util.Set keySet -> b
    com.google.common.collect.Multiset keys -> c
    java.util.Collection values -> d
    java.util.Map asMap -> e
    boolean isEmpty() -> isEmpty
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection entries() -> entries
    java.util.Collection createEntries() -> i
    java.util.Iterator entryIterator() -> g
    java.util.Set keySet() -> keySet
    java.util.Set createKeySet() -> e
    com.google.common.collect.Multiset keys() -> keys
    com.google.common.collect.Multiset createKeys() -> j
    java.util.Collection values() -> values
    java.util.Collection createValues() -> k
    java.util.Iterator valueIterator() -> f
    java.util.Map asMap() -> asMap
    java.util.Map createAsMap() -> h
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap$Entries -> nj:
    com.google.common.collect.AbstractMultimap this$0 -> a
    com.google.common.collect.Multimap multimap() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractMultimap$EntrySet -> nk:
    com.google.common.collect.AbstractMultimap this$0 -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.AbstractMultimap$Values -> nl:
    com.google.common.collect.AbstractMultimap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.common.collect.AbstractMultiset -> nm:
    java.util.Set elementSet -> a
    java.util.Set entrySet -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    boolean add(java.lang.Object) -> add
    int add(java.lang.Object,int) -> add
    boolean remove(java.lang.Object) -> remove
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.util.Set elementSet() -> elementSet
    java.util.Set createElementSet() -> c
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set createEntrySet() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset$ElementSet -> nn:
    com.google.common.collect.AbstractMultiset this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
com.google.common.collect.AbstractMultiset$EntrySet -> no:
    com.google.common.collect.AbstractMultiset this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.AbstractNavigableMap -> np:
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.AbstractNavigableMap$1 -> nq:
    com.google.common.collect.AbstractNavigableMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractNavigableMap$DescendingMap -> nr:
    com.google.common.collect.AbstractNavigableMap this$0 -> a
    java.util.NavigableMap forward() -> a
    java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.AbstractRangeSet -> ns:
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    boolean isEmpty() -> isEmpty
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    void clear() -> clear
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    void addAll(com.google.common.collect.RangeSet) -> addAll
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    boolean encloses(com.google.common.collect.Range) -> encloses
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractSequentialIterator -> com.google.common.collect.AbstractSequentialIterator:
    java.lang.Object nextOrNull -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.AbstractSetMultimap -> nt:
    long serialVersionUID -> serialVersionUID
    java.util.Set createCollection() -> a
    java.util.Set createUnmodifiableEmptyCollection() -> l
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean equals(java.lang.Object) -> equals
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> b
    java.util.Collection createUnmodifiableEmptyCollection() -> c
com.google.common.collect.AbstractSortedKeySortedSetMultimap -> nu:
    java.util.SortedMap asMap() -> asMap
    java.util.SortedMap backingMap() -> m
    java.util.SortedSet keySet() -> keySet
    java.util.Map asMap() -> asMap
    java.util.Set keySet() -> keySet
    java.util.Map backingMap() -> d
com.google.common.collect.AbstractSortedMultiset -> nv:
    java.util.Comparator comparator -> a
    com.google.common.collect.SortedMultiset descendingMultiset -> b
    java.util.NavigableSet elementSet() -> elementSet
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    java.util.Iterator descendingEntryIterator() -> e
    java.util.Iterator descendingIterator() -> f
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    java.util.Set createElementSet() -> c
    java.util.Set elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.AbstractSortedMultiset$1 -> nw:
    com.google.common.collect.AbstractSortedMultiset this$0 -> a
    com.google.common.collect.SortedMultiset forwardMultiset() -> a
    java.util.Iterator entryIterator() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractSortedSetMultimap -> nx:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet createCollection() -> n
    java.util.SortedSet createUnmodifiableEmptyCollection() -> m
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    java.util.Collection values() -> values
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Set createUnmodifiableEmptyCollection() -> l
    java.util.Set createCollection() -> a
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> b
    java.util.Collection createUnmodifiableEmptyCollection() -> c
com.google.common.collect.AbstractTable -> ny:
    java.util.Set cellSet -> a
    java.util.Collection values -> b
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsColumn(java.lang.Object) -> containsColumn
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    boolean containsValue(java.lang.Object) -> containsValue
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.util.Set cellSet() -> cellSet
    java.util.Set createCellSet() -> a
    java.util.Iterator cellIterator() -> b
    java.util.Collection values() -> values
    java.util.Collection createValues() -> c
    java.util.Iterator valuesIterator() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractTable$1 -> nz:
    com.google.common.collect.AbstractTable this$0 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.AbstractTable$CellSet -> nA:
    com.google.common.collect.AbstractTable this$0 -> a
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.AbstractTable$Values -> nB:
    com.google.common.collect.AbstractTable this$0 -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
    int size() -> size
com.google.common.collect.AllEqualOrdering -> nC:
    com.google.common.collect.AllEqualOrdering INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
com.google.common.collect.ArrayListMultimap -> com.google.common.collect.ArrayListMultimap:
    int expectedValuesPerKey -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ArrayListMultimap create() -> create
    com.google.common.collect.ArrayListMultimap create(int,int) -> create
    com.google.common.collect.ArrayListMultimap create(com.google.common.collect.Multimap) -> create
    java.util.List createCollection() -> a
    void trimToSize() -> trimToSize
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    java.util.Map asMap() -> asMap
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    java.util.Collection values() -> values
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    java.util.Collection createCollection() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
com.google.common.collect.ArrayTable -> com.google.common.collect.ArrayTable:
    com.google.common.collect.ImmutableList rowList -> a
    com.google.common.collect.ImmutableList columnList -> b
    com.google.common.collect.ImmutableMap rowKeyToIndex -> c
    com.google.common.collect.ImmutableMap columnKeyToIndex -> d
    java.lang.Object[][] array -> e
    com.google.common.collect.ArrayTable$ColumnMap columnMap -> f
    com.google.common.collect.ArrayTable$RowMap rowMap -> g
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ArrayTable create(java.lang.Iterable,java.lang.Iterable) -> create
    com.google.common.collect.ArrayTable create(com.google.common.collect.Table) -> create
    com.google.common.collect.ImmutableMap index(java.util.List) -> a
    com.google.common.collect.ImmutableList rowKeyList() -> rowKeyList
    com.google.common.collect.ImmutableList columnKeyList() -> columnKeyList
    java.lang.Object at(int,int) -> at
    java.lang.Object set(int,int,java.lang.Object) -> set
    java.lang.Object[][] toArray(java.lang.Class) -> toArray
    void clear() -> clear
    void eraseAll() -> eraseAll
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object erase(java.lang.Object,java.lang.Object) -> erase
    int size() -> size
    java.util.Set cellSet() -> cellSet
    java.util.Iterator cellIterator() -> b
    java.util.Map column(java.lang.Object) -> column
    com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    java.util.Map row(java.lang.Object) -> row
    com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableList access$000(com.google.common.collect.ArrayTable) -> a
    com.google.common.collect.ImmutableList access$100(com.google.common.collect.ArrayTable) -> b
    com.google.common.collect.ImmutableMap access$200(com.google.common.collect.ArrayTable) -> c
    com.google.common.collect.ImmutableMap access$500(com.google.common.collect.ArrayTable) -> d
com.google.common.collect.ArrayTable$1 -> nD:
    com.google.common.collect.ArrayTable this$0 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.ArrayTable$1$1 -> nE:
    int rowIndex -> a
    int columnIndex -> b
    int val$index -> c
    com.google.common.collect.ArrayTable$1 this$1 -> d
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.ArrayTable$ArrayMap -> nF:
    com.google.common.collect.ImmutableMap keyIndex -> a
    java.util.Set keySet() -> keySet
    java.lang.Object getKey(int) -> a
    java.lang.String getKeyRole() -> b
    java.lang.Object getValue(int) -> b
    java.lang.Object setValue(int,java.lang.Object) -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Set createEntrySet() -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.ArrayTable$ArrayMap$1 -> nG:
    com.google.common.collect.ArrayTable$ArrayMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ArrayTable$ArrayMap$1$1 -> nH:
    com.google.common.collect.ArrayTable$ArrayMap$1 this$1 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.ArrayTable$ArrayMap$1$1$1 -> nI:
    int val$index -> a
    com.google.common.collect.ArrayTable$ArrayMap$1$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ArrayTable$Column -> nJ:
    int columnIndex -> a
    com.google.common.collect.ArrayTable this$0 -> b
    java.lang.String getKeyRole() -> b
    java.lang.Object getValue(int) -> b
    java.lang.Object setValue(int,java.lang.Object) -> a
com.google.common.collect.ArrayTable$ColumnMap -> nK:
    com.google.common.collect.ArrayTable this$0 -> a
    java.lang.String getKeyRole() -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object setValue(int,java.lang.Object) -> a
    java.lang.Object getValue(int) -> b
com.google.common.collect.ArrayTable$Row -> nL:
    int rowIndex -> a
    com.google.common.collect.ArrayTable this$0 -> b
    java.lang.String getKeyRole() -> b
    java.lang.Object getValue(int) -> b
    java.lang.Object setValue(int,java.lang.Object) -> a
com.google.common.collect.ArrayTable$RowMap -> nM:
    com.google.common.collect.ArrayTable this$0 -> a
    java.lang.String getKeyRole() -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object setValue(int,java.lang.Object) -> a
    java.lang.Object getValue(int) -> b
com.google.common.collect.BiMap -> com.google.common.collect.BiMap:
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    void putAll(java.util.Map) -> putAll
    java.util.Set values() -> values
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.BinaryTreeTraverser -> com.google.common.collect.BinaryTreeTraverser:
    com.google.common.base.Optional leftChild(java.lang.Object) -> leftChild
    com.google.common.base.Optional rightChild(java.lang.Object) -> rightChild
    java.lang.Iterable children(java.lang.Object) -> children
    com.google.common.collect.FluentIterable inOrderTraversal(java.lang.Object) -> inOrderTraversal
    void access$000(java.util.Deque,com.google.common.base.Optional) -> a
com.google.common.collect.BinaryTreeTraverser$1 -> nN:
    java.lang.Object val$root -> a
    com.google.common.collect.BinaryTreeTraverser this$0 -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.BinaryTreeTraverser$1$1 -> nO:
    boolean doneLeft -> a
    boolean doneRight -> b
    com.google.common.collect.BinaryTreeTraverser$1 this$1 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.BinaryTreeTraverser$2 -> nP:
    java.lang.Object val$root -> a
    com.google.common.collect.BinaryTreeTraverser this$0 -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.BinaryTreeTraverser$InOrderIterator -> nQ:
    java.util.Deque stack -> b
    java.util.BitSet hasExpandedLeft -> c
    com.google.common.collect.BinaryTreeTraverser this$0 -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.BoundType -> com.google.common.collect.BoundType:
    com.google.common.collect.BoundType OPEN -> OPEN
    com.google.common.collect.BoundType CLOSED -> CLOSED
    com.google.common.collect.BoundType[] $VALUES -> a
    com.google.common.collect.BoundType[] values() -> values
    com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    com.google.common.collect.BoundType forBoolean(boolean) -> a
com.google.common.collect.BoundType$1 -> nR:
com.google.common.collect.BoundType$2 -> nS:
com.google.common.collect.ByFunctionOrdering -> nT:
    com.google.common.base.Function function -> a
    com.google.common.collect.Ordering ordering -> b
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.CartesianList -> nU:
    com.google.common.collect.ImmutableList axes -> a
    int[] axesSizeProduct -> b
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableList access$000(com.google.common.collect.CartesianList) -> a
    int access$100(com.google.common.collect.CartesianList,int,int) -> a
com.google.common.collect.CartesianList$1 -> nV:
    int val$index -> a
    com.google.common.collect.CartesianList this$0 -> b
    int size() -> size
    java.lang.Object get(int) -> get
    boolean isPartialView() -> a
com.google.common.collect.ClassToInstanceMap -> com.google.common.collect.ClassToInstanceMap:
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
com.google.common.collect.CollectPreconditions -> nW:
    void checkEntryNotNull(java.lang.Object,java.lang.Object) -> a
    int checkNonnegative(int,java.lang.String) -> a
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    com.google.common.base.Joiner STANDARD_JOINER -> a
    java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate) -> filter
    boolean safeContains(java.util.Collection,java.lang.Object) -> a
    boolean safeRemove(java.util.Collection,java.lang.Object) -> b
    java.util.Collection transform(java.util.Collection,com.google.common.base.Function) -> transform
    boolean containsAllImpl(java.util.Collection,java.util.Collection) -> a
    java.lang.String toStringImpl(java.util.Collection) -> a
    java.lang.StringBuilder newStringBuilderForCollection(int) -> a
    java.util.Collection cast(java.lang.Iterable) -> a
    java.util.Collection orderedPermutations(java.lang.Iterable) -> orderedPermutations
    java.util.Collection orderedPermutations(java.lang.Iterable,java.util.Comparator) -> orderedPermutations
    java.util.Collection permutations(java.util.Collection) -> permutations
    boolean access$000(long) -> a
    boolean access$100(java.util.List,java.util.List) -> a
com.google.common.collect.Collections2$1 -> nX:
    java.util.Collection val$collection -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$FilteredCollection -> nY:
    java.util.Collection unfiltered -> a
    com.google.common.base.Predicate predicate -> b
    com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate) -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Collections2$OrderedPermutationCollection -> nZ:
    com.google.common.collect.ImmutableList inputList -> a
    java.util.Comparator comparator -> b
    int size -> c
    int calculateSize(java.util.List,java.util.Comparator) -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.lang.String toString() -> toString
com.google.common.collect.Collections2$OrderedPermutationIterator -> oa:
    java.util.List nextPermutation -> a
    java.util.Comparator comparator -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Collections2$PermutationCollection -> ob:
    com.google.common.collect.ImmutableList inputList -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.lang.String toString() -> toString
com.google.common.collect.Collections2$PermutationIterator -> oc:
    java.util.List list -> a
    int[] c -> b
    int[] o -> c
    int j -> d
    void switchDirection() -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Collections2$TransformedCollection -> od:
    java.util.Collection fromCollection -> a
    com.google.common.base.Function function -> b
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.ComparatorOrdering -> oe:
    java.util.Comparator comparator -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ComparisonChain -> com.google.common.collect.ComparisonChain:
    com.google.common.collect.ComparisonChain ACTIVE -> a
    com.google.common.collect.ComparisonChain LESS -> b
    com.google.common.collect.ComparisonChain GREATER -> c
    com.google.common.collect.ComparisonChain start() -> start
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    com.google.common.collect.ComparisonChain compare(boolean,boolean) -> compare
    int result() -> result
com.google.common.collect.ComparisonChain$1 -> of:
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    com.google.common.collect.ComparisonChain classify(int) -> a
    int result() -> result
com.google.common.collect.ComparisonChain$InactiveComparisonChain -> og:
    int result -> d
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    int result() -> result
com.google.common.collect.CompoundOrdering -> oh:
    com.google.common.collect.ImmutableList comparators -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ComputationException -> com.google.common.collect.ComputationException:
    long serialVersionUID -> serialVersionUID
com.google.common.collect.ComputingConcurrentHashMap -> oi:
    com.google.common.base.Function computingFunction -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> a
    com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment segmentFor(int) -> b
    java.lang.Object getOrCompute(java.lang.Object) -> a
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> a
com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference -> oj:
    java.lang.Throwable t -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.ComputingConcurrentHashMap$ComputedReference -> ok:
    java.lang.Object value -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment -> ol:
    java.lang.Object getOrCompute(java.lang.Object,int,com.google.common.base.Function) -> a
    java.lang.Object compute(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference) -> a
com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy -> om:
    com.google.common.base.Function computingFunction -> a
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference -> on:
    com.google.common.base.Function computingFunction -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference computedReference -> b
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    java.lang.Object compute$1fb5a060(java.lang.Object) -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> b
com.google.common.collect.ConcurrentHashMultiset -> com.google.common.collect.ConcurrentHashMultiset:
    java.util.concurrent.ConcurrentMap countMap -> a
    com.google.common.collect.ConcurrentHashMultiset$EntrySet entrySet -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ConcurrentHashMultiset create() -> create
    com.google.common.collect.ConcurrentHashMultiset create(java.lang.Iterable) -> create
    com.google.common.collect.ConcurrentHashMultiset create(com.google.common.collect.MapMaker) -> create
    int count(java.lang.Object) -> count
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.List snapshot() -> e
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    boolean removeExactly(java.lang.Object,int) -> removeExactly
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set createElementSet() -> c
    java.util.Set entrySet() -> entrySet
    int distinctElements() -> b
    boolean isEmpty() -> isEmpty
    java.util.Iterator entryIterator() -> a
    void clear() -> clear
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.util.concurrent.ConcurrentMap access$100(com.google.common.collect.ConcurrentHashMultiset) -> a
com.google.common.collect.ConcurrentHashMultiset$1 -> oo:
    java.util.Set val$delegate -> a
    com.google.common.collect.ConcurrentHashMultiset this$0 -> b
    java.util.Set delegate() -> delegate
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ConcurrentHashMultiset$2 -> op:
    java.util.Iterator mapEntries -> b
    com.google.common.collect.ConcurrentHashMultiset this$0 -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.ConcurrentHashMultiset$3 -> oq:
    com.google.common.collect.Multiset$Entry last -> c
    java.util.Iterator val$readOnlyIterator -> a
    com.google.common.collect.ConcurrentHashMultiset this$0 -> b
    java.util.Iterator delegate() -> delegate
    void remove() -> remove
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.ConcurrentHashMultiset$EntrySet -> or:
    com.google.common.collect.ConcurrentHashMultiset this$0 -> b
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.List snapshot() -> b
    com.google.common.collect.Multiset multiset() -> a
com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder -> os:
    com.google.common.collect.Serialization$FieldSetter COUNT_MAP_FIELD_SETTER -> a
com.google.common.collect.Constraint -> com.google.common.collect.Constraint:
    java.lang.Object checkElement(java.lang.Object) -> checkElement
    java.lang.String toString() -> toString
com.google.common.collect.Constraints -> com.google.common.collect.Constraints:
    com.google.common.collect.Constraint notNull() -> notNull
    java.util.Collection constrainedCollection(java.util.Collection,com.google.common.collect.Constraint) -> constrainedCollection
    java.util.Set constrainedSet(java.util.Set,com.google.common.collect.Constraint) -> constrainedSet
    java.util.SortedSet constrainedSortedSet(java.util.SortedSet,com.google.common.collect.Constraint) -> constrainedSortedSet
    java.util.List constrainedList(java.util.List,com.google.common.collect.Constraint) -> constrainedList
    java.util.Collection constrainedTypePreservingCollection(java.util.Collection,com.google.common.collect.Constraint) -> a
    com.google.common.collect.Multiset constrainedMultiset(com.google.common.collect.Multiset,com.google.common.collect.Constraint) -> constrainedMultiset
    java.util.Collection access$000(java.util.Collection,com.google.common.collect.Constraint) -> b
    java.util.ListIterator access$100(java.util.ListIterator,com.google.common.collect.Constraint) -> a
com.google.common.collect.Constraints$ConstrainedCollection -> ot:
    java.util.Collection delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.Collection delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedList -> ou:
    java.util.List delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.List delegate() -> delegate
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedListIterator -> ov:
    java.util.ListIterator delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.ListIterator delegate() -> delegate
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.util.Iterator delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedMultiset -> ow:
    com.google.common.collect.Multiset delegate -> a
    com.google.common.collect.Constraint constraint -> b
    com.google.common.collect.Multiset delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    int add(java.lang.Object,int) -> add
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedRandomAccessList -> ox:
com.google.common.collect.Constraints$ConstrainedSet -> oy:
    java.util.Set delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.Set delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedSortedSet -> oz:
    java.util.SortedSet delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.SortedSet delegate() -> delegate
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$NotNullConstraint -> oA:
    com.google.common.collect.Constraints$NotNullConstraint INSTANCE -> a
    com.google.common.collect.Constraints$NotNullConstraint[] $VALUES -> b
    com.google.common.collect.Constraints$NotNullConstraint[] values() -> values
    com.google.common.collect.Constraints$NotNullConstraint valueOf(java.lang.String) -> valueOf
    java.lang.Object checkElement(java.lang.Object) -> checkElement
    java.lang.String toString() -> toString
com.google.common.collect.ContiguousSet -> com.google.common.collect.ContiguousSet:
    com.google.common.collect.DiscreteDomain domain -> a
    com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain) -> create
    com.google.common.collect.ContiguousSet headSet(java.lang.Comparable) -> headSet
    com.google.common.collect.ContiguousSet headSet(java.lang.Comparable,boolean) -> headSet
    com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,java.lang.Comparable) -> subSet
    com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSet
    com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable) -> tailSet
    com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable,boolean) -> tailSet
    com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> b
    com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    com.google.common.collect.Range range() -> range
    com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    java.lang.String toString() -> toString
    com.google.common.collect.ImmutableSortedSet$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
com.google.common.collect.Count -> oB:
    int value -> a
    int get() -> a
    int addAndGet(int) -> a
    int getAndSet(int) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.collect.Cut -> oC:
    java.lang.Comparable endpoint -> a
    long serialVersionUID -> serialVersionUID
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> c
    int compareTo(com.google.common.collect.Cut) -> a
    java.lang.Comparable endpoint() -> c
    boolean equals(java.lang.Object) -> equals
    com.google.common.collect.Cut belowAll() -> d
    com.google.common.collect.Cut aboveAll() -> e
    com.google.common.collect.Cut belowValue(java.lang.Comparable) -> b
    com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> c
    int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.Cut$1 -> oD:
    int[] $SwitchMap$com$google$common$collect$BoundType -> a
com.google.common.collect.Cut$AboveAll -> oE:
    com.google.common.collect.Cut$AboveAll INSTANCE -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Comparable endpoint() -> c
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    int compareTo(com.google.common.collect.Cut) -> a
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    int compareTo(java.lang.Object) -> compareTo
    com.google.common.collect.Cut$AboveAll access$100() -> f
com.google.common.collect.Cut$AboveValue -> oF:
    long serialVersionUID -> serialVersionUID
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> c
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.Cut$BelowAll -> oG:
    com.google.common.collect.Cut$BelowAll INSTANCE -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Comparable endpoint() -> c
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> c
    int compareTo(com.google.common.collect.Cut) -> a
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    int compareTo(java.lang.Object) -> compareTo
    com.google.common.collect.Cut$BelowAll access$000() -> f
com.google.common.collect.Cut$BelowValue -> oH:
    long serialVersionUID -> serialVersionUID
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.DenseImmutableTable -> oI:
    com.google.common.collect.ImmutableMap rowKeyToIndex -> a
    com.google.common.collect.ImmutableMap columnKeyToIndex -> b
    com.google.common.collect.ImmutableMap rowMap -> c
    com.google.common.collect.ImmutableMap columnMap -> d
    int[] rowCounts -> e
    int[] columnCounts -> f
    java.lang.Object[][] values -> g
    int[] iterationOrderRow -> h
    int[] iterationOrderColumn -> i
    com.google.common.collect.ImmutableMap makeIndex(com.google.common.collect.ImmutableSet) -> a
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    int size() -> size
    com.google.common.collect.Table$Cell getCell(int) -> a
    java.lang.Object getValue(int) -> b
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    int[] access$200(com.google.common.collect.DenseImmutableTable) -> a
    com.google.common.collect.ImmutableMap access$300(com.google.common.collect.DenseImmutableTable) -> b
    java.lang.Object[][] access$400(com.google.common.collect.DenseImmutableTable) -> c
    int[] access$500(com.google.common.collect.DenseImmutableTable) -> d
    com.google.common.collect.ImmutableMap access$600(com.google.common.collect.DenseImmutableTable) -> e
com.google.common.collect.DenseImmutableTable$Column -> oJ:
    int columnIndex -> b
    com.google.common.collect.DenseImmutableTable this$0 -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> a
    java.lang.Object getValue(int) -> a
    boolean isPartialView() -> b
com.google.common.collect.DenseImmutableTable$ColumnMap -> oK:
    com.google.common.collect.DenseImmutableTable this$0 -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> a
    boolean isPartialView() -> b
    java.lang.Object getValue(int) -> a
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap -> oL:
    int size -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> a
    java.lang.Object getKey(int) -> b
    java.lang.Object getValue(int) -> a
    com.google.common.collect.ImmutableSet createKeySet() -> c
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet createEntrySet() -> d
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1 -> oM:
    com.google.common.collect.DenseImmutableTable$ImmutableArrayMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1$1 -> oN:
    int index -> b
    int maxIndex -> c
    com.google.common.collect.DenseImmutableTable$ImmutableArrayMap$1 this$1 -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.DenseImmutableTable$Row -> oO:
    int rowIndex -> b
    com.google.common.collect.DenseImmutableTable this$0 -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> a
    java.lang.Object getValue(int) -> a
    boolean isPartialView() -> b
com.google.common.collect.DenseImmutableTable$RowMap -> oP:
    com.google.common.collect.DenseImmutableTable this$0 -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> a
    boolean isPartialView() -> b
    java.lang.Object getValue(int) -> a
com.google.common.collect.DescendingImmutableSortedMultiset -> oQ:
    com.google.common.collect.ImmutableSortedMultiset forward -> b
    int count(java.lang.Object) -> count
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    int size() -> size
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    com.google.common.collect.Multiset$Entry getEntry(int) -> a
    com.google.common.collect.ImmutableSortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    boolean isPartialView() -> a
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    java.util.NavigableSet elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
    java.util.Set elementSet() -> elementSet
com.google.common.collect.DescendingImmutableSortedSet -> oR:
    com.google.common.collect.ImmutableSortedSet forward -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> b
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    int indexOf(java.lang.Object) -> a
    boolean isPartialView() -> a
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator iterator() -> iterator
com.google.common.collect.DescendingMultiset -> oS:
    java.util.Comparator comparator -> a
    java.util.NavigableSet elementSet -> b
    java.util.Set entrySet -> c
    com.google.common.collect.SortedMultiset forwardMultiset() -> a
    java.util.Comparator comparator() -> comparator
    java.util.NavigableSet elementSet() -> elementSet
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.Multiset delegate() -> delegate
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    java.util.Iterator entryIterator() -> b
    java.util.Set entrySet() -> entrySet
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    java.util.Set elementSet() -> elementSet
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
    java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.DescendingMultiset$1 -> oT:
    com.google.common.collect.DescendingMultiset this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.DiscreteDomain -> com.google.common.collect.DiscreteDomain:
    com.google.common.collect.DiscreteDomain integers() -> integers
    com.google.common.collect.DiscreteDomain longs() -> longs
    com.google.common.collect.DiscreteDomain bigIntegers() -> bigIntegers
    java.lang.Comparable next(java.lang.Comparable) -> next
    java.lang.Comparable previous(java.lang.Comparable) -> previous
    long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    java.lang.Comparable minValue() -> minValue
    java.lang.Comparable maxValue() -> maxValue
com.google.common.collect.DiscreteDomain$BigIntegerDomain -> oU:
    com.google.common.collect.DiscreteDomain$BigIntegerDomain INSTANCE -> a
    java.math.BigInteger MIN_LONG -> b
    java.math.BigInteger MAX_LONG -> c
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    java.lang.Comparable previous(java.lang.Comparable) -> previous
    java.lang.Comparable next(java.lang.Comparable) -> next
    com.google.common.collect.DiscreteDomain$BigIntegerDomain access$200() -> a
com.google.common.collect.DiscreteDomain$IntegerDomain -> oV:
    com.google.common.collect.DiscreteDomain$IntegerDomain INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    java.lang.Comparable maxValue() -> maxValue
    java.lang.Comparable minValue() -> minValue
    long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    java.lang.Comparable previous(java.lang.Comparable) -> previous
    java.lang.Comparable next(java.lang.Comparable) -> next
    com.google.common.collect.DiscreteDomain$IntegerDomain access$000() -> a
com.google.common.collect.DiscreteDomain$LongDomain -> oW:
    com.google.common.collect.DiscreteDomain$LongDomain INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    java.lang.Comparable maxValue() -> maxValue
    java.lang.Comparable minValue() -> minValue
    long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    java.lang.Comparable previous(java.lang.Comparable) -> previous
    java.lang.Comparable next(java.lang.Comparable) -> next
    com.google.common.collect.DiscreteDomain$LongDomain access$100() -> a
com.google.common.collect.EmptyContiguousSet -> oX:
    int size() -> size
    com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    com.google.common.collect.Range range() -> range
    com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> b
    int indexOf(java.lang.Object) -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    boolean isPartialView() -> a
    boolean isEmpty() -> isEmpty
    com.google.common.collect.ImmutableList asList() -> asList
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> b
    java.lang.Object last() -> last
    java.lang.Object first() -> first
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyContiguousSet$SerializedForm -> oY:
    com.google.common.collect.DiscreteDomain domain -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableBiMap -> oZ:
    com.google.common.collect.EmptyImmutableBiMap INSTANCE -> a
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    com.google.common.collect.ImmutableSetMultimap asMultimap() -> asMultimap
    com.google.common.collect.ImmutableSet keySet() -> keySet
    boolean isPartialView() -> b
    java.lang.Object readResolve() -> readResolve
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.common.collect.EmptyImmutableListMultimap -> pa:
    com.google.common.collect.EmptyImmutableListMultimap INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableSet -> pb:
    com.google.common.collect.EmptyImmutableSet INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    int copyIntoArray(java.lang.Object[],int) -> a
    com.google.common.collect.ImmutableList asList() -> asList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> b_
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableSetMultimap -> pc:
    com.google.common.collect.EmptyImmutableSetMultimap INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableSortedMap -> pd:
    com.google.common.collect.ImmutableSortedSet keySet -> a
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.common.collect.ImmutableCollection values() -> values
    java.lang.String toString() -> toString
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    com.google.common.collect.ImmutableSetMultimap asMultimap() -> asMultimap
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    com.google.common.collect.ImmutableSortedMap createDescendingMap() -> a
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.ImmutableSet keySet() -> keySet
com.google.common.collect.EmptyImmutableSortedMultiset -> pe:
    com.google.common.collect.ImmutableSortedSet elementSet -> b
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    int count(java.lang.Object) -> count
    boolean containsAll(java.util.Collection) -> containsAll
    int size() -> size
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    com.google.common.collect.Multiset$Entry getEntry(int) -> a
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean equals(java.lang.Object) -> equals
    boolean isPartialView() -> a
    int copyIntoArray(java.lang.Object[],int) -> a
    com.google.common.collect.ImmutableList asList() -> asList
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    java.util.Iterator iterator() -> iterator
    java.util.NavigableSet elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
    java.util.Set elementSet() -> elementSet
com.google.common.collect.EmptyImmutableSortedSet -> pf:
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    boolean isPartialView() -> a
    com.google.common.collect.ImmutableList asList() -> asList
    int copyIntoArray(java.lang.Object[],int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    int indexOf(java.lang.Object) -> a
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> b
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EnumBiMap -> com.google.common.collect.EnumBiMap:
    java.lang.Class keyType -> b
    java.lang.Class valueType -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumBiMap create(java.lang.Class,java.lang.Class) -> create
    com.google.common.collect.EnumBiMap create(java.util.Map) -> create
    java.lang.Class inferKeyType(java.util.Map) -> a
    java.lang.Class keyType() -> keyType
    java.lang.Class valueType() -> valueType
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set entrySet() -> entrySet
    java.util.Set values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.BiMap inverse() -> inverse
    void clear() -> clear
    void putAll(java.util.Map) -> putAll
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object checkValue(java.lang.Object) -> b
    java.lang.Object checkKey(java.lang.Object) -> a
com.google.common.collect.EnumHashBiMap -> com.google.common.collect.EnumHashBiMap:
    java.lang.Class keyType -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumHashBiMap create(java.lang.Class) -> create
    com.google.common.collect.EnumHashBiMap create(java.util.Map) -> create
    java.lang.Object put(java.lang.Enum,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Enum,java.lang.Object) -> forcePut
    java.lang.Class keyType() -> keyType
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set entrySet() -> entrySet
    java.util.Set values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.BiMap inverse() -> inverse
    void clear() -> clear
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object checkKey(java.lang.Object) -> a
com.google.common.collect.EnumMultiset -> com.google.common.collect.EnumMultiset:
    java.lang.Class type -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumMultiset create(java.lang.Class) -> create
    com.google.common.collect.EnumMultiset create(java.lang.Iterable) -> create
    com.google.common.collect.EnumMultiset create(java.lang.Iterable,java.lang.Class) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int remove(java.lang.Object,int) -> remove
    int count(java.lang.Object) -> count
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
com.google.common.collect.EvictingQueue -> com.google.common.collect.EvictingQueue:
    java.util.Queue delegate -> a
    int maxSize -> b
    com.google.common.collect.EvictingQueue create(int) -> create
    java.util.Queue delegate() -> delegate
    boolean offer(java.lang.Object) -> offer
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ExplicitOrdering -> pg:
    com.google.common.collect.ImmutableMap rankMap -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    int rank(java.lang.Object) -> a
    com.google.common.collect.ImmutableMap buildRankMap(java.util.List) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.FilteredEntryMultimap -> ph:
    com.google.common.collect.Multimap unfiltered -> a
    com.google.common.base.Predicate predicate -> b
    com.google.common.collect.Multimap unfiltered() -> a
    com.google.common.base.Predicate entryPredicate() -> b
    int size() -> size
    java.util.Collection filterCollection(java.util.Collection,com.google.common.base.Predicate) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection createEntries() -> i
    java.util.Collection createValues() -> k
    java.util.Iterator entryIterator() -> g
    java.util.Map createAsMap() -> h
    java.util.Set keySet() -> keySet
    boolean removeIf(com.google.common.base.Predicate) -> a
    com.google.common.collect.Multiset createKeys() -> j
    boolean access$000(com.google.common.collect.FilteredEntryMultimap,java.lang.Object,java.lang.Object) -> a
com.google.common.collect.FilteredEntryMultimap$AsMap -> pi:
    com.google.common.collect.FilteredEntryMultimap this$0 -> a
    boolean containsKey(java.lang.Object) -> containsKey
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> b
    java.util.Collection remove(java.lang.Object) -> a
    java.util.Set createKeySet() -> e
    java.util.Set createEntrySet() -> a
    java.util.Collection createValues() -> a_
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.FilteredEntryMultimap$AsMap$1 -> pj:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.FilteredEntryMultimap$AsMap$2 -> pk:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
com.google.common.collect.FilteredEntryMultimap$AsMap$2$1 -> pl:
    java.util.Iterator backingIterator -> a
    com.google.common.collect.FilteredEntryMultimap$AsMap$2 this$2 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.FilteredEntryMultimap$AsMap$3 -> pm:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> a
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredEntryMultimap$Keys -> pn:
    com.google.common.collect.FilteredEntryMultimap this$0 -> a
    int remove(java.lang.Object,int) -> remove
    java.util.Set entrySet() -> entrySet
com.google.common.collect.FilteredEntryMultimap$Keys$1 -> po:
    com.google.common.collect.FilteredEntryMultimap$Keys this$1 -> a
    com.google.common.collect.Multiset multiset() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean removeIf(com.google.common.base.Predicate) -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredEntryMultimap$Keys$1$1 -> pp:
    com.google.common.base.Predicate val$predicate -> a
    com.google.common.collect.FilteredEntryMultimap$Keys$1 this$2 -> b
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.FilteredEntryMultimap$ValuePredicate -> pq:
    java.lang.Object key -> b
    com.google.common.collect.FilteredEntryMultimap this$0 -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.FilteredEntrySetMultimap -> pr:
    com.google.common.collect.SetMultimap unfiltered() -> c
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Collection createEntries() -> i
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.Multimap unfiltered() -> a
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.FilteredKeyListMultimap -> ps:
    com.google.common.collect.ListMultimap unfiltered() -> c
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.Multimap unfiltered() -> a
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.FilteredKeyMultimap -> pt:
    com.google.common.collect.Multimap unfiltered -> a
    com.google.common.base.Predicate keyPredicate -> b
    com.google.common.collect.Multimap unfiltered() -> a
    com.google.common.base.Predicate entryPredicate() -> b
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Set createKeySet() -> e
    java.util.Collection get(java.lang.Object) -> get
    java.util.Iterator entryIterator() -> g
    java.util.Collection createEntries() -> i
    java.util.Collection createValues() -> k
    java.util.Map createAsMap() -> h
    com.google.common.collect.Multiset createKeys() -> j
com.google.common.collect.FilteredKeyMultimap$AddRejectingList -> pu:
    java.lang.Object key -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.util.List delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.FilteredKeyMultimap$AddRejectingSet -> pv:
    java.lang.Object key -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.FilteredKeyMultimap$Entries -> pw:
    com.google.common.collect.FilteredKeyMultimap this$0 -> a
    java.util.Collection delegate() -> delegate
    boolean remove(java.lang.Object) -> remove
    java.lang.Object delegate() -> delegate
com.google.common.collect.FilteredKeySetMultimap -> px:
    com.google.common.collect.SetMultimap unfiltered() -> c
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Collection createEntries() -> i
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.Multimap unfiltered() -> a
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.FilteredKeySetMultimap$EntrySet -> py:
    com.google.common.collect.FilteredKeySetMultimap this$0 -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.FilteredMultimap -> pz:
    com.google.common.collect.Multimap unfiltered() -> a
    com.google.common.base.Predicate entryPredicate() -> b
com.google.common.collect.FilteredMultimapValues -> pA:
    com.google.common.collect.FilteredMultimap multimap -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
com.google.common.collect.FilteredSetMultimap -> pB:
    com.google.common.collect.SetMultimap unfiltered() -> c
com.google.common.collect.FluentIterable -> com.google.common.collect.FluentIterable:
    java.lang.Iterable iterable -> a
    com.google.common.collect.FluentIterable from(java.lang.Iterable) -> from
    com.google.common.collect.FluentIterable from(com.google.common.collect.FluentIterable) -> from
    java.lang.String toString() -> toString
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.FluentIterable cycle() -> cycle
    com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate) -> filter
    com.google.common.collect.FluentIterable filter(java.lang.Class) -> filter
    boolean anyMatch(com.google.common.base.Predicate) -> anyMatch
    boolean allMatch(com.google.common.base.Predicate) -> allMatch
    com.google.common.base.Optional firstMatch(com.google.common.base.Predicate) -> firstMatch
    com.google.common.collect.FluentIterable transform(com.google.common.base.Function) -> transform
    com.google.common.collect.FluentIterable transformAndConcat(com.google.common.base.Function) -> transformAndConcat
    com.google.common.base.Optional first() -> first
    com.google.common.base.Optional last() -> last
    com.google.common.collect.FluentIterable skip(int) -> skip
    com.google.common.collect.FluentIterable limit(int) -> limit
    boolean isEmpty() -> isEmpty
    com.google.common.collect.ImmutableList toList() -> toList
    com.google.common.collect.ImmutableList toSortedList(java.util.Comparator) -> toSortedList
    com.google.common.collect.ImmutableSet toSet() -> toSet
    com.google.common.collect.ImmutableSortedSet toSortedSet(java.util.Comparator) -> toSortedSet
    com.google.common.collect.ImmutableMap toMap(com.google.common.base.Function) -> toMap
    com.google.common.collect.ImmutableListMultimap index(com.google.common.base.Function) -> index
    com.google.common.collect.ImmutableMap uniqueIndex(com.google.common.base.Function) -> uniqueIndex
    java.lang.Object[] toArray(java.lang.Class) -> toArray
    java.util.Collection copyInto(java.util.Collection) -> copyInto
    java.lang.Object get(int) -> get
com.google.common.collect.FluentIterable$1 -> pC:
    java.lang.Iterable val$iterable -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ForwardingBlockingDeque -> com.google.common.collect.ForwardingBlockingDeque:
    java.util.concurrent.BlockingDeque delegate() -> delegate
    int remainingCapacity() -> remainingCapacity
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Deque delegate() -> delegate
    java.util.Queue delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean removeAll(java.util.Collection) -> removeAll
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean standardContains(java.lang.Object) -> standardContains
    boolean standardContainsAll(java.util.Collection) -> standardContainsAll
    boolean standardAddAll(java.util.Collection) -> standardAddAll
    boolean standardRemove(java.lang.Object) -> standardRemove
    boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    void standardClear() -> standardClear
    boolean standardIsEmpty() -> standardIsEmpty
    java.lang.String standardToString() -> standardToString
    java.lang.Object[] standardToArray() -> standardToArray
    java.lang.Object[] standardToArray(java.lang.Object[]) -> standardToArray
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    java.util.concurrent.ConcurrentMap delegate() -> delegate
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingDeque -> com.google.common.collect.ForwardingDeque:
    java.util.Deque delegate() -> delegate
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.util.Iterator descendingIterator() -> descendingIterator
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object pop() -> pop
    void push(java.lang.Object) -> push
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    java.util.Queue delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingIterator -> com.google.common.collect.ForwardingIterator:
    java.util.Iterator delegate() -> delegate
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingList -> com.google.common.collect.ForwardingList:
    java.util.List delegate() -> delegate
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardAdd(java.lang.Object) -> standardAdd
    boolean standardAddAll(int,java.lang.Iterable) -> standardAddAll
    int standardIndexOf(java.lang.Object) -> standardIndexOf
    int standardLastIndexOf(java.lang.Object) -> standardLastIndexOf
    java.util.Iterator standardIterator() -> standardIterator
    java.util.ListIterator standardListIterator() -> standardListIterator
    java.util.ListIterator standardListIterator(int) -> standardListIterator
    java.util.List standardSubList(int,int) -> standardSubList
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingListIterator -> com.google.common.collect.ForwardingListIterator:
    java.util.ListIterator delegate() -> delegate
    void add(java.lang.Object) -> add
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    java.util.Iterator delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingListMultimap -> com.google.common.collect.ForwardingListMultimap:
    com.google.common.collect.ListMultimap delegate() -> delegate
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    java.util.Map delegate() -> delegate
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void standardPutAll(java.util.Map) -> standardPutAll
    java.lang.Object standardRemove(java.lang.Object) -> standardRemove
    void standardClear() -> standardClear
    boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    boolean standardContainsValue(java.lang.Object) -> standardContainsValue
    boolean standardIsEmpty() -> standardIsEmpty
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMap$StandardEntrySet -> com.google.common.collect.ForwardingMap$StandardEntrySet:
    com.google.common.collect.ForwardingMap this$0 -> a
com.google.common.collect.ForwardingMap$StandardKeySet -> com.google.common.collect.ForwardingMap$StandardKeySet:
    com.google.common.collect.ForwardingMap this$0 -> a
com.google.common.collect.ForwardingMap$StandardValues -> com.google.common.collect.ForwardingMap$StandardValues:
    com.google.common.collect.ForwardingMap this$0 -> a
com.google.common.collect.ForwardingMapEntry -> com.google.common.collect.ForwardingMapEntry:
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultimap -> com.google.common.collect.ForwardingMultimap:
    com.google.common.collect.Multimap delegate() -> delegate
    java.util.Map asMap() -> asMap
    void clear() -> clear
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultiset -> com.google.common.collect.ForwardingMultiset:
    com.google.common.collect.Multiset delegate() -> delegate
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean standardContains(java.lang.Object) -> standardContains
    void standardClear() -> standardClear
    int standardCount(java.lang.Object) -> standardCount
    boolean standardAdd(java.lang.Object) -> standardAdd
    boolean standardAddAll(java.util.Collection) -> standardAddAll
    boolean standardRemove(java.lang.Object) -> standardRemove
    boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    int standardSetCount(java.lang.Object,int) -> standardSetCount
    boolean standardSetCount(java.lang.Object,int,int) -> standardSetCount
    java.util.Iterator standardIterator() -> standardIterator
    int standardSize() -> standardSize
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultiset$StandardElementSet -> com.google.common.collect.ForwardingMultiset$StandardElementSet:
    com.google.common.collect.ForwardingMultiset this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
com.google.common.collect.ForwardingNavigableMap -> com.google.common.collect.ForwardingNavigableMap:
    java.util.NavigableMap delegate() -> delegate
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.util.Map$Entry standardLowerEntry(java.lang.Object) -> standardLowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.lang.Object standardLowerKey(java.lang.Object) -> standardLowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.util.Map$Entry standardFloorEntry(java.lang.Object) -> standardFloorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.lang.Object standardFloorKey(java.lang.Object) -> standardFloorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.util.Map$Entry standardCeilingEntry(java.lang.Object) -> standardCeilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.lang.Object standardCeilingKey(java.lang.Object) -> standardCeilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.util.Map$Entry standardHigherEntry(java.lang.Object) -> standardHigherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.lang.Object standardHigherKey(java.lang.Object) -> standardHigherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry standardFirstEntry() -> standardFirstEntry
    java.lang.Object standardFirstKey() -> standardFirstKey
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry standardLastEntry() -> standardLastEntry
    java.lang.Object standardLastKey() -> standardLastKey
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry standardPollFirstEntry() -> standardPollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.Map$Entry standardPollLastEntry() -> standardPollLastEntry
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableSet standardDescendingKeySet() -> standardDescendingKeySet
    java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedMap standardHeadMap(java.lang.Object) -> standardHeadMap
    java.util.SortedMap standardTailMap(java.lang.Object) -> standardTailMap
    java.util.SortedMap delegate() -> delegate
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap -> com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap:
    com.google.common.collect.ForwardingNavigableMap this$0 -> a
    java.util.NavigableMap forward() -> a
    java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1 -> pD:
    java.util.Map$Entry toRemove -> b
    java.util.Map$Entry nextOrNull -> c
    com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap this$1 -> a
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet -> com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet:
    com.google.common.collect.ForwardingNavigableMap this$0 -> a
com.google.common.collect.ForwardingNavigableSet -> com.google.common.collect.ForwardingNavigableSet:
    java.util.NavigableSet delegate() -> delegate
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object standardLower(java.lang.Object) -> standardLower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object standardFloor(java.lang.Object) -> standardFloor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object standardCeiling(java.lang.Object) -> standardCeiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object standardHigher(java.lang.Object) -> standardHigher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object standardPollFirst() -> standardPollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object standardPollLast() -> standardPollLast
    java.lang.Object standardFirst() -> standardFirst
    java.lang.Object standardLast() -> standardLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet standardSubSet(java.lang.Object,boolean,java.lang.Object,boolean) -> standardSubSet
    java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.SortedSet standardHeadSet(java.lang.Object) -> standardHeadSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet standardTailSet(java.lang.Object) -> standardTailSet
    java.util.SortedSet delegate() -> delegate
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet -> com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet:
    com.google.common.collect.ForwardingNavigableSet this$0 -> a
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    java.lang.Object delegate() -> delegate
    java.lang.String toString() -> toString
com.google.common.collect.ForwardingQueue -> com.google.common.collect.ForwardingQueue:
    java.util.Queue delegate() -> delegate
    boolean offer(java.lang.Object) -> offer
    java.lang.Object poll() -> poll
    java.lang.Object remove() -> remove
    java.lang.Object peek() -> peek
    java.lang.Object element() -> element
    boolean standardOffer(java.lang.Object) -> standardOffer
    java.lang.Object standardPeek() -> standardPeek
    java.lang.Object standardPoll() -> standardPoll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    java.util.Set delegate() -> delegate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSetMultimap -> com.google.common.collect.ForwardingSetMultimap:
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Set entries() -> entries
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedMap -> com.google.common.collect.ForwardingSortedMap:
    java.util.SortedMap delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    int unsafeCompare(java.lang.Object,java.lang.Object) -> a
    boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    java.lang.Object standardRemove(java.lang.Object) -> standardRemove
    java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedMap$StandardKeySet -> com.google.common.collect.ForwardingSortedMap$StandardKeySet:
    com.google.common.collect.ForwardingSortedMap this$0 -> a
com.google.common.collect.ForwardingSortedMultiset -> com.google.common.collect.ForwardingSortedMultiset:
    com.google.common.collect.SortedMultiset delegate() -> delegate
    java.util.NavigableSet elementSet() -> elementSet
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry standardFirstEntry() -> standardFirstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry standardLastEntry() -> standardLastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry standardPollFirstEntry() -> standardPollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.Multiset$Entry standardPollLastEntry() -> standardPollLastEntry
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset standardSubMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> standardSubMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    java.util.Set elementSet() -> elementSet
    com.google.common.collect.Multiset delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
    java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset -> com.google.common.collect.ForwardingSortedMultiset$StandardDescendingMultiset:
    com.google.common.collect.ForwardingSortedMultiset this$0 -> a
com.google.common.collect.ForwardingSortedMultiset$StandardElementSet -> com.google.common.collect.ForwardingSortedMultiset$StandardElementSet:
    com.google.common.collect.ForwardingSortedMultiset this$0 -> a
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    java.util.SortedSet delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    int unsafeCompare(java.lang.Object,java.lang.Object) -> a
    boolean standardContains(java.lang.Object) -> standardContains
    boolean standardRemove(java.lang.Object) -> standardRemove
    java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedSetMultimap -> com.google.common.collect.ForwardingSortedSetMultimap:
    com.google.common.collect.SortedSetMultimap delegate() -> delegate
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingTable -> com.google.common.collect.ForwardingTable:
    com.google.common.collect.Table delegate() -> delegate
    java.util.Set cellSet() -> cellSet
    void clear() -> clear
    java.util.Map column(java.lang.Object) -> column
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.GeneralRange -> pE:
    java.util.Comparator comparator -> a
    boolean hasLowerBound -> b
    java.lang.Object lowerEndpoint -> c
    com.google.common.collect.BoundType lowerBoundType -> d
    boolean hasUpperBound -> e
    java.lang.Object upperEndpoint -> f
    com.google.common.collect.BoundType upperBoundType -> g
    com.google.common.collect.GeneralRange all(java.util.Comparator) -> a
    boolean tooLow(java.lang.Object) -> a
    boolean tooHigh(java.lang.Object) -> b
    boolean contains(java.lang.Object) -> c
    com.google.common.collect.GeneralRange intersect(com.google.common.collect.GeneralRange) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.GenericMapMaker -> com.google.common.collect.GenericMapMaker:
    com.google.common.collect.MapMaker$RemovalListener removalListener -> a
    com.google.common.collect.GenericMapMaker initialCapacity(int) -> initialCapacity
    com.google.common.collect.GenericMapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.common.collect.GenericMapMaker weakKeys() -> weakKeys
    com.google.common.collect.GenericMapMaker weakValues() -> weakValues
    com.google.common.collect.GenericMapMaker softValues() -> softValues
    com.google.common.collect.MapMaker$RemovalListener getRemovalListener() -> a
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
com.google.common.collect.GenericMapMaker$NullListener -> pF:
    com.google.common.collect.GenericMapMaker$NullListener INSTANCE -> a
    com.google.common.collect.GenericMapMaker$NullListener[] $VALUES -> b
    com.google.common.collect.GenericMapMaker$NullListener[] values() -> values
    com.google.common.collect.GenericMapMaker$NullListener valueOf(java.lang.String) -> valueOf
com.google.common.collect.HashBasedTable -> com.google.common.collect.HashBasedTable:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashBasedTable create() -> create
    com.google.common.collect.HashBasedTable create(int,int) -> create
    com.google.common.collect.HashBasedTable create(com.google.common.collect.Table) -> create
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean equals(java.lang.Object) -> equals
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
    java.util.Set cellSet() -> cellSet
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    void putAll(com.google.common.collect.Table) -> putAll
com.google.common.collect.HashBasedTable$Factory -> pG:
    int expectedSize -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.collect.HashBiMap -> com.google.common.collect.HashBiMap:
    com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV -> a
    com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK -> b
    int size -> c
    int mask -> d
    int modCount -> e
    com.google.common.collect.BiMap inverse -> f
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashBiMap create() -> create
    com.google.common.collect.HashBiMap create(int) -> create
    com.google.common.collect.HashBiMap create(java.util.Map) -> create
    void init(int) -> a
    void delete(com.google.common.collect.HashBiMap$BiEntry) -> a
    void insert(com.google.common.collect.HashBiMap$BiEntry) -> b
    int hash(java.lang.Object) -> b
    com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int) -> a
    com.google.common.collect.HashBiMap$BiEntry seekByValue(java.lang.Object,int) -> b
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object put(java.lang.Object,java.lang.Object,boolean) -> a
    void rehashIfNecessary() -> a
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    int size() -> size
    java.util.Set keySet() -> keySet
    java.util.Set values() -> values
    java.util.Set entrySet() -> entrySet
    com.google.common.collect.BiMap inverse() -> inverse
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection values() -> values
    int access$000(com.google.common.collect.HashBiMap) -> a
    com.google.common.collect.HashBiMap$BiEntry[] access$100(com.google.common.collect.HashBiMap) -> b
    void access$200(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$BiEntry) -> a
    int access$300(java.lang.Object) -> a
    com.google.common.collect.HashBiMap$BiEntry access$400(com.google.common.collect.HashBiMap,java.lang.Object,int) -> a
    com.google.common.collect.HashBiMap$BiEntry access$600(com.google.common.collect.HashBiMap,java.lang.Object,int) -> b
    void access$700(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$BiEntry) -> b
    int access$900(com.google.common.collect.HashBiMap) -> c
    java.lang.Object access$1000(com.google.common.collect.HashBiMap,java.lang.Object,java.lang.Object,boolean) -> a
com.google.common.collect.HashBiMap$BiEntry -> pH:
    int keyHash -> a
    int valueHash -> b
    com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket -> c
    com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket -> d
com.google.common.collect.HashBiMap$EntrySet -> pI:
    com.google.common.collect.HashBiMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.HashBiMap$EntrySet$1 -> pJ:
    com.google.common.collect.HashBiMap$EntrySet this$1 -> a
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashBiMap$EntrySet$1$MapEntry -> pK:
    com.google.common.collect.HashBiMap$BiEntry delegate -> a
    com.google.common.collect.HashBiMap$EntrySet$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.HashBiMap$Inverse -> pL:
    com.google.common.collect.HashBiMap this$0 -> a
    int size() -> size
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set keySet() -> keySet
    java.util.Set values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object writeReplace() -> writeReplace
    java.util.Collection values() -> values
com.google.common.collect.HashBiMap$Inverse$1 -> pM:
    com.google.common.collect.HashBiMap$Inverse this$1 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.HashBiMap$Inverse$1$1 -> pN:
    com.google.common.collect.HashBiMap$Inverse$1 this$2 -> a
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashBiMap$Inverse$1$1$InverseEntry -> pO:
    com.google.common.collect.HashBiMap$BiEntry delegate -> a
    com.google.common.collect.HashBiMap$Inverse$1$1 this$3 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.HashBiMap$Inverse$InverseKeySet -> pP:
    com.google.common.collect.HashBiMap$Inverse this$1 -> a
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1 -> pQ:
    com.google.common.collect.HashBiMap$Inverse$InverseKeySet this$2 -> a
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashBiMap$InverseSerializedForm -> pR:
    com.google.common.collect.HashBiMap bimap -> a
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.HashBiMap$Itr -> pS:
    int nextBucket -> b
    com.google.common.collect.HashBiMap$BiEntry next -> c
    com.google.common.collect.HashBiMap$BiEntry toRemove -> d
    int expectedModCount -> e
    com.google.common.collect.HashBiMap this$0 -> f
    void checkForConcurrentModification() -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashBiMap$KeySet -> pT:
    com.google.common.collect.HashBiMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.HashBiMap$KeySet$1 -> pU:
    com.google.common.collect.HashBiMap$KeySet this$1 -> a
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashMultimap -> com.google.common.collect.HashMultimap:
    int expectedValuesPerKey -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashMultimap create() -> create
    com.google.common.collect.HashMultimap create(int,int) -> create
    com.google.common.collect.HashMultimap create(com.google.common.collect.Multimap) -> create
    java.util.Set createCollection() -> a
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set entries() -> entries
    java.util.Set get(java.lang.Object) -> get
    java.util.Collection values() -> values
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    java.util.Collection createCollection() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
com.google.common.collect.HashMultiset -> com.google.common.collect.HashMultiset:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashMultiset create() -> create
    com.google.common.collect.HashMultiset create(int) -> create
    com.google.common.collect.HashMultiset create(java.lang.Iterable) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int setCount(java.lang.Object,int) -> setCount
    int remove(java.lang.Object,int) -> remove
    int add(java.lang.Object,int) -> add
    int count(java.lang.Object) -> count
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
com.google.common.collect.Hashing -> pV:
    int MAX_TABLE_SIZE -> a
    int smear(int) -> a
    int smearedHash(java.lang.Object) -> a
    int closedTableSize(int,double) -> a
    boolean needsResizing(int,int,double) -> a
com.google.common.collect.ImmutableAsList -> pW:
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> a
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableAsList$SerializedForm -> pX:
    com.google.common.collect.ImmutableCollection collection -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableBiMap -> com.google.common.collect.ImmutableBiMap:
    java.util.Map$Entry[] EMPTY_ENTRY_ARRAY -> a
    com.google.common.collect.ImmutableBiMap of() -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap$Builder builder() -> builder
    com.google.common.collect.ImmutableBiMap copyOf(java.util.Map) -> copyOf
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    com.google.common.collect.ImmutableSet values() -> values
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableCollection values() -> values
    java.util.Collection values() -> values
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
com.google.common.collect.ImmutableBiMap$Builder -> com.google.common.collect.ImmutableBiMap$Builder:
    com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableBiMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableBiMap build() -> build
    com.google.common.collect.ImmutableMap build() -> build
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableBiMap$SerializedForm -> pY:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableClassToInstanceMap -> com.google.common.collect.ImmutableClassToInstanceMap:
    com.google.common.collect.ImmutableMap delegate -> a
    com.google.common.collect.ImmutableClassToInstanceMap$Builder builder() -> builder
    com.google.common.collect.ImmutableClassToInstanceMap copyOf(java.util.Map) -> copyOf
    java.util.Map delegate() -> delegate
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object delegate() -> delegate
com.google.common.collect.ImmutableClassToInstanceMap$Builder -> com.google.common.collect.ImmutableClassToInstanceMap$Builder:
    com.google.common.collect.ImmutableMap$Builder mapBuilder -> a
    com.google.common.collect.ImmutableClassToInstanceMap$Builder put(java.lang.Class,java.lang.Object) -> put
    com.google.common.collect.ImmutableClassToInstanceMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableClassToInstanceMap build() -> build
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    com.google.common.collect.ImmutableList asList -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    com.google.common.collect.ImmutableList asList() -> asList
    com.google.common.collect.ImmutableList createAsList() -> c
    boolean isPartialView() -> a
    int copyIntoArray(java.lang.Object[],int) -> a
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$ArrayBasedBuilder -> pZ:
    java.lang.Object[] contents -> a
    int size -> b
    void ensureCapacity(int) -> a
    com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    int expandedCapacity(int,int) -> a
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection build() -> build
com.google.common.collect.ImmutableEntry -> qa:
    java.lang.Object key -> e
    java.lang.Object value -> f
    long serialVersionUID -> serialVersionUID
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableEnumMap -> qb:
    java.util.EnumMap delegate -> a
    com.google.common.collect.ImmutableMap asImmutable(java.util.EnumMap) -> a
    com.google.common.collect.ImmutableSet createKeySet() -> c
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    boolean isPartialView() -> b
    java.lang.Object writeReplace() -> writeReplace
    java.util.EnumMap access$000(com.google.common.collect.ImmutableEnumMap) -> a
com.google.common.collect.ImmutableEnumMap$1 -> qc:
    com.google.common.collect.ImmutableEnumMap this$0 -> a
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumMap$2 -> qd:
    com.google.common.collect.ImmutableEnumMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumMap$2$1 -> qe:
    java.util.Iterator backingIterator -> b
    com.google.common.collect.ImmutableEnumMap$2 this$1 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableEnumMap$EnumSerializedForm -> qf:
    java.util.EnumMap delegate -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableEnumSet -> qg:
    java.util.EnumSet delegate -> a
    int hashCode -> b
    com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet) -> a
    boolean isPartialView() -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumSet$EnumSerializedForm -> qh:
    java.util.EnumSet delegate -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    com.google.common.collect.ImmutableList EMPTY -> a
    com.google.common.collect.ImmutableList of() -> of
    com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableList copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> a
    com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[],int) -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    com.google.common.collect.ImmutableList subListUnchecked(int,int) -> a
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    com.google.common.collect.ImmutableList asList() -> asList
    int copyIntoArray(java.lang.Object[],int) -> a
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableList$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
com.google.common.collect.ImmutableList$1 -> qi:
    com.google.common.collect.ImmutableList this$0 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableList$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableList build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableList$ReverseImmutableList -> qj:
    com.google.common.collect.ImmutableList forwardList -> a
    int reverseIndex(int) -> a
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    java.lang.Object get(int) -> get
    int size() -> size
    boolean isPartialView() -> a
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableList$SerializedForm -> qk:
    java.lang.Object[] elements -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList$SubList -> ql:
    int offset -> a
    int length -> b
    com.google.common.collect.ImmutableList this$0 -> c
    int size() -> size
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    boolean isPartialView() -> a
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableListMultimap -> com.google.common.collect.ImmutableListMultimap:
    com.google.common.collect.ImmutableListMultimap inverse -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableListMultimap of() -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableList get(java.lang.Object) -> get
    com.google.common.collect.ImmutableListMultimap inverse() -> inverse
    com.google.common.collect.ImmutableList removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableList replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    com.google.common.collect.ImmutableMultimap inverse() -> inverse
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List get(java.lang.Object) -> get
com.google.common.collect.ImmutableListMultimap$Builder -> com.google.common.collect.ImmutableListMultimap$Builder:
    com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableListMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableListMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableListMultimap build() -> build
    com.google.common.collect.ImmutableMultimap build() -> build
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    java.util.Map$Entry[] EMPTY_ENTRY_ARRAY -> a
    com.google.common.collect.ImmutableSet entrySet -> b
    com.google.common.collect.ImmutableSet keySet -> c
    com.google.common.collect.ImmutableCollection values -> d
    com.google.common.collect.ImmutableSetMultimap multimapView -> e
    com.google.common.collect.ImmutableMap of() -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMapEntry$TerminalEntry entryOf(java.lang.Object,java.lang.Object) -> a
    com.google.common.collect.ImmutableMap$Builder builder() -> builder
    void checkNoConflict(boolean,java.lang.String,java.util.Map$Entry,java.util.Map$Entry) -> a
    com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableSet createKeySet() -> c
    com.google.common.collect.ImmutableCollection values() -> values
    com.google.common.collect.ImmutableSetMultimap asMultimap() -> asMultimap
    boolean equals(java.lang.Object) -> equals
    boolean isPartialView() -> b
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    com.google.common.collect.ImmutableMapEntry$TerminalEntry[] entries -> a
    int size -> b
    void ensureCapacity(int) -> a
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap build() -> build
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets -> qm:
    com.google.common.collect.ImmutableMap delegate -> a
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    java.lang.Object get(java.lang.Object) -> get
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.ImmutableMap access$000(com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets) -> a
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 -> qn:
    com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets this$0 -> a
    com.google.common.collect.ImmutableMap map() -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1 -> qo:
    java.util.Iterator val$backingIterator -> a
    com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1 this$1 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1$1 -> qp:
    java.util.Map$Entry val$backingEntry -> a
    com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets$1$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.ImmutableMap$SerializedForm -> qq:
    java.lang.Object[] keys -> a
    java.lang.Object[] values -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.Object createMap(com.google.common.collect.ImmutableMap$Builder) -> a
com.google.common.collect.ImmutableMapEntry -> qr:
    com.google.common.collect.ImmutableMapEntry getNextInKeyBucket() -> a
    com.google.common.collect.ImmutableMapEntry getNextInValueBucket() -> b
com.google.common.collect.ImmutableMapEntry$TerminalEntry -> qs:
    com.google.common.collect.ImmutableMapEntry getNextInKeyBucket() -> a
    com.google.common.collect.ImmutableMapEntry getNextInValueBucket() -> b
com.google.common.collect.ImmutableMapEntrySet -> qt:
    com.google.common.collect.ImmutableMap map() -> b
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> a
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm -> qu:
    com.google.common.collect.ImmutableMap map -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapKeySet -> qv:
    com.google.common.collect.ImmutableMap map -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.ImmutableList createAsList() -> c
    boolean isPartialView() -> a
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapKeySet$1 -> qw:
    com.google.common.collect.ImmutableList val$entryList -> a
    com.google.common.collect.ImmutableMapKeySet this$0 -> b
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm -> qx:
    com.google.common.collect.ImmutableMap map -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapValues -> qy:
    com.google.common.collect.ImmutableMap map -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> a
    com.google.common.collect.ImmutableList createAsList() -> c
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapValues$1 -> qz:
    com.google.common.collect.ImmutableList val$entryList -> a
    com.google.common.collect.ImmutableMapValues this$0 -> b
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
com.google.common.collect.ImmutableMapValues$SerializedForm -> qA:
    com.google.common.collect.ImmutableMap map -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultimap -> com.google.common.collect.ImmutableMultimap:
    com.google.common.collect.ImmutableMap map -> b
    int size -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableMultimap of() -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    void clear() -> clear
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableMultimap inverse() -> inverse
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean isPartialView() -> a
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    int size() -> size
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableMap asMap() -> asMap
    java.util.Map createAsMap() -> h
    com.google.common.collect.ImmutableCollection entries() -> entries
    com.google.common.collect.UnmodifiableIterator entryIterator() -> b
    com.google.common.collect.ImmutableMultiset keys() -> keys
    com.google.common.collect.ImmutableCollection values() -> values
    com.google.common.collect.UnmodifiableIterator valueIterator() -> c
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Map asMap() -> asMap
    java.util.Iterator valueIterator() -> f
    java.util.Collection createValues() -> k
    java.util.Collection values() -> values
    com.google.common.collect.Multiset createKeys() -> j
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    java.util.Iterator entryIterator() -> g
    java.util.Collection createEntries() -> i
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean isEmpty() -> isEmpty
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.ImmutableMultimap$1 -> qB:
    com.google.common.collect.ImmutableMultimap this$0 -> a
    java.lang.Object output(java.lang.Object,java.lang.Object) -> a
com.google.common.collect.ImmutableMultimap$2 -> qC:
    com.google.common.collect.ImmutableMultimap this$0 -> a
    java.lang.Object output(java.lang.Object,java.lang.Object) -> a
com.google.common.collect.ImmutableMultimap$Builder -> com.google.common.collect.ImmutableMultimap$Builder:
    com.google.common.collect.Multimap builderMultimap -> a
    java.util.Comparator keyComparator -> b
    java.util.Comparator valueComparator -> c
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap build() -> build
com.google.common.collect.ImmutableMultimap$BuilderMultimap -> qD:
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> b
com.google.common.collect.ImmutableMultimap$EntryCollection -> qE:
    com.google.common.collect.ImmutableMultimap multimap -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultimap$FieldSettersHolder -> qF:
    com.google.common.collect.Serialization$FieldSetter MAP_FIELD_SETTER -> a
    com.google.common.collect.Serialization$FieldSetter SIZE_FIELD_SETTER -> b
    com.google.common.collect.Serialization$FieldSetter EMPTY_SET_FIELD_SETTER -> c
com.google.common.collect.ImmutableMultimap$Itr -> qG:
    java.util.Iterator mapIterator -> b
    java.lang.Object key -> c
    java.util.Iterator valueIterator -> d
    com.google.common.collect.ImmutableMultimap this$0 -> e
    java.lang.Object output(java.lang.Object,java.lang.Object) -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMultimap$Keys -> qH:
    com.google.common.collect.ImmutableMultimap this$0 -> a
    boolean contains(java.lang.Object) -> contains
    int count(java.lang.Object) -> count
    java.util.Set elementSet() -> elementSet
    int size() -> size
    com.google.common.collect.Multiset$Entry getEntry(int) -> a
    boolean isPartialView() -> a
com.google.common.collect.ImmutableMultimap$Values -> qI:
    com.google.common.collect.ImmutableMultimap multimap -> a
    long serialVersionUID -> serialVersionUID
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int copyIntoArray(java.lang.Object[],int) -> a
    int size() -> size
    boolean isPartialView() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultiset -> com.google.common.collect.ImmutableMultiset:
    com.google.common.collect.ImmutableMultiset EMPTY -> a
    com.google.common.collect.ImmutableSet entrySet -> b
    com.google.common.collect.ImmutableMultiset of() -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableMultiset copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableMultiset copyOfInternal(com.google.common.collect.Multiset) -> a
    com.google.common.collect.ImmutableMultiset copyFromEntries(java.util.Collection) -> a
    com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    int copyIntoArray(java.lang.Object[],int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.Multiset$Entry getEntry(int) -> a
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableMultiset$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    java.util.Set entrySet() -> entrySet
com.google.common.collect.ImmutableMultiset$1 -> qJ:
    int remaining -> a
    java.lang.Object element -> b
    java.util.Iterator val$entryIterator -> c
    com.google.common.collect.ImmutableMultiset this$0 -> d
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMultiset$Builder -> com.google.common.collect.ImmutableMultiset$Builder:
    com.google.common.collect.Multiset contents -> a
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableMultiset build() -> build
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableMultiset$EntrySet -> qK:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableMultiset this$0 -> a
    boolean isPartialView() -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> c
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultiset$EntrySet$1 -> qL:
    com.google.common.collect.ImmutableMultiset$EntrySet this$1 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm -> qM:
    com.google.common.collect.ImmutableMultiset multiset -> a
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultiset$SerializedForm -> qN:
    java.lang.Object[] elements -> a
    int[] counts -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableRangeMap -> com.google.common.collect.ImmutableRangeMap:
    com.google.common.collect.ImmutableRangeMap EMPTY -> a
    com.google.common.collect.ImmutableList ranges -> b
    com.google.common.collect.ImmutableList values -> c
    com.google.common.collect.ImmutableRangeMap of() -> of
    com.google.common.collect.ImmutableRangeMap of(com.google.common.collect.Range,java.lang.Object) -> of
    com.google.common.collect.ImmutableRangeMap copyOf(com.google.common.collect.RangeMap) -> copyOf
    com.google.common.collect.ImmutableRangeMap$Builder builder() -> builder
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    com.google.common.collect.ImmutableMap asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    java.util.Map asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeMap) -> a
com.google.common.collect.ImmutableRangeMap$1 -> qO:
    int val$len -> a
    int val$off -> b
    com.google.common.collect.Range val$range -> c
    com.google.common.collect.ImmutableRangeMap this$0 -> d
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeMap$2 -> qP:
    com.google.common.collect.Range val$range -> a
    com.google.common.collect.ImmutableRangeMap val$outer -> b
    com.google.common.collect.ImmutableRangeMap this$0 -> c
    com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    java.util.Map asMapOfRanges() -> asMapOfRanges
com.google.common.collect.ImmutableRangeMap$Builder -> com.google.common.collect.ImmutableRangeMap$Builder:
    com.google.common.collect.RangeSet keyRanges -> a
    com.google.common.collect.RangeMap rangeMap -> b
    com.google.common.collect.ImmutableRangeMap$Builder put(com.google.common.collect.Range,java.lang.Object) -> put
    com.google.common.collect.ImmutableRangeMap$Builder putAll(com.google.common.collect.RangeMap) -> putAll
    com.google.common.collect.ImmutableRangeMap build() -> build
com.google.common.collect.ImmutableRangeSet -> com.google.common.collect.ImmutableRangeSet:
    com.google.common.collect.ImmutableRangeSet EMPTY -> a
    com.google.common.collect.ImmutableRangeSet ALL -> b
    com.google.common.collect.ImmutableList ranges -> c
    com.google.common.collect.ImmutableRangeSet complement -> d
    com.google.common.collect.ImmutableRangeSet of() -> of
    com.google.common.collect.ImmutableRangeSet all() -> a
    com.google.common.collect.ImmutableRangeSet of(com.google.common.collect.Range) -> of
    com.google.common.collect.ImmutableRangeSet copyOf(com.google.common.collect.RangeSet) -> copyOf
    boolean encloses(com.google.common.collect.Range) -> encloses
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    com.google.common.collect.Range span() -> span
    boolean isEmpty() -> isEmpty
    void add(com.google.common.collect.Range) -> add
    void addAll(com.google.common.collect.RangeSet) -> addAll
    void remove(com.google.common.collect.Range) -> remove
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    com.google.common.collect.ImmutableSet asRanges() -> asRanges
    com.google.common.collect.ImmutableRangeSet complement() -> complement
    com.google.common.collect.ImmutableRangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    com.google.common.collect.ImmutableSortedSet asSet(com.google.common.collect.DiscreteDomain) -> asSet
    com.google.common.collect.ImmutableRangeSet$Builder builder() -> builder
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    void clear() -> clear
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    com.google.common.collect.RangeSet complement() -> complement
    java.util.Set asRanges() -> asRanges
    com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet) -> a
com.google.common.collect.ImmutableRangeSet$1 -> qQ:
    int val$length -> a
    int val$fromIndex -> b
    com.google.common.collect.Range val$range -> c
    com.google.common.collect.ImmutableRangeSet this$0 -> d
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeSet$AsSet -> qR:
    com.google.common.collect.DiscreteDomain domain -> d
    java.lang.Integer size -> e
    com.google.common.collect.ImmutableRangeSet this$0 -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    com.google.common.collect.ImmutableSortedSet subSet(com.google.common.collect.Range) -> a
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> a
    boolean isPartialView() -> a
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
    com.google.common.collect.DiscreteDomain access$100(com.google.common.collect.ImmutableRangeSet$AsSet) -> a
com.google.common.collect.ImmutableRangeSet$AsSet$1 -> qS:
    java.util.Iterator rangeItr -> a
    java.util.Iterator elemItr -> b
    com.google.common.collect.ImmutableRangeSet$AsSet this$1 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.ImmutableRangeSet$AsSet$2 -> qT:
    java.util.Iterator rangeItr -> a
    java.util.Iterator elemItr -> b
    com.google.common.collect.ImmutableRangeSet$AsSet this$1 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm -> qU:
    com.google.common.collect.ImmutableList ranges -> a
    com.google.common.collect.DiscreteDomain domain -> b
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableRangeSet$Builder -> com.google.common.collect.ImmutableRangeSet$Builder:
    com.google.common.collect.RangeSet rangeSet -> a
    com.google.common.collect.ImmutableRangeSet$Builder add(com.google.common.collect.Range) -> add
    com.google.common.collect.ImmutableRangeSet$Builder addAll(com.google.common.collect.RangeSet) -> addAll
    com.google.common.collect.ImmutableRangeSet build() -> build
com.google.common.collect.ImmutableRangeSet$ComplementRanges -> qV:
    boolean positiveBoundedBelow -> b
    boolean positiveBoundedAbove -> c
    int size -> d
    com.google.common.collect.ImmutableRangeSet this$0 -> a
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeSet$SerializedForm -> qW:
    com.google.common.collect.ImmutableList ranges -> a
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    com.google.common.collect.ImmutableSet of() -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> b
    int chooseTableSize(int) -> a
    com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.util.Collection) -> copyOf
    boolean isHashCodeFast() -> b_
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSet$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    com.google.common.collect.ImmutableSet access$000(int,java.lang.Object[]) -> a
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSet build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSet$SerializedForm -> qX:
    java.lang.Object[] elements -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSetMultimap -> com.google.common.collect.ImmutableSetMultimap:
    com.google.common.collect.ImmutableSet emptySet -> a
    com.google.common.collect.ImmutableSetMultimap inverse -> d
    com.google.common.collect.ImmutableSet entries -> e
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableSetMultimap of() -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap,java.util.Comparator) -> b
    com.google.common.collect.ImmutableSet get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSetMultimap inverse() -> inverse
    com.google.common.collect.ImmutableSet removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableSet entries() -> entries
    com.google.common.collect.ImmutableSet valueSet(java.util.Comparator,java.util.Collection) -> a
    com.google.common.collect.ImmutableSet emptySet(java.util.Comparator) -> a
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    com.google.common.collect.ImmutableCollection entries() -> entries
    com.google.common.collect.ImmutableMultimap inverse() -> inverse
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Set entries() -> entries
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSetMultimap access$000(com.google.common.collect.Multimap,java.util.Comparator) -> a
com.google.common.collect.ImmutableSetMultimap$Builder -> com.google.common.collect.ImmutableSetMultimap$Builder:
    com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableSetMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableSetMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableSetMultimap build() -> build
    com.google.common.collect.ImmutableMultimap build() -> build
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableSetMultimap$BuilderMultimap -> qY:
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> b
com.google.common.collect.ImmutableSetMultimap$EntrySet -> qZ:
    com.google.common.collect.ImmutableSetMultimap multimap -> a
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSortedAsList -> ra:
    java.util.Comparator comparator() -> comparator
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.ImmutableList subListUnchecked(int,int) -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    java.util.Comparator NATURAL_ORDER -> a
    com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP -> b
    com.google.common.collect.ImmutableSortedMap descendingMap -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> a
    com.google.common.collect.ImmutableSortedMap from(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList) -> a
    com.google.common.collect.ImmutableSortedMap of() -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map) -> copyOf
    com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map,java.util.Comparator) -> copyOf
    com.google.common.collect.ImmutableSortedMap copyOfSorted(java.util.SortedMap) -> copyOfSorted
    com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator) -> a
    com.google.common.collect.ImmutableSortedMap fromEntries(java.util.Comparator,boolean,int,java.util.Map$Entry[]) -> a
    com.google.common.collect.ImmutableSortedMap$Builder naturalOrder() -> naturalOrder
    com.google.common.collect.ImmutableSortedMap$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.ImmutableSortedMap$Builder reverseOrder() -> reverseOrder
    int size() -> size
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    com.google.common.collect.ImmutableSortedMap createDescendingMap() -> a
    com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSet keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    java.util.Comparator comparator -> c
    com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableSortedMap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableSortedMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableSortedMap build() -> build
    com.google.common.collect.ImmutableMap build() -> build
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableSortedMap$SerializedForm -> rb:
    java.util.Comparator comparator -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMapFauxverideShim -> rc:
    com.google.common.collect.ImmutableSortedMap$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
com.google.common.collect.ImmutableSortedMultiset -> com.google.common.collect.ImmutableSortedMultiset:
    java.util.Comparator NATURAL_ORDER -> b
    com.google.common.collect.ImmutableSortedMultiset NATURAL_EMPTY_MULTISET -> c
    com.google.common.collect.ImmutableSortedMultiset descendingMultiset -> a
    com.google.common.collect.ImmutableSortedMultiset of() -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Comparable[]) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOfSorted(com.google.common.collect.SortedMultiset) -> copyOfSorted
    com.google.common.collect.ImmutableSortedMultiset copyOfSortedEntries(java.util.Comparator,java.util.Collection) -> a
    com.google.common.collect.ImmutableSortedMultiset emptyMultiset(java.util.Comparator) -> a
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    com.google.common.collect.ImmutableSortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.ImmutableSortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.ImmutableSortedMultiset$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.ImmutableSortedMultiset$Builder reverseOrder() -> reverseOrder
    com.google.common.collect.ImmutableSortedMultiset$Builder naturalOrder() -> naturalOrder
    java.lang.Object writeReplace() -> writeReplace
    java.util.Set elementSet() -> elementSet
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    java.util.NavigableSet elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.ImmutableSortedMultiset$Builder -> com.google.common.collect.ImmutableSortedMultiset$Builder:
    java.util.Comparator comparator -> b
    com.google.common.collect.ImmutableSortedMultiset$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableSortedMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    com.google.common.collect.ImmutableSortedMultiset$Builder setCount(java.lang.Object,int) -> setCount
    com.google.common.collect.ImmutableSortedMultiset$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSortedMultiset$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSortedMultiset$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSortedMultiset build() -> build
    com.google.common.collect.ImmutableMultiset build() -> build
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSortedMultiset$SerializedForm -> rd:
    java.util.Comparator comparator -> a
    java.lang.Object[] elements -> b
    int[] counts -> c
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMultisetFauxverideShim -> re:
    com.google.common.collect.ImmutableSortedMultiset$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Object[]) -> copyOf
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    java.util.Comparator NATURAL_ORDER -> a
    com.google.common.collect.ImmutableSortedSet NATURAL_EMPTY_SET -> d
    java.util.Comparator comparator -> b
    com.google.common.collect.ImmutableSortedSet descendingSet -> c
    com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator) -> a
    com.google.common.collect.ImmutableSortedSet of() -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Comparable[]) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOfSorted(java.util.SortedSet) -> copyOfSorted
    com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> a
    com.google.common.collect.ImmutableSortedSet$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.ImmutableSortedSet$Builder reverseOrder() -> reverseOrder
    com.google.common.collect.ImmutableSortedSet$Builder naturalOrder() -> naturalOrder
    int unsafeCompare(java.lang.Object,java.lang.Object) -> a
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> b
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    int indexOf(java.lang.Object) -> a
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet descendingSet() -> descendingSet
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    java.util.Comparator comparator -> c
    com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSortedSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSortedSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSortedSet build() -> build
    com.google.common.collect.ImmutableSet build() -> build
    com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$ArrayBasedBuilder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSortedSet$SerializedForm -> rf:
    java.util.Comparator comparator -> a
    java.lang.Object[] elements -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> rg:
    com.google.common.collect.ImmutableSortedSet$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Object[]) -> copyOf
com.google.common.collect.ImmutableTable -> com.google.common.collect.ImmutableTable:
    com.google.common.collect.ImmutableTable EMPTY -> a
    com.google.common.collect.ImmutableTable of() -> of
    com.google.common.collect.ImmutableTable of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableTable copyOf(com.google.common.collect.Table) -> copyOf
    com.google.common.collect.ImmutableTable$Builder builder() -> builder
    com.google.common.collect.Table$Cell cellOf(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    com.google.common.collect.ImmutableSet cellSet() -> cellSet
    com.google.common.collect.ImmutableSet createCellSet() -> e
    com.google.common.collect.ImmutableCollection values() -> values
    com.google.common.collect.ImmutableCollection createValues() -> f
    java.util.Iterator valuesIterator() -> d
    com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    com.google.common.collect.ImmutableMap row(java.lang.Object) -> row
    com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsValue(java.lang.Object) -> containsValue
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Collection createValues() -> c
    java.util.Collection values() -> values
    java.util.Iterator cellIterator() -> b
    java.util.Set createCellSet() -> a
    java.util.Set cellSet() -> cellSet
    boolean isEmpty() -> isEmpty
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
com.google.common.collect.ImmutableTable$Builder -> com.google.common.collect.ImmutableTable$Builder:
    java.util.List cells -> a
    java.util.Comparator rowComparator -> b
    java.util.Comparator columnComparator -> c
    com.google.common.collect.ImmutableTable$Builder orderRowsBy(java.util.Comparator) -> orderRowsBy
    com.google.common.collect.ImmutableTable$Builder orderColumnsBy(java.util.Comparator) -> orderColumnsBy
    com.google.common.collect.ImmutableTable$Builder put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableTable$Builder put(com.google.common.collect.Table$Cell) -> put
    com.google.common.collect.ImmutableTable$Builder putAll(com.google.common.collect.Table) -> putAll
    com.google.common.collect.ImmutableTable build() -> build
com.google.common.collect.Interner -> com.google.common.collect.Interner:
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners -> com.google.common.collect.Interners:
    com.google.common.collect.Interner newStrongInterner() -> newStrongInterner
    com.google.common.collect.Interner newWeakInterner() -> newWeakInterner
    com.google.common.base.Function asFunction(com.google.common.collect.Interner) -> asFunction
com.google.common.collect.Interners$1 -> rh:
    java.util.concurrent.ConcurrentMap val$map -> a
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners$InternerFunction -> ri:
    com.google.common.collect.Interner interner -> a
    java.lang.Object apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Interners$WeakInterner -> rj:
    com.google.common.collect.MapMakerInternalMap map -> a
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners$WeakInterner$Dummy -> rk:
    com.google.common.collect.Interners$WeakInterner$Dummy VALUE -> a
    com.google.common.collect.Interners$WeakInterner$Dummy[] $VALUES -> b
    com.google.common.collect.Interners$WeakInterner$Dummy[] values() -> values
    com.google.common.collect.Interners$WeakInterner$Dummy valueOf(java.lang.String) -> valueOf
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    java.lang.Iterable unmodifiableIterable(java.lang.Iterable) -> unmodifiableIterable
    java.lang.Iterable unmodifiableIterable(com.google.common.collect.ImmutableCollection) -> unmodifiableIterable
    int size(java.lang.Iterable) -> size
    boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    boolean removeAll(java.lang.Iterable,java.util.Collection) -> removeAll
    boolean retainAll(java.lang.Iterable,java.util.Collection) -> retainAll
    boolean removeIf(java.lang.Iterable,com.google.common.base.Predicate) -> removeIf
    boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate) -> a
    java.lang.Object removeFirstMatching(java.lang.Iterable,com.google.common.base.Predicate) -> a
    boolean elementsEqual(java.lang.Iterable,java.lang.Iterable) -> elementsEqual
    java.lang.String toString(java.lang.Iterable) -> toString
    java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    java.lang.Object getOnlyElement(java.lang.Iterable,java.lang.Object) -> getOnlyElement
    java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class) -> toArray
    java.lang.Object[] toArray(java.lang.Iterable) -> a
    java.util.Collection toCollection(java.lang.Iterable) -> c
    boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    int frequency(java.lang.Iterable,java.lang.Object) -> frequency
    java.lang.Iterable cycle(java.lang.Iterable) -> cycle
    java.lang.Iterable cycle(java.lang.Object[]) -> cycle
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable[]) -> concat
    java.lang.Iterable concat(java.lang.Iterable) -> concat
    java.lang.Iterable partition(java.lang.Iterable,int) -> partition
    java.lang.Iterable paddedPartition(java.lang.Iterable,int) -> paddedPartition
    java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate) -> filter
    java.lang.Iterable filter(java.lang.Iterable,java.lang.Class) -> filter
    boolean any(java.lang.Iterable,com.google.common.base.Predicate) -> any
    boolean all(java.lang.Iterable,com.google.common.base.Predicate) -> all
    java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate) -> find
    java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object) -> find
    com.google.common.base.Optional tryFind(java.lang.Iterable,com.google.common.base.Predicate) -> tryFind
    int indexOf(java.lang.Iterable,com.google.common.base.Predicate) -> indexOf
    java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function) -> transform
    java.lang.Object get(java.lang.Iterable,int) -> get
    java.lang.Object get(java.lang.Iterable,int,java.lang.Object) -> get
    java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    java.lang.Object getLast(java.lang.Iterable) -> getLast
    java.lang.Object getLast(java.lang.Iterable,java.lang.Object) -> getLast
    java.lang.Object getLastInNonemptyList(java.util.List) -> a
    java.lang.Iterable skip(java.lang.Iterable,int) -> skip
    java.lang.Iterable limit(java.lang.Iterable,int) -> limit
    java.lang.Iterable consumingIterable(java.lang.Iterable) -> consumingIterable
    boolean isEmpty(java.lang.Iterable) -> isEmpty
    java.lang.Iterable mergeSorted(java.lang.Iterable,java.util.Comparator) -> mergeSorted
    java.util.Iterator access$100(java.lang.Iterable) -> b
    com.google.common.base.Function access$300() -> a
com.google.common.collect.Iterables$1 -> rl:
    java.lang.Iterable val$iterable -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.google.common.collect.Iterables$10 -> rm:
    java.lang.Iterable val$iterable -> a
    int val$numberToSkip -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$10$1 -> rn:
    boolean atStart -> a
    java.util.Iterator val$iterator -> b
    com.google.common.collect.Iterables$10 this$0 -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterables$11 -> ro:
    java.lang.Iterable val$iterable -> a
    int val$limitSize -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$12 -> rp:
    java.lang.Iterable val$iterable -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$13 -> rq:
    java.lang.Iterable val$iterable -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$14 -> rr:
    java.lang.Iterable val$iterables -> a
    java.util.Comparator val$comparator -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$15 -> rs:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Iterables$2 -> rt:
    java.lang.Iterable val$inputs -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$3 -> ru:
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Iterables$4 -> rv:
    java.lang.Iterable val$iterable -> a
    int val$size -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$5 -> rw:
    java.lang.Iterable val$iterable -> a
    int val$size -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$6 -> rx:
    java.lang.Iterable val$unfiltered -> a
    com.google.common.base.Predicate val$predicate -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$7 -> ry:
    java.lang.Iterable val$unfiltered -> a
    java.lang.Class val$type -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$8 -> rz:
    java.lang.Iterable val$fromIterable -> a
    com.google.common.base.Function val$function -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$9 -> rA:
    java.util.List val$list -> a
    int val$numberToSkip -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$ConsumingQueueIterator -> rB:
    java.util.Queue queue -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterables$UnmodifiableIterable -> rC:
    java.lang.Iterable iterable -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    com.google.common.collect.UnmodifiableListIterator EMPTY_LIST_ITERATOR -> a
    java.util.Iterator EMPTY_MODIFIABLE_ITERATOR -> b
    com.google.common.collect.UnmodifiableIterator emptyIterator() -> emptyIterator
    java.util.Iterator emptyModifiableIterator() -> a
    com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
    com.google.common.collect.UnmodifiableIterator unmodifiableIterator(com.google.common.collect.UnmodifiableIterator) -> unmodifiableIterator
    int size(java.util.Iterator) -> size
    boolean contains(java.util.Iterator,java.lang.Object) -> contains
    boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    boolean removeIf(java.util.Iterator,com.google.common.base.Predicate) -> removeIf
    boolean retainAll(java.util.Iterator,java.util.Collection) -> retainAll
    boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    java.lang.String toString(java.util.Iterator) -> toString
    java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    java.lang.Object getOnlyElement(java.util.Iterator,java.lang.Object) -> getOnlyElement
    java.lang.Object[] toArray(java.util.Iterator,java.lang.Class) -> toArray
    boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    int frequency(java.util.Iterator,java.lang.Object) -> frequency
    java.util.Iterator cycle(java.lang.Iterable) -> cycle
    java.util.Iterator cycle(java.lang.Object[]) -> cycle
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator[]) -> concat
    java.util.Iterator concat(java.util.Iterator) -> concat
    com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int) -> partition
    com.google.common.collect.UnmodifiableIterator paddedPartition(java.util.Iterator,int) -> paddedPartition
    com.google.common.collect.UnmodifiableIterator partitionImpl(java.util.Iterator,int,boolean) -> a
    com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate) -> filter
    com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,java.lang.Class) -> filter
    boolean any(java.util.Iterator,com.google.common.base.Predicate) -> any
    boolean all(java.util.Iterator,com.google.common.base.Predicate) -> all
    java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate) -> find
    java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object) -> find
    com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate) -> tryFind
    int indexOf(java.util.Iterator,com.google.common.base.Predicate) -> indexOf
    java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function) -> transform
    java.lang.Object get(java.util.Iterator,int) -> get
    void checkNonnegative(int) -> a
    java.lang.Object get(java.util.Iterator,int,java.lang.Object) -> get
    java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    java.lang.Object getLast(java.util.Iterator) -> getLast
    java.lang.Object getLast(java.util.Iterator,java.lang.Object) -> getLast
    int advance(java.util.Iterator,int) -> advance
    java.util.Iterator limit(java.util.Iterator,int) -> limit
    java.util.Iterator consumingIterator(java.util.Iterator) -> consumingIterator
    java.lang.Object pollNext(java.util.Iterator) -> a
    void clear(java.util.Iterator) -> b
    com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[]) -> forArray
    com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int) -> a
    com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    com.google.common.collect.UnmodifiableIterator forEnumeration(java.util.Enumeration) -> forEnumeration
    java.util.Enumeration asEnumeration(java.util.Iterator) -> asEnumeration
    com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
    com.google.common.collect.PeekingIterator peekingIterator(com.google.common.collect.PeekingIterator) -> peekingIterator
    com.google.common.collect.UnmodifiableIterator mergeSorted(java.lang.Iterable,java.util.Comparator) -> mergeSorted
    java.util.ListIterator cast(java.util.Iterator) -> c
com.google.common.collect.Iterators$1 -> rD:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
com.google.common.collect.Iterators$10 -> rE:
    java.util.Iterator val$iterator -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$11 -> rF:
    java.lang.Object[] val$array -> a
    int val$offset -> b
    java.lang.Object get(int) -> a
com.google.common.collect.Iterators$12 -> rG:
    boolean done -> a
    java.lang.Object val$value -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$13 -> rH:
    java.util.Enumeration val$enumeration -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$14 -> rI:
    java.util.Iterator val$iterator -> a
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
com.google.common.collect.Iterators$2 -> rJ:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$3 -> rK:
    java.util.Iterator val$iterator -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$4 -> rL:
    java.util.Iterator iterator -> a
    java.util.Iterator removeFrom -> b
    java.lang.Iterable val$iterable -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$5 -> rM:
    java.util.Iterator current -> a
    java.util.Iterator removeFrom -> b
    java.util.Iterator val$inputs -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$6 -> rN:
    java.util.Iterator val$iterator -> a
    int val$size -> b
    boolean val$pad -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$7 -> rO:
    java.util.Iterator val$unfiltered -> a
    com.google.common.base.Predicate val$predicate -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterators$8 -> rP:
    com.google.common.base.Function val$function -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Iterators$9 -> rQ:
    int count -> c
    int val$limitSize -> a
    java.util.Iterator val$iterator -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$MergingIterator -> rR:
    java.util.Queue queue -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$MergingIterator$1 -> rS:
    java.util.Comparator val$itemComparator -> a
    com.google.common.collect.Iterators$MergingIterator this$0 -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Iterators$PeekingImpl -> rT:
    java.util.Iterator iterator -> a
    boolean hasPeeked -> b
    java.lang.Object peekedElement -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.Object peek() -> peek
com.google.common.collect.LexicographicalOrdering -> rU:
    com.google.common.collect.Ordering elementOrder -> a
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    int valueSetCapacity -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedHashMultimap create() -> create
    com.google.common.collect.LinkedHashMultimap create(int,int) -> create
    com.google.common.collect.LinkedHashMultimap create(com.google.common.collect.Multimap) -> create
    void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> b
    void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> b
    java.util.Set createCollection() -> a
    java.util.Collection createCollection(java.lang.Object) -> a
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Collection values() -> values
    java.util.Iterator entryIterator() -> g
    java.util.Iterator valueIterator() -> f
    void clear() -> clear
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    java.util.Collection createCollection() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
    void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry access$300(com.google.common.collect.LinkedHashMultimap) -> a
    void access$400(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> a
    void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    void access$600(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> a
com.google.common.collect.LinkedHashMultimap$1 -> rV:
    com.google.common.collect.LinkedHashMultimap$ValueEntry nextEntry -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove -> b
    com.google.common.collect.LinkedHashMultimap this$0 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.LinkedHashMultimap$ValueEntry -> rW:
    int smearedValueHash -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueBucket -> b
    com.google.common.collect.LinkedHashMultimap$ValueSetLink predecessorInValueSet -> c
    com.google.common.collect.LinkedHashMultimap$ValueSetLink successorInValueSet -> d
    com.google.common.collect.LinkedHashMultimap$ValueEntry predecessorInMultimap -> g
    com.google.common.collect.LinkedHashMultimap$ValueEntry successorInMultimap -> h
    boolean matchesValue(java.lang.Object,int) -> a
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> a
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> b
    void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> b
    com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap() -> c
    com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap() -> d
    void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> a
    void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> b
com.google.common.collect.LinkedHashMultimap$ValueSet -> rX:
    java.lang.Object key -> c
    com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable -> a
    int size -> d
    int modCount -> e
    com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry -> f
    com.google.common.collect.LinkedHashMultimap$ValueSetLink lastEntry -> g
    com.google.common.collect.LinkedHashMultimap this$0 -> b
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> a
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> b
    void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet) -> a
    int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet) -> b
com.google.common.collect.LinkedHashMultimap$ValueSet$1 -> rY:
    com.google.common.collect.LinkedHashMultimap$ValueSetLink nextEntry -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove -> b
    int expectedModCount -> c
    com.google.common.collect.LinkedHashMultimap$ValueSet this$1 -> d
    void checkForComodification() -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.LinkedHashMultimap$ValueSetLink -> rZ:
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> a
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> b
    void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> b
com.google.common.collect.LinkedHashMultiset -> com.google.common.collect.LinkedHashMultiset:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedHashMultiset create() -> create
    com.google.common.collect.LinkedHashMultiset create(int) -> create
    com.google.common.collect.LinkedHashMultiset create(java.lang.Iterable) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int setCount(java.lang.Object,int) -> setCount
    int remove(java.lang.Object,int) -> remove
    int add(java.lang.Object,int) -> add
    int count(java.lang.Object) -> count
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
com.google.common.collect.LinkedListMultimap -> com.google.common.collect.LinkedListMultimap:
    com.google.common.collect.LinkedListMultimap$Node head -> a
    com.google.common.collect.LinkedListMultimap$Node tail -> b
    java.util.Map keyToKeyList -> c
    int size -> d
    int modCount -> e
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedListMultimap create() -> create
    com.google.common.collect.LinkedListMultimap create(int) -> create
    com.google.common.collect.LinkedListMultimap create(com.google.common.collect.Multimap) -> create
    com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> a
    void removeAllNodes(java.lang.Object) -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List getCopy(java.lang.Object) -> c
    java.util.List removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.List get(java.lang.Object) -> get
    java.util.Set createKeySet() -> e
    java.util.List values() -> values
    java.util.List entries() -> entries
    java.util.Iterator entryIterator() -> g
    java.util.Map createAsMap() -> h
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Map asMap() -> asMap
    java.util.Collection createValues() -> k
    java.util.Collection values() -> values
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    java.util.Collection createEntries() -> i
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    int access$000(com.google.common.collect.LinkedListMultimap) -> a
    com.google.common.collect.LinkedListMultimap$Node access$100(com.google.common.collect.LinkedListMultimap) -> b
    com.google.common.collect.LinkedListMultimap$Node access$200(com.google.common.collect.LinkedListMultimap) -> c
    void access$300(java.lang.Object) -> a
    void access$400(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$Node) -> a
    void access$500(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> a
    java.util.Map access$600(com.google.common.collect.LinkedListMultimap) -> d
    com.google.common.collect.LinkedListMultimap$Node access$700(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> a
    int access$900(com.google.common.collect.LinkedListMultimap) -> e
com.google.common.collect.LinkedListMultimap$1 -> sa:
    java.lang.Object val$key -> a
    com.google.common.collect.LinkedListMultimap this$0 -> b
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.LinkedListMultimap$2 -> sb:
    com.google.common.collect.LinkedListMultimap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.LinkedListMultimap$3 -> sc:
    com.google.common.collect.LinkedListMultimap this$0 -> a
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.LinkedListMultimap$3$1 -> sd:
    com.google.common.collect.LinkedListMultimap$NodeIterator val$nodeItr -> a
    com.google.common.collect.LinkedListMultimap$3 this$1 -> b
    void set(java.lang.Object) -> set
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.LinkedListMultimap$4 -> se:
    com.google.common.collect.LinkedListMultimap this$0 -> a
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.LinkedListMultimap$DistinctKeyIterator -> sf:
    java.util.Set seenKeys -> a
    com.google.common.collect.LinkedListMultimap$Node next -> b
    com.google.common.collect.LinkedListMultimap$Node current -> c
    int expectedModCount -> d
    com.google.common.collect.LinkedListMultimap this$0 -> e
    void checkForConcurrentModification() -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.LinkedListMultimap$KeyList -> sg:
    com.google.common.collect.LinkedListMultimap$Node head -> a
    com.google.common.collect.LinkedListMultimap$Node tail -> b
    int count -> c
com.google.common.collect.LinkedListMultimap$Node -> sh:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.collect.LinkedListMultimap$Node next -> c
    com.google.common.collect.LinkedListMultimap$Node previous -> d
    com.google.common.collect.LinkedListMultimap$Node nextSibling -> e
    com.google.common.collect.LinkedListMultimap$Node previousSibling -> f
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.LinkedListMultimap$NodeIterator -> si:
    int nextIndex -> a
    com.google.common.collect.LinkedListMultimap$Node next -> b
    com.google.common.collect.LinkedListMultimap$Node current -> c
    com.google.common.collect.LinkedListMultimap$Node previous -> d
    int expectedModCount -> e
    com.google.common.collect.LinkedListMultimap this$0 -> f
    void checkForConcurrentModification() -> a
    boolean hasNext() -> hasNext
    com.google.common.collect.LinkedListMultimap$Node next() -> b
    void remove() -> remove
    boolean hasPrevious() -> hasPrevious
    com.google.common.collect.LinkedListMultimap$Node previous() -> c
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.lang.Object previous() -> previous
    java.lang.Object next() -> next
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator -> sj:
    java.lang.Object key -> a
    int nextIndex -> b
    com.google.common.collect.LinkedListMultimap$Node next -> c
    com.google.common.collect.LinkedListMultimap$Node current -> d
    com.google.common.collect.LinkedListMultimap$Node previous -> e
    com.google.common.collect.LinkedListMultimap this$0 -> f
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
com.google.common.collect.ListMultimap -> com.google.common.collect.ListMultimap:
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    java.util.ArrayList newArrayList() -> newArrayList
    java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    int computeArrayListCapacity(int) -> a
    java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    java.util.ArrayList newArrayListWithExpectedSize(int) -> newArrayListWithExpectedSize
    java.util.LinkedList newLinkedList() -> newLinkedList
    java.util.LinkedList newLinkedList(java.lang.Iterable) -> newLinkedList
    java.util.concurrent.CopyOnWriteArrayList newCopyOnWriteArrayList() -> newCopyOnWriteArrayList
    java.util.concurrent.CopyOnWriteArrayList newCopyOnWriteArrayList(java.lang.Iterable) -> newCopyOnWriteArrayList
    java.util.List asList(java.lang.Object,java.lang.Object[]) -> asList
    java.util.List asList(java.lang.Object,java.lang.Object,java.lang.Object[]) -> asList
    java.util.List transform(java.util.List,com.google.common.base.Function) -> transform
    java.util.List partition(java.util.List,int) -> partition
    com.google.common.collect.ImmutableList charactersOf(java.lang.String) -> charactersOf
    java.util.List charactersOf(java.lang.CharSequence) -> charactersOf
    java.util.List reverse(java.util.List) -> reverse
    int hashCodeImpl(java.util.List) -> a
    boolean equalsImpl(java.util.List,java.lang.Object) -> a
    boolean addAllImpl(java.util.List,int,java.lang.Iterable) -> a
    int indexOfImpl(java.util.List,java.lang.Object) -> b
    int lastIndexOfImpl(java.util.List,java.lang.Object) -> c
    java.util.ListIterator listIteratorImpl(java.util.List,int) -> a
    java.util.List subListImpl(java.util.List,int,int) -> a
    java.util.List cast(java.lang.Iterable) -> a
com.google.common.collect.Lists$1 -> sk:
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$2 -> sl:
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$AbstractListWrapper -> sm:
    java.util.List backingList -> a
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    boolean contains(java.lang.Object) -> contains
    int size() -> size
com.google.common.collect.Lists$CharSequenceAsList -> sn:
    java.lang.CharSequence sequence -> a
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$OnePlusArrayList -> so:
    java.lang.Object first -> a
    java.lang.Object[] rest -> b
    long serialVersionUID -> serialVersionUID
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$Partition -> sp:
    java.util.List list -> a
    int size -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$RandomAccessListWrapper -> sq:
com.google.common.collect.Lists$RandomAccessPartition -> sr:
com.google.common.collect.Lists$RandomAccessReverseList -> ss:
com.google.common.collect.Lists$ReverseList -> st:
    java.util.List forwardList -> a
    java.util.List getForwardList() -> a
    int reverseIndex(int) -> a
    int reversePosition(int) -> b
    void add(int,java.lang.Object) -> add
    void clear() -> clear
    java.lang.Object remove(int) -> remove
    void removeRange(int,int) -> removeRange
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    int size() -> size
    java.util.List subList(int,int) -> subList
    java.util.Iterator iterator() -> iterator
    java.util.ListIterator listIterator(int) -> listIterator
    int access$000(com.google.common.collect.Lists$ReverseList,int) -> a
com.google.common.collect.Lists$ReverseList$1 -> su:
    boolean canRemoveOrSet -> a
    java.util.ListIterator val$forwardIterator -> b
    com.google.common.collect.Lists$ReverseList this$0 -> c
    void add(java.lang.Object) -> add
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
com.google.common.collect.Lists$StringAsImmutableList -> sv:
    java.lang.String string -> a
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    boolean isPartialView() -> a
    int size() -> size
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$TransformingRandomAccessList -> sw:
    java.util.List fromList -> a
    com.google.common.base.Function function -> b
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    java.lang.Object get(int) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(int) -> remove
    int size() -> size
com.google.common.collect.Lists$TransformingSequentialList -> sx:
    java.util.List fromList -> a
    com.google.common.base.Function function -> b
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$TransformingSequentialList$1 -> sy:
    com.google.common.collect.Lists$TransformingSequentialList this$0 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Lists$TwoPlusArrayList -> sz:
    java.lang.Object first -> a
    java.lang.Object second -> b
    java.lang.Object[] rest -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.collect.MapConstraint -> com.google.common.collect.MapConstraint:
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
    java.lang.String toString() -> toString
com.google.common.collect.MapConstraints -> com.google.common.collect.MapConstraints:
    com.google.common.collect.MapConstraint notNull() -> notNull
    java.util.Map constrainedMap(java.util.Map,com.google.common.collect.MapConstraint) -> constrainedMap
    com.google.common.collect.Multimap constrainedMultimap(com.google.common.collect.Multimap,com.google.common.collect.MapConstraint) -> constrainedMultimap
    com.google.common.collect.ListMultimap constrainedListMultimap(com.google.common.collect.ListMultimap,com.google.common.collect.MapConstraint) -> constrainedListMultimap
    com.google.common.collect.SetMultimap constrainedSetMultimap(com.google.common.collect.SetMultimap,com.google.common.collect.MapConstraint) -> constrainedSetMultimap
    com.google.common.collect.SortedSetMultimap constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap,com.google.common.collect.MapConstraint) -> constrainedSortedSetMultimap
    java.util.Set constrainedEntrySet(java.util.Set,com.google.common.collect.MapConstraint) -> c
    com.google.common.collect.BiMap constrainedBiMap(com.google.common.collect.BiMap,com.google.common.collect.MapConstraint) -> constrainedBiMap
    java.util.Set access$000(java.util.Set,com.google.common.collect.MapConstraint) -> a
    java.util.Map access$100(java.util.Map,com.google.common.collect.MapConstraint) -> a
    java.util.Set access$200(java.util.Set,com.google.common.collect.MapConstraint) -> b
    java.util.Collection access$300(java.util.Collection,com.google.common.collect.MapConstraint) -> a
    java.util.Collection access$400(java.lang.Object,java.lang.Iterable,com.google.common.collect.MapConstraint) -> a
    java.util.Map$Entry access$500(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> a
    java.util.Map$Entry access$700(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> b
com.google.common.collect.MapConstraints$1 -> sA:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.MapConstraint val$constraint -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$2 -> sB:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.MapConstraint val$constraint -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object getValue() -> getValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$2$1 -> sC:
    com.google.common.collect.MapConstraints$2 this$0 -> a
    java.lang.Object checkElement(java.lang.Object) -> checkElement
com.google.common.collect.MapConstraints$ConstrainedAsMapEntries -> sD:
    com.google.common.collect.MapConstraint constraint -> a
    java.util.Set entries -> b
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
    com.google.common.collect.MapConstraint access$600(com.google.common.collect.MapConstraints$ConstrainedAsMapEntries) -> a
com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1 -> sE:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.MapConstraints$ConstrainedAsMapEntries this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedAsMapValues -> sF:
    java.util.Collection delegate -> a
    java.util.Set entrySet -> b
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1 -> sG:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.MapConstraints$ConstrainedAsMapValues this$0 -> b
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.MapConstraints$ConstrainedBiMap -> sH:
    com.google.common.collect.BiMap inverse -> a
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Map delegate() -> delegate
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntries -> sI:
    com.google.common.collect.MapConstraint constraint -> a
    java.util.Collection entries -> b
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntries$1 -> sJ:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.MapConstraints$ConstrainedEntries this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntrySet -> sK:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapConstraints$ConstrainedListMultimap -> sL:
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.MapConstraints$ConstrainedMap -> sM:
    java.util.Map delegate -> a
    com.google.common.collect.MapConstraint constraint -> b
    java.util.Set entrySet -> c
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap -> sN:
    com.google.common.collect.MapConstraint constraint -> a
    com.google.common.collect.Multimap delegate -> b
    java.util.Collection entries -> c
    java.util.Map asMap -> d
    com.google.common.collect.Multimap delegate() -> delegate
    java.util.Map asMap() -> asMap
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap$1 -> sO:
    java.util.Set entrySet -> a
    java.util.Collection values -> b
    java.util.Map val$asMapDelegate -> c
    com.google.common.collect.MapConstraints$ConstrainedMultimap this$0 -> d
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.util.Collection get(java.lang.Object) -> a
    java.util.Collection values() -> values
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap$2 -> sP:
    java.lang.Object val$key -> a
    com.google.common.collect.MapConstraints$ConstrainedMultimap this$0 -> b
    java.lang.Object checkElement(java.lang.Object) -> checkElement
com.google.common.collect.MapConstraints$ConstrainedSetMultimap -> sQ:
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap -> sR:
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.MapConstraints$InverseConstraint -> sS:
    com.google.common.collect.MapConstraint constraint -> a
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
com.google.common.collect.MapConstraints$NotNullMapConstraint -> sT:
    com.google.common.collect.MapConstraints$NotNullMapConstraint INSTANCE -> a
    com.google.common.collect.MapConstraints$NotNullMapConstraint[] $VALUES -> b
    com.google.common.collect.MapConstraints$NotNullMapConstraint[] values() -> values
    com.google.common.collect.MapConstraints$NotNullMapConstraint valueOf(java.lang.String) -> valueOf
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
    java.lang.String toString() -> toString
com.google.common.collect.MapDifference -> com.google.common.collect.MapDifference:
    boolean areEqual() -> areEqual
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesDiffering() -> entriesDiffering
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapDifference$ValueDifference -> com.google.common.collect.MapDifference$ValueDifference:
    java.lang.Object leftValue() -> leftValue
    java.lang.Object rightValue() -> rightValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    boolean useCustomMap -> b
    int initialCapacity -> c
    int concurrencyLevel -> d
    int maximumSize -> e
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> f
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> g
    long expireAfterWriteNanos -> h
    long expireAfterAccessNanos -> i
    com.google.common.collect.MapMaker$RemovalCause nullRemovalCause -> j
    com.google.common.base.Equivalence keyEquivalence -> k
    com.google.common.base.Ticker ticker -> l
    com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence) -> a
    com.google.common.base.Equivalence getKeyEquivalence() -> b
    com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    int getInitialCapacity() -> c
    com.google.common.collect.MapMaker maximumSize(int) -> a
    com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    int getConcurrencyLevel() -> d
    com.google.common.collect.MapMaker weakKeys() -> weakKeys
    com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> a
    com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> e
    com.google.common.collect.MapMaker weakValues() -> weakValues
    com.google.common.collect.MapMaker softValues() -> softValues
    com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> b
    com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> f
    com.google.common.collect.MapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit) -> a
    void checkExpiration(long,java.util.concurrent.TimeUnit) -> c
    long getExpireAfterWriteNanos() -> g
    com.google.common.collect.MapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit) -> b
    long getExpireAfterAccessNanos() -> h
    com.google.common.base.Ticker getTicker() -> i
    com.google.common.collect.GenericMapMaker removalListener(com.google.common.collect.MapMaker$RemovalListener) -> a
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    com.google.common.collect.MapMakerInternalMap makeCustomMap() -> j
    java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function) -> a
    java.lang.String toString() -> toString
    com.google.common.collect.GenericMapMaker softValues() -> softValues
    com.google.common.collect.GenericMapMaker weakValues() -> weakValues
    com.google.common.collect.GenericMapMaker weakKeys() -> weakKeys
    com.google.common.collect.GenericMapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.common.collect.GenericMapMaker initialCapacity(int) -> initialCapacity
com.google.common.collect.MapMaker$ComputingMapAdapter -> sU:
    long serialVersionUID -> serialVersionUID
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.MapMaker$NullComputingConcurrentMap -> sV:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function computingFunction -> a
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object compute(java.lang.Object) -> a
com.google.common.collect.MapMaker$NullConcurrentMap -> sW:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMaker$RemovalListener removalListener -> a
    com.google.common.collect.MapMaker$RemovalCause removalCause -> b
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    void notifyRemoval(java.lang.Object,java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.util.Set entrySet() -> entrySet
com.google.common.collect.MapMaker$RemovalCause -> sX:
    com.google.common.collect.MapMaker$RemovalCause EXPLICIT -> a
    com.google.common.collect.MapMaker$RemovalCause REPLACED -> b
    com.google.common.collect.MapMaker$RemovalCause COLLECTED -> c
    com.google.common.collect.MapMaker$RemovalCause EXPIRED -> d
    com.google.common.collect.MapMaker$RemovalCause SIZE -> e
    com.google.common.collect.MapMaker$RemovalCause[] $VALUES -> f
    com.google.common.collect.MapMaker$RemovalCause[] values() -> values
    com.google.common.collect.MapMaker$RemovalCause valueOf(java.lang.String) -> valueOf
com.google.common.collect.MapMaker$RemovalCause$1 -> sY:
com.google.common.collect.MapMaker$RemovalCause$2 -> sZ:
com.google.common.collect.MapMaker$RemovalCause$3 -> ta:
com.google.common.collect.MapMaker$RemovalCause$4 -> tb:
com.google.common.collect.MapMaker$RemovalCause$5 -> tc:
com.google.common.collect.MapMaker$RemovalListener -> td:
com.google.common.collect.MapMaker$RemovalNotification -> te:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMaker$RemovalCause cause -> a
com.google.common.collect.MapMakerInternalMap -> tf:
    java.util.logging.Logger logger -> a
    int segmentMask -> b
    int segmentShift -> c
    com.google.common.collect.MapMakerInternalMap$Segment[] segments -> d
    int concurrencyLevel -> e
    com.google.common.base.Equivalence keyEquivalence -> f
    com.google.common.base.Equivalence valueEquivalence -> g
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> h
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> i
    int maximumSize -> j
    long expireAfterAccessNanos -> k
    long expireAfterWriteNanos -> l
    java.util.Queue removalNotificationQueue -> m
    com.google.common.collect.MapMaker$RemovalListener removalListener -> n
    com.google.common.collect.MapMakerInternalMap$EntryFactory entryFactory -> o
    com.google.common.base.Ticker ticker -> p
    com.google.common.collect.MapMakerInternalMap$ValueReference UNSET -> q
    java.util.Queue DISCARDING_QUEUE -> r
    java.util.Set keySet -> s
    java.util.Collection values -> t
    java.util.Set entrySet -> u
    long serialVersionUID -> serialVersionUID
    boolean evictsBySize() -> a
    boolean expires() -> b
    boolean expiresAfterAccess() -> c
    boolean usesKeyReferences() -> d
    boolean usesValueReferences() -> e
    com.google.common.collect.MapMakerInternalMap$ValueReference unset() -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nullEntry() -> g
    java.util.Queue discardingQueue() -> h
    int hash(java.lang.Object) -> b
    void reclaimValue(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    void reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> a
    com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> a
    java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> a
    void connectExpirables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void nullifyExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    void processPendingNotifications() -> i
    void connectEvictables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    void nullifyEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> e
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object) -> c
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.MapMakerInternalMap$1 -> tg:
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.MapMakerInternalMap$2 -> th:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry -> ti:
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy -> tj:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> b
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> c
    com.google.common.base.Equivalence keyEquivalence -> d
    com.google.common.base.Equivalence valueEquivalence -> e
    long expireAfterWriteNanos -> f
    long expireAfterAccessNanos -> g
    int maximumSize -> h
    int concurrencyLevel -> i
    com.google.common.collect.MapMaker$RemovalListener removalListener -> j
    java.util.concurrent.ConcurrentMap delegate -> k
    java.util.concurrent.ConcurrentMap delegate() -> delegate
    void writeMapTo(java.io.ObjectOutputStream) -> a
    com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> a
    void readEntries(java.io.ObjectInputStream) -> b
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapMakerInternalMap$EntryFactory -> tk:
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG -> a
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EXPIRABLE -> b
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EVICTABLE -> c
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EXPIRABLE_EVICTABLE -> d
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK -> e
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EXPIRABLE -> f
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EVICTABLE -> g
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EXPIRABLE_EVICTABLE -> h
    com.google.common.collect.MapMakerInternalMap$EntryFactory[][] factories -> i
    com.google.common.collect.MapMakerInternalMap$EntryFactory[] $VALUES -> j
    com.google.common.collect.MapMakerInternalMap$EntryFactory[] values() -> values
    com.google.common.collect.MapMakerInternalMap$EntryFactory valueOf(java.lang.String) -> valueOf
    com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void copyExpirableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void copyEvictableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$EntryFactory$1 -> tl:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$2 -> tm:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$3 -> tn:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$4 -> to:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$5 -> tp:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$6 -> tq:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$7 -> tr:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$8 -> ts:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryIterator -> tt:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> tu:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.MapMakerInternalMap$EvictionQueue -> tv:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry head -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.collect.MapMakerInternalMap$EvictionQueue$1 -> tw:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> b
    com.google.common.collect.MapMakerInternalMap$EvictionQueue this$0 -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$EvictionQueue$2 -> tx:
    com.google.common.collect.MapMakerInternalMap$EvictionQueue this$0 -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.MapMakerInternalMap$ExpirationQueue -> ty:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry head -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1 -> tz:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> b
    com.google.common.collect.MapMakerInternalMap$ExpirationQueue this$0 -> c
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2 -> tA:
    com.google.common.collect.MapMakerInternalMap$ExpirationQueue this$0 -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.MapMakerInternalMap$HashIterator -> tB:
    int nextSegmentIndex -> b
    int nextTableIndex -> c
    com.google.common.collect.MapMakerInternalMap$Segment currentSegment -> d
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEntry -> f
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextExternal -> g
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry lastReturned -> h
    com.google.common.collect.MapMakerInternalMap this$0 -> i
    void advance() -> b
    boolean nextInChain() -> c
    boolean nextInTable() -> d
    boolean advanceTo(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean hasNext() -> hasNext
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> a
    void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> tC:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> tD:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.MapMakerInternalMap$NullEntry -> tE:
    com.google.common.collect.MapMakerInternalMap$NullEntry INSTANCE -> a
    com.google.common.collect.MapMakerInternalMap$NullEntry[] $VALUES -> b
    com.google.common.collect.MapMakerInternalMap$NullEntry[] values() -> values
    com.google.common.collect.MapMakerInternalMap$NullEntry valueOf(java.lang.String) -> valueOf
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$ReferenceEntry -> tF:
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$Segment -> tG:
    com.google.common.collect.MapMakerInternalMap map -> a
    int count -> b
    int modCount -> c
    int threshold -> d
    java.util.concurrent.atomic.AtomicReferenceArray table -> e
    int maxSegmentSize -> f
    java.lang.ref.ReferenceQueue keyReferenceQueue -> g
    java.lang.ref.ReferenceQueue valueReferenceQueue -> h
    java.util.Queue recencyQueue -> i
    java.util.concurrent.atomic.AtomicInteger readCount -> j
    java.util.Queue evictionQueue -> k
    java.util.Queue expirationQueue -> l
    java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void setValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    void tryDrainReferenceQueues() -> e
    void drainReferenceQueues() -> f
    void recordRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void recordLockedRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    void drainRecencyQueue() -> g
    void recordExpirationTime(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> a
    void tryExpireEntries() -> h
    void expireEntries() -> i
    void enqueueNotification(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMaker$RemovalCause) -> a
    void enqueueNotification$4edc571b(java.lang.Object,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause) -> a
    boolean evictEntries() -> j
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getLiveEntry(java.lang.Object,int) -> e
    java.lang.Object get(java.lang.Object,int) -> b
    boolean containsKey(java.lang.Object,int) -> c
    java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> a
    boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> a
    java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object,int) -> d
    boolean remove(java.lang.Object,int,java.lang.Object) -> b
    void clear() -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    void removeCollectedEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int) -> a
    boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    boolean clearValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference) -> b
    boolean removeEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int,com.google.common.collect.MapMaker$RemovalCause) -> a
    boolean isCollected(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    void postReadCleanup() -> b
    void runLockedCleanup() -> c
    void runUnlockedCleanup() -> d
com.google.common.collect.MapMakerInternalMap$SerializationProxy -> tH:
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.MapMakerInternalMap$SoftValueReference -> tI:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry entry -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
com.google.common.collect.MapMakerInternalMap$Strength -> tJ:
    com.google.common.collect.MapMakerInternalMap$Strength STRONG -> a
    com.google.common.collect.MapMakerInternalMap$Strength SOFT -> b
    com.google.common.collect.MapMakerInternalMap$Strength WEAK -> c
    com.google.common.collect.MapMakerInternalMap$Strength[] $VALUES -> d
    com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
    com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$Strength$1 -> tK:
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$Strength$2 -> tL:
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$Strength$3 -> tM:
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$StrongEntry -> tN:
    java.lang.Object key -> a
    int hash -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> c
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> d
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    int getHash() -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry -> tO:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry -> tP:
    long time -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> g
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry -> tQ:
    long time -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> g
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> h
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> i
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$StrongValueReference -> tR:
    java.lang.Object referent -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.MapMakerInternalMap$ValueIterator -> tS:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$ValueReference -> tT:
    java.lang.Object get() -> get
    java.lang.Object waitForValue() -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    boolean isComputingReference() -> b
com.google.common.collect.MapMakerInternalMap$Values -> tU:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.common.collect.MapMakerInternalMap$WeakEntry -> tV:
    int hash -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> b
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    int getHash() -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry -> tW:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry -> tX:
    long time -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> f
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry -> tY:
    long time -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> g
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> h
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$WeakValueReference -> tZ:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry entry -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> ua:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.collect.MapMakerInternalMap this$0 -> c
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    com.google.common.base.Joiner$MapJoiner STANDARD_JOINER -> a
    com.google.common.base.Function keyFunction() -> a
    com.google.common.base.Function valueFunction() -> b
    java.util.Iterator keyIterator(java.util.Iterator) -> a
    java.util.Iterator valueIterator(java.util.Iterator) -> b
    com.google.common.collect.UnmodifiableIterator valueIterator(com.google.common.collect.UnmodifiableIterator) -> a
    com.google.common.collect.ImmutableMap immutableEnumMap(java.util.Map) -> immutableEnumMap
    java.util.HashMap newHashMap() -> newHashMap
    java.util.HashMap newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    int capacity(int) -> a
    java.util.HashMap newHashMap(java.util.Map) -> newHashMap
    java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    java.util.LinkedHashMap newLinkedHashMap(java.util.Map) -> newLinkedHashMap
    java.util.concurrent.ConcurrentMap newConcurrentMap() -> newConcurrentMap
    java.util.TreeMap newTreeMap() -> newTreeMap
    java.util.TreeMap newTreeMap(java.util.SortedMap) -> newTreeMap
    java.util.TreeMap newTreeMap(java.util.Comparator) -> newTreeMap
    java.util.EnumMap newEnumMap(java.lang.Class) -> newEnumMap
    java.util.EnumMap newEnumMap(java.util.Map) -> newEnumMap
    java.util.IdentityHashMap newIdentityHashMap() -> newIdentityHashMap
    com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map) -> difference
    com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map,com.google.common.base.Equivalence) -> difference
    void doDifference(java.util.Map,java.util.Map,com.google.common.base.Equivalence,java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> a
    com.google.common.collect.SortedMapDifference difference(java.util.SortedMap,java.util.Map) -> difference
    java.util.Map asMap(java.util.Set,com.google.common.base.Function) -> asMap
    java.util.SortedMap asMap(java.util.SortedSet,com.google.common.base.Function) -> asMap
    java.util.NavigableMap asMap(java.util.NavigableSet,com.google.common.base.Function) -> asMap
    java.util.Iterator asMapEntryIterator(java.util.Set,com.google.common.base.Function) -> a
    com.google.common.collect.ImmutableMap toMap(java.lang.Iterable,com.google.common.base.Function) -> toMap
    com.google.common.collect.ImmutableMap toMap(java.util.Iterator,com.google.common.base.Function) -> toMap
    com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function) -> uniqueIndex
    com.google.common.collect.ImmutableMap uniqueIndex(java.util.Iterator,com.google.common.base.Function) -> uniqueIndex
    com.google.common.collect.ImmutableMap fromProperties(java.util.Properties) -> fromProperties
    java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    java.util.Set unmodifiableEntrySet(java.util.Set) -> a
    java.util.Map$Entry unmodifiableEntry(java.util.Map$Entry) -> a
    com.google.common.collect.BiMap synchronizedBiMap(com.google.common.collect.BiMap) -> synchronizedBiMap
    com.google.common.collect.BiMap unmodifiableBiMap(com.google.common.collect.BiMap) -> unmodifiableBiMap
    java.util.Map transformValues(java.util.Map,com.google.common.base.Function) -> transformValues
    java.util.SortedMap transformValues(java.util.SortedMap,com.google.common.base.Function) -> transformValues
    java.util.NavigableMap transformValues(java.util.NavigableMap,com.google.common.base.Function) -> transformValues
    java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function) -> a
    com.google.common.base.Function asValueToValueFunction(com.google.common.collect.Maps$EntryTransformer,java.lang.Object) -> a
    com.google.common.base.Function asEntryToValueFunction(com.google.common.collect.Maps$EntryTransformer) -> a
    java.util.Map$Entry transformEntry(com.google.common.collect.Maps$EntryTransformer,java.util.Map$Entry) -> a
    com.google.common.base.Function asEntryToEntryFunction(com.google.common.collect.Maps$EntryTransformer) -> b
    com.google.common.base.Predicate keyPredicateOnEntries(com.google.common.base.Predicate) -> a
    com.google.common.base.Predicate valuePredicateOnEntries(com.google.common.base.Predicate) -> b
    java.util.Map filterKeys(java.util.Map,com.google.common.base.Predicate) -> filterKeys
    java.util.SortedMap filterKeys(java.util.SortedMap,com.google.common.base.Predicate) -> filterKeys
    java.util.NavigableMap filterKeys(java.util.NavigableMap,com.google.common.base.Predicate) -> filterKeys
    com.google.common.collect.BiMap filterKeys(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterKeys
    java.util.Map filterValues(java.util.Map,com.google.common.base.Predicate) -> filterValues
    java.util.SortedMap filterValues(java.util.SortedMap,com.google.common.base.Predicate) -> filterValues
    java.util.NavigableMap filterValues(java.util.NavigableMap,com.google.common.base.Predicate) -> filterValues
    com.google.common.collect.BiMap filterValues(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterValues
    java.util.Map filterEntries(java.util.Map,com.google.common.base.Predicate) -> filterEntries
    java.util.SortedMap filterEntries(java.util.SortedMap,com.google.common.base.Predicate) -> filterEntries
    java.util.NavigableMap filterEntries(java.util.NavigableMap,com.google.common.base.Predicate) -> filterEntries
    com.google.common.collect.BiMap filterEntries(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterEntries
    java.util.Map filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap,com.google.common.base.Predicate) -> a
    java.util.NavigableMap unmodifiableNavigableMap(java.util.NavigableMap) -> unmodifiableNavigableMap
    java.util.NavigableMap synchronizedNavigableMap(java.util.NavigableMap) -> synchronizedNavigableMap
    java.lang.Object safeGet(java.util.Map,java.lang.Object) -> a
    boolean safeContainsKey(java.util.Map,java.lang.Object) -> b
    java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> c
    boolean containsKeyImpl(java.util.Map,java.lang.Object) -> d
    boolean containsValueImpl(java.util.Map,java.lang.Object) -> e
    boolean containsEntryImpl(java.util.Collection,java.lang.Object) -> a
    boolean removeEntryImpl(java.util.Collection,java.lang.Object) -> b
    boolean equalsImpl(java.util.Map,java.lang.Object) -> f
    java.lang.String toStringImpl(java.util.Map) -> a
    void putAllImpl(java.util.Map,java.util.Map) -> a
    java.lang.Object keyOrNull(java.util.Map$Entry) -> b
    java.lang.Object valueOrNull(java.util.Map$Entry) -> c
    java.util.Map access$100(java.util.Map) -> b
    java.util.Set access$200(java.util.Set) -> b
    java.util.SortedSet access$300(java.util.SortedSet) -> a
    java.util.NavigableSet access$400(java.util.NavigableSet) -> a
    java.util.Map$Entry access$800(java.util.Map$Entry) -> d
com.google.common.collect.Maps$1 -> ub:
    com.google.common.collect.UnmodifiableIterator val$entryIterator -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Maps$10 -> uc:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.Maps$EntryTransformer val$transformer -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$11 -> ud:
    com.google.common.collect.Maps$EntryTransformer val$transformer -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$2 -> ue:
    com.google.common.base.Function val$function -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Maps$3 -> uf:
    java.util.Set val$set -> a
    java.util.Set delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$4 -> ug:
    java.util.SortedSet val$set -> a
    java.util.SortedSet delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$5 -> uh:
    java.util.NavigableSet val$set -> a
    java.util.NavigableSet delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.SortedSet delegate() -> delegate
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$6 -> ui:
    java.util.Map$Entry val$entry -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$7 -> uj:
    com.google.common.base.Function val$function -> a
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$8 -> uk:
    com.google.common.collect.Maps$EntryTransformer val$transformer -> a
    java.lang.Object val$key -> b
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$9 -> ul:
    com.google.common.collect.Maps$EntryTransformer val$transformer -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$AbstractFilteredMap -> um:
    java.util.Map unfiltered -> a
    com.google.common.base.Predicate predicate -> b
    boolean apply(java.lang.Object,java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Collection createValues() -> a_
com.google.common.collect.Maps$AsMapView -> un:
    java.util.Set set -> b
    com.google.common.base.Function function -> a
    java.util.Set backingSet() -> c
    java.util.Set createKeySet() -> e
    java.util.Collection createValues() -> a_
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set createEntrySet() -> a
com.google.common.collect.Maps$AsMapView$1 -> uo:
    com.google.common.collect.Maps$AsMapView this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$DescendingMap -> up:
    java.util.Comparator comparator -> a
    java.util.Set entrySet -> b
    java.util.NavigableSet navigableKeySet -> c
    java.util.NavigableMap forward() -> a
    java.util.Map delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.Set entrySet() -> entrySet
    java.util.Iterator entryIterator() -> entryIterator
    java.util.Set keySet() -> keySet
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Collection values() -> values
    java.lang.String toString() -> toString
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$DescendingMap$1 -> uq:
    com.google.common.collect.Maps$DescendingMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$EntryFunction -> ur:
    com.google.common.collect.Maps$EntryFunction KEY -> a
    com.google.common.collect.Maps$EntryFunction VALUE -> b
    com.google.common.collect.Maps$EntryFunction[] $VALUES -> c
    com.google.common.collect.Maps$EntryFunction[] values() -> values
    com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
com.google.common.collect.Maps$EntryFunction$1 -> us:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$EntryFunction$2 -> ut:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$EntrySet -> uu:
    java.util.Map map() -> a
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$EntryTransformer -> com.google.common.collect.Maps$EntryTransformer:
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$FilteredEntryBiMap -> uv:
    com.google.common.collect.BiMap inverse -> d
    com.google.common.collect.BiMap unfiltered() -> c
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Collection values() -> values
com.google.common.collect.Maps$FilteredEntryBiMap$1 -> uw:
    com.google.common.base.Predicate val$forwardPredicate -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Maps$FilteredEntryMap -> ux:
    java.util.Set filteredEntrySet -> c
    java.util.Set createEntrySet() -> a
    java.util.Set createKeySet() -> e
com.google.common.collect.Maps$FilteredEntryMap$EntrySet -> uy:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> a
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 -> uz:
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1 -> uA:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 this$2 -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$KeySet -> uB:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> a
    boolean remove(java.lang.Object) -> remove
    boolean removeIf(com.google.common.base.Predicate) -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$FilteredEntryNavigableMap -> uC:
    java.util.NavigableMap unfiltered -> a
    com.google.common.base.Predicate entryPredicate -> b
    java.util.Map filteredDelegate -> c
    java.util.Comparator comparator() -> comparator
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.Collection values() -> values
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.util.Set entrySet() -> entrySet
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    com.google.common.base.Predicate access$600(com.google.common.collect.Maps$FilteredEntryNavigableMap) -> a
    java.util.NavigableMap access$700(com.google.common.collect.Maps$FilteredEntryNavigableMap) -> b
com.google.common.collect.Maps$FilteredEntryNavigableMap$1 -> uD:
    com.google.common.collect.Maps$FilteredEntryNavigableMap this$0 -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$FilteredEntrySortedMap -> uE:
    java.util.SortedMap sortedMap() -> c
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Set createKeySet() -> e
    java.util.Set keySet() -> keySet
com.google.common.collect.Maps$FilteredEntrySortedMap$SortedKeySet -> uF:
    com.google.common.collect.Maps$FilteredEntrySortedMap this$0 -> b
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
com.google.common.collect.Maps$FilteredKeyMap -> uG:
    com.google.common.base.Predicate keyPredicate -> c
    java.util.Set createEntrySet() -> a
    java.util.Set createKeySet() -> e
    boolean containsKey(java.lang.Object) -> containsKey
com.google.common.collect.Maps$FilteredMapValues -> uH:
    java.util.Map unfiltered -> a
    com.google.common.base.Predicate predicate -> b
    boolean remove(java.lang.Object) -> remove
    boolean removeIf(com.google.common.base.Predicate) -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$ImprovedAbstractMap -> uI:
    java.util.Set entrySet -> a
    java.util.Set keySet -> b
    java.util.Collection values -> c
    java.util.Set createEntrySet() -> a
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Set createKeySet() -> e
    java.util.Collection values() -> values
    java.util.Collection createValues() -> a_
com.google.common.collect.Maps$KeySet -> uJ:
    java.util.Map map -> d
    java.util.Map map() -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.Maps$MapDifferenceImpl -> uK:
    java.util.Map onlyOnLeft -> a
    java.util.Map onlyOnRight -> b
    java.util.Map onBoth -> c
    java.util.Map differences -> d
    boolean areEqual() -> areEqual
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesDiffering() -> entriesDiffering
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Maps$NavigableAsMapView -> uL:
    java.util.NavigableSet set -> a
    com.google.common.base.Function function -> b
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.Comparator comparator() -> comparator
    java.lang.Object get(java.lang.Object) -> get
    void clear() -> clear
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    int size() -> size
    java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.Maps$NavigableKeySet -> uM:
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedMap map() -> a
    java.util.Map map() -> b
com.google.common.collect.Maps$SortedAsMapView -> uN:
    java.util.Comparator comparator() -> comparator
    java.util.Set keySet() -> keySet
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.Set backingSet() -> c
com.google.common.collect.Maps$SortedKeySet -> uO:
    java.util.SortedMap map() -> a
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.Map map() -> b
com.google.common.collect.Maps$SortedMapDifferenceImpl -> uP:
    java.util.SortedMap entriesDiffering() -> entriesDiffering
    java.util.SortedMap entriesInCommon() -> entriesInCommon
    java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesDiffering() -> entriesDiffering
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
com.google.common.collect.Maps$TransformedEntriesMap -> uQ:
    java.util.Map fromMap -> a
    com.google.common.collect.Maps$EntryTransformer transformer -> b
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Set createEntrySet() -> a
com.google.common.collect.Maps$TransformedEntriesMap$1 -> uR:
    com.google.common.collect.Maps$TransformedEntriesMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$TransformedEntriesNavigableMap -> uS:
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.Map$Entry transformEntry(java.util.Map$Entry) -> a
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap fromMap() -> c
com.google.common.collect.Maps$TransformedEntriesSortedMap -> uT:
    java.util.SortedMap fromMap() -> c
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$UnmodifiableBiMap -> uU:
    java.util.Map unmodifiableMap -> a
    com.google.common.collect.BiMap delegate -> b
    com.google.common.collect.BiMap inverse -> c
    java.util.Set values -> d
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> delegate
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntries -> uV:
    java.util.Collection entries -> a
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntries$1 -> uW:
    java.util.Iterator val$delegate -> a
    com.google.common.collect.Maps$UnmodifiableEntries this$0 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Maps$UnmodifiableEntrySet -> uX:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Maps$UnmodifiableNavigableMap -> uY:
    java.util.NavigableMap delegate -> a
    com.google.common.collect.Maps$UnmodifiableNavigableMap descendingMap -> b
    java.util.SortedMap delegate() -> delegate
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.Set keySet() -> keySet
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$ValueDifferenceImpl -> uZ:
    java.lang.Object left -> a
    java.lang.Object right -> b
    com.google.common.collect.MapDifference$ValueDifference create(java.lang.Object,java.lang.Object) -> a
    java.lang.Object leftValue() -> leftValue
    java.lang.Object rightValue() -> rightValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Maps$Values -> va:
    java.util.Map map -> c
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.common.collect.MinMaxPriorityQueue -> com.google.common.collect.MinMaxPriorityQueue:
    com.google.common.collect.MinMaxPriorityQueue$Heap minHeap -> b
    com.google.common.collect.MinMaxPriorityQueue$Heap maxHeap -> c
    int maximumSize -> a
    java.lang.Object[] queue -> d
    int size -> e
    int modCount -> f
    com.google.common.collect.MinMaxPriorityQueue create() -> create
    com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    com.google.common.collect.MinMaxPriorityQueue$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    int size() -> size
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean offer(java.lang.Object) -> offer
    java.lang.Object poll() -> poll
    java.lang.Object elementData(int) -> a
    java.lang.Object peek() -> peek
    int getMaxElementIndex() -> a
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object removeLast() -> removeLast
    java.lang.Object peekLast() -> peekLast
    com.google.common.collect.MinMaxPriorityQueue$MoveDesc removeAt(int) -> b
    java.lang.Object removeAndGet(int) -> c
    com.google.common.collect.MinMaxPriorityQueue$Heap heapForIndex(int) -> d
    java.util.Iterator iterator() -> iterator
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.util.Comparator comparator() -> comparator
    int initialQueueSize(int,int,java.lang.Iterable) -> a
    int capAtMaximumSize(int,int) -> a
    java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue) -> a
    int access$600(com.google.common.collect.MinMaxPriorityQueue) -> b
    int access$700(com.google.common.collect.MinMaxPriorityQueue) -> c
com.google.common.collect.MinMaxPriorityQueue$Builder -> com.google.common.collect.MinMaxPriorityQueue$Builder:
    java.util.Comparator comparator -> a
    int expectedSize -> b
    int maximumSize -> c
    com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    com.google.common.collect.MinMaxPriorityQueue create() -> create
    com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    com.google.common.collect.Ordering access$200(com.google.common.collect.MinMaxPriorityQueue$Builder) -> a
    int access$300(com.google.common.collect.MinMaxPriorityQueue$Builder) -> b
com.google.common.collect.MinMaxPriorityQueue$Heap -> vb:
    com.google.common.collect.Ordering ordering -> a
    com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap -> b
    com.google.common.collect.MinMaxPriorityQueue this$0 -> c
    int compareElements(int,int) -> a
    int bubbleUpAlternatingLevels(int,java.lang.Object) -> a
    int findMin(int,int) -> b
    int crossOverUp(int,java.lang.Object) -> b
com.google.common.collect.MinMaxPriorityQueue$MoveDesc -> vc:
    java.lang.Object toTrickle -> a
    java.lang.Object replaced -> b
com.google.common.collect.MinMaxPriorityQueue$QueueIterator -> vd:
    int cursor -> b
    int expectedModCount -> c
    java.util.Queue forgetMeNot -> d
    java.util.List skipMe -> e
    java.lang.Object lastFromForgetMeNot -> f
    boolean canRemove -> g
    com.google.common.collect.MinMaxPriorityQueue this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    boolean removeExact(java.lang.Object) -> a
    void checkModCount() -> a
    int nextNotInSkipMe(int) -> a
com.google.common.collect.Multimap -> com.google.common.collect.Multimap:
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    com.google.common.collect.Multimap newMultimap(java.util.Map,com.google.common.base.Supplier) -> newMultimap
    com.google.common.collect.ListMultimap newListMultimap(java.util.Map,com.google.common.base.Supplier) -> newListMultimap
    com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
    com.google.common.collect.SortedSetMultimap newSortedSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSortedSetMultimap
    com.google.common.collect.Multimap invertFrom(com.google.common.collect.Multimap,com.google.common.collect.Multimap) -> invertFrom
    com.google.common.collect.Multimap synchronizedMultimap(com.google.common.collect.Multimap) -> synchronizedMultimap
    com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.Multimap) -> unmodifiableMultimap
    com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.ImmutableMultimap) -> unmodifiableMultimap
    com.google.common.collect.SetMultimap synchronizedSetMultimap(com.google.common.collect.SetMultimap) -> synchronizedSetMultimap
    com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.SetMultimap) -> unmodifiableSetMultimap
    com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap) -> unmodifiableSetMultimap
    com.google.common.collect.SortedSetMultimap synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> synchronizedSortedSetMultimap
    com.google.common.collect.SortedSetMultimap unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> unmodifiableSortedSetMultimap
    com.google.common.collect.ListMultimap synchronizedListMultimap(com.google.common.collect.ListMultimap) -> synchronizedListMultimap
    com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ListMultimap) -> unmodifiableListMultimap
    com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap) -> unmodifiableListMultimap
    java.util.Map asMap(com.google.common.collect.ListMultimap) -> asMap
    java.util.Map asMap(com.google.common.collect.SetMultimap) -> asMap
    java.util.Map asMap(com.google.common.collect.SortedSetMultimap) -> asMap
    java.util.Map asMap(com.google.common.collect.Multimap) -> asMap
    com.google.common.collect.SetMultimap forMap(java.util.Map) -> forMap
    com.google.common.collect.Multimap transformValues(com.google.common.collect.Multimap,com.google.common.base.Function) -> transformValues
    com.google.common.collect.Multimap transformEntries(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    com.google.common.collect.ListMultimap transformValues(com.google.common.collect.ListMultimap,com.google.common.base.Function) -> transformValues
    com.google.common.collect.ListMultimap transformEntries(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    com.google.common.collect.ImmutableListMultimap index(java.lang.Iterable,com.google.common.base.Function) -> index
    com.google.common.collect.ImmutableListMultimap index(java.util.Iterator,com.google.common.base.Function) -> index
    com.google.common.collect.Multimap filterKeys(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterKeys
    com.google.common.collect.SetMultimap filterKeys(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterKeys
    com.google.common.collect.ListMultimap filterKeys(com.google.common.collect.ListMultimap,com.google.common.base.Predicate) -> filterKeys
    com.google.common.collect.Multimap filterValues(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterValues
    com.google.common.collect.SetMultimap filterValues(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterValues
    com.google.common.collect.Multimap filterEntries(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterEntries
    com.google.common.collect.SetMultimap filterEntries(com.google.common.collect.SetMultimap,com.google.common.base.Predicate) -> filterEntries
    com.google.common.collect.Multimap filterFiltered(com.google.common.collect.FilteredMultimap,com.google.common.base.Predicate) -> a
    com.google.common.collect.SetMultimap filterFiltered(com.google.common.collect.FilteredSetMultimap,com.google.common.base.Predicate) -> a
    boolean equalsImpl(com.google.common.collect.Multimap,java.lang.Object) -> a
    java.util.Collection access$000(java.util.Collection) -> a
    java.util.Collection access$100(java.util.Collection) -> b
com.google.common.collect.Multimaps$AsMap -> ve:
    com.google.common.collect.Multimap multimap -> a
    int size() -> size
    java.util.Set createEntrySet() -> a
    void removeValuesForKey(java.lang.Object) -> a
    java.util.Set keySet() -> keySet
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.Multimap access$200(com.google.common.collect.Multimaps$AsMap) -> a
com.google.common.collect.Multimaps$AsMap$EntrySet -> vf:
    com.google.common.collect.Multimaps$AsMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$AsMap$EntrySet$1 -> vg:
    com.google.common.collect.Multimaps$AsMap$EntrySet this$1 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$CustomListMultimap -> vh:
    com.google.common.base.Supplier factory -> a
    long serialVersionUID -> serialVersionUID
    java.util.List createCollection() -> a
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection createCollection() -> b
com.google.common.collect.Multimaps$CustomMultimap -> vi:
    com.google.common.base.Supplier factory -> a
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> b
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.collect.Multimaps$CustomSetMultimap -> vj:
    com.google.common.base.Supplier factory -> a
    long serialVersionUID -> serialVersionUID
    java.util.Set createCollection() -> a
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection createCollection() -> b
com.google.common.collect.Multimaps$CustomSortedSetMultimap -> vk:
    com.google.common.base.Supplier factory -> a
    java.util.Comparator valueComparator -> b
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet createCollection() -> n
    java.util.Comparator valueComparator() -> valueComparator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set createCollection() -> a
    java.util.Collection createCollection() -> b
com.google.common.collect.Multimaps$Entries -> vl:
    com.google.common.collect.Multimap multimap() -> a
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.Multimaps$Keys -> vm:
    com.google.common.collect.Multimap multimap -> b
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
    java.util.Set createEntrySet() -> d
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    int remove(java.lang.Object,int) -> remove
    void clear() -> clear
    java.util.Set elementSet() -> elementSet
com.google.common.collect.Multimaps$Keys$1 -> vn:
    com.google.common.collect.Multimaps$Keys this$0 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Multimaps$Keys$1$1 -> vo:
    java.util.Map$Entry val$backingEntry -> a
    com.google.common.collect.Multimaps$Keys$1 this$1 -> b
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.Multimaps$Keys$KeysEntrySet -> vp:
    com.google.common.collect.Multimaps$Keys this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$MapMultimap -> vq:
    java.util.Map map -> a
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    java.util.Set get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Set removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entries() -> entries
    java.util.Iterator entryIterator() -> g
    java.util.Map createAsMap() -> h
    int hashCode() -> hashCode
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.Multimaps$MapMultimap$1 -> vr:
    java.lang.Object val$key -> a
    com.google.common.collect.Multimaps$MapMultimap this$0 -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.Multimaps$MapMultimap$1$1 -> vs:
    int i -> a
    com.google.common.collect.Multimaps$MapMultimap$1 this$1 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Multimaps$TransformedEntriesListMultimap -> vt:
    java.util.List transform(java.lang.Object,java.util.Collection) -> b
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection transform(java.lang.Object,java.util.Collection) -> a
com.google.common.collect.Multimaps$TransformedEntriesMultimap -> vu:
    com.google.common.collect.Multimap fromMultimap -> a
    com.google.common.collect.Maps$EntryTransformer transformer -> b
    java.util.Collection transform(java.lang.Object,java.util.Collection) -> a
    java.util.Map createAsMap() -> h
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Iterator entryIterator() -> g
    java.util.Collection get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    int size() -> size
    java.util.Collection createValues() -> k
com.google.common.collect.Multimaps$TransformedEntriesMultimap$1 -> vv:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> a
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Multimaps$UnmodifiableListMultimap -> vw:
    long serialVersionUID -> serialVersionUID
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableMultimap -> vx:
    com.google.common.collect.Multimap delegate -> a
    java.util.Collection entries -> b
    com.google.common.collect.Multiset keys -> c
    java.util.Set keySet -> d
    java.util.Collection values -> e
    java.util.Map map -> f
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multimap delegate() -> delegate
    void clear() -> clear
    java.util.Map asMap() -> asMap
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableMultimap$1 -> vy:
    com.google.common.collect.Multimaps$UnmodifiableMultimap this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$UnmodifiableSetMultimap -> vz:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.SetMultimap delegate() -> a
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap -> vA:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> a
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multiset -> com.google.common.collect.Multiset:
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Multiset$Entry -> com.google.common.collect.Multiset$Entry:
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Multisets -> com.google.common.collect.Multisets:
    com.google.common.collect.Ordering DECREASING_COUNT_ORDERING -> a
    com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.Multiset) -> unmodifiableMultiset
    com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.ImmutableMultiset) -> unmodifiableMultiset
    com.google.common.collect.SortedMultiset unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset) -> unmodifiableSortedMultiset
    com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int) -> immutableEntry
    com.google.common.collect.Multiset filter(com.google.common.collect.Multiset,com.google.common.base.Predicate) -> filter
    int inferDistinctElements(java.lang.Iterable) -> a
    com.google.common.collect.Multiset union(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> union
    com.google.common.collect.Multiset intersection(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> intersection
    com.google.common.collect.Multiset sum(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> sum
    com.google.common.collect.Multiset difference(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> difference
    boolean containsOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> containsOccurrences
    boolean retainOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> retainOccurrences
    boolean removeOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> removeOccurrences
    boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object) -> a
    boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> a
    boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> b
    boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> c
    int setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int) -> a
    boolean setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int,int) -> a
    java.util.Iterator iteratorImpl(com.google.common.collect.Multiset) -> a
    int sizeImpl(com.google.common.collect.Multiset) -> b
    com.google.common.collect.Multiset cast(java.lang.Iterable) -> b
    com.google.common.collect.ImmutableMultiset copyHighestCountFirst(com.google.common.collect.Multiset) -> copyHighestCountFirst
com.google.common.collect.Multisets$1 -> vB:
    com.google.common.collect.Multiset val$multiset1 -> a
    com.google.common.collect.Multiset val$multiset2 -> b
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int count(java.lang.Object) -> count
    java.util.Set createElementSet() -> c
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
com.google.common.collect.Multisets$1$1 -> vC:
    java.util.Iterator val$iterator1 -> a
    java.util.Iterator val$iterator2 -> b
    com.google.common.collect.Multisets$1 this$0 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$2 -> vD:
    com.google.common.collect.Multiset val$multiset1 -> a
    com.google.common.collect.Multiset val$multiset2 -> b
    int count(java.lang.Object) -> count
    java.util.Set createElementSet() -> c
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
com.google.common.collect.Multisets$2$1 -> vE:
    java.util.Iterator val$iterator1 -> a
    com.google.common.collect.Multisets$2 this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$3 -> vF:
    com.google.common.collect.Multiset val$multiset1 -> a
    com.google.common.collect.Multiset val$multiset2 -> b
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    int count(java.lang.Object) -> count
    java.util.Set createElementSet() -> c
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
com.google.common.collect.Multisets$3$1 -> vG:
    java.util.Iterator val$iterator1 -> a
    java.util.Iterator val$iterator2 -> b
    com.google.common.collect.Multisets$3 this$0 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$4 -> vH:
    com.google.common.collect.Multiset val$multiset1 -> a
    com.google.common.collect.Multiset val$multiset2 -> b
    int count(java.lang.Object) -> count
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
com.google.common.collect.Multisets$4$1 -> vI:
    java.util.Iterator val$iterator1 -> a
    com.google.common.collect.Multisets$4 this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$5 -> vJ:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Multisets$AbstractEntry -> vK:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Multisets$ElementSet -> vL:
    com.google.common.collect.Multiset multiset() -> a
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    int size() -> size
com.google.common.collect.Multisets$ElementSet$1 -> vM:
    com.google.common.collect.Multisets$ElementSet this$0 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Multisets$EntrySet -> vN:
    com.google.common.collect.Multiset multiset() -> a
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.Multisets$FilteredMultiset -> vO:
    com.google.common.collect.Multiset unfiltered -> a
    com.google.common.base.Predicate predicate -> b
    java.util.Set createElementSet() -> c
    java.util.Set createEntrySet() -> d
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Multisets$FilteredMultiset$1 -> vP:
    com.google.common.collect.Multisets$FilteredMultiset this$0 -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Multisets$ImmutableEntry -> vQ:
    java.lang.Object element -> a
    int count -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.Multisets$MultisetIteratorImpl -> vR:
    com.google.common.collect.Multiset multiset -> a
    java.util.Iterator entryIterator -> b
    com.google.common.collect.Multiset$Entry currentEntry -> c
    int laterCount -> d
    int totalCount -> e
    boolean canRemove -> f
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Multisets$UnmodifiableMultiset -> vS:
    com.google.common.collect.Multiset delegate -> a
    java.util.Set elementSet -> b
    java.util.Set entrySet -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multiset delegate() -> delegate
    java.util.Set createElementSet() -> a
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    java.util.Iterator iterator() -> iterator
    boolean add(java.lang.Object) -> add
    int add(java.lang.Object,int) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    int remove(java.lang.Object,int) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.MutableClassToInstanceMap -> com.google.common.collect.MutableClassToInstanceMap:
    com.google.common.collect.MapConstraint VALUE_CAN_BE_CAST_TO_KEY -> a
    com.google.common.collect.MutableClassToInstanceMap create() -> create
    com.google.common.collect.MutableClassToInstanceMap create(java.util.Map) -> create
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object cast(java.lang.Class,java.lang.Object) -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.lang.Object access$000(java.lang.Class,java.lang.Object) -> a
com.google.common.collect.MutableClassToInstanceMap$1 -> vT:
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
com.google.common.collect.NaturalOrdering -> vU:
    com.google.common.collect.NaturalOrdering INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.NullsFirstOrdering -> vV:
    com.google.common.collect.Ordering ordering -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.NullsLastOrdering -> vW:
    com.google.common.collect.Ordering ordering -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    java.lang.Object[] EMPTY_ARRAY -> a
    java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    java.lang.Object[] concat(java.lang.Object[],java.lang.Object[],java.lang.Class) -> concat
    java.lang.Object[] concat(java.lang.Object,java.lang.Object[]) -> concat
    java.lang.Object[] concat(java.lang.Object[],java.lang.Object) -> concat
    java.lang.Object[] arraysCopyOf(java.lang.Object[],int) -> a
    java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> a
    java.lang.Object[] toArrayImpl(java.util.Collection) -> a
    java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> a
    void swap(java.lang.Object[],int,int) -> a
    java.lang.Object[] checkElementsNotNull(java.lang.Object[]) -> a
    java.lang.Object[] checkElementsNotNull(java.lang.Object[],int) -> b
    java.lang.Object checkElementNotNull(java.lang.Object,int) -> a
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    com.google.common.collect.Ordering natural() -> natural
    com.google.common.collect.Ordering from(java.util.Comparator) -> from
    com.google.common.collect.Ordering from(com.google.common.collect.Ordering) -> from
    com.google.common.collect.Ordering explicit(java.util.List) -> explicit
    com.google.common.collect.Ordering explicit(java.lang.Object,java.lang.Object[]) -> explicit
    com.google.common.collect.Ordering allEqual() -> allEqual
    com.google.common.collect.Ordering usingToString() -> usingToString
    com.google.common.collect.Ordering arbitrary() -> arbitrary
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    com.google.common.collect.Ordering onKeys() -> a
    com.google.common.collect.Ordering compound(java.util.Comparator) -> compound
    com.google.common.collect.Ordering compound(java.lang.Iterable) -> compound
    com.google.common.collect.Ordering lexicographical() -> lexicographical
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.Object min(java.util.Iterator) -> min
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object max(java.util.Iterator) -> max
    java.lang.Object max(java.lang.Iterable) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.util.List leastOf(java.lang.Iterable,int) -> leastOf
    java.util.List leastOf(java.util.Iterator,int) -> leastOf
    java.util.List greatestOf(java.lang.Iterable,int) -> greatestOf
    java.util.List greatestOf(java.util.Iterator,int) -> greatestOf
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    boolean isOrdered(java.lang.Iterable) -> isOrdered
    boolean isStrictlyOrdered(java.lang.Iterable) -> isStrictlyOrdered
    int binarySearch(java.util.List,java.lang.Object) -> binarySearch
com.google.common.collect.Ordering$ArbitraryOrdering -> vX:
    java.util.Map uids -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.String toString() -> toString
com.google.common.collect.Ordering$ArbitraryOrdering$1 -> vY:
    java.util.concurrent.atomic.AtomicInteger counter -> a
    com.google.common.collect.Ordering$ArbitraryOrdering this$0 -> b
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Ordering$ArbitraryOrderingHolder -> vZ:
    com.google.common.collect.Ordering ARBITRARY_ORDERING -> a
com.google.common.collect.Ordering$IncomparableValueException -> wa:
    java.lang.Object value -> a
    long serialVersionUID -> serialVersionUID
com.google.common.collect.PeekingIterator -> com.google.common.collect.PeekingIterator:
    java.lang.Object peek() -> peek
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Queues -> com.google.common.collect.Queues:
    java.util.concurrent.ArrayBlockingQueue newArrayBlockingQueue(int) -> newArrayBlockingQueue
    java.util.ArrayDeque newArrayDeque() -> newArrayDeque
    java.util.ArrayDeque newArrayDeque(java.lang.Iterable) -> newArrayDeque
    java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue() -> newConcurrentLinkedQueue
    java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue(java.lang.Iterable) -> newConcurrentLinkedQueue
    java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque() -> newLinkedBlockingDeque
    java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(int) -> newLinkedBlockingDeque
    java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(java.lang.Iterable) -> newLinkedBlockingDeque
    java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue() -> newLinkedBlockingQueue
    java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(int) -> newLinkedBlockingQueue
    java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(java.lang.Iterable) -> newLinkedBlockingQueue
    java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue() -> newPriorityBlockingQueue
    java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue(java.lang.Iterable) -> newPriorityBlockingQueue
    java.util.PriorityQueue newPriorityQueue() -> newPriorityQueue
    java.util.PriorityQueue newPriorityQueue(java.lang.Iterable) -> newPriorityQueue
    java.util.concurrent.SynchronousQueue newSynchronousQueue() -> newSynchronousQueue
    int drain(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit) -> drain
    int drainUninterruptibly(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit) -> drainUninterruptibly
    java.util.Queue synchronizedQueue(java.util.Queue) -> synchronizedQueue
    java.util.Deque synchronizedDeque(java.util.Deque) -> synchronizedDeque
com.google.common.collect.Range -> com.google.common.collect.Range:
    com.google.common.base.Function LOWER_BOUND_FN -> d
    com.google.common.base.Function UPPER_BOUND_FN -> e
    com.google.common.collect.Ordering RANGE_LEX_ORDERING -> a
    com.google.common.collect.Range ALL -> f
    com.google.common.collect.Cut lowerBound -> b
    com.google.common.collect.Cut upperBound -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function lowerBoundFn() -> a
    com.google.common.base.Function upperBoundFn() -> b
    com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> a
    com.google.common.collect.Range open(java.lang.Comparable,java.lang.Comparable) -> open
    com.google.common.collect.Range closed(java.lang.Comparable,java.lang.Comparable) -> closed
    com.google.common.collect.Range closedOpen(java.lang.Comparable,java.lang.Comparable) -> closedOpen
    com.google.common.collect.Range openClosed(java.lang.Comparable,java.lang.Comparable) -> openClosed
    com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    com.google.common.collect.Range all() -> all
    com.google.common.collect.Range singleton(java.lang.Comparable) -> singleton
    com.google.common.collect.Range encloseAll(java.lang.Iterable) -> encloseAll
    boolean hasLowerBound() -> hasLowerBound
    java.lang.Comparable lowerEndpoint() -> lowerEndpoint
    com.google.common.collect.BoundType lowerBoundType() -> lowerBoundType
    boolean hasUpperBound() -> hasUpperBound
    java.lang.Comparable upperEndpoint() -> upperEndpoint
    com.google.common.collect.BoundType upperBoundType() -> upperBoundType
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Comparable) -> contains
    boolean apply(java.lang.Comparable) -> apply
    boolean containsAll(java.lang.Iterable) -> containsAll
    boolean encloses(com.google.common.collect.Range) -> encloses
    boolean isConnected(com.google.common.collect.Range) -> isConnected
    com.google.common.collect.Range intersection(com.google.common.collect.Range) -> intersection
    com.google.common.collect.Range span(com.google.common.collect.Range) -> span
    com.google.common.collect.ContiguousSet asSet(com.google.common.collect.DiscreteDomain) -> asSet
    com.google.common.collect.Range canonical(com.google.common.collect.DiscreteDomain) -> canonical
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> b
    java.lang.Object readResolve() -> readResolve
    int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Range$1 -> wb:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Range$2 -> wc:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Range$3 -> wd:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Range$4 -> we:
    int[] $SwitchMap$com$google$common$collect$BoundType -> a
com.google.common.collect.RangeMap -> com.google.common.collect.RangeMap:
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    java.util.Map asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.RangeSet -> com.google.common.collect.RangeSet:
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    boolean encloses(com.google.common.collect.Range) -> encloses
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    boolean isEmpty() -> isEmpty
    com.google.common.collect.Range span() -> span
    java.util.Set asRanges() -> asRanges
    com.google.common.collect.RangeSet complement() -> complement
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    void clear() -> clear
    void addAll(com.google.common.collect.RangeSet) -> addAll
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.RegularContiguousSet -> wf:
    com.google.common.collect.Range range -> d
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ContiguousSet intersectionInCurrentDomain(com.google.common.collect.Range) -> a
    com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> b
    int indexOf(java.lang.Object) -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    boolean isPartialView() -> a
    java.lang.Comparable first() -> d
    java.lang.Comparable last() -> e
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    com.google.common.collect.Range range() -> range
    com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object last() -> last
    java.lang.Object first() -> first
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
    boolean access$000(java.lang.Comparable,java.lang.Comparable) -> a
com.google.common.collect.RegularContiguousSet$1 -> wg:
    java.lang.Comparable last -> a
    com.google.common.collect.RegularContiguousSet this$0 -> b
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.RegularContiguousSet$2 -> wh:
    java.lang.Comparable first -> a
    com.google.common.collect.RegularContiguousSet this$0 -> b
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.RegularContiguousSet$SerializedForm -> wi:
    com.google.common.collect.Range range -> a
    com.google.common.collect.DiscreteDomain domain -> b
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.RegularImmutableAsList -> wj:
    com.google.common.collect.ImmutableCollection delegate -> a
    com.google.common.collect.ImmutableList delegateList -> b
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int copyIntoArray(java.lang.Object[],int) -> a
    java.lang.Object get(int) -> get
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableBiMap -> wk:
    com.google.common.collect.ImmutableMapEntry[] keyTable -> c
    com.google.common.collect.ImmutableMapEntry[] valueTable -> a
    com.google.common.collect.ImmutableMapEntry[] entries -> d
    int mask -> b
    int hashCode -> e
    com.google.common.collect.ImmutableBiMap inverse -> f
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    boolean isPartialView() -> b
    int size() -> size
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    com.google.common.collect.BiMap inverse() -> inverse
    com.google.common.collect.ImmutableMapEntry[] access$000(com.google.common.collect.RegularImmutableBiMap) -> a
    int access$100(com.google.common.collect.RegularImmutableBiMap) -> b
com.google.common.collect.RegularImmutableBiMap$1 -> wl:
    com.google.common.collect.RegularImmutableBiMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> c
    boolean isHashCodeFast() -> b_
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableBiMap$Inverse -> wm:
    com.google.common.collect.RegularImmutableBiMap this$0 -> a
    int size() -> size
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    boolean isPartialView() -> b
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet -> wn:
    com.google.common.collect.RegularImmutableBiMap$Inverse this$1 -> a
    com.google.common.collect.ImmutableMap map() -> b
    boolean isHashCodeFast() -> b_
    int hashCode() -> hashCode
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> c
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1 -> wo:
    com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet this$2 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm -> wp:
    com.google.common.collect.ImmutableBiMap forward -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry -> wq:
    com.google.common.collect.ImmutableMapEntry nextInKeyBucket -> a
    com.google.common.collect.ImmutableMapEntry nextInValueBucket -> b
    com.google.common.collect.ImmutableMapEntry getNextInKeyBucket() -> a
    com.google.common.collect.ImmutableMapEntry getNextInValueBucket() -> b
com.google.common.collect.RegularImmutableList -> wr:
    int offset -> a
    int size -> b
    java.lang.Object[] array -> c
    int size() -> size
    boolean isPartialView() -> a
    int copyIntoArray(java.lang.Object[],int) -> a
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subListUnchecked(int,int) -> a
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableMap -> ws:
    com.google.common.collect.ImmutableMapEntry[] entries -> a
    com.google.common.collect.ImmutableMapEntry[] table -> b
    int mask -> c
    long serialVersionUID -> serialVersionUID
    void checkNoConflictInBucket(java.lang.Object,com.google.common.collect.ImmutableMapEntry,com.google.common.collect.ImmutableMapEntry) -> a
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    com.google.common.collect.ImmutableMapEntry[] access$100(com.google.common.collect.RegularImmutableMap) -> a
com.google.common.collect.RegularImmutableMap$EntrySet -> wt:
    com.google.common.collect.RegularImmutableMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> c
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableMap$NonTerminalMapEntry -> wu:
    com.google.common.collect.ImmutableMapEntry nextInKeyBucket -> a
    com.google.common.collect.ImmutableMapEntry getNextInKeyBucket() -> a
    com.google.common.collect.ImmutableMapEntry getNextInValueBucket() -> b
com.google.common.collect.RegularImmutableMultiset -> wv:
    com.google.common.collect.ImmutableMap map -> a
    int size -> b
    boolean isPartialView() -> a
    int count(java.lang.Object) -> count
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.Multiset$Entry getEntry(int) -> a
    int hashCode() -> hashCode
    java.util.Set elementSet() -> elementSet
com.google.common.collect.RegularImmutableSet -> ww:
    java.lang.Object[] elements -> b
    java.lang.Object[] table -> a
    int mask -> c
    int hashCode -> d
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int copyIntoArray(java.lang.Object[],int) -> a
    com.google.common.collect.ImmutableList createAsList() -> c
    boolean isPartialView() -> a
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> b_
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableSortedMap -> wx:
    com.google.common.collect.RegularImmutableSortedSet keySet -> a
    com.google.common.collect.ImmutableList valueList -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> a
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    com.google.common.collect.ImmutableSortedMap createDescendingMap() -> a
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableList access$100(com.google.common.collect.RegularImmutableSortedMap) -> a
com.google.common.collect.RegularImmutableSortedMap$EntrySet -> wy:
    com.google.common.collect.RegularImmutableSortedMap this$0 -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> c
    com.google.common.collect.ImmutableMap map() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableSortedMap$EntrySet$1 -> wz:
    com.google.common.collect.ImmutableList keyList -> b
    com.google.common.collect.RegularImmutableSortedMap$EntrySet this$1 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableSortedMultiset -> wA:
    com.google.common.collect.RegularImmutableSortedSet elementSet -> b
    int[] counts -> c
    long[] cumulativeCounts -> d
    int offset -> e
    int length -> f
    com.google.common.collect.Multiset$Entry getEntry(int) -> a
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    int count(java.lang.Object) -> count
    int size() -> size
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.ImmutableSortedMultiset getSubMultiset(int,int) -> a
    boolean isPartialView() -> a
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    java.util.NavigableSet elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
    java.util.Set elementSet() -> elementSet
com.google.common.collect.RegularImmutableSortedSet -> wB:
    com.google.common.collect.ImmutableList elements -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isPartialView() -> a
    int copyIntoArray(java.lang.Object[],int) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    int headIndex(java.lang.Object,boolean) -> c
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    int tailIndex(java.lang.Object,boolean) -> d
    com.google.common.collect.ImmutableSortedSet getSubSet(int,int) -> a
    int indexOf(java.lang.Object) -> a
    com.google.common.collect.ImmutableList createAsList() -> c
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> b
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableTable -> wC:
    com.google.common.collect.Table$Cell getCell(int) -> a
    com.google.common.collect.ImmutableSet createCellSet() -> e
    java.lang.Object getValue(int) -> b
    com.google.common.collect.ImmutableCollection createValues() -> f
    com.google.common.collect.RegularImmutableTable forCells(java.util.List,java.util.Comparator,java.util.Comparator) -> a
    com.google.common.collect.RegularImmutableTable forCellsInternal(java.lang.Iterable,java.util.Comparator,java.util.Comparator) -> a
    java.util.Collection createValues() -> c
    java.util.Set createCellSet() -> a
com.google.common.collect.RegularImmutableTable$1 -> wD:
    java.util.Comparator val$rowComparator -> a
    java.util.Comparator val$columnComparator -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.RegularImmutableTable$CellSet -> wE:
    com.google.common.collect.RegularImmutableTable this$0 -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> c
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableTable$CellSet$1 -> wF:
    com.google.common.collect.RegularImmutableTable$CellSet this$1 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> b
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableTable$Values -> wG:
    com.google.common.collect.RegularImmutableTable this$0 -> a
    int size() -> size
    java.lang.Object get(int) -> get
    boolean isPartialView() -> a
com.google.common.collect.ReverseNaturalOrdering -> wH:
    com.google.common.collect.ReverseNaturalOrdering INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object max(java.lang.Iterable) -> max
    java.lang.Object max(java.util.Iterator) -> max
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object min(java.util.Iterator) -> min
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.ReverseOrdering -> wI:
    com.google.common.collect.Ordering forwardOrder -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object min(java.util.Iterator) -> min
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.lang.Object max(java.util.Iterator) -> max
    java.lang.Object max(java.lang.Iterable) -> max
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.collect.RowSortedTable -> com.google.common.collect.RowSortedTable:
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
com.google.common.collect.Serialization -> wJ:
    void writeMap(java.util.Map,java.io.ObjectOutputStream) -> a
    void populateMap(java.util.Map,java.io.ObjectInputStream) -> a
    void populateMap(java.util.Map,java.io.ObjectInputStream,int) -> a
    void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream) -> a
    void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream) -> a
    void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int) -> a
    void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream) -> a
    void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream) -> a
    void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int) -> a
    com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String) -> a
com.google.common.collect.Serialization$FieldSetter -> wK:
    java.lang.reflect.Field field -> a
    void set(java.lang.Object,java.lang.Object) -> a
    void set(java.lang.Object,int) -> a
com.google.common.collect.SetMultimap -> com.google.common.collect.SetMultimap:
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Enum,java.lang.Enum[]) -> immutableEnumSet
    com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Iterable) -> immutableEnumSet
    java.util.EnumSet newEnumSet(java.lang.Iterable,java.lang.Class) -> newEnumSet
    java.util.HashSet newHashSet() -> newHashSet
    java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    java.util.HashSet newHashSet(java.lang.Iterable) -> newHashSet
    java.util.HashSet newHashSet(java.util.Iterator) -> newHashSet
    java.util.Set newConcurrentHashSet() -> newConcurrentHashSet
    java.util.Set newConcurrentHashSet(java.lang.Iterable) -> newConcurrentHashSet
    java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    java.util.LinkedHashSet newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable) -> newLinkedHashSet
    java.util.TreeSet newTreeSet() -> newTreeSet
    java.util.TreeSet newTreeSet(java.lang.Iterable) -> newTreeSet
    java.util.TreeSet newTreeSet(java.util.Comparator) -> newTreeSet
    java.util.Set newIdentityHashSet() -> newIdentityHashSet
    java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet() -> newCopyOnWriteArraySet
    java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet(java.lang.Iterable) -> newCopyOnWriteArraySet
    java.util.EnumSet complementOf(java.util.Collection) -> complementOf
    java.util.EnumSet complementOf(java.util.Collection,java.lang.Class) -> complementOf
    java.util.EnumSet makeComplementByHand(java.util.Collection,java.lang.Class) -> a
    java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
    com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set) -> union
    com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set) -> intersection
    com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set) -> difference
    com.google.common.collect.Sets$SetView symmetricDifference(java.util.Set,java.util.Set) -> symmetricDifference
    java.util.Set filter(java.util.Set,com.google.common.base.Predicate) -> filter
    java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate) -> filter
    java.util.NavigableSet filter(java.util.NavigableSet,com.google.common.base.Predicate) -> filter
    java.util.Set cartesianProduct(java.util.List) -> cartesianProduct
    java.util.Set cartesianProduct(java.util.Set[]) -> cartesianProduct
    java.util.Set powerSet(java.util.Set) -> powerSet
    int hashCodeImpl(java.util.Set) -> a
    boolean equalsImpl(java.util.Set,java.lang.Object) -> a
    java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet) -> unmodifiableNavigableSet
    java.util.NavigableSet synchronizedNavigableSet(java.util.NavigableSet) -> synchronizedNavigableSet
    boolean removeAllImpl(java.util.Set,java.util.Iterator) -> a
    boolean removeAllImpl(java.util.Set,java.util.Collection) -> a
com.google.common.collect.Sets$1 -> wL:
    java.util.Set val$set1 -> a
    java.util.Set val$set2minus1 -> b
    java.util.Set val$set2 -> c
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.util.Set copyInto(java.util.Set) -> copyInto
    com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
com.google.common.collect.Sets$2 -> wM:
    java.util.Set val$set1 -> a
    com.google.common.base.Predicate val$inSet2 -> b
    java.util.Set val$set2 -> c
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
com.google.common.collect.Sets$3 -> wN:
    java.util.Set val$set1 -> a
    com.google.common.base.Predicate val$notInSet2 -> b
    java.util.Set val$set2 -> c
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.Sets$CartesianSet -> wO:
    com.google.common.collect.ImmutableList axes -> a
    com.google.common.collect.CartesianList delegate -> b
    java.util.Set create(java.util.List) -> a
    java.util.Collection delegate() -> delegate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.Sets$CartesianSet$1 -> wP:
    com.google.common.collect.ImmutableList val$axes -> a
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object get(int) -> get
com.google.common.collect.Sets$DescendingSet -> wQ:
    java.util.NavigableSet forward -> a
    java.util.NavigableSet delegate() -> delegate
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    java.util.SortedSet delegate() -> delegate
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Sets$FilteredNavigableSet -> wR:
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.lang.Object last() -> last
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.Sets$FilteredSet -> wS:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Sets$FilteredSortedSet -> wT:
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
com.google.common.collect.Sets$ImprovedAbstractSet -> wU:
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$PowerSet -> wV:
    com.google.common.collect.ImmutableMap inputSet -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Sets$PowerSet$1 -> wW:
    com.google.common.collect.Sets$PowerSet this$0 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.Sets$SetView -> com.google.common.collect.Sets$SetView:
    com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
    java.util.Set copyInto(java.util.Set) -> copyInto
com.google.common.collect.Sets$SubSet -> wX:
    com.google.common.collect.ImmutableMap inputSet -> a
    int mask -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.ImmutableMap access$100(com.google.common.collect.Sets$SubSet) -> a
    int access$200(com.google.common.collect.Sets$SubSet) -> b
com.google.common.collect.Sets$SubSet$1 -> wY:
    com.google.common.collect.ImmutableList elements -> a
    int remainingSetBits -> b
    com.google.common.collect.Sets$SubSet this$0 -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Sets$UnmodifiableNavigableSet -> wZ:
    java.util.NavigableSet delegate -> a
    com.google.common.collect.Sets$UnmodifiableNavigableSet descendingSet -> b
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet delegate() -> delegate
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.SingletonImmutableBiMap -> xa:
    java.lang.Object singleKey -> a
    java.lang.Object singleValue -> b
    com.google.common.collect.ImmutableBiMap inverse -> c
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> d
    com.google.common.collect.ImmutableSet createKeySet() -> c
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.SingletonImmutableList -> xb:
    java.lang.Object element -> a
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    int size() -> size
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean contains(java.lang.Object) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> a
    int copyIntoArray(java.lang.Object[],int) -> a
    java.util.List subList(int,int) -> subList
    java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableSet -> xc:
    java.lang.Object element -> a
    int cachedHashCode -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    int copyIntoArray(java.lang.Object[],int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> b_
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableTable -> xd:
    java.lang.Object singleRowKey -> a
    java.lang.Object singleColumnKey -> b
    java.lang.Object singleValue -> c
    com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    int size() -> size
    com.google.common.collect.ImmutableSet createCellSet() -> e
    com.google.common.collect.ImmutableCollection createValues() -> f
    java.util.Collection createValues() -> c
    java.util.Set createCellSet() -> a
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Map column(java.lang.Object) -> column
com.google.common.collect.SortedIterable -> xe:
    java.util.Comparator comparator() -> comparator
com.google.common.collect.SortedIterables -> xf:
    boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> a
    java.util.Comparator comparator(java.util.SortedSet) -> a
com.google.common.collect.SortedLists -> com.google.common.collect.SortedLists:
    int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
    int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
    int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior -> com.google.common.collect.SortedLists$KeyAbsentBehavior:
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER -> NEXT_LOWER
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER -> NEXT_HIGHER
    com.google.common.collect.SortedLists$KeyAbsentBehavior INVERTED_INSERTION_INDEX -> INVERTED_INSERTION_INDEX
    com.google.common.collect.SortedLists$KeyAbsentBehavior[] $VALUES -> a
    com.google.common.collect.SortedLists$KeyAbsentBehavior[] values() -> values
    com.google.common.collect.SortedLists$KeyAbsentBehavior valueOf(java.lang.String) -> valueOf
    int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior$1 -> xg:
    int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior$2 -> xh:
    int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior$3 -> xi:
    int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior -> com.google.common.collect.SortedLists$KeyPresentBehavior:
    com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT -> ANY_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_PRESENT -> LAST_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_PRESENT -> FIRST_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_AFTER -> FIRST_AFTER
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_BEFORE -> LAST_BEFORE
    com.google.common.collect.SortedLists$KeyPresentBehavior[] $VALUES -> a
    com.google.common.collect.SortedLists$KeyPresentBehavior[] values() -> values
    com.google.common.collect.SortedLists$KeyPresentBehavior valueOf(java.lang.String) -> valueOf
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$1 -> xj:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$2 -> xk:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$3 -> xl:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$4 -> xm:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$5 -> xn:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedMapDifference -> com.google.common.collect.SortedMapDifference:
    java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.SortedMap entriesInCommon() -> entriesInCommon
    java.util.SortedMap entriesDiffering() -> entriesDiffering
com.google.common.collect.SortedMultiset -> com.google.common.collect.SortedMultiset:
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableSet elementSet() -> elementSet
    java.util.Iterator iterator() -> iterator
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
com.google.common.collect.SortedMultisetBridge -> xo:
com.google.common.collect.SortedMultisets -> xp:
    java.lang.Object access$000(com.google.common.collect.Multiset$Entry) -> a
    java.lang.Object access$100(com.google.common.collect.Multiset$Entry) -> b
com.google.common.collect.SortedMultisets$ElementSet -> xq:
    com.google.common.collect.SortedMultiset multiset -> b
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    com.google.common.collect.Multiset multiset() -> a
com.google.common.collect.SortedMultisets$NavigableElementSet -> xr:
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SortedSetMultimap -> com.google.common.collect.SortedSetMultimap:
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    java.util.Comparator valueComparator() -> valueComparator
com.google.common.collect.SparseImmutableTable -> xs:
    com.google.common.collect.ImmutableMap rowMap -> a
    com.google.common.collect.ImmutableMap columnMap -> b
    int[] iterationOrderRow -> c
    int[] iterationOrderColumn -> d
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    int size() -> size
    com.google.common.collect.Table$Cell getCell(int) -> a
    java.lang.Object getValue(int) -> b
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
com.google.common.collect.StandardRowSortedTable -> xt:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
    java.util.Map createRowMap() -> e
    java.util.Map rowMap() -> rowMap
    java.util.Set rowKeySet() -> rowKeySet
    java.util.SortedMap access$100(com.google.common.collect.StandardRowSortedTable) -> a
com.google.common.collect.StandardRowSortedTable$RowSortedMap -> xu:
    com.google.common.collect.StandardRowSortedTable this$0 -> a
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Set createKeySet() -> e
    java.util.Set keySet() -> keySet
com.google.common.collect.StandardTable -> xv:
    java.util.Map backingMap -> a
    com.google.common.base.Supplier factory -> b
    java.util.Set columnKeySet -> c
    java.util.Map rowMap -> d
    com.google.common.collect.StandardTable$ColumnMap columnMap -> e
    long serialVersionUID -> serialVersionUID
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsMapping(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.util.Set cellSet() -> cellSet
    java.util.Iterator cellIterator() -> b
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Iterator createColumnKeyIterator() -> f
    java.util.Collection values() -> values
    java.util.Map rowMap() -> rowMap
    java.util.Map createRowMap() -> e
    java.util.Map columnMap() -> columnMap
    boolean access$400(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    boolean access$500(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> b
    java.util.Map access$1000(com.google.common.collect.StandardTable,java.lang.Object) -> a
com.google.common.collect.StandardTable$CellIterator -> xw:
    java.util.Iterator rowIterator -> a
    java.util.Map$Entry rowEntry -> b
    java.util.Iterator columnIterator -> c
    com.google.common.collect.StandardTable this$0 -> d
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.StandardTable$Column -> xx:
    java.lang.Object columnKey -> a
    com.google.common.collect.StandardTable this$0 -> b
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object remove(java.lang.Object) -> remove
    boolean removeIf(com.google.common.base.Predicate) -> a
    java.util.Set createEntrySet() -> a
    java.util.Set createKeySet() -> e
    java.util.Collection createValues() -> a_
com.google.common.collect.StandardTable$Column$EntrySet -> xy:
    com.google.common.collect.StandardTable$Column this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$EntrySetIterator -> xz:
    java.util.Iterator iterator -> a
    com.google.common.collect.StandardTable$Column this$1 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.StandardTable$Column$EntrySetIterator$1 -> xA:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.StandardTable$Column$EntrySetIterator this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.StandardTable$Column$KeySet -> xB:
    com.google.common.collect.StandardTable$Column this$1 -> a
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$Values -> xC:
    com.google.common.collect.StandardTable$Column this$1 -> a
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$ColumnKeyIterator -> xD:
    java.util.Map seen -> a
    java.util.Iterator mapIterator -> b
    java.util.Iterator entryIterator -> c
    com.google.common.collect.StandardTable this$0 -> d
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.StandardTable$ColumnKeySet -> xE:
    com.google.common.collect.StandardTable this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.StandardTable$ColumnMap -> xF:
    com.google.common.collect.StandardTable this$0 -> a
    java.util.Map get(java.lang.Object) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Set createEntrySet() -> a
    java.util.Set keySet() -> keySet
    java.util.Collection createValues() -> a_
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet -> xG:
    com.google.common.collect.StandardTable$ColumnMap this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1 -> xH:
    com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet this$2 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues -> xI:
    com.google.common.collect.StandardTable$ColumnMap this$1 -> a
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Row -> xJ:
    java.lang.Object rowKey -> a
    java.util.Map backingRowMap -> b
    com.google.common.collect.StandardTable this$0 -> c
    java.util.Map backingRowMap() -> c
    java.util.Map computeBackingRowMap() -> d
    void maintainEmptyInvariant() -> f
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set createEntrySet() -> a
com.google.common.collect.StandardTable$Row$RowEntrySet -> xK:
    com.google.common.collect.StandardTable$Row this$1 -> a
    java.util.Map map() -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.StandardTable$Row$RowEntrySet$1 -> xL:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.StandardTable$Row$RowEntrySet this$2 -> b
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.StandardTable$Row$RowEntrySet$1$1 -> xM:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.StandardTable$Row$RowEntrySet$1 this$3 -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    java.lang.Object delegate() -> delegate
com.google.common.collect.StandardTable$RowMap -> xN:
    com.google.common.collect.StandardTable this$0 -> b
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Set createEntrySet() -> a
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.StandardTable$RowMap$EntrySet -> xO:
    com.google.common.collect.StandardTable$RowMap this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$RowMap$EntrySet$1 -> xP:
    com.google.common.collect.StandardTable$RowMap$EntrySet this$2 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$TableSet -> xQ:
    com.google.common.collect.StandardTable this$0 -> b
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.Synchronized -> xR:
    java.util.Collection collection(java.util.Collection,java.lang.Object) -> a
    java.util.Set set(java.util.Set,java.lang.Object) -> a
    java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> a
    java.util.List list(java.util.List,java.lang.Object) -> a
    java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> a
    java.util.NavigableSet navigableSet(java.util.NavigableSet,java.lang.Object) -> a
    java.util.NavigableMap navigableMap(java.util.NavigableMap,java.lang.Object) -> a
    java.util.Set access$300(java.util.Set,java.lang.Object) -> b
    java.util.Collection access$400(java.util.Collection,java.lang.Object) -> b
    java.util.Map$Entry access$700(java.util.Map$Entry,java.lang.Object) -> a
com.google.common.collect.Synchronized$SynchronizedAsMap -> xS:
    java.util.Set asMapEntrySet -> a
    java.util.Collection asMapValues -> b
    long serialVersionUID -> serialVersionUID
    java.util.Collection get(java.lang.Object) -> a
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.Synchronized$SynchronizedAsMapEntries -> xT:
    long serialVersionUID -> serialVersionUID
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 -> xU:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.Synchronized$SynchronizedAsMapEntries this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1 -> xV:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 this$1 -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object getValue() -> getValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedAsMapValues -> xW:
    long serialVersionUID -> serialVersionUID
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Synchronized$SynchronizedAsMapValues$1 -> xX:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.Synchronized$SynchronizedAsMapValues this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedBiMap -> xY:
    java.util.Set valueSet -> a
    com.google.common.collect.BiMap inverse -> b
    long serialVersionUID -> serialVersionUID
    java.util.Set values() -> values
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Collection values() -> values
    java.util.Map delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedCollection -> xZ:
    long serialVersionUID -> serialVersionUID
    java.util.Collection delegate() -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedDeque -> ya:
    long serialVersionUID -> serialVersionUID
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    void push(java.lang.Object) -> push
    java.lang.Object pop() -> pop
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Queue delegate() -> c
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedEntry -> yb:
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedList -> yc:
    long serialVersionUID -> serialVersionUID
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedListMultimap -> yd:
    long serialVersionUID -> serialVersionUID
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedMap -> ye:
    java.util.Set keySet -> c
    java.util.Collection values -> d
    java.util.Set entrySet -> e
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> a
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedMultimap -> yf:
    java.util.Set keySet -> a
    java.util.Collection valuesCollection -> b
    java.util.Collection entries -> c
    java.util.Map asMap -> d
    com.google.common.collect.Multiset keys -> e
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multimap delegate() -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    java.util.Collection get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Map asMap() -> asMap
    com.google.common.collect.Multiset keys() -> keys
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedMultiset -> yg:
    java.util.Set elementSet -> a
    java.util.Set entrySet -> b
    long serialVersionUID -> serialVersionUID
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedNavigableMap -> yh:
    java.util.NavigableSet descendingKeySet -> a
    java.util.NavigableMap descendingMap -> b
    java.util.NavigableSet navigableKeySet -> f
    long serialVersionUID -> serialVersionUID
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Set keySet() -> keySet
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap delegate() -> c
    java.util.Map delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedNavigableSet -> yi:
    java.util.NavigableSet descendingSet -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet descendingSet() -> descendingSet
    java.lang.Object floor(java.lang.Object) -> floor
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet delegate() -> c
    java.util.Set delegate() -> d
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedObject -> yj:
    java.lang.Object delegate -> g
    java.lang.Object mutex -> h
    long serialVersionUID -> serialVersionUID
    java.lang.Object delegate() -> b
    java.lang.String toString() -> toString
    void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedQueue -> yk:
    long serialVersionUID -> serialVersionUID
    java.util.Queue delegate() -> c
    java.lang.Object element() -> element
    boolean offer(java.lang.Object) -> offer
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    java.lang.Object remove() -> remove
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedRandomAccessList -> yl:
    long serialVersionUID -> serialVersionUID
com.google.common.collect.Synchronized$SynchronizedSet -> ym:
    long serialVersionUID -> serialVersionUID
    java.util.Set delegate() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedSetMultimap -> yn:
    java.util.Set entrySet -> f
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.SetMultimap delegate() -> c
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Collection entries() -> entries
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedSortedMap -> yo:
    long serialVersionUID -> serialVersionUID
    java.util.SortedMap delegate() -> c
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Map delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedSortedSet -> yp:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet delegate() -> c
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.Set delegate() -> d
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap -> yq:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> c
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Table -> com.google.common.collect.Table:
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    java.util.Set cellSet() -> cellSet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Collection values() -> values
    java.util.Map rowMap() -> rowMap
    java.util.Map columnMap() -> columnMap
com.google.common.collect.Table$Cell -> com.google.common.collect.Table$Cell:
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Tables -> com.google.common.collect.Tables:
    com.google.common.base.Function UNMODIFIABLE_WRAPPER -> a
    com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object) -> immutableCell
    com.google.common.collect.Table transpose(com.google.common.collect.Table) -> transpose
    com.google.common.collect.Table newCustomTable(java.util.Map,com.google.common.base.Supplier) -> newCustomTable
    com.google.common.collect.Table transformValues(com.google.common.collect.Table,com.google.common.base.Function) -> transformValues
    com.google.common.collect.Table unmodifiableTable(com.google.common.collect.Table) -> unmodifiableTable
    com.google.common.collect.RowSortedTable unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable) -> unmodifiableRowSortedTable
    boolean equalsImpl(com.google.common.collect.Table,java.lang.Object) -> a
    com.google.common.base.Function access$000() -> a
com.google.common.collect.Tables$1 -> yr:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$AbstractCell -> ys:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Tables$ImmutableCell -> yt:
    java.lang.Object rowKey -> a
    java.lang.Object columnKey -> b
    java.lang.Object value -> c
    long serialVersionUID -> serialVersionUID
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Tables$TransformedTable -> yu:
    com.google.common.collect.Table fromTable -> a
    com.google.common.base.Function function -> b
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    int size() -> size
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    java.util.Iterator cellIterator() -> b
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Collection createValues() -> c
    java.util.Map rowMap() -> rowMap
    java.util.Map columnMap() -> columnMap
com.google.common.collect.Tables$TransformedTable$1 -> yv:
    com.google.common.collect.Tables$TransformedTable this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransformedTable$2 -> yw:
    com.google.common.collect.Tables$TransformedTable this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransformedTable$3 -> yx:
    com.google.common.collect.Tables$TransformedTable this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransposeTable -> yy:
    com.google.common.collect.Table original -> a
    com.google.common.base.Function TRANSPOSE_CELL -> b
    void clear() -> clear
    java.util.Map column(java.lang.Object) -> column
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    int size() -> size
    java.util.Collection values() -> values
    java.util.Iterator cellIterator() -> b
com.google.common.collect.Tables$TransposeTable$1 -> yz:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$UnmodifiableRowSortedMap -> yA:
    long serialVersionUID -> serialVersionUID
    java.util.SortedMap rowMap() -> rowMap
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    java.util.Set rowKeySet() -> rowKeySet
    com.google.common.collect.Table delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Tables$UnmodifiableTable -> yB:
    com.google.common.collect.Table delegate -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Table delegate() -> delegate
    java.util.Set cellSet() -> cellSet
    void clear() -> clear
    java.util.Map column(java.lang.Object) -> column
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.TransformedIterator -> yC:
    java.util.Iterator backingIterator -> c
    java.lang.Object transform(java.lang.Object) -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.TransformedListIterator -> yD:
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
com.google.common.collect.TreeBasedTable -> com.google.common.collect.TreeBasedTable:
    java.util.Comparator columnComparator -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeBasedTable create() -> create
    com.google.common.collect.TreeBasedTable create(java.util.Comparator,java.util.Comparator) -> create
    com.google.common.collect.TreeBasedTable create(com.google.common.collect.TreeBasedTable) -> create
    java.util.Comparator rowComparator() -> rowComparator
    java.util.Comparator columnComparator() -> columnComparator
    java.util.SortedMap row(java.lang.Object) -> row
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
    java.util.Iterator createColumnKeyIterator() -> f
    java.util.Map rowMap() -> rowMap
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map row(java.lang.Object) -> row
    java.util.Map columnMap() -> columnMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map column(java.lang.Object) -> column
    java.util.Set cellSet() -> cellSet
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void putAll(com.google.common.collect.Table) -> putAll
com.google.common.collect.TreeBasedTable$1 -> yE:
    com.google.common.collect.TreeBasedTable this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.TreeBasedTable$2 -> yF:
    java.lang.Object lastValue -> a
    java.util.Iterator val$merged -> b
    java.util.Comparator val$comparator -> c
    com.google.common.collect.TreeBasedTable this$0 -> d
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeBasedTable$Factory -> yG:
    java.util.Comparator comparator -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.collect.TreeBasedTable$TreeRow -> yH:
    java.lang.Object lowerBound -> d
    java.lang.Object upperBound -> e
    java.util.SortedMap wholeRow -> f
    com.google.common.collect.TreeBasedTable this$0 -> g
    java.util.Comparator comparator() -> comparator
    int compare(java.lang.Object,java.lang.Object) -> a
    boolean rangeContains(java.lang.Object) -> a
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap wholeRow() -> g
    void maintainEmptyInvariant() -> f
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.util.Map computeBackingRowMap() -> d
    java.util.Map backingRowMap() -> c
    java.util.Set keySet() -> keySet
com.google.common.collect.TreeMultimap -> com.google.common.collect.TreeMultimap:
    java.util.Comparator keyComparator -> a
    java.util.Comparator valueComparator -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeMultimap create() -> create
    com.google.common.collect.TreeMultimap create(java.util.Comparator,java.util.Comparator) -> create
    com.google.common.collect.TreeMultimap create(com.google.common.collect.Multimap) -> create
    java.util.SortedSet createCollection() -> n
    java.util.Collection createCollection(java.lang.Object) -> a
    java.util.Comparator keyComparator() -> keyComparator
    java.util.Comparator valueComparator() -> valueComparator
    java.util.NavigableSet get(java.lang.Object) -> get
    java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> a
    java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> a
    java.util.NavigableSet keySet() -> keySet
    java.util.NavigableMap asMap() -> asMap
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.SortedSet keySet() -> keySet
    java.util.SortedMap backingMap() -> m
    java.util.SortedMap asMap() -> asMap
    java.util.Collection values() -> values
    java.util.Map asMap() -> asMap
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.Set get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    java.util.Collection get(java.lang.Object) -> get
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Set entries() -> entries
    java.util.Set createCollection() -> a
    java.util.Map createAsMap() -> h
    java.util.Set createKeySet() -> e
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    java.util.Map backingMap() -> d
    java.util.Collection createCollection() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
com.google.common.collect.TreeMultiset -> com.google.common.collect.TreeMultiset:
    com.google.common.collect.TreeMultiset$Reference rootReference -> b
    com.google.common.collect.GeneralRange range -> c
    com.google.common.collect.TreeMultiset$AvlNode header -> d
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeMultiset create() -> create
    com.google.common.collect.TreeMultiset create(java.util.Comparator) -> create
    com.google.common.collect.TreeMultiset create(java.lang.Iterable) -> create
    long aggregateForEntries(com.google.common.collect.TreeMultiset$Aggregate) -> a
    long aggregateBelowRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode) -> a
    long aggregateAboveRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode) -> b
    int size() -> size
    int distinctElements() -> b
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> e
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    int distinctElements(com.google.common.collect.TreeMultiset$AvlNode) -> a
    void successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> b
    void successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> b
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    java.util.Comparator comparator() -> comparator
    java.util.NavigableSet elementSet() -> elementSet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set entrySet() -> entrySet
    void clear() -> clear
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    com.google.common.collect.TreeMultiset$AvlNode access$1200(com.google.common.collect.TreeMultiset) -> a
    com.google.common.collect.GeneralRange access$1300(com.google.common.collect.TreeMultiset) -> b
    com.google.common.collect.Multiset$Entry access$1400(com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset$AvlNode) -> a
    com.google.common.collect.TreeMultiset$AvlNode access$1500(com.google.common.collect.TreeMultiset) -> c
    com.google.common.collect.TreeMultiset$AvlNode access$1600(com.google.common.collect.TreeMultiset) -> d
    void access$1700(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> a
    void access$1800(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> a
com.google.common.collect.TreeMultiset$1 -> yI:
    com.google.common.collect.TreeMultiset$AvlNode val$baseEntry -> a
    com.google.common.collect.TreeMultiset this$0 -> b
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.TreeMultiset$2 -> yJ:
    com.google.common.collect.TreeMultiset$AvlNode current -> a
    com.google.common.collect.Multiset$Entry prevEntry -> b
    com.google.common.collect.TreeMultiset this$0 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.TreeMultiset$3 -> yK:
    com.google.common.collect.TreeMultiset$AvlNode current -> a
    com.google.common.collect.Multiset$Entry prevEntry -> b
    com.google.common.collect.TreeMultiset this$0 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.TreeMultiset$4 -> yL:
    int[] $SwitchMap$com$google$common$collect$BoundType -> a
com.google.common.collect.TreeMultiset$Aggregate -> yM:
    com.google.common.collect.TreeMultiset$Aggregate SIZE -> a
    com.google.common.collect.TreeMultiset$Aggregate DISTINCT -> b
    com.google.common.collect.TreeMultiset$Aggregate[] $VALUES -> c
    com.google.common.collect.TreeMultiset$Aggregate[] values() -> values
    com.google.common.collect.TreeMultiset$Aggregate valueOf(java.lang.String) -> valueOf
    int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> a
    long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> b
com.google.common.collect.TreeMultiset$Aggregate$1 -> yN:
    int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> a
    long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> b
com.google.common.collect.TreeMultiset$Aggregate$2 -> yO:
    int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> a
    long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> b
com.google.common.collect.TreeMultiset$AvlNode -> yP:
    java.lang.Object elem -> a
    int elemCount -> b
    int distinctElements -> c
    long totalCount -> d
    int height -> e
    com.google.common.collect.TreeMultiset$AvlNode left -> f
    com.google.common.collect.TreeMultiset$AvlNode right -> g
    com.google.common.collect.TreeMultiset$AvlNode pred -> h
    com.google.common.collect.TreeMultiset$AvlNode succ -> i
    int count(java.util.Comparator,java.lang.Object) -> a
    com.google.common.collect.TreeMultiset$AvlNode addRightChild(java.lang.Object,int) -> a
    com.google.common.collect.TreeMultiset$AvlNode addLeftChild(java.lang.Object,int) -> b
    com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[]) -> a
    com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[]) -> b
    com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[]) -> c
    com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int,int[]) -> a
    com.google.common.collect.TreeMultiset$AvlNode deleteMe() -> a
    com.google.common.collect.TreeMultiset$AvlNode removeMin(com.google.common.collect.TreeMultiset$AvlNode) -> i
    com.google.common.collect.TreeMultiset$AvlNode removeMax(com.google.common.collect.TreeMultiset$AvlNode) -> j
    void recomputeHeight() -> b
    void recompute() -> c
    com.google.common.collect.TreeMultiset$AvlNode rebalance() -> d
    int balanceFactor() -> e
    com.google.common.collect.TreeMultiset$AvlNode rotateLeft() -> f
    com.google.common.collect.TreeMultiset$AvlNode rotateRight() -> g
    long totalCount(com.google.common.collect.TreeMultiset$AvlNode) -> k
    int height(com.google.common.collect.TreeMultiset$AvlNode) -> l
    com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object) -> b
    com.google.common.collect.TreeMultiset$AvlNode floor(java.util.Comparator,java.lang.Object) -> c
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
    java.lang.String toString() -> toString
    int access$200(com.google.common.collect.TreeMultiset$AvlNode) -> a
    long access$300(com.google.common.collect.TreeMultiset$AvlNode) -> b
    int access$400(com.google.common.collect.TreeMultiset$AvlNode) -> c
    java.lang.Object access$500(com.google.common.collect.TreeMultiset$AvlNode) -> d
    com.google.common.collect.TreeMultiset$AvlNode access$600(com.google.common.collect.TreeMultiset$AvlNode) -> e
    com.google.common.collect.TreeMultiset$AvlNode access$700(com.google.common.collect.TreeMultiset$AvlNode) -> f
    com.google.common.collect.TreeMultiset$AvlNode access$800(com.google.common.collect.TreeMultiset$AvlNode,java.util.Comparator,java.lang.Object) -> a
    com.google.common.collect.TreeMultiset$AvlNode access$900(com.google.common.collect.TreeMultiset$AvlNode) -> g
    com.google.common.collect.TreeMultiset$AvlNode access$1000(com.google.common.collect.TreeMultiset$AvlNode,java.util.Comparator,java.lang.Object) -> b
    com.google.common.collect.TreeMultiset$AvlNode access$1100(com.google.common.collect.TreeMultiset$AvlNode) -> h
    com.google.common.collect.TreeMultiset$AvlNode access$902(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> a
    com.google.common.collect.TreeMultiset$AvlNode access$1102(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> b
com.google.common.collect.TreeMultiset$Reference -> yQ:
    java.lang.Object value -> a
    void checkAndSet(java.lang.Object,java.lang.Object) -> a
com.google.common.collect.TreeRangeMap -> com.google.common.collect.TreeRangeMap:
    java.util.NavigableMap entriesByLowerBound -> a
    com.google.common.collect.RangeMap EMPTY_SUB_RANGE_MAP -> b
    com.google.common.collect.TreeRangeMap create() -> create
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    com.google.common.collect.Range span() -> span
    void putRangeMapEntry(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object) -> a
    void remove(com.google.common.collect.Range) -> remove
    java.util.Map asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.NavigableMap access$100(com.google.common.collect.TreeRangeMap) -> a
    com.google.common.collect.RangeMap access$200(com.google.common.collect.TreeRangeMap) -> b
com.google.common.collect.TreeRangeMap$1 -> yR:
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    java.util.Map asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
com.google.common.collect.TreeRangeMap$AsMapOfRanges -> yS:
    com.google.common.collect.TreeRangeMap this$0 -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.util.Set entrySet() -> entrySet
com.google.common.collect.TreeRangeMap$AsMapOfRanges$1 -> yT:
    com.google.common.collect.TreeRangeMap$AsMapOfRanges this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.TreeRangeMap$RangeMapEntry -> yU:
    com.google.common.collect.Range range -> a
    java.lang.Object value -> b
    com.google.common.collect.Range getKey() -> a
    java.lang.Object getValue() -> getValue
    boolean contains(java.lang.Comparable) -> a
    com.google.common.collect.Cut getLowerBound() -> b
    com.google.common.collect.Cut getUpperBound() -> c
    java.lang.Object getKey() -> getKey
com.google.common.collect.TreeRangeMap$SubRangeMap -> yV:
    com.google.common.collect.Range subRange -> b
    com.google.common.collect.TreeRangeMap this$0 -> a
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    java.util.Map asMapOfRanges() -> asMapOfRanges
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeMap$SubRangeMap) -> a
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap -> yW:
    com.google.common.collect.TreeRangeMap$SubRangeMap this$1 -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    boolean access$400(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,com.google.common.base.Predicate) -> a
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1 -> yX:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> a
    boolean remove(java.lang.Object) -> remove
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 -> yY:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    boolean isEmpty() -> isEmpty
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2$1 -> yZ:
    java.util.Iterator val$backingItr -> a
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 this$3 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3 -> za:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.TreeRangeSet -> com.google.common.collect.TreeRangeSet:
    java.util.NavigableMap rangesByLowerBound -> a
    java.util.Set asRanges -> b
    com.google.common.collect.RangeSet complement -> c
    com.google.common.collect.TreeRangeSet create() -> create
    com.google.common.collect.TreeRangeSet create(com.google.common.collect.RangeSet) -> create
    java.util.Set asRanges() -> asRanges
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    boolean encloses(com.google.common.collect.Range) -> encloses
    com.google.common.collect.Range span() -> span
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    void replaceRangeWithSameLowerBound(com.google.common.collect.Range) -> a
    com.google.common.collect.RangeSet complement() -> complement
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    boolean equals(java.lang.Object) -> equals
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    void addAll(com.google.common.collect.RangeSet) -> addAll
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Comparable) -> contains
com.google.common.collect.TreeRangeSet$AsRanges -> zb:
    com.google.common.collect.TreeRangeSet this$0 -> a
    java.util.Collection delegate() -> delegate
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object delegate() -> delegate
com.google.common.collect.TreeRangeSet$Complement -> zc:
    com.google.common.collect.TreeRangeSet this$0 -> b
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.RangeSet complement() -> complement
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound -> zd:
    java.util.NavigableMap positiveRangesByLowerBound -> a
    java.util.NavigableMap positiveRangesByUpperBound -> b
    com.google.common.collect.Range complementLowerBoundWindow -> c
    java.util.NavigableMap subMap(com.google.common.collect.Range) -> a
    java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> a
    java.util.Comparator comparator() -> comparator
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    int size() -> size
    com.google.common.collect.Range get(java.lang.Object) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound) -> a
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1 -> ze:
    com.google.common.collect.Cut nextComplementRangeLowerBound -> a
    com.google.common.collect.Cut val$firstComplementRangeLowerBound -> b
    com.google.common.collect.PeekingIterator val$positiveItr -> c
    com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound this$0 -> d
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2 -> zf:
    com.google.common.collect.Cut nextComplementRangeUpperBound -> a
    com.google.common.collect.Cut val$firstComplementRangeUpperBound -> b
    com.google.common.collect.PeekingIterator val$positiveItr -> c
    com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound this$0 -> d
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> zg:
    java.util.NavigableMap rangesByLowerBound -> a
    com.google.common.collect.Range upperBoundWindow -> b
    java.util.NavigableMap subMap(com.google.common.collect.Range) -> a
    java.util.Comparator comparator() -> comparator
    boolean containsKey(java.lang.Object) -> containsKey
    com.google.common.collect.Range get(java.lang.Object) -> a
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(java.lang.Object) -> get
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> a
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> zh:
    java.util.Iterator val$backingItr -> a
    com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> zi:
    com.google.common.collect.PeekingIterator val$backingItr -> a
    com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$SubRangeSet -> zj:
    com.google.common.collect.Range restriction -> c
    com.google.common.collect.TreeRangeSet this$0 -> b
    boolean encloses(com.google.common.collect.Range) -> encloses
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    boolean contains(java.lang.Comparable) -> contains
    void clear() -> clear
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound -> zk:
    com.google.common.collect.Range lowerBoundWindow -> a
    com.google.common.collect.Range restriction -> b
    java.util.NavigableMap rangesByLowerBound -> c
    java.util.NavigableMap rangesByUpperBound -> d
    java.util.NavigableMap subMap(com.google.common.collect.Range) -> a
    java.util.Comparator comparator() -> comparator
    boolean containsKey(java.lang.Object) -> containsKey
    com.google.common.collect.Range get(java.lang.Object) -> a
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound) -> a
    com.google.common.collect.Range access$400(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound) -> b
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1 -> zl:
    java.util.Iterator val$completeRangeItr -> a
    com.google.common.collect.Cut val$upperBoundOnLowerBounds -> b
    com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound this$0 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2 -> zm:
    java.util.Iterator val$completeRangeItr -> a
    com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeTraverser -> com.google.common.collect.TreeTraverser:
    java.lang.Iterable children(java.lang.Object) -> children
    com.google.common.collect.FluentIterable preOrderTraversal(java.lang.Object) -> preOrderTraversal
    com.google.common.collect.UnmodifiableIterator preOrderIterator(java.lang.Object) -> a
    com.google.common.collect.FluentIterable postOrderTraversal(java.lang.Object) -> postOrderTraversal
    com.google.common.collect.UnmodifiableIterator postOrderIterator(java.lang.Object) -> b
    com.google.common.collect.FluentIterable breadthFirstTraversal(java.lang.Object) -> breadthFirstTraversal
com.google.common.collect.TreeTraverser$1 -> zn:
    java.lang.Object val$root -> a
    com.google.common.collect.TreeTraverser this$0 -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.TreeTraverser$2 -> zo:
    java.lang.Object val$root -> a
    com.google.common.collect.TreeTraverser this$0 -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.TreeTraverser$3 -> zp:
    java.lang.Object val$root -> a
    com.google.common.collect.TreeTraverser this$0 -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.TreeTraverser$BreadthFirstIterator -> zq:
    java.util.Queue queue -> b
    com.google.common.collect.TreeTraverser this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object peek() -> peek
    java.lang.Object next() -> next
com.google.common.collect.TreeTraverser$PostOrderIterator -> zr:
    java.util.ArrayDeque stack -> b
    com.google.common.collect.TreeTraverser this$0 -> a
    java.lang.Object computeNext() -> computeNext
    com.google.common.collect.TreeTraverser$PostOrderNode expand(java.lang.Object) -> a
com.google.common.collect.TreeTraverser$PostOrderNode -> zs:
    java.lang.Object root -> a
    java.util.Iterator childIterator -> b
com.google.common.collect.TreeTraverser$PreOrderIterator -> zt:
    java.util.Deque stack -> b
    com.google.common.collect.TreeTraverser this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
com.google.common.collect.UnmodifiableSortedMultiset -> zu:
    com.google.common.collect.UnmodifiableSortedMultiset descendingMultiset -> d
    long serialVersionUID -> serialVersionUID
    java.util.Comparator comparator() -> comparator
    java.util.NavigableSet elementSet() -> elementSet
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    java.util.Set elementSet() -> elementSet
    java.util.Set createElementSet() -> a
    com.google.common.collect.Multiset delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.UsingToStringOrdering -> zv:
    com.google.common.collect.UsingToStringOrdering INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
com.google.common.collect.WellBehavedMap -> zw:
    java.util.Map delegate -> a
    java.util.Set entrySet -> b
    com.google.common.collect.WellBehavedMap wrap(java.util.Map) -> a
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.lang.Object delegate() -> delegate
com.google.common.collect.WellBehavedMap$EntrySet -> zx:
    com.google.common.collect.WellBehavedMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.WellBehavedMap$EntrySet$1 -> zy:
    com.google.common.collect.WellBehavedMap$EntrySet this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.WellBehavedMap$EntrySet$1$1 -> zz:
    java.lang.Object val$key -> a
    com.google.common.collect.WellBehavedMap$EntrySet$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.escape.ArrayBasedCharEscaper -> com.google.common.escape.ArrayBasedCharEscaper:
    char[][] replacements -> a
    int replacementsLength -> b
    char safeMin -> c
    char safeMax -> d
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(char) -> escape
    char[] escapeUnsafe(char) -> escapeUnsafe
com.google.common.escape.ArrayBasedEscaperMap -> com.google.common.escape.ArrayBasedEscaperMap:
    char[][] replacementArray -> a
    char[][] EMPTY_REPLACEMENT_ARRAY -> b
    com.google.common.escape.ArrayBasedEscaperMap create(java.util.Map) -> create
    char[][] getReplacementArray() -> a
    char[][] createReplacementArray(java.util.Map) -> a
com.google.common.escape.ArrayBasedUnicodeEscaper -> com.google.common.escape.ArrayBasedUnicodeEscaper:
    char[][] replacements -> a
    int replacementsLength -> b
    int safeMin -> c
    int safeMax -> d
    char safeMinChar -> e
    char safeMaxChar -> f
    java.lang.String escape(java.lang.String) -> escape
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    char[] escape(int) -> escape
    char[] escapeUnsafe(int) -> escapeUnsafe
com.google.common.escape.CharEscaper -> com.google.common.escape.CharEscaper:
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    char[] escape(char) -> escape
    char[] growBuffer(char[],int,int) -> a
com.google.common.escape.CharEscaperBuilder -> com.google.common.escape.CharEscaperBuilder:
    java.util.Map map -> a
    int max -> b
    com.google.common.escape.CharEscaperBuilder addEscape(char,java.lang.String) -> addEscape
    com.google.common.escape.CharEscaperBuilder addEscapes(char[],java.lang.String) -> addEscapes
    char[][] toArray() -> toArray
    com.google.common.escape.Escaper toEscaper() -> toEscaper
com.google.common.escape.CharEscaperBuilder$CharArrayDecorator -> zA:
    char[][] replacements -> a
    int replaceLength -> b
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(char) -> escape
com.google.common.escape.Escaper -> com.google.common.escape.Escaper:
    com.google.common.base.Function asFunction -> a
    java.lang.String escape(java.lang.String) -> escape
    com.google.common.base.Function asFunction() -> asFunction
com.google.common.escape.Escaper$1 -> zB:
    com.google.common.escape.Escaper this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.escape.Escapers -> com.google.common.escape.Escapers:
    com.google.common.escape.Escaper NULL_ESCAPER -> a
    com.google.common.escape.Escaper nullEscaper() -> nullEscaper
    com.google.common.escape.Escapers$Builder builder() -> builder
    java.lang.String computeReplacement(com.google.common.escape.CharEscaper,char) -> computeReplacement
    java.lang.String computeReplacement(com.google.common.escape.UnicodeEscaper,int) -> computeReplacement
    java.lang.String stringOrNull(char[]) -> a
com.google.common.escape.Escapers$1 -> zC:
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(char) -> escape
com.google.common.escape.Escapers$Builder -> com.google.common.escape.Escapers$Builder:
    java.util.Map replacementMap -> a
    char safeMin -> b
    char safeMax -> c
    java.lang.String unsafeReplacement -> d
    com.google.common.escape.Escapers$Builder setSafeRange(char,char) -> setSafeRange
    com.google.common.escape.Escapers$Builder setUnsafeReplacement(java.lang.String) -> setUnsafeReplacement
    com.google.common.escape.Escapers$Builder addEscape(char,java.lang.String) -> addEscape
    com.google.common.escape.Escaper build() -> build
    java.lang.String access$100(com.google.common.escape.Escapers$Builder) -> a
com.google.common.escape.Escapers$Builder$1 -> zD:
    char[] replacementChars -> b
    com.google.common.escape.Escapers$Builder this$0 -> a
    char[] escapeUnsafe(char) -> escapeUnsafe
com.google.common.escape.Platform -> zE:
    java.lang.ThreadLocal DEST_TL -> a
    char[] charBufferFromThreadLocal() -> a
com.google.common.escape.Platform$1 -> zF:
    java.lang.Object initialValue() -> initialValue
com.google.common.escape.UnicodeEscaper -> com.google.common.escape.UnicodeEscaper:
    char[] escape(int) -> escape
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    char[] growBuffer(char[],int,int) -> a
com.google.common.eventbus.AllowConcurrentEvents -> com.google.common.eventbus.AllowConcurrentEvents:
com.google.common.eventbus.AnnotatedHandlerFinder -> zG:
    com.google.common.cache.LoadingCache handlerMethodsCache -> a
    com.google.common.collect.Multimap findAllHandlers(java.lang.Object) -> a
    com.google.common.collect.ImmutableList getAnnotatedMethods(java.lang.Class) -> b
    com.google.common.collect.ImmutableList access$000(java.lang.Class) -> a
com.google.common.eventbus.AnnotatedHandlerFinder$1 -> zH:
    java.lang.Object load(java.lang.Object) -> load
com.google.common.eventbus.AnnotatedHandlerFinder$MethodIdentifier -> zI:
    java.lang.String name -> a
    java.util.List parameterTypes -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.eventbus.AsyncEventBus -> com.google.common.eventbus.AsyncEventBus:
    java.util.concurrent.Executor executor -> a
    java.util.concurrent.ConcurrentLinkedQueue eventsToDispatch -> b
    void enqueueEvent(java.lang.Object,com.google.common.eventbus.EventHandler) -> a
    void dispatchQueuedEvents() -> dispatchQueuedEvents
    void dispatch(java.lang.Object,com.google.common.eventbus.EventHandler) -> b
    void access$001(com.google.common.eventbus.AsyncEventBus,java.lang.Object,com.google.common.eventbus.EventHandler) -> a
com.google.common.eventbus.AsyncEventBus$1 -> zJ:
    java.lang.Object val$event -> a
    com.google.common.eventbus.EventHandler val$handler -> b
    com.google.common.eventbus.AsyncEventBus this$0 -> c
    void run() -> run
com.google.common.eventbus.DeadEvent -> com.google.common.eventbus.DeadEvent:
    java.lang.Object source -> a
    java.lang.Object event -> b
    java.lang.Object getSource() -> getSource
    java.lang.Object getEvent() -> getEvent
com.google.common.eventbus.EventBus -> com.google.common.eventbus.EventBus:
    com.google.common.cache.LoadingCache flattenHierarchyCache -> a
    com.google.common.collect.SetMultimap handlersByType -> b
    java.util.concurrent.locks.ReadWriteLock handlersByTypeLock -> c
    java.util.logging.Logger logger -> d
    com.google.common.eventbus.HandlerFindingStrategy finder -> e
    java.lang.ThreadLocal eventsToDispatch -> f
    java.lang.ThreadLocal isDispatching -> g
    void register(java.lang.Object) -> register
    void unregister(java.lang.Object) -> unregister
    void post(java.lang.Object) -> post
    void enqueueEvent(java.lang.Object,com.google.common.eventbus.EventHandler) -> a
    void dispatchQueuedEvents() -> dispatchQueuedEvents
    void dispatch(java.lang.Object,com.google.common.eventbus.EventHandler) -> b
    java.util.Set flattenHierarchy(java.lang.Class) -> a
com.google.common.eventbus.EventBus$1 -> zK:
    java.lang.Object load(java.lang.Object) -> load
com.google.common.eventbus.EventBus$2 -> zL:
    com.google.common.eventbus.EventBus this$0 -> a
    java.lang.Object initialValue() -> initialValue
com.google.common.eventbus.EventBus$3 -> zM:
    com.google.common.eventbus.EventBus this$0 -> a
    java.lang.Object initialValue() -> initialValue
com.google.common.eventbus.EventBus$EventWithHandler -> zN:
    java.lang.Object event -> a
    com.google.common.eventbus.EventHandler handler -> b
com.google.common.eventbus.EventHandler -> zO:
    java.lang.Object target -> a
    java.lang.reflect.Method method -> b
    void handleEvent(java.lang.Object) -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.eventbus.HandlerFindingStrategy -> zP:
    com.google.common.collect.Multimap findAllHandlers(java.lang.Object) -> a
com.google.common.eventbus.Subscribe -> com.google.common.eventbus.Subscribe:
com.google.common.eventbus.SynchronizedEventHandler -> zQ:
    void handleEvent(java.lang.Object) -> a
com.google.common.hash.AbstractByteHasher -> zR:
    java.nio.ByteBuffer scratch -> a
    void update(byte) -> a
    void update(byte[]) -> a
    void update(byte[],int,int) -> a
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher update(int) -> a
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.AbstractCompositeHashFunction -> zS:
    com.google.common.hash.HashFunction[] functions -> a
    com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[]) -> a
    com.google.common.hash.Hasher newHasher() -> newHasher
com.google.common.hash.AbstractCompositeHashFunction$1 -> zT:
    com.google.common.hash.Hasher[] val$hashers -> a
    com.google.common.hash.AbstractCompositeHashFunction this$0 -> b
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putFloat(float) -> putFloat
    com.google.common.hash.Hasher putDouble(double) -> putDouble
    com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putString(java.lang.CharSequence) -> putString
    com.google.common.hash.Hasher putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.HashCode hash() -> hash
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.PrimitiveSink putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence) -> putString
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.AbstractHasher -> zU:
    com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    com.google.common.hash.Hasher putDouble(double) -> putDouble
    com.google.common.hash.Hasher putFloat(float) -> putFloat
    com.google.common.hash.Hasher putString(java.lang.CharSequence) -> putString
    com.google.common.hash.Hasher putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.PrimitiveSink putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence) -> putString
    com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
com.google.common.hash.AbstractStreamingHashFunction -> com.google.common.hash.AbstractStreamingHashFunction:
    com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel) -> hashObject
    com.google.common.hash.HashCode hashString(java.lang.CharSequence) -> hashString
    com.google.common.hash.HashCode hashUnencodedChars(java.lang.CharSequence) -> hashUnencodedChars
    com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset) -> hashString
    com.google.common.hash.HashCode hashInt(int) -> hashInt
    com.google.common.hash.HashCode hashLong(long) -> hashLong
    com.google.common.hash.HashCode hashBytes(byte[]) -> hashBytes
    com.google.common.hash.HashCode hashBytes(byte[],int,int) -> hashBytes
    com.google.common.hash.Hasher newHasher(int) -> newHasher
com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher -> com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher:
    java.nio.ByteBuffer buffer -> a
    int bufferSize -> b
    int chunkSize -> c
    void process(java.nio.ByteBuffer) -> process
    void processRemaining(java.nio.ByteBuffer) -> processRemaining
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher putString(java.lang.CharSequence) -> putString
    com.google.common.hash.Hasher putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.HashCode hash() -> hash
    com.google.common.hash.HashCode makeHash() -> a
    void munchIfFull() -> b
    void munch() -> c
    com.google.common.hash.PrimitiveSink putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence) -> putString
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.BloomFilter -> com.google.common.hash.BloomFilter:
    com.google.common.hash.BloomFilterStrategies$BitArray bits -> a
    int numHashFunctions -> b
    com.google.common.hash.Funnel funnel -> c
    com.google.common.hash.BloomFilter$Strategy strategy -> d
    com.google.common.hash.BloomFilter copy() -> copy
    boolean mightContain(java.lang.Object) -> mightContain
    boolean apply(java.lang.Object) -> apply
    boolean put(java.lang.Object) -> put
    double expectedFpp() -> expectedFpp
    long bitSize() -> a
    boolean isCompatible(com.google.common.hash.BloomFilter) -> isCompatible
    void putAll(com.google.common.hash.BloomFilter) -> putAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,int,double) -> create
    com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,int) -> create
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.hash.BloomFilterStrategies$BitArray access$000(com.google.common.hash.BloomFilter) -> a
    int access$100(com.google.common.hash.BloomFilter) -> b
    com.google.common.hash.Funnel access$200(com.google.common.hash.BloomFilter) -> c
    com.google.common.hash.BloomFilter$Strategy access$300(com.google.common.hash.BloomFilter) -> d
com.google.common.hash.BloomFilter$SerialForm -> zV:
    long[] data -> a
    int numHashFunctions -> b
    com.google.common.hash.Funnel funnel -> c
    com.google.common.hash.BloomFilter$Strategy strategy -> d
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.hash.BloomFilter$Strategy -> zW:
    boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> a
    boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> b
com.google.common.hash.BloomFilterStrategies -> zX:
    com.google.common.hash.BloomFilterStrategies MURMUR128_MITZ_32 -> a
    com.google.common.hash.BloomFilterStrategies[] $VALUES -> b
    com.google.common.hash.BloomFilterStrategies[] values() -> values
    com.google.common.hash.BloomFilterStrategies valueOf(java.lang.String) -> valueOf
com.google.common.hash.BloomFilterStrategies$1 -> zY:
    boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> a
    boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> b
com.google.common.hash.BloomFilterStrategies$BitArray -> zZ:
    long[] data -> a
    int bitCount -> b
    boolean get(int) -> a
    int bitSize() -> a
    com.google.common.hash.BloomFilterStrategies$BitArray copy() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.hash.ChecksumHashFunction -> Aa:
    com.google.common.base.Supplier checksumSupplier -> a
    int bits -> b
    java.lang.String toString -> c
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.String toString() -> toString
    int access$100(com.google.common.hash.ChecksumHashFunction) -> a
com.google.common.hash.ChecksumHashFunction$ChecksumHasher -> Ab:
    java.util.zip.Checksum checksum -> b
    com.google.common.hash.ChecksumHashFunction this$0 -> a
    void update(byte) -> a
    void update(byte[],int,int) -> a
    com.google.common.hash.HashCode hash() -> hash
com.google.common.hash.Funnel -> com.google.common.hash.Funnel:
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels -> com.google.common.hash.Funnels:
    com.google.common.hash.Funnel byteArrayFunnel() -> byteArrayFunnel
    com.google.common.hash.Funnel unencodedCharsFunnel() -> unencodedCharsFunnel
    com.google.common.hash.Funnel stringFunnel() -> stringFunnel
    com.google.common.hash.Funnel stringFunnel(java.nio.charset.Charset) -> stringFunnel
    com.google.common.hash.Funnel integerFunnel() -> integerFunnel
    com.google.common.hash.Funnel sequentialFunnel(com.google.common.hash.Funnel) -> sequentialFunnel
    com.google.common.hash.Funnel longFunnel() -> longFunnel
    java.io.OutputStream asOutputStream(com.google.common.hash.PrimitiveSink) -> asOutputStream
com.google.common.hash.Funnels$ByteArrayFunnel -> Ac:
    com.google.common.hash.Funnels$ByteArrayFunnel INSTANCE -> a
    com.google.common.hash.Funnels$ByteArrayFunnel[] $VALUES -> b
    com.google.common.hash.Funnels$ByteArrayFunnel[] values() -> values
    com.google.common.hash.Funnels$ByteArrayFunnel valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$IntegerFunnel -> Ad:
    com.google.common.hash.Funnels$IntegerFunnel INSTANCE -> a
    com.google.common.hash.Funnels$IntegerFunnel[] $VALUES -> b
    com.google.common.hash.Funnels$IntegerFunnel[] values() -> values
    com.google.common.hash.Funnels$IntegerFunnel valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$LongFunnel -> Ae:
    com.google.common.hash.Funnels$LongFunnel INSTANCE -> a
    com.google.common.hash.Funnels$LongFunnel[] $VALUES -> b
    com.google.common.hash.Funnels$LongFunnel[] values() -> values
    com.google.common.hash.Funnels$LongFunnel valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$SequentialFunnel -> Af:
    com.google.common.hash.Funnel elementFunnel -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$SinkAsStream -> Ag:
    com.google.common.hash.PrimitiveSink sink -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    java.lang.String toString() -> toString
com.google.common.hash.Funnels$StringCharsetFunnel -> Ah:
    java.nio.charset.Charset charset -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$StringCharsetFunnel$SerializedForm -> Ai:
    java.lang.String charsetCanonicalName -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.hash.Funnels$UnencodedCharsFunnel -> Aj:
    com.google.common.hash.Funnels$UnencodedCharsFunnel INSTANCE -> a
    com.google.common.hash.Funnels$UnencodedCharsFunnel[] $VALUES -> b
    com.google.common.hash.Funnels$UnencodedCharsFunnel[] values() -> values
    com.google.common.hash.Funnels$UnencodedCharsFunnel valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.HashCode -> com.google.common.hash.HashCode:
    char[] hexDigits -> a
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
    byte[] asBytes() -> asBytes
    com.google.common.hash.HashCode fromInt(int) -> fromInt
    com.google.common.hash.HashCode fromLong(long) -> fromLong
    com.google.common.hash.HashCode fromBytes(byte[]) -> fromBytes
    com.google.common.hash.HashCode fromBytesNoCopy(byte[]) -> a
    int bits() -> bits
    com.google.common.hash.HashCode fromString(java.lang.String) -> fromString
    int decode(char) -> a
    int writeBytesTo(byte[],int,int) -> writeBytesTo
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.hash.HashCode$BytesHashCode -> Ak:
    byte[] bytes -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    byte[] asBytes() -> asBytes
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
com.google.common.hash.HashCode$IntHashCode -> Al:
    int hash -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    byte[] asBytes() -> asBytes
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
com.google.common.hash.HashCode$LongHashCode -> Am:
    long hash -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    byte[] asBytes() -> asBytes
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
com.google.common.hash.HashCodes -> com.google.common.hash.HashCodes:
    com.google.common.hash.HashCode fromInt(int) -> fromInt
    com.google.common.hash.HashCode fromLong(long) -> fromLong
    com.google.common.hash.HashCode fromBytes(byte[]) -> fromBytes
com.google.common.hash.HashFunction -> com.google.common.hash.HashFunction:
    com.google.common.hash.Hasher newHasher() -> newHasher
    com.google.common.hash.Hasher newHasher(int) -> newHasher
    com.google.common.hash.HashCode hashInt(int) -> hashInt
    com.google.common.hash.HashCode hashLong(long) -> hashLong
    com.google.common.hash.HashCode hashBytes(byte[]) -> hashBytes
    com.google.common.hash.HashCode hashBytes(byte[],int,int) -> hashBytes
    com.google.common.hash.HashCode hashUnencodedChars(java.lang.CharSequence) -> hashUnencodedChars
    com.google.common.hash.HashCode hashString(java.lang.CharSequence) -> hashString
    com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset) -> hashString
    com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel) -> hashObject
    int bits() -> bits
com.google.common.hash.Hasher -> com.google.common.hash.Hasher:
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putFloat(float) -> putFloat
    com.google.common.hash.Hasher putDouble(double) -> putDouble
    com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.Hasher putString(java.lang.CharSequence) -> putString
    com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.HashCode hash() -> hash
com.google.common.hash.Hashing -> com.google.common.hash.Hashing:
    int GOOD_FAST_HASH_SEED -> a
    com.google.common.hash.HashFunction GOOD_FAST_HASH_FUNCTION_32 -> b
    com.google.common.hash.HashFunction GOOD_FAST_HASH_FUNCTION_128 -> c
    com.google.common.hash.HashFunction MURMUR3_32 -> d
    com.google.common.hash.HashFunction MURMUR3_128 -> e
    com.google.common.hash.HashFunction SIP_HASH_24 -> f
    com.google.common.hash.HashFunction MD5 -> g
    com.google.common.hash.HashFunction SHA_1 -> h
    com.google.common.hash.HashFunction SHA_256 -> i
    com.google.common.hash.HashFunction SHA_512 -> j
    com.google.common.hash.HashFunction CRC_32 -> k
    com.google.common.hash.HashFunction ADLER_32 -> l
    com.google.common.hash.HashFunction goodFastHash(int) -> goodFastHash
    com.google.common.hash.HashFunction murmur3_32(int) -> murmur3_32
    com.google.common.hash.HashFunction murmur3_32() -> murmur3_32
    com.google.common.hash.HashFunction murmur3_128(int) -> murmur3_128
    com.google.common.hash.HashFunction murmur3_128() -> murmur3_128
    com.google.common.hash.HashFunction sipHash24() -> sipHash24
    com.google.common.hash.HashFunction sipHash24(long,long) -> sipHash24
    com.google.common.hash.HashFunction md5() -> md5
    com.google.common.hash.HashFunction sha1() -> sha1
    com.google.common.hash.HashFunction sha256() -> sha256
    com.google.common.hash.HashFunction sha512() -> sha512
    com.google.common.hash.HashFunction crc32() -> crc32
    com.google.common.hash.HashFunction adler32() -> adler32
    com.google.common.hash.HashFunction checksumHashFunction(com.google.common.hash.Hashing$ChecksumType,java.lang.String) -> a
    int consistentHash(com.google.common.hash.HashCode,int) -> consistentHash
    int consistentHash(long,int) -> consistentHash
    com.google.common.hash.HashCode combineOrdered(java.lang.Iterable) -> combineOrdered
    com.google.common.hash.HashCode combineUnordered(java.lang.Iterable) -> combineUnordered
com.google.common.hash.Hashing$ChecksumType -> An:
    com.google.common.hash.Hashing$ChecksumType CRC_32 -> a
    com.google.common.hash.Hashing$ChecksumType ADLER_32 -> b
    int bits -> c
    com.google.common.hash.Hashing$ChecksumType[] $VALUES -> d
    com.google.common.hash.Hashing$ChecksumType[] values() -> values
    com.google.common.hash.Hashing$ChecksumType valueOf(java.lang.String) -> valueOf
    java.util.zip.Checksum get() -> a
    java.lang.Object get() -> get
    int access$000(com.google.common.hash.Hashing$ChecksumType) -> a
com.google.common.hash.Hashing$ChecksumType$1 -> Ao:
    java.util.zip.Checksum get() -> a
    java.lang.Object get() -> get
com.google.common.hash.Hashing$ChecksumType$2 -> Ap:
    java.util.zip.Checksum get() -> a
    java.lang.Object get() -> get
com.google.common.hash.Hashing$ConcatenatedHashFunction -> Aq:
    int bits -> b
    com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[]) -> a
    int bits() -> bits
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.hash.Hashing$LinearCongruentialGenerator -> Ar:
    long state -> a
com.google.common.hash.MessageDigestHashFunction -> As:
    java.security.MessageDigest prototype -> a
    int bytes -> b
    boolean supportsClone -> c
    java.lang.String toString -> d
    boolean supportsClone() -> a
    int bits() -> bits
    java.lang.String toString() -> toString
    java.security.MessageDigest getMessageDigest(java.lang.String) -> a
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.Object writeReplace() -> writeReplace
com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher -> At:
    java.security.MessageDigest digest -> a
    int bytes -> b
    boolean done -> c
    void update(byte) -> a
    void update(byte[]) -> a
    void update(byte[],int,int) -> a
    void checkNotDone() -> a
    com.google.common.hash.HashCode hash() -> hash
com.google.common.hash.MessageDigestHashFunction$SerializedForm -> Au:
    java.lang.String algorithmName -> a
    int bytes -> b
    java.lang.String toString -> c
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.hash.Murmur3_128HashFunction -> Av:
    int seed -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher -> Aw:
    long h1 -> a
    long h2 -> b
    int length -> c
    void process(java.nio.ByteBuffer) -> process
    void processRemaining(java.nio.ByteBuffer) -> processRemaining
    com.google.common.hash.HashCode makeHash() -> a
    long fmix64(long) -> a
    long mixK1(long) -> b
    long mixK2(long) -> c
com.google.common.hash.Murmur3_32HashFunction -> Ax:
    int seed -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.common.hash.HashCode hashInt(int) -> hashInt
    com.google.common.hash.HashCode hashLong(long) -> hashLong
    com.google.common.hash.HashCode hashString(java.lang.CharSequence) -> hashString
    int mixK1(int) -> b
    int mixH1(int,int) -> c
    com.google.common.hash.HashCode fmix(int,int) -> d
    int access$000(int) -> a
    int access$100(int,int) -> a
    com.google.common.hash.HashCode access$200(int,int) -> b
com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher -> Ay:
    int h1 -> a
    int length -> b
    void process(java.nio.ByteBuffer) -> process
    void processRemaining(java.nio.ByteBuffer) -> processRemaining
    com.google.common.hash.HashCode makeHash() -> a
com.google.common.hash.PrimitiveSink -> com.google.common.hash.PrimitiveSink:
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
    com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence) -> putString
    com.google.common.hash.PrimitiveSink putUnencodedChars(java.lang.CharSequence) -> putUnencodedChars
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
com.google.common.hash.SipHashFunction -> Az:
    int c -> a
    int d -> b
    long k0 -> c
    long k1 -> d
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.hash.SipHashFunction$SipHasher -> AA:
    int c -> a
    int d -> b
    long v0 -> c
    long v1 -> d
    long v2 -> e
    long v3 -> f
    long b -> g
    long finalM -> h
    void process(java.nio.ByteBuffer) -> process
    void processRemaining(java.nio.ByteBuffer) -> processRemaining
    com.google.common.hash.HashCode makeHash() -> a
    void processM(long) -> a
    void sipRound(int) -> a
com.google.common.html.HtmlEscapers -> com.google.common.html.HtmlEscapers:
    com.google.common.escape.Escaper HTML_ESCAPER -> a
    com.google.common.escape.Escaper htmlEscaper() -> htmlEscaper
com.google.common.io.AppendableWriter -> AB:
    java.lang.Appendable target -> a
    boolean closed -> b
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void checkNotClosed() -> a
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.google.common.io.BaseEncoding -> com.google.common.io.BaseEncoding:
    com.google.common.io.BaseEncoding BASE64 -> a
    com.google.common.io.BaseEncoding BASE64_URL -> b
    com.google.common.io.BaseEncoding BASE32 -> c
    com.google.common.io.BaseEncoding BASE32_HEX -> d
    com.google.common.io.BaseEncoding BASE16 -> e
    java.lang.String encode(byte[]) -> encode
    java.lang.String encode(byte[],int,int) -> encode
    java.io.OutputStream encodingStream(java.io.Writer) -> encodingStream
    com.google.common.io.OutputSupplier encodingStream(com.google.common.io.OutputSupplier) -> encodingStream
    com.google.common.io.ByteSink encodingSink(com.google.common.io.CharSink) -> encodingSink
    byte[] decode(java.lang.CharSequence) -> decode
    byte[] decodeChecked(java.lang.CharSequence) -> a
    java.io.InputStream decodingStream(java.io.Reader) -> decodingStream
    com.google.common.io.InputSupplier decodingStream(com.google.common.io.InputSupplier) -> decodingStream
    com.google.common.io.ByteSource decodingSource(com.google.common.io.CharSource) -> decodingSource
    int maxEncodedSize(int) -> a
    com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(com.google.common.io.GwtWorkarounds$CharOutput) -> a
    int maxDecodedSize(int) -> b
    com.google.common.io.GwtWorkarounds$ByteInput decodingStream(com.google.common.io.GwtWorkarounds$CharInput) -> a
    com.google.common.base.CharMatcher padding() -> a
    com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    com.google.common.io.BaseEncoding upperCase() -> upperCase
    com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    com.google.common.io.BaseEncoding base64() -> base64
    com.google.common.io.BaseEncoding base64Url() -> base64Url
    com.google.common.io.BaseEncoding base32() -> base32
    com.google.common.io.BaseEncoding base32Hex() -> base32Hex
    com.google.common.io.BaseEncoding base16() -> base16
com.google.common.io.BaseEncoding$1 -> AC:
    com.google.common.io.OutputSupplier val$writerSupplier -> a
    com.google.common.io.BaseEncoding this$0 -> b
    java.lang.Object getOutput() -> getOutput
com.google.common.io.BaseEncoding$2 -> AD:
    com.google.common.io.CharSink val$encodedSink -> a
    com.google.common.io.BaseEncoding this$0 -> b
    java.io.OutputStream openStream() -> openStream
com.google.common.io.BaseEncoding$3 -> AE:
    com.google.common.io.InputSupplier val$readerSupplier -> a
    com.google.common.io.BaseEncoding this$0 -> b
    java.lang.Object getInput() -> getInput
com.google.common.io.BaseEncoding$4 -> AF:
    com.google.common.io.CharSource val$encodedSource -> a
    com.google.common.io.BaseEncoding this$0 -> b
    java.io.InputStream openStream() -> openStream
com.google.common.io.BaseEncoding$5 -> AG:
    com.google.common.io.GwtWorkarounds$CharInput val$delegate -> a
    com.google.common.base.CharMatcher val$toIgnore -> b
    int read() -> a
    void close() -> b
com.google.common.io.BaseEncoding$6 -> AH:
    int charsUntilSeparator -> a
    int val$afterEveryChars -> b
    java.lang.String val$separator -> c
    com.google.common.io.GwtWorkarounds$CharOutput val$delegate -> d
    void write(char) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.BaseEncoding$Alphabet -> AI:
    java.lang.String name -> f
    char[] chars -> g
    int mask -> b
    int bitsPerChar -> c
    int charsPerChunk -> d
    int bytesPerChunk -> e
    byte[] decodabet -> h
    boolean[] validPadding -> i
    char encode(int) -> a
    boolean isValidPaddingStartPosition(int) -> b
    int decode(char) -> a
    boolean hasLowerCase() -> d
    boolean hasUpperCase() -> e
    com.google.common.io.BaseEncoding$Alphabet upperCase() -> b
    com.google.common.io.BaseEncoding$Alphabet lowerCase() -> c
    boolean matches(char) -> matches
    java.lang.String toString() -> toString
com.google.common.io.BaseEncoding$DecodingException -> com.google.common.io.BaseEncoding$DecodingException:
com.google.common.io.BaseEncoding$SeparatedBaseEncoding -> AJ:
    com.google.common.io.BaseEncoding delegate -> a
    java.lang.String separator -> b
    int afterEveryChars -> c
    com.google.common.base.CharMatcher separatorChars -> d
    com.google.common.base.CharMatcher padding() -> a
    int maxEncodedSize(int) -> a
    com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(com.google.common.io.GwtWorkarounds$CharOutput) -> a
    int maxDecodedSize(int) -> b
    com.google.common.io.GwtWorkarounds$ByteInput decodingStream(com.google.common.io.GwtWorkarounds$CharInput) -> a
    com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    com.google.common.io.BaseEncoding upperCase() -> upperCase
    com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    java.lang.String toString() -> toString
com.google.common.io.BaseEncoding$StandardBaseEncoding -> AK:
    com.google.common.io.BaseEncoding$Alphabet alphabet -> a
    java.lang.Character paddingChar -> b
    com.google.common.io.BaseEncoding upperCase -> c
    com.google.common.io.BaseEncoding lowerCase -> d
    com.google.common.base.CharMatcher padding() -> a
    int maxEncodedSize(int) -> a
    com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(com.google.common.io.GwtWorkarounds$CharOutput) -> a
    int maxDecodedSize(int) -> b
    com.google.common.io.GwtWorkarounds$ByteInput decodingStream(com.google.common.io.GwtWorkarounds$CharInput) -> a
    com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    com.google.common.io.BaseEncoding upperCase() -> upperCase
    com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    java.lang.String toString() -> toString
    com.google.common.io.BaseEncoding$Alphabet access$000(com.google.common.io.BaseEncoding$StandardBaseEncoding) -> a
    java.lang.Character access$100(com.google.common.io.BaseEncoding$StandardBaseEncoding) -> b
com.google.common.io.BaseEncoding$StandardBaseEncoding$1 -> AL:
    int bitBuffer -> a
    int bitBufferLength -> b
    int writtenChars -> c
    com.google.common.io.GwtWorkarounds$CharOutput val$out -> d
    com.google.common.io.BaseEncoding$StandardBaseEncoding this$0 -> e
    void write(byte) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.BaseEncoding$StandardBaseEncoding$2 -> AM:
    int bitBuffer -> a
    int bitBufferLength -> b
    int readChars -> c
    boolean hitPadding -> d
    com.google.common.base.CharMatcher paddingMatcher -> e
    com.google.common.io.GwtWorkarounds$CharInput val$reader -> f
    com.google.common.io.BaseEncoding$StandardBaseEncoding this$0 -> g
    int read() -> a
    void close() -> b
com.google.common.io.ByteArrayDataInput -> com.google.common.io.ByteArrayDataInput:
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.google.common.io.ByteArrayDataOutput -> com.google.common.io.ByteArrayDataOutput:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeShort(int) -> writeShort
    void writeChar(int) -> writeChar
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeFloat(float) -> writeFloat
    void writeDouble(double) -> writeDouble
    void writeChars(java.lang.String) -> writeChars
    void writeUTF(java.lang.String) -> writeUTF
    void writeBytes(java.lang.String) -> writeBytes
    byte[] toByteArray() -> toByteArray
com.google.common.io.ByteProcessor -> com.google.common.io.ByteProcessor:
    boolean processBytes(byte[],int,int) -> processBytes
    java.lang.Object getResult() -> getResult
com.google.common.io.ByteSink -> com.google.common.io.ByteSink:
    com.google.common.io.CharSink asCharSink(java.nio.charset.Charset) -> asCharSink
    java.io.OutputStream openStream() -> openStream
    java.io.OutputStream getOutput() -> getOutput
    java.io.OutputStream openBufferedStream() -> openBufferedStream
    void write(byte[]) -> write
    long writeFrom(java.io.InputStream) -> writeFrom
    java.lang.Object getOutput() -> getOutput
com.google.common.io.ByteSink$AsCharSink -> AN:
    java.nio.charset.Charset charset -> b
    com.google.common.io.ByteSink this$0 -> a
    java.io.Writer openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.io.ByteSource -> com.google.common.io.ByteSource:
    byte[] countBuffer -> a
    com.google.common.io.CharSource asCharSource(java.nio.charset.Charset) -> asCharSource
    java.io.InputStream openStream() -> openStream
    java.io.InputStream getInput() -> getInput
    java.io.InputStream openBufferedStream() -> openBufferedStream
    com.google.common.io.ByteSource slice(long,long) -> slice
    boolean isEmpty() -> isEmpty
    long size() -> size
    long countByReading(java.io.InputStream) -> a
    long copyTo(java.io.OutputStream) -> copyTo
    long copyTo(com.google.common.io.ByteSink) -> copyTo
    byte[] read() -> read
    com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction) -> hash
    boolean contentEquals(com.google.common.io.ByteSource) -> contentEquals
    com.google.common.io.ByteSource concat(java.lang.Iterable) -> concat
    com.google.common.io.ByteSource concat(java.util.Iterator) -> concat
    com.google.common.io.ByteSource concat(com.google.common.io.ByteSource[]) -> concat
    com.google.common.io.ByteSource wrap(byte[]) -> wrap
    com.google.common.io.ByteSource empty() -> empty
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteSource$AsCharSource -> AO:
    java.nio.charset.Charset charset -> b
    com.google.common.io.ByteSource this$0 -> a
    java.io.Reader openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.io.ByteSource$ByteArrayByteSource -> AP:
    byte[] bytes -> a
    java.io.InputStream openStream() -> openStream
    java.io.InputStream openBufferedStream() -> openBufferedStream
    boolean isEmpty() -> isEmpty
    long size() -> size
    byte[] read() -> read
    long copyTo(java.io.OutputStream) -> copyTo
    com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction) -> hash
    java.lang.String toString() -> toString
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteSource$ConcatenatedByteSource -> AQ:
    java.lang.Iterable sources -> a
    java.io.InputStream openStream() -> openStream
    boolean isEmpty() -> isEmpty
    long size() -> size
    java.lang.String toString() -> toString
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteSource$EmptyByteSource -> AR:
    com.google.common.io.ByteSource$EmptyByteSource INSTANCE -> b
    com.google.common.io.CharSource asCharSource(java.nio.charset.Charset) -> asCharSource
    byte[] read() -> read
    java.lang.String toString() -> toString
    com.google.common.io.ByteSource$EmptyByteSource access$200() -> a
com.google.common.io.ByteSource$SlicedByteSource -> AS:
    long offset -> b
    long length -> c
    com.google.common.io.ByteSource this$0 -> a
    java.io.InputStream openStream() -> openStream
    java.io.InputStream openBufferedStream() -> openBufferedStream
    java.io.InputStream sliceStream(java.io.InputStream) -> a
    com.google.common.io.ByteSource slice(long,long) -> slice
    boolean isEmpty() -> isEmpty
    java.lang.String toString() -> toString
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteStreams -> com.google.common.io.ByteStreams:
    java.io.OutputStream NULL_OUTPUT_STREAM -> a
    com.google.common.io.InputSupplier newInputStreamSupplier(byte[]) -> newInputStreamSupplier
    com.google.common.io.InputSupplier newInputStreamSupplier(byte[],int,int) -> newInputStreamSupplier
    com.google.common.io.ByteSource asByteSource(byte[]) -> asByteSource
    void write(byte[],com.google.common.io.OutputSupplier) -> write
    long copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier) -> copy
    long copy(com.google.common.io.InputSupplier,java.io.OutputStream) -> copy
    long copy(java.io.InputStream,com.google.common.io.OutputSupplier) -> copy
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copy(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel) -> copy
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    byte[] toByteArray(com.google.common.io.InputSupplier) -> toByteArray
    com.google.common.io.ByteArrayDataInput newDataInput(byte[]) -> newDataInput
    com.google.common.io.ByteArrayDataInput newDataInput(byte[],int) -> newDataInput
    com.google.common.io.ByteArrayDataOutput newDataOutput() -> newDataOutput
    com.google.common.io.ByteArrayDataOutput newDataOutput(int) -> newDataOutput
    java.io.OutputStream nullOutputStream() -> nullOutputStream
    java.io.InputStream limit(java.io.InputStream,long) -> limit
    long length(com.google.common.io.InputSupplier) -> length
    boolean equal(com.google.common.io.InputSupplier,com.google.common.io.InputSupplier) -> equal
    void readFully(java.io.InputStream,byte[]) -> readFully
    void readFully(java.io.InputStream,byte[],int,int) -> readFully
    void skipFully(java.io.InputStream,long) -> skipFully
    java.lang.Object readBytes(com.google.common.io.InputSupplier,com.google.common.io.ByteProcessor) -> readBytes
    java.lang.Object readBytes(java.io.InputStream,com.google.common.io.ByteProcessor) -> readBytes
    com.google.common.hash.HashCode hash(com.google.common.io.InputSupplier,com.google.common.hash.HashFunction) -> hash
    int read(java.io.InputStream,byte[],int,int) -> read
    com.google.common.io.InputSupplier slice(com.google.common.io.InputSupplier,long,long) -> slice
    com.google.common.io.InputSupplier join(java.lang.Iterable) -> join
    com.google.common.io.InputSupplier join(com.google.common.io.InputSupplier[]) -> join
    com.google.common.io.ByteSource asByteSource(com.google.common.io.InputSupplier) -> asByteSource
    com.google.common.io.ByteSink asByteSink(com.google.common.io.OutputSupplier) -> asByteSink
    com.google.common.io.InputSupplier asInputSupplier(com.google.common.io.ByteSource) -> a
    com.google.common.io.OutputSupplier asOutputSupplier(com.google.common.io.ByteSink) -> a
com.google.common.io.ByteStreams$1 -> AT:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    java.lang.String toString() -> toString
com.google.common.io.ByteStreams$2 -> AU:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.io.ByteStreams$3 -> AV:
    com.google.common.io.InputSupplier val$supplier -> a
    java.io.InputStream openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.io.ByteStreams$4 -> AW:
    com.google.common.io.OutputSupplier val$supplier -> a
    java.io.OutputStream openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.io.ByteStreams$ByteArrayDataInputStream -> AX:
    java.io.DataInput input -> a
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.google.common.io.ByteStreams$ByteArrayDataOutputStream -> AY:
    java.io.DataOutput output -> a
    java.io.ByteArrayOutputStream byteArrayOutputSteam -> b
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeBytes(java.lang.String) -> writeBytes
    void writeChar(int) -> writeChar
    void writeChars(java.lang.String) -> writeChars
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void writeUTF(java.lang.String) -> writeUTF
    byte[] toByteArray() -> toByteArray
com.google.common.io.ByteStreams$LimitedInputStream -> AZ:
    long left -> a
    long mark -> b
    int available() -> available
    void mark(int) -> mark
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.google.common.io.CharSequenceReader -> Ba:
    java.lang.CharSequence seq -> a
    int pos -> b
    int mark -> c
    void checkOpen() -> a
    boolean hasRemaining() -> b
    int remaining() -> c
    int read(java.nio.CharBuffer) -> read
    int read() -> read
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void close() -> close
com.google.common.io.CharSink -> com.google.common.io.CharSink:
    java.io.Writer openStream() -> openStream
    java.io.Writer getOutput() -> getOutput
    java.io.Writer openBufferedStream() -> openBufferedStream
    void write(java.lang.CharSequence) -> write
    void writeLines(java.lang.Iterable) -> writeLines
    void writeLines(java.lang.Iterable,java.lang.String) -> writeLines
    long writeFrom(java.lang.Readable) -> writeFrom
    java.lang.Object getOutput() -> getOutput
com.google.common.io.CharSource -> com.google.common.io.CharSource:
    java.io.Reader openStream() -> openStream
    java.io.Reader getInput() -> getInput
    java.io.BufferedReader openBufferedStream() -> openBufferedStream
    long copyTo(java.lang.Appendable) -> copyTo
    long copyTo(com.google.common.io.CharSink) -> copyTo
    java.lang.String read() -> read
    java.lang.String readFirstLine() -> readFirstLine
    com.google.common.collect.ImmutableList readLines() -> readLines
    boolean isEmpty() -> isEmpty
    com.google.common.io.CharSource concat(java.lang.Iterable) -> concat
    com.google.common.io.CharSource concat(java.util.Iterator) -> concat
    com.google.common.io.CharSource concat(com.google.common.io.CharSource[]) -> concat
    com.google.common.io.CharSource wrap(java.lang.CharSequence) -> wrap
    com.google.common.io.CharSource empty() -> empty
    java.lang.Object getInput() -> getInput
com.google.common.io.CharSource$CharSequenceCharSource -> Bb:
    com.google.common.base.Splitter LINE_SPLITTER -> a
    java.lang.CharSequence seq -> b
    java.io.Reader openStream() -> openStream
    java.lang.String read() -> read
    boolean isEmpty() -> isEmpty
    java.lang.Iterable lines() -> b
    java.lang.String readFirstLine() -> readFirstLine
    com.google.common.collect.ImmutableList readLines() -> readLines
    java.lang.String toString() -> toString
    java.lang.Object getInput() -> getInput
    java.lang.CharSequence access$100(com.google.common.io.CharSource$CharSequenceCharSource) -> a
    com.google.common.base.Splitter access$200() -> a
com.google.common.io.CharSource$CharSequenceCharSource$1 -> Bc:
    com.google.common.io.CharSource$CharSequenceCharSource this$0 -> a
    java.util.Iterator iterator() -> iterator
com.google.common.io.CharSource$CharSequenceCharSource$1$1 -> Bd:
    java.util.Iterator lines -> a
    com.google.common.io.CharSource$CharSequenceCharSource$1 this$1 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.io.CharSource$ConcatenatedCharSource -> Be:
    java.lang.Iterable sources -> a
    java.io.Reader openStream() -> openStream
    boolean isEmpty() -> isEmpty
    java.lang.String toString() -> toString
    java.lang.Object getInput() -> getInput
com.google.common.io.CharSource$EmptyCharSource -> Bf:
    com.google.common.io.CharSource$EmptyCharSource INSTANCE -> a
    java.lang.String toString() -> toString
    com.google.common.io.CharSource$EmptyCharSource access$000() -> b
com.google.common.io.CharStreams -> com.google.common.io.CharStreams:
    com.google.common.io.InputSupplier newReaderSupplier(java.lang.String) -> newReaderSupplier
    com.google.common.io.CharSource asCharSource(java.lang.String) -> asCharSource
    com.google.common.io.InputSupplier newReaderSupplier(com.google.common.io.InputSupplier,java.nio.charset.Charset) -> newReaderSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(com.google.common.io.OutputSupplier,java.nio.charset.Charset) -> newWriterSupplier
    void write(java.lang.CharSequence,com.google.common.io.OutputSupplier) -> write
    long copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier) -> copy
    long copy(com.google.common.io.InputSupplier,java.lang.Appendable) -> copy
    long copy(java.lang.Readable,java.lang.Appendable) -> copy
    java.lang.String toString(java.lang.Readable) -> toString
    java.lang.String toString(com.google.common.io.InputSupplier) -> toString
    java.lang.String readFirstLine(com.google.common.io.InputSupplier) -> readFirstLine
    java.util.List readLines(com.google.common.io.InputSupplier) -> readLines
    java.util.List readLines(java.lang.Readable) -> readLines
    java.lang.Object readLines(java.lang.Readable,com.google.common.io.LineProcessor) -> readLines
    java.lang.Object readLines(com.google.common.io.InputSupplier,com.google.common.io.LineProcessor) -> readLines
    com.google.common.io.InputSupplier join(java.lang.Iterable) -> join
    com.google.common.io.InputSupplier join(com.google.common.io.InputSupplier[]) -> join
    void skipFully(java.io.Reader,long) -> skipFully
    java.io.Writer nullWriter() -> nullWriter
    java.io.Writer asWriter(java.lang.Appendable) -> asWriter
    java.io.Reader asReader(java.lang.Readable) -> a
    com.google.common.io.CharSource asCharSource(com.google.common.io.InputSupplier) -> asCharSource
    com.google.common.io.CharSink asCharSink(com.google.common.io.OutputSupplier) -> asCharSink
    com.google.common.io.InputSupplier asInputSupplier(com.google.common.io.CharSource) -> a
    com.google.common.io.OutputSupplier asOutputSupplier(com.google.common.io.CharSink) -> a
com.google.common.io.CharStreams$1 -> Bg:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.io.CharStreams$2 -> Bh:
    java.lang.Readable val$readable -> a
    int read(char[],int,int) -> read
    int read(java.nio.CharBuffer) -> read
    void close() -> close
com.google.common.io.CharStreams$3 -> Bi:
    com.google.common.io.InputSupplier val$supplier -> a
    java.io.Reader openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.io.CharStreams$4 -> Bj:
    com.google.common.io.OutputSupplier val$supplier -> a
    java.io.Writer openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.io.CharStreams$NullWriter -> Bk:
    com.google.common.io.CharStreams$NullWriter INSTANCE -> a
    void write(int) -> write
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(char) -> append
    void flush() -> flush
    void close() -> close
    java.lang.String toString() -> toString
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
    com.google.common.io.CharStreams$NullWriter access$000() -> a
com.google.common.io.Closeables -> com.google.common.io.Closeables:
    java.util.logging.Logger logger -> a
    void close(java.io.Closeable,boolean) -> close
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.google.common.io.Closer -> com.google.common.io.Closer:
    com.google.common.io.Closer$Suppressor SUPPRESSOR -> b
    com.google.common.io.Closer$Suppressor suppressor -> a
    java.util.Deque stack -> c
    java.lang.Throwable thrown -> d
    com.google.common.io.Closer create() -> create
    java.io.Closeable register(java.io.Closeable) -> register
    java.lang.RuntimeException rethrow(java.lang.Throwable) -> rethrow
    java.lang.RuntimeException rethrow(java.lang.Throwable,java.lang.Class) -> rethrow
    java.lang.RuntimeException rethrow(java.lang.Throwable,java.lang.Class,java.lang.Class) -> rethrow
    void close() -> close
com.google.common.io.Closer$LoggingSuppressor -> Bl:
    com.google.common.io.Closer$LoggingSuppressor INSTANCE -> a
    void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> a
com.google.common.io.Closer$SuppressingSuppressor -> Bm:
    com.google.common.io.Closer$SuppressingSuppressor INSTANCE -> a
    java.lang.reflect.Method addSuppressed -> b
    boolean isAvailable() -> a
    java.lang.reflect.Method getAddSuppressed() -> b
    void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> a
com.google.common.io.Closer$Suppressor -> Bn:
    void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> a
com.google.common.io.CountingInputStream -> com.google.common.io.CountingInputStream:
    long count -> a
    long mark -> b
    long getCount() -> getCount
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
com.google.common.io.CountingOutputStream -> com.google.common.io.CountingOutputStream:
    long count -> a
    long getCount() -> getCount
    void write(byte[],int,int) -> write
    void write(int) -> write
com.google.common.io.FileBackedOutputStream -> com.google.common.io.FileBackedOutputStream:
    int fileThreshold -> a
    boolean resetOnFinalize -> b
    com.google.common.io.ByteSource source -> c
    java.io.OutputStream out -> d
    com.google.common.io.FileBackedOutputStream$MemoryOutput memory -> e
    java.io.File file -> f
    com.google.common.io.InputSupplier getSupplier() -> getSupplier
    com.google.common.io.ByteSource asByteSource() -> asByteSource
    java.io.InputStream openInputStream() -> a
    void reset() -> reset
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
    void update(int) -> a
    java.io.InputStream access$100(com.google.common.io.FileBackedOutputStream) -> a
com.google.common.io.FileBackedOutputStream$1 -> Bo:
    com.google.common.io.FileBackedOutputStream this$0 -> a
    java.io.InputStream openStream() -> openStream
    void finalize() -> finalize
com.google.common.io.FileBackedOutputStream$2 -> Bp:
    com.google.common.io.FileBackedOutputStream this$0 -> a
    java.io.InputStream openStream() -> openStream
com.google.common.io.FileBackedOutputStream$MemoryOutput -> Bq:
    byte[] getBuffer() -> a
    int getCount() -> b
com.google.common.io.FileWriteMode -> com.google.common.io.FileWriteMode:
    com.google.common.io.FileWriteMode APPEND -> APPEND
    com.google.common.io.FileWriteMode[] $VALUES -> a
    com.google.common.io.FileWriteMode[] values() -> values
    com.google.common.io.FileWriteMode valueOf(java.lang.String) -> valueOf
com.google.common.io.Files -> com.google.common.io.Files:
    com.google.common.collect.TreeTraverser FILE_TREE_TRAVERSER -> a
    java.io.BufferedReader newReader(java.io.File,java.nio.charset.Charset) -> newReader
    java.io.BufferedWriter newWriter(java.io.File,java.nio.charset.Charset) -> newWriter
    com.google.common.io.ByteSource asByteSource(java.io.File) -> asByteSource
    com.google.common.io.ByteSink asByteSink(java.io.File,com.google.common.io.FileWriteMode[]) -> asByteSink
    com.google.common.io.CharSource asCharSource(java.io.File,java.nio.charset.Charset) -> asCharSource
    com.google.common.io.CharSink asCharSink(java.io.File,java.nio.charset.Charset,com.google.common.io.FileWriteMode[]) -> asCharSink
    com.google.common.io.InputSupplier newInputStreamSupplier(java.io.File) -> newInputStreamSupplier
    com.google.common.io.OutputSupplier newOutputStreamSupplier(java.io.File) -> newOutputStreamSupplier
    com.google.common.io.OutputSupplier newOutputStreamSupplier(java.io.File,boolean) -> newOutputStreamSupplier
    com.google.common.io.FileWriteMode[] modes(boolean) -> a
    com.google.common.io.InputSupplier newReaderSupplier(java.io.File,java.nio.charset.Charset) -> newReaderSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(java.io.File,java.nio.charset.Charset) -> newWriterSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(java.io.File,java.nio.charset.Charset,boolean) -> newWriterSupplier
    byte[] toByteArray(java.io.File) -> toByteArray
    java.lang.String toString(java.io.File,java.nio.charset.Charset) -> toString
    void copy(com.google.common.io.InputSupplier,java.io.File) -> copy
    void write(byte[],java.io.File) -> write
    void copy(java.io.File,com.google.common.io.OutputSupplier) -> copy
    void copy(java.io.File,java.io.OutputStream) -> copy
    void copy(java.io.File,java.io.File) -> copy
    void copy(com.google.common.io.InputSupplier,java.io.File,java.nio.charset.Charset) -> copy
    void write(java.lang.CharSequence,java.io.File,java.nio.charset.Charset) -> write
    void append(java.lang.CharSequence,java.io.File,java.nio.charset.Charset) -> append
    void copy(java.io.File,java.nio.charset.Charset,com.google.common.io.OutputSupplier) -> copy
    void copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable) -> copy
    boolean equal(java.io.File,java.io.File) -> equal
    java.io.File createTempDir() -> createTempDir
    void touch(java.io.File) -> touch
    void createParentDirs(java.io.File) -> createParentDirs
    void move(java.io.File,java.io.File) -> move
    java.lang.String readFirstLine(java.io.File,java.nio.charset.Charset) -> readFirstLine
    java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    java.lang.Object readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor) -> readLines
    java.lang.Object readBytes(java.io.File,com.google.common.io.ByteProcessor) -> readBytes
    com.google.common.hash.HashCode hash(java.io.File,com.google.common.hash.HashFunction) -> hash
    java.nio.MappedByteBuffer map(java.io.File) -> map
    java.nio.MappedByteBuffer map(java.io.File,java.nio.channels.FileChannel$MapMode) -> map
    java.nio.MappedByteBuffer map(java.io.File,java.nio.channels.FileChannel$MapMode,long) -> map
    java.nio.MappedByteBuffer map(java.io.RandomAccessFile,java.nio.channels.FileChannel$MapMode,long) -> a
    java.lang.String simplifyPath(java.lang.String) -> simplifyPath
    java.lang.String getFileExtension(java.lang.String) -> getFileExtension
    java.lang.String getNameWithoutExtension(java.lang.String) -> getNameWithoutExtension
    com.google.common.collect.TreeTraverser fileTreeTraverser() -> fileTreeTraverser
    com.google.common.base.Predicate isDirectory() -> isDirectory
    com.google.common.base.Predicate isFile() -> isFile
com.google.common.io.Files$1 -> Br:
    java.util.List result -> a
    boolean processLine(java.lang.String) -> processLine
    java.lang.Object getResult() -> getResult
com.google.common.io.Files$2 -> Bs:
    java.lang.String toString() -> toString
    java.lang.Iterable children(java.lang.Object) -> children
com.google.common.io.Files$FileByteSink -> Bt:
    java.io.File file -> a
    com.google.common.collect.ImmutableSet modes -> b
    java.lang.String toString() -> toString
    java.io.OutputStream openStream() -> openStream
com.google.common.io.Files$FileByteSource -> Bu:
    java.io.File file -> a
    java.io.FileInputStream openStream() -> a
    long size() -> size
    byte[] read() -> read
    java.lang.String toString() -> toString
    java.io.InputStream openStream() -> openStream
com.google.common.io.Files$FilePredicate -> Bv:
    com.google.common.io.Files$FilePredicate IS_DIRECTORY -> a
    com.google.common.io.Files$FilePredicate IS_FILE -> b
    com.google.common.io.Files$FilePredicate[] $VALUES -> c
    com.google.common.io.Files$FilePredicate[] values() -> values
    com.google.common.io.Files$FilePredicate valueOf(java.lang.String) -> valueOf
com.google.common.io.Files$FilePredicate$1 -> Bw:
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.io.Files$FilePredicate$2 -> Bx:
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.io.Files$InternalByteArrayOutputStream -> By:
    void writeTo(byte[],int) -> a
com.google.common.io.Flushables -> com.google.common.io.Flushables:
    java.util.logging.Logger logger -> a
    void flush(java.io.Flushable,boolean) -> flush
    void flushQuietly(java.io.Flushable) -> flushQuietly
com.google.common.io.GwtWorkarounds -> Bz:
com.google.common.io.GwtWorkarounds$1 -> BA:
    java.io.Reader val$reader -> a
    int read() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$2 -> BB:
    int index -> a
    java.lang.CharSequence val$chars -> b
    int read() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$3 -> BC:
    com.google.common.io.GwtWorkarounds$ByteInput val$input -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
com.google.common.io.GwtWorkarounds$4 -> BD:
    com.google.common.io.GwtWorkarounds$ByteOutput val$output -> a
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.common.io.GwtWorkarounds$5 -> BE:
    java.io.Writer val$writer -> a
    void write(char) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$6 -> BF:
    java.lang.StringBuilder val$builder -> a
    void write(char) -> a
    void flush() -> a
    void close() -> b
    java.lang.String toString() -> toString
com.google.common.io.GwtWorkarounds$ByteInput -> BG:
    int read() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$ByteOutput -> BH:
    void write(byte) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$CharInput -> BI:
    int read() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$CharOutput -> BJ:
    void write(char) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.InputSupplier -> com.google.common.io.InputSupplier:
    java.lang.Object getInput() -> getInput
com.google.common.io.LineBuffer -> BK:
    java.lang.StringBuilder line -> a
    boolean sawReturn -> b
    void add(char[],int,int) -> a
    boolean finishLine(boolean) -> a
    void finish() -> a
    void handleLine$16da05f7(java.lang.String) -> a
com.google.common.io.LineProcessor -> com.google.common.io.LineProcessor:
    boolean processLine(java.lang.String) -> processLine
    java.lang.Object getResult() -> getResult
com.google.common.io.LineReader -> com.google.common.io.LineReader:
    java.lang.Readable readable -> a
    java.io.Reader reader -> b
    char[] buf -> c
    java.nio.CharBuffer cbuf -> d
    java.util.Queue lines -> e
    com.google.common.io.LineBuffer lineBuf -> f
    java.lang.String readLine() -> readLine
    java.util.Queue access$000(com.google.common.io.LineReader) -> a
com.google.common.io.LineReader$1 -> BL:
    com.google.common.io.LineReader this$0 -> a
    void handleLine$16da05f7(java.lang.String) -> a
com.google.common.io.LittleEndianDataInputStream -> com.google.common.io.LittleEndianDataInputStream:
    java.lang.String readLine() -> readLine
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    int readUnsignedByte() -> readUnsignedByte
    int readUnsignedShort() -> readUnsignedShort
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readUTF() -> readUTF
    short readShort() -> readShort
    char readChar() -> readChar
    byte readByte() -> readByte
    boolean readBoolean() -> readBoolean
    byte readAndCheckByte() -> a
com.google.common.io.LittleEndianDataOutputStream -> com.google.common.io.LittleEndianDataOutputStream:
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeBytes(java.lang.String) -> writeBytes
    void writeChar(int) -> writeChar
    void writeChars(java.lang.String) -> writeChars
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void writeUTF(java.lang.String) -> writeUTF
com.google.common.io.MultiInputStream -> BM:
    java.util.Iterator it -> a
    java.io.InputStream in -> b
    void close() -> close
    void advance() -> a
    int available() -> available
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
com.google.common.io.MultiReader -> BN:
    java.util.Iterator it -> a
    java.io.Reader current -> b
    void advance() -> a
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    void close() -> close
com.google.common.io.OutputSupplier -> com.google.common.io.OutputSupplier:
    java.lang.Object getOutput() -> getOutput
com.google.common.io.PatternFilenameFilter -> com.google.common.io.PatternFilenameFilter:
    java.util.regex.Pattern pattern -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.google.common.io.Resources -> com.google.common.io.Resources:
    com.google.common.io.InputSupplier newInputStreamSupplier(java.net.URL) -> newInputStreamSupplier
    com.google.common.io.ByteSource asByteSource(java.net.URL) -> asByteSource
    com.google.common.io.InputSupplier newReaderSupplier(java.net.URL,java.nio.charset.Charset) -> newReaderSupplier
    com.google.common.io.CharSource asCharSource(java.net.URL,java.nio.charset.Charset) -> asCharSource
    byte[] toByteArray(java.net.URL) -> toByteArray
    java.lang.String toString(java.net.URL,java.nio.charset.Charset) -> toString
    java.lang.Object readLines(java.net.URL,java.nio.charset.Charset,com.google.common.io.LineProcessor) -> readLines
    java.util.List readLines(java.net.URL,java.nio.charset.Charset) -> readLines
    void copy(java.net.URL,java.io.OutputStream) -> copy
    java.net.URL getResource(java.lang.String) -> getResource
    java.net.URL getResource(java.lang.Class,java.lang.String) -> getResource
com.google.common.io.Resources$1 -> BO:
    java.util.List result -> a
    boolean processLine(java.lang.String) -> processLine
    java.lang.Object getResult() -> getResult
com.google.common.io.Resources$UrlByteSource -> BP:
    java.net.URL url -> a
    java.io.InputStream openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.math.BigIntegerMath -> com.google.common.math.BigIntegerMath:
    java.math.BigInteger SQRT2_PRECOMPUTED_BITS -> a
    double LN_10 -> b
    double LN_2 -> c
    boolean isPowerOfTwo(java.math.BigInteger) -> isPowerOfTwo
    int log2(java.math.BigInteger,java.math.RoundingMode) -> log2
    int log10(java.math.BigInteger,java.math.RoundingMode) -> log10
    java.math.BigInteger sqrt(java.math.BigInteger,java.math.RoundingMode) -> sqrt
    java.math.BigInteger sqrtFloor(java.math.BigInteger) -> a
    java.math.BigInteger sqrtApproxWithDoubles(java.math.BigInteger) -> b
    java.math.BigInteger divide(java.math.BigInteger,java.math.BigInteger,java.math.RoundingMode) -> divide
    java.math.BigInteger factorial(int) -> factorial
    java.math.BigInteger listProduct(java.util.List,int,int) -> a
    java.math.BigInteger binomial(int,int) -> binomial
    boolean fitsInLong(java.math.BigInteger) -> c
com.google.common.math.BigIntegerMath$1 -> BQ:
    int[] $SwitchMap$java$math$RoundingMode -> a
com.google.common.math.DoubleMath -> com.google.common.math.DoubleMath:
    double LN_2 -> b
    double[] everySixteenthFactorial -> a
    double roundIntermediate(double,java.math.RoundingMode) -> a
    int roundToInt(double,java.math.RoundingMode) -> roundToInt
    long roundToLong(double,java.math.RoundingMode) -> roundToLong
    java.math.BigInteger roundToBigInteger(double,java.math.RoundingMode) -> roundToBigInteger
    boolean isPowerOfTwo(double) -> isPowerOfTwo
    double log2(double) -> log2
    int log2(double,java.math.RoundingMode) -> log2
    boolean isMathematicalInteger(double) -> isMathematicalInteger
    double factorial(int) -> factorial
    boolean fuzzyEquals(double,double,double) -> fuzzyEquals
    int fuzzyCompare(double,double,double) -> fuzzyCompare
    double mean(double[]) -> mean
    double mean(int[]) -> mean
    double mean(long[]) -> mean
    double mean(java.lang.Iterable) -> mean
    double mean(java.util.Iterator) -> mean
com.google.common.math.DoubleMath$1 -> BR:
    int[] $SwitchMap$java$math$RoundingMode -> a
com.google.common.math.DoubleMath$MeanAccumulator -> BS:
    long count -> a
    double mean -> b
    void add(double) -> a
    double mean() -> a
com.google.common.math.DoubleUtils -> BT:
    long ONE_BITS -> a
    long getSignificand(double) -> a
    boolean isFinite(double) -> b
    boolean isNormal(double) -> c
    double scaleNormalize(double) -> d
    double bigToDouble(java.math.BigInteger) -> a
com.google.common.math.IntMath -> com.google.common.math.IntMath:
    byte[] maxLog10ForLeadingZeros -> a
    int[] powersOf10 -> b
    int[] halfPowersOf10 -> c
    int[] factorials -> e
    int[] biggestBinomials -> d
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int lessThanBranchFree(int,int) -> a
    int log2(int,java.math.RoundingMode) -> log2
    int log10(int,java.math.RoundingMode) -> log10
    int pow(int,int) -> pow
    int sqrt(int,java.math.RoundingMode) -> sqrt
    int divide(int,int,java.math.RoundingMode) -> divide
    int mod(int,int) -> mod
    int gcd(int,int) -> gcd
    int checkedAdd(int,int) -> checkedAdd
    int checkedSubtract(int,int) -> checkedSubtract
    int checkedMultiply(int,int) -> checkedMultiply
    int checkedPow(int,int) -> checkedPow
    int factorial(int) -> factorial
    int binomial(int,int) -> binomial
    int mean(int,int) -> mean
com.google.common.math.IntMath$1 -> BU:
    int[] $SwitchMap$java$math$RoundingMode -> a
com.google.common.math.LongMath -> com.google.common.math.LongMath:
    byte[] maxLog10ForLeadingZeros -> a
    long[] powersOf10 -> b
    long[] halfPowersOf10 -> c
    long[] factorials -> d
    int[] biggestBinomials -> e
    int[] biggestSimpleBinomials -> f
    boolean isPowerOfTwo(long) -> isPowerOfTwo
    int lessThanBranchFree(long,long) -> a
    int log2(long,java.math.RoundingMode) -> log2
    int log10(long,java.math.RoundingMode) -> log10
    long pow(long,int) -> pow
    long sqrt(long,java.math.RoundingMode) -> sqrt
    long divide(long,long,java.math.RoundingMode) -> divide
    int mod(long,int) -> mod
    long mod(long,long) -> mod
    long gcd(long,long) -> gcd
    long checkedAdd(long,long) -> checkedAdd
    long checkedSubtract(long,long) -> checkedSubtract
    long checkedMultiply(long,long) -> checkedMultiply
    long checkedPow(long,int) -> checkedPow
    long factorial(int) -> factorial
    long binomial(int,int) -> binomial
    long multiplyFraction(long,long,long) -> a
    long mean(long,long) -> mean
com.google.common.math.LongMath$1 -> BV:
    int[] $SwitchMap$java$math$RoundingMode -> a
com.google.common.math.MathPreconditions -> BW:
    int checkPositive(java.lang.String,int) -> a
    long checkPositive(java.lang.String,long) -> a
    java.math.BigInteger checkPositive(java.lang.String,java.math.BigInteger) -> a
    int checkNonNegative(java.lang.String,int) -> b
    long checkNonNegative(java.lang.String,long) -> b
    void checkRoundingUnnecessary(boolean) -> a
    void checkInRange(boolean) -> b
    void checkNoOverflow(boolean) -> c
com.google.common.net.HostAndPort -> com.google.common.net.HostAndPort:
    java.lang.String host -> a
    int port -> b
    boolean hasBracketlessColons -> c
    long serialVersionUID -> serialVersionUID
    java.lang.String getHostText() -> getHostText
    boolean hasPort() -> hasPort
    int getPort() -> getPort
    int getPortOrDefault(int) -> getPortOrDefault
    com.google.common.net.HostAndPort fromParts(java.lang.String,int) -> fromParts
    com.google.common.net.HostAndPort fromString(java.lang.String) -> fromString
    com.google.common.net.HostAndPort withDefaultPort(int) -> withDefaultPort
    com.google.common.net.HostAndPort requireBracketsForIPv6() -> requireBracketsForIPv6
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isValidPort(int) -> a
com.google.common.net.HostSpecifier -> com.google.common.net.HostSpecifier:
    java.lang.String canonicalForm -> a
    com.google.common.net.HostSpecifier fromValid(java.lang.String) -> fromValid
    com.google.common.net.HostSpecifier from(java.lang.String) -> from
    boolean isValid(java.lang.String) -> isValid
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.net.HttpHeaders -> com.google.common.net.HttpHeaders:
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCESS_CONTROL_REQUEST_HEADERS -> ACCESS_CONTROL_REQUEST_HEADERS
    java.lang.String ACCESS_CONTROL_REQUEST_METHOD -> ACCESS_CONTROL_REQUEST_METHOD
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String COOKIE -> COOKIE
    java.lang.String EXPECT -> EXPECT
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_EVENT_ID -> LAST_EVENT_ID
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String ORIGIN -> ORIGIN
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String TE -> TE
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String ACCESS_CONTROL_ALLOW_HEADERS -> ACCESS_CONTROL_ALLOW_HEADERS
    java.lang.String ACCESS_CONTROL_ALLOW_METHODS -> ACCESS_CONTROL_ALLOW_METHODS
    java.lang.String ACCESS_CONTROL_ALLOW_ORIGIN -> ACCESS_CONTROL_ALLOW_ORIGIN
    java.lang.String ACCESS_CONTROL_ALLOW_CREDENTIALS -> ACCESS_CONTROL_ALLOW_CREDENTIALS
    java.lang.String ACCESS_CONTROL_EXPOSE_HEADERS -> ACCESS_CONTROL_EXPOSE_HEADERS
    java.lang.String ACCESS_CONTROL_MAX_AGE -> ACCESS_CONTROL_MAX_AGE
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String CONTENT_SECURITY_POLICY -> CONTENT_SECURITY_POLICY
    java.lang.String CONTENT_SECURITY_POLICY_REPORT_ONLY -> CONTENT_SECURITY_POLICY_REPORT_ONLY
    java.lang.String ETAG -> ETAG
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LINK -> LINK
    java.lang.String LOCATION -> LOCATION
    java.lang.String P3P -> P3P
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String REFRESH -> REFRESH
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
    java.lang.String STRICT_TRANSPORT_SECURITY -> STRICT_TRANSPORT_SECURITY
    java.lang.String TIMING_ALLOW_ORIGIN -> TIMING_ALLOW_ORIGIN
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String VARY -> VARY
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    java.lang.String DNT -> DNT
    java.lang.String X_CONTENT_TYPE_OPTIONS -> X_CONTENT_TYPE_OPTIONS
    java.lang.String X_DO_NOT_TRACK -> X_DO_NOT_TRACK
    java.lang.String X_FORWARDED_FOR -> X_FORWARDED_FOR
    java.lang.String X_FORWARDED_PROTO -> X_FORWARDED_PROTO
    java.lang.String X_FRAME_OPTIONS -> X_FRAME_OPTIONS
    java.lang.String X_POWERED_BY -> X_POWERED_BY
    java.lang.String PUBLIC_KEY_PINS -> PUBLIC_KEY_PINS
    java.lang.String PUBLIC_KEY_PINS_REPORT_ONLY -> PUBLIC_KEY_PINS_REPORT_ONLY
    java.lang.String X_REQUESTED_WITH -> X_REQUESTED_WITH
    java.lang.String X_USER_IP -> X_USER_IP
    java.lang.String X_XSS_PROTECTION -> X_XSS_PROTECTION
com.google.common.net.InetAddresses -> com.google.common.net.InetAddresses:
    java.net.Inet4Address LOOPBACK4 -> a
    java.net.Inet4Address ANY4 -> b
    java.net.Inet4Address getInet4Address(byte[]) -> a
    java.net.InetAddress forString(java.lang.String) -> forString
    boolean isInetAddress(java.lang.String) -> isInetAddress
    byte[] ipStringToBytes(java.lang.String) -> a
    byte[] textToNumericFormatV4(java.lang.String) -> b
    byte[] textToNumericFormatV6(java.lang.String) -> c
    short parseHextet(java.lang.String) -> d
    java.net.InetAddress bytesToInetAddress(byte[]) -> b
    java.lang.String toAddrString(java.net.InetAddress) -> toAddrString
    java.lang.String toUriString(java.net.InetAddress) -> toUriString
    java.net.InetAddress forUriString(java.lang.String) -> forUriString
    boolean isUriInetAddress(java.lang.String) -> isUriInetAddress
    boolean isCompatIPv4Address(java.net.Inet6Address) -> isCompatIPv4Address
    java.net.Inet4Address getCompatIPv4Address(java.net.Inet6Address) -> getCompatIPv4Address
    boolean is6to4Address(java.net.Inet6Address) -> is6to4Address
    java.net.Inet4Address get6to4IPv4Address(java.net.Inet6Address) -> get6to4IPv4Address
    boolean isTeredoAddress(java.net.Inet6Address) -> isTeredoAddress
    com.google.common.net.InetAddresses$TeredoInfo getTeredoInfo(java.net.Inet6Address) -> getTeredoInfo
    boolean isIsatapAddress(java.net.Inet6Address) -> isIsatapAddress
    java.net.Inet4Address getIsatapIPv4Address(java.net.Inet6Address) -> getIsatapIPv4Address
    boolean hasEmbeddedIPv4ClientAddress(java.net.Inet6Address) -> hasEmbeddedIPv4ClientAddress
    java.net.Inet4Address getEmbeddedIPv4ClientAddress(java.net.Inet6Address) -> getEmbeddedIPv4ClientAddress
    boolean isMappedIPv4Address(java.lang.String) -> isMappedIPv4Address
    java.net.Inet4Address getCoercedIPv4Address(java.net.InetAddress) -> getCoercedIPv4Address
    int coerceToInteger(java.net.InetAddress) -> coerceToInteger
    java.net.Inet4Address fromInteger(int) -> fromInteger
    java.net.InetAddress fromLittleEndianByteArray(byte[]) -> fromLittleEndianByteArray
    java.net.InetAddress increment(java.net.InetAddress) -> increment
    boolean isMaximum(java.net.InetAddress) -> isMaximum
    java.net.Inet4Address access$000() -> a
com.google.common.net.InetAddresses$TeredoInfo -> com.google.common.net.InetAddresses$TeredoInfo:
    java.net.Inet4Address server -> a
    java.net.Inet4Address client -> b
    int port -> c
    int flags -> d
    java.net.Inet4Address getServer() -> getServer
    java.net.Inet4Address getClient() -> getClient
    int getPort() -> getPort
    int getFlags() -> getFlags
com.google.common.net.InternetDomainName -> com.google.common.net.InternetDomainName:
    com.google.common.base.CharMatcher DOTS_MATCHER -> a
    com.google.common.base.Splitter DOT_SPLITTER -> b
    com.google.common.base.Joiner DOT_JOINER -> c
    java.lang.String name -> d
    com.google.common.collect.ImmutableList parts -> e
    int publicSuffixIndex -> f
    com.google.common.base.CharMatcher DASH_MATCHER -> g
    com.google.common.base.CharMatcher PART_CHAR_MATCHER -> h
    int findPublicSuffix() -> a
    com.google.common.net.InternetDomainName fromLenient(java.lang.String) -> fromLenient
    com.google.common.net.InternetDomainName from(java.lang.String) -> from
    boolean validateSyntax(java.util.List) -> a
    boolean validatePart(java.lang.String,boolean) -> a
    java.lang.String name() -> name
    com.google.common.collect.ImmutableList parts() -> parts
    boolean isPublicSuffix() -> isPublicSuffix
    boolean hasPublicSuffix() -> hasPublicSuffix
    com.google.common.net.InternetDomainName publicSuffix() -> publicSuffix
    boolean isUnderPublicSuffix() -> isUnderPublicSuffix
    boolean isTopPrivateDomain() -> isTopPrivateDomain
    com.google.common.net.InternetDomainName topPrivateDomain() -> topPrivateDomain
    boolean hasParent() -> hasParent
    com.google.common.net.InternetDomainName parent() -> parent
    com.google.common.net.InternetDomainName ancestor(int) -> a
    com.google.common.net.InternetDomainName child(java.lang.String) -> child
    boolean isValid(java.lang.String) -> isValid
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.net.MediaType -> com.google.common.net.MediaType:
    com.google.common.collect.ImmutableListMultimap UTF_8_CONSTANT_PARAMETERS -> a
    com.google.common.base.CharMatcher TOKEN_MATCHER -> b
    com.google.common.base.CharMatcher QUOTED_TEXT_MATCHER -> c
    com.google.common.base.CharMatcher LINEAR_WHITE_SPACE -> d
    java.util.Map KNOWN_TYPES -> e
    com.google.common.net.MediaType ANY_TYPE -> ANY_TYPE
    com.google.common.net.MediaType ANY_TEXT_TYPE -> ANY_TEXT_TYPE
    com.google.common.net.MediaType ANY_IMAGE_TYPE -> ANY_IMAGE_TYPE
    com.google.common.net.MediaType ANY_AUDIO_TYPE -> ANY_AUDIO_TYPE
    com.google.common.net.MediaType ANY_VIDEO_TYPE -> ANY_VIDEO_TYPE
    com.google.common.net.MediaType ANY_APPLICATION_TYPE -> ANY_APPLICATION_TYPE
    com.google.common.net.MediaType CACHE_MANIFEST_UTF_8 -> CACHE_MANIFEST_UTF_8
    com.google.common.net.MediaType CSS_UTF_8 -> CSS_UTF_8
    com.google.common.net.MediaType CSV_UTF_8 -> CSV_UTF_8
    com.google.common.net.MediaType HTML_UTF_8 -> HTML_UTF_8
    com.google.common.net.MediaType I_CALENDAR_UTF_8 -> I_CALENDAR_UTF_8
    com.google.common.net.MediaType PLAIN_TEXT_UTF_8 -> PLAIN_TEXT_UTF_8
    com.google.common.net.MediaType TEXT_JAVASCRIPT_UTF_8 -> TEXT_JAVASCRIPT_UTF_8
    com.google.common.net.MediaType TSV_UTF_8 -> TSV_UTF_8
    com.google.common.net.MediaType VCARD_UTF_8 -> VCARD_UTF_8
    com.google.common.net.MediaType WML_UTF_8 -> WML_UTF_8
    com.google.common.net.MediaType XML_UTF_8 -> XML_UTF_8
    com.google.common.net.MediaType BMP -> BMP
    com.google.common.net.MediaType CRW -> CRW
    com.google.common.net.MediaType GIF -> GIF
    com.google.common.net.MediaType ICO -> ICO
    com.google.common.net.MediaType JPEG -> JPEG
    com.google.common.net.MediaType PNG -> PNG
    com.google.common.net.MediaType PSD -> PSD
    com.google.common.net.MediaType SVG_UTF_8 -> SVG_UTF_8
    com.google.common.net.MediaType TIFF -> TIFF
    com.google.common.net.MediaType WEBP -> WEBP
    com.google.common.net.MediaType MP4_AUDIO -> MP4_AUDIO
    com.google.common.net.MediaType MPEG_AUDIO -> MPEG_AUDIO
    com.google.common.net.MediaType OGG_AUDIO -> OGG_AUDIO
    com.google.common.net.MediaType WEBM_AUDIO -> WEBM_AUDIO
    com.google.common.net.MediaType MP4_VIDEO -> MP4_VIDEO
    com.google.common.net.MediaType MPEG_VIDEO -> MPEG_VIDEO
    com.google.common.net.MediaType OGG_VIDEO -> OGG_VIDEO
    com.google.common.net.MediaType QUICKTIME -> QUICKTIME
    com.google.common.net.MediaType WEBM_VIDEO -> WEBM_VIDEO
    com.google.common.net.MediaType WMV -> WMV
    com.google.common.net.MediaType APPLICATION_XML_UTF_8 -> APPLICATION_XML_UTF_8
    com.google.common.net.MediaType ATOM_UTF_8 -> ATOM_UTF_8
    com.google.common.net.MediaType BZIP2 -> BZIP2
    com.google.common.net.MediaType EPUB -> EPUB
    com.google.common.net.MediaType FORM_DATA -> FORM_DATA
    com.google.common.net.MediaType KEY_ARCHIVE -> KEY_ARCHIVE
    com.google.common.net.MediaType APPLICATION_BINARY -> APPLICATION_BINARY
    com.google.common.net.MediaType GZIP -> GZIP
    com.google.common.net.MediaType JAVASCRIPT_UTF_8 -> JAVASCRIPT_UTF_8
    com.google.common.net.MediaType JSON_UTF_8 -> JSON_UTF_8
    com.google.common.net.MediaType KML -> KML
    com.google.common.net.MediaType KMZ -> KMZ
    com.google.common.net.MediaType MBOX -> MBOX
    com.google.common.net.MediaType MICROSOFT_EXCEL -> MICROSOFT_EXCEL
    com.google.common.net.MediaType MICROSOFT_POWERPOINT -> MICROSOFT_POWERPOINT
    com.google.common.net.MediaType MICROSOFT_WORD -> MICROSOFT_WORD
    com.google.common.net.MediaType OCTET_STREAM -> OCTET_STREAM
    com.google.common.net.MediaType OGG_CONTAINER -> OGG_CONTAINER
    com.google.common.net.MediaType OOXML_DOCUMENT -> OOXML_DOCUMENT
    com.google.common.net.MediaType OOXML_PRESENTATION -> OOXML_PRESENTATION
    com.google.common.net.MediaType OOXML_SHEET -> OOXML_SHEET
    com.google.common.net.MediaType OPENDOCUMENT_GRAPHICS -> OPENDOCUMENT_GRAPHICS
    com.google.common.net.MediaType OPENDOCUMENT_PRESENTATION -> OPENDOCUMENT_PRESENTATION
    com.google.common.net.MediaType OPENDOCUMENT_SPREADSHEET -> OPENDOCUMENT_SPREADSHEET
    com.google.common.net.MediaType OPENDOCUMENT_TEXT -> OPENDOCUMENT_TEXT
    com.google.common.net.MediaType PDF -> PDF
    com.google.common.net.MediaType POSTSCRIPT -> POSTSCRIPT
    com.google.common.net.MediaType PROTOBUF -> PROTOBUF
    com.google.common.net.MediaType RDF_XML_UTF_8 -> RDF_XML_UTF_8
    com.google.common.net.MediaType RTF_UTF_8 -> RTF_UTF_8
    com.google.common.net.MediaType SHOCKWAVE_FLASH -> SHOCKWAVE_FLASH
    com.google.common.net.MediaType SKETCHUP -> SKETCHUP
    com.google.common.net.MediaType TAR -> TAR
    com.google.common.net.MediaType XHTML_UTF_8 -> XHTML_UTF_8
    com.google.common.net.MediaType XRD_UTF_8 -> XRD_UTF_8
    com.google.common.net.MediaType ZIP -> ZIP
    java.lang.String type -> f
    java.lang.String subtype -> g
    com.google.common.collect.ImmutableListMultimap parameters -> h
    com.google.common.base.Joiner$MapJoiner PARAMETER_JOINER -> i
    com.google.common.net.MediaType createConstant(java.lang.String,java.lang.String) -> a
    com.google.common.net.MediaType createConstantUtf8(java.lang.String,java.lang.String) -> b
    com.google.common.net.MediaType addKnownType(com.google.common.net.MediaType) -> a
    java.lang.String type() -> type
    java.lang.String subtype() -> subtype
    com.google.common.collect.ImmutableListMultimap parameters() -> parameters
    java.util.Map parametersAsMap() -> b
    com.google.common.base.Optional charset() -> charset
    com.google.common.net.MediaType withoutParameters() -> withoutParameters
    com.google.common.net.MediaType withParameters(com.google.common.collect.Multimap) -> withParameters
    com.google.common.net.MediaType withParameter(java.lang.String,java.lang.String) -> withParameter
    com.google.common.net.MediaType withCharset(java.nio.charset.Charset) -> withCharset
    boolean hasWildcard() -> hasWildcard
    boolean is(com.google.common.net.MediaType) -> is
    com.google.common.net.MediaType create(java.lang.String,java.lang.String) -> create
    com.google.common.net.MediaType create(java.lang.String,java.lang.String,com.google.common.collect.Multimap) -> a
    java.lang.String normalizeToken(java.lang.String) -> b
    java.lang.String normalizeParameterValue(java.lang.String,java.lang.String) -> c
    com.google.common.net.MediaType parse(java.lang.String) -> parse
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.common.base.CharMatcher access$000() -> a
    java.lang.String access$100(java.lang.String) -> a
com.google.common.net.MediaType$1 -> BX:
    com.google.common.net.MediaType this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.net.MediaType$2 -> BY:
    com.google.common.net.MediaType this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.net.MediaType$Tokenizer -> BZ:
    java.lang.String input -> a
    int position -> b
    java.lang.String consumeTokenIfPresent(com.google.common.base.CharMatcher) -> a
    java.lang.String consumeToken(com.google.common.base.CharMatcher) -> b
    char consumeCharacter(char) -> a
    char previewChar() -> a
    boolean hasMore() -> b
com.google.common.net.PercentEscaper -> com.google.common.net.PercentEscaper:
    char[] PLUS_SIGN -> a
    char[] UPPER_HEX_DIGITS -> b
    boolean plusForSpace -> c
    boolean[] safeOctets -> d
    boolean[] createSafeOctets(java.lang.String) -> a
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(int) -> escape
com.google.common.net.TldPatterns -> Ca:
    com.google.common.collect.ImmutableSet EXACT -> a
    com.google.common.collect.ImmutableSet UNDER -> b
    com.google.common.collect.ImmutableSet EXCLUDED -> c
com.google.common.net.TrieParser -> Cb:
    com.google.common.base.Joiner PREFIX_JOINER -> a
    com.google.common.collect.ImmutableSet parseTrie(java.lang.CharSequence) -> a
    int doParseTrieToBuilder(java.util.List,java.lang.CharSequence,com.google.common.collect.ImmutableSet$Builder) -> a
com.google.common.net.UrlEscapers -> com.google.common.net.UrlEscapers:
    com.google.common.escape.Escaper URL_FORM_PARAMETER_ESCAPER -> a
    com.google.common.escape.Escaper URL_PATH_SEGMENT_ESCAPER -> b
    com.google.common.escape.Escaper URL_FRAGMENT_ESCAPER -> c
    com.google.common.escape.Escaper urlFormParameterEscaper() -> urlFormParameterEscaper
    com.google.common.escape.Escaper urlPathSegmentEscaper() -> urlPathSegmentEscaper
    com.google.common.escape.Escaper urlFragmentEscaper() -> urlFragmentEscaper
com.google.common.primitives.Booleans -> com.google.common.primitives.Booleans:
    int hashCode(boolean) -> hashCode
    int compare(boolean,boolean) -> compare
    boolean contains(boolean[],boolean) -> contains
    int indexOf(boolean[],boolean) -> indexOf
    int indexOf(boolean[],boolean,int,int) -> c
    int indexOf(boolean[],boolean[]) -> indexOf
    int lastIndexOf(boolean[],boolean) -> lastIndexOf
    int lastIndexOf(boolean[],boolean,int,int) -> d
    boolean[] concat(boolean[][]) -> concat
    boolean[] ensureCapacity(boolean[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,boolean[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    boolean[] toArray(java.util.Collection) -> toArray
    java.util.List asList(boolean[]) -> asList
    int access$000(boolean[],boolean,int,int) -> a
    int access$100(boolean[],boolean,int,int) -> b
com.google.common.primitives.Booleans$BooleanArrayAsList -> Cc:
    boolean[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean[] toBooleanArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Booleans$LexicographicalComparator -> Cd:
    com.google.common.primitives.Booleans$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Booleans$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Booleans$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Booleans$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Bytes -> com.google.common.primitives.Bytes:
    int hashCode(byte) -> hashCode
    boolean contains(byte[],byte) -> contains
    int indexOf(byte[],byte) -> indexOf
    int indexOf(byte[],byte,int,int) -> c
    int indexOf(byte[],byte[]) -> indexOf
    int lastIndexOf(byte[],byte) -> lastIndexOf
    int lastIndexOf(byte[],byte,int,int) -> d
    byte[] concat(byte[][]) -> concat
    byte[] ensureCapacity(byte[],int,int) -> ensureCapacity
    byte[] toArray(java.util.Collection) -> toArray
    java.util.List asList(byte[]) -> asList
    int access$000(byte[],byte,int,int) -> a
    int access$100(byte[],byte,int,int) -> b
com.google.common.primitives.Bytes$ByteArrayAsList -> Ce:
    byte[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    byte[] toByteArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Chars -> com.google.common.primitives.Chars:
    int BYTES -> BYTES
    int hashCode(char) -> hashCode
    char checkedCast(long) -> checkedCast
    char saturatedCast(long) -> saturatedCast
    int compare(char,char) -> compare
    boolean contains(char[],char) -> contains
    int indexOf(char[],char) -> indexOf
    int indexOf(char[],char,int,int) -> c
    int indexOf(char[],char[]) -> indexOf
    int lastIndexOf(char[],char) -> lastIndexOf
    int lastIndexOf(char[],char,int,int) -> d
    char min(char[]) -> min
    char max(char[]) -> max
    char[] concat(char[][]) -> concat
    byte[] toByteArray(char) -> toByteArray
    char fromByteArray(byte[]) -> fromByteArray
    char fromBytes(byte,byte) -> fromBytes
    char[] ensureCapacity(char[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,char[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    char[] toArray(java.util.Collection) -> toArray
    java.util.List asList(char[]) -> asList
    int access$000(char[],char,int,int) -> a
    int access$100(char[],char,int,int) -> b
com.google.common.primitives.Chars$CharArrayAsList -> Cf:
    char[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    char[] toCharArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Chars$LexicographicalComparator -> Cg:
    com.google.common.primitives.Chars$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Chars$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Chars$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Chars$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Doubles -> com.google.common.primitives.Doubles:
    int BYTES -> BYTES
    java.util.regex.Pattern FLOATING_POINT_PATTERN -> a
    int hashCode(double) -> hashCode
    int compare(double,double) -> compare
    boolean isFinite(double) -> isFinite
    boolean contains(double[],double) -> contains
    int indexOf(double[],double) -> indexOf
    int indexOf(double[],double,int,int) -> c
    int indexOf(double[],double[]) -> indexOf
    int lastIndexOf(double[],double) -> lastIndexOf
    int lastIndexOf(double[],double,int,int) -> d
    double min(double[]) -> min
    double max(double[]) -> max
    double[] concat(double[][]) -> concat
    double[] ensureCapacity(double[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,double[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    double[] toArray(java.util.Collection) -> toArray
    java.util.List asList(double[]) -> asList
    java.lang.Double tryParse(java.lang.String) -> tryParse
    int access$000(double[],double,int,int) -> a
    int access$100(double[],double,int,int) -> b
com.google.common.primitives.Doubles$DoubleArrayAsList -> Ch:
    double[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    double[] toDoubleArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Doubles$LexicographicalComparator -> Ci:
    com.google.common.primitives.Doubles$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Doubles$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Doubles$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Doubles$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Floats -> com.google.common.primitives.Floats:
    int BYTES -> BYTES
    int hashCode(float) -> hashCode
    int compare(float,float) -> compare
    boolean isFinite(float) -> isFinite
    boolean contains(float[],float) -> contains
    int indexOf(float[],float) -> indexOf
    int indexOf(float[],float,int,int) -> c
    int indexOf(float[],float[]) -> indexOf
    int lastIndexOf(float[],float) -> lastIndexOf
    int lastIndexOf(float[],float,int,int) -> d
    float min(float[]) -> min
    float max(float[]) -> max
    float[] concat(float[][]) -> concat
    float[] ensureCapacity(float[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,float[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    float[] toArray(java.util.Collection) -> toArray
    java.util.List asList(float[]) -> asList
    java.lang.Float tryParse(java.lang.String) -> tryParse
    int access$000(float[],float,int,int) -> a
    int access$100(float[],float,int,int) -> b
com.google.common.primitives.Floats$FloatArrayAsList -> Cj:
    float[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    float[] toFloatArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Floats$LexicographicalComparator -> Ck:
    com.google.common.primitives.Floats$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Floats$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Floats$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Floats$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    int BYTES -> BYTES
    int MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    int hashCode(int) -> hashCode
    int checkedCast(long) -> checkedCast
    int saturatedCast(long) -> saturatedCast
    int compare(int,int) -> compare
    boolean contains(int[],int) -> contains
    int indexOf(int[],int) -> indexOf
    int indexOf(int[],int,int,int) -> c
    int indexOf(int[],int[]) -> indexOf
    int lastIndexOf(int[],int) -> lastIndexOf
    int lastIndexOf(int[],int,int,int) -> d
    int min(int[]) -> min
    int max(int[]) -> max
    int[] concat(int[][]) -> concat
    byte[] toByteArray(int) -> toByteArray
    int fromByteArray(byte[]) -> fromByteArray
    int fromBytes(byte,byte,byte,byte) -> fromBytes
    int[] ensureCapacity(int[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,int[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    int[] toArray(java.util.Collection) -> toArray
    java.util.List asList(int[]) -> asList
    java.lang.Integer tryParse(java.lang.String) -> tryParse
    int access$000(int[],int,int,int) -> a
    int access$100(int[],int,int,int) -> b
com.google.common.primitives.Ints$IntArrayAsList -> Cl:
    int[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int[] toIntArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Ints$LexicographicalComparator -> Cm:
    com.google.common.primitives.Ints$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Ints$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Ints$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Ints$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Longs -> com.google.common.primitives.Longs:
    int BYTES -> BYTES
    long MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    int hashCode(long) -> hashCode
    int compare(long,long) -> compare
    boolean contains(long[],long) -> contains
    int indexOf(long[],long) -> indexOf
    int indexOf(long[],long,int,int) -> c
    int indexOf(long[],long[]) -> indexOf
    int lastIndexOf(long[],long) -> lastIndexOf
    int lastIndexOf(long[],long,int,int) -> d
    long min(long[]) -> min
    long max(long[]) -> max
    long[] concat(long[][]) -> concat
    byte[] toByteArray(long) -> toByteArray
    long fromByteArray(byte[]) -> fromByteArray
    long fromBytes(byte,byte,byte,byte,byte,byte,byte,byte) -> fromBytes
    java.lang.Long tryParse(java.lang.String) -> tryParse
    long[] ensureCapacity(long[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,long[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    long[] toArray(java.util.Collection) -> toArray
    java.util.List asList(long[]) -> asList
    int access$000(long[],long,int,int) -> a
    int access$100(long[],long,int,int) -> b
com.google.common.primitives.Longs$LexicographicalComparator -> Cn:
    com.google.common.primitives.Longs$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Longs$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Longs$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Longs$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Longs$LongArrayAsList -> Co:
    long[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    long[] toLongArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.ParseRequest -> Cp:
    java.lang.String rawValue -> a
    int radix -> b
    com.google.common.primitives.ParseRequest fromString(java.lang.String) -> a
com.google.common.primitives.Primitives -> com.google.common.primitives.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    java.util.Set allPrimitiveTypes() -> allPrimitiveTypes
    java.util.Set allWrapperTypes() -> allWrapperTypes
    boolean isWrapperType(java.lang.Class) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.common.primitives.Shorts -> com.google.common.primitives.Shorts:
    int BYTES -> BYTES
    short MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    int hashCode(short) -> hashCode
    short checkedCast(long) -> checkedCast
    short saturatedCast(long) -> saturatedCast
    int compare(short,short) -> compare
    boolean contains(short[],short) -> contains
    int indexOf(short[],short) -> indexOf
    int indexOf(short[],short,int,int) -> c
    int indexOf(short[],short[]) -> indexOf
    int lastIndexOf(short[],short) -> lastIndexOf
    int lastIndexOf(short[],short,int,int) -> d
    short min(short[]) -> min
    short max(short[]) -> max
    short[] concat(short[][]) -> concat
    byte[] toByteArray(short) -> toByteArray
    short fromByteArray(byte[]) -> fromByteArray
    short fromBytes(byte,byte) -> fromBytes
    short[] ensureCapacity(short[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,short[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    short[] toArray(java.util.Collection) -> toArray
    java.util.List asList(short[]) -> asList
    int access$000(short[],short,int,int) -> a
    int access$100(short[],short,int,int) -> b
com.google.common.primitives.Shorts$LexicographicalComparator -> Cq:
    com.google.common.primitives.Shorts$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Shorts$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Shorts$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Shorts$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Shorts$ShortArrayAsList -> Cr:
    short[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    short[] toShortArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.SignedBytes -> com.google.common.primitives.SignedBytes:
    byte MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    byte checkedCast(long) -> checkedCast
    byte saturatedCast(long) -> saturatedCast
    int compare(byte,byte) -> compare
    byte min(byte[]) -> min
    byte max(byte[]) -> max
    java.lang.String join(java.lang.String,byte[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
com.google.common.primitives.SignedBytes$LexicographicalComparator -> Cs:
    com.google.common.primitives.SignedBytes$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.SignedBytes$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.SignedBytes$LexicographicalComparator[] values() -> values
    com.google.common.primitives.SignedBytes$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    byte MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    byte MAX_VALUE -> MAX_VALUE
    int toInt(byte) -> toInt
    byte checkedCast(long) -> checkedCast
    byte saturatedCast(long) -> saturatedCast
    int compare(byte,byte) -> compare
    byte min(byte[]) -> min
    byte max(byte[]) -> max
    java.lang.String toString(byte) -> toString
    java.lang.String toString(byte,int) -> toString
    byte parseUnsignedByte(java.lang.String) -> parseUnsignedByte
    byte parseUnsignedByte(java.lang.String,int) -> parseUnsignedByte
    java.lang.String join(java.lang.String,byte[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    java.util.Comparator lexicographicalComparatorJavaImpl() -> a
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> Ct:
    java.lang.String UNSAFE_COMPARATOR_NAME -> a
    java.util.Comparator BEST_COMPARATOR -> b
    java.util.Comparator getBestComparator() -> a
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> Cu:
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator INSTANCE -> a
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] $VALUES -> b
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedInteger -> com.google.common.primitives.UnsignedInteger:
    com.google.common.primitives.UnsignedInteger ZERO -> ZERO
    com.google.common.primitives.UnsignedInteger ONE -> ONE
    com.google.common.primitives.UnsignedInteger MAX_VALUE -> MAX_VALUE
    int value -> a
    com.google.common.primitives.UnsignedInteger fromIntBits(int) -> fromIntBits
    com.google.common.primitives.UnsignedInteger valueOf(long) -> valueOf
    com.google.common.primitives.UnsignedInteger valueOf(java.math.BigInteger) -> valueOf
    com.google.common.primitives.UnsignedInteger valueOf(java.lang.String) -> valueOf
    com.google.common.primitives.UnsignedInteger valueOf(java.lang.String,int) -> valueOf
    com.google.common.primitives.UnsignedInteger plus(com.google.common.primitives.UnsignedInteger) -> plus
    com.google.common.primitives.UnsignedInteger minus(com.google.common.primitives.UnsignedInteger) -> minus
    com.google.common.primitives.UnsignedInteger times(com.google.common.primitives.UnsignedInteger) -> times
    com.google.common.primitives.UnsignedInteger dividedBy(com.google.common.primitives.UnsignedInteger) -> dividedBy
    com.google.common.primitives.UnsignedInteger mod(com.google.common.primitives.UnsignedInteger) -> mod
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    int compareTo(com.google.common.primitives.UnsignedInteger) -> compareTo
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    int compareTo(java.lang.Object) -> compareTo
com.google.common.primitives.UnsignedInts -> com.google.common.primitives.UnsignedInts:
    int compare(int,int) -> compare
    long toLong(int) -> toLong
    int min(int[]) -> min
    int max(int[]) -> max
    java.lang.String join(java.lang.String,int[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    int divide(int,int) -> divide
    int remainder(int,int) -> remainder
    int decode(java.lang.String) -> decode
    int parseUnsignedInt(java.lang.String) -> parseUnsignedInt
    int parseUnsignedInt(java.lang.String,int) -> parseUnsignedInt
    java.lang.String toString(int) -> toString
    java.lang.String toString(int,int) -> toString
com.google.common.primitives.UnsignedInts$LexicographicalComparator -> Cv:
    com.google.common.primitives.UnsignedInts$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.UnsignedInts$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.UnsignedInts$LexicographicalComparator[] values() -> values
    com.google.common.primitives.UnsignedInts$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedLong -> com.google.common.primitives.UnsignedLong:
    com.google.common.primitives.UnsignedLong ZERO -> ZERO
    com.google.common.primitives.UnsignedLong ONE -> ONE
    com.google.common.primitives.UnsignedLong MAX_VALUE -> MAX_VALUE
    long value -> a
    com.google.common.primitives.UnsignedLong fromLongBits(long) -> fromLongBits
    com.google.common.primitives.UnsignedLong valueOf(long) -> valueOf
    com.google.common.primitives.UnsignedLong valueOf(java.math.BigInteger) -> valueOf
    com.google.common.primitives.UnsignedLong valueOf(java.lang.String) -> valueOf
    com.google.common.primitives.UnsignedLong valueOf(java.lang.String,int) -> valueOf
    com.google.common.primitives.UnsignedLong plus(com.google.common.primitives.UnsignedLong) -> plus
    com.google.common.primitives.UnsignedLong minus(com.google.common.primitives.UnsignedLong) -> minus
    com.google.common.primitives.UnsignedLong times(com.google.common.primitives.UnsignedLong) -> times
    com.google.common.primitives.UnsignedLong dividedBy(com.google.common.primitives.UnsignedLong) -> dividedBy
    com.google.common.primitives.UnsignedLong mod(com.google.common.primitives.UnsignedLong) -> mod
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    int compareTo(com.google.common.primitives.UnsignedLong) -> compareTo
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    int compareTo(java.lang.Object) -> compareTo
com.google.common.primitives.UnsignedLongs -> com.google.common.primitives.UnsignedLongs:
    long MAX_VALUE -> MAX_VALUE
    long[] maxValueDivs -> a
    int[] maxValueMods -> b
    int[] maxSafeDigits -> c
    int compare(long,long) -> compare
    long min(long[]) -> min
    long max(long[]) -> max
    java.lang.String join(java.lang.String,long[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    long divide(long,long) -> divide
    long remainder(long,long) -> remainder
    long parseUnsignedLong(java.lang.String) -> parseUnsignedLong
    long decode(java.lang.String) -> decode
    long parseUnsignedLong(java.lang.String,int) -> parseUnsignedLong
    java.lang.String toString(long) -> toString
    java.lang.String toString(long,int) -> toString
com.google.common.primitives.UnsignedLongs$LexicographicalComparator -> Cw:
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator[] values() -> values
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.reflect.AbstractInvocationHandler -> com.google.common.reflect.AbstractInvocationHandler:
    java.lang.Object[] NO_ARGS -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object handleInvocation(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> handleInvocation
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.reflect.ClassPath -> com.google.common.reflect.ClassPath:
    java.util.logging.Logger logger -> a
    com.google.common.base.Splitter CLASS_PATH_ATTRIBUTE_SEPARATOR -> b
    com.google.common.collect.ImmutableSet resources -> c
    com.google.common.reflect.ClassPath from(java.lang.ClassLoader) -> from
    com.google.common.collect.ImmutableSet getResources() -> getResources
    com.google.common.collect.ImmutableSet getTopLevelClasses() -> getTopLevelClasses
    com.google.common.collect.ImmutableSet getTopLevelClasses(java.lang.String) -> getTopLevelClasses
    com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String) -> getTopLevelClassesRecursive
    com.google.common.collect.ImmutableMap getClassPathEntries(java.lang.ClassLoader) -> a
    java.lang.String getClassName(java.lang.String) -> a
    java.util.logging.Logger access$000() -> a
    com.google.common.base.Splitter access$100() -> b
com.google.common.reflect.ClassPath$ClassInfo -> com.google.common.reflect.ClassPath$ClassInfo:
    java.lang.String className -> b
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getSimpleName() -> getSimpleName
    java.lang.String getName() -> getName
    java.lang.Class load() -> load
    java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$ResourceInfo -> com.google.common.reflect.ClassPath$ResourceInfo:
    java.lang.String resourceName -> b
    java.lang.ClassLoader loader -> a
    com.google.common.reflect.ClassPath$ResourceInfo of(java.lang.String,java.lang.ClassLoader) -> a
    java.net.URL url() -> url
    java.lang.String getResourceName() -> getResourceName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$Scanner -> Cx:
    com.google.common.collect.ImmutableSortedSet$Builder resources -> a
    java.util.Set scannedUris -> b
    void scan(java.net.URI,java.lang.ClassLoader) -> a
    void scanDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet) -> a
    void scanJar(java.io.File,java.lang.ClassLoader) -> a
    com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest) -> a
com.google.common.reflect.Element -> Cy:
    java.lang.reflect.AccessibleObject accessibleObject -> a
    java.lang.reflect.Member member -> b
    boolean isAnnotationPresent(java.lang.Class) -> isAnnotationPresent
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation[] getAnnotations() -> getAnnotations
    java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    void setAccessible(boolean) -> setAccessible
    boolean isAccessible() -> isAccessible
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    int getModifiers() -> getModifiers
    boolean isSynthetic() -> isSynthetic
    boolean isPublic() -> isPublic
    boolean isProtected() -> isProtected
    boolean isPackagePrivate() -> isPackagePrivate
    boolean isPrivate() -> isPrivate
    boolean isStatic() -> isStatic
    boolean isFinal() -> isFinal
    boolean isAbstract() -> isAbstract
    boolean isNative() -> isNative
    boolean isSynchronized() -> isSynchronized
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.reflect.ImmutableTypeToInstanceMap -> com.google.common.reflect.ImmutableTypeToInstanceMap:
    com.google.common.collect.ImmutableMap delegate -> a
    com.google.common.reflect.ImmutableTypeToInstanceMap of() -> of
    com.google.common.reflect.ImmutableTypeToInstanceMap$Builder builder() -> builder
    java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.util.Map delegate() -> delegate
    java.lang.Object trustedGet(com.google.common.reflect.TypeToken) -> a
    java.lang.Object delegate() -> delegate
com.google.common.reflect.ImmutableTypeToInstanceMap$Builder -> com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:
    com.google.common.collect.ImmutableMap$Builder mapBuilder -> a
    com.google.common.reflect.ImmutableTypeToInstanceMap$Builder put(java.lang.Class,java.lang.Object) -> put
    com.google.common.reflect.ImmutableTypeToInstanceMap$Builder put(com.google.common.reflect.TypeToken,java.lang.Object) -> put
    com.google.common.reflect.ImmutableTypeToInstanceMap build() -> build
com.google.common.reflect.Invokable -> com.google.common.reflect.Invokable:
    com.google.common.reflect.Invokable from(java.lang.reflect.Method) -> from
    com.google.common.reflect.Invokable from(java.lang.reflect.Constructor) -> from
    boolean isOverridable() -> isOverridable
    boolean isVarArgs() -> isVarArgs
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    com.google.common.reflect.TypeToken getReturnType() -> getReturnType
    com.google.common.collect.ImmutableList getParameters() -> getParameters
    com.google.common.collect.ImmutableList getExceptionTypes() -> getExceptionTypes
    com.google.common.reflect.Invokable returning(java.lang.Class) -> returning
    com.google.common.reflect.Invokable returning(com.google.common.reflect.TypeToken) -> returning
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
    java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> a
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    java.lang.annotation.Annotation[][] getParameterAnnotations() -> c
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Invokable$ConstructorInvokable -> Cz:
    java.lang.reflect.Constructor constructor -> a
    java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> a
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    java.lang.annotation.Annotation[][] getParameterAnnotations() -> c
    java.lang.reflect.TypeVariable[] getTypeParameters() -> getTypeParameters
    boolean isOverridable() -> isOverridable
    boolean isVarArgs() -> isVarArgs
com.google.common.reflect.Invokable$MethodInvokable -> CA:
    java.lang.reflect.Method method -> a
    java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> a
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    java.lang.annotation.Annotation[][] getParameterAnnotations() -> c
    java.lang.reflect.TypeVariable[] getTypeParameters() -> getTypeParameters
    boolean isOverridable() -> isOverridable
    boolean isVarArgs() -> isVarArgs
com.google.common.reflect.MutableTypeToInstanceMap -> com.google.common.reflect.MutableTypeToInstanceMap:
    java.util.Map backingMap -> a
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
    java.lang.Object put(com.google.common.reflect.TypeToken,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.util.Map delegate() -> delegate
    java.lang.Object trustedPut(com.google.common.reflect.TypeToken,java.lang.Object) -> a
    java.lang.Object trustedGet(com.google.common.reflect.TypeToken) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object delegate() -> delegate
com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry -> CB:
    java.util.Map$Entry delegate -> a
    java.util.Set transformEntries(java.util.Set) -> a
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
    java.util.Iterator access$000(java.util.Iterator) -> a
com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$1 -> CC:
    java.util.Set val$entries -> a
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.reflect.MutableTypeToInstanceMap$UnmodifiableEntry$2 -> CD:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.reflect.Parameter -> com.google.common.reflect.Parameter:
    com.google.common.reflect.Invokable declaration -> a
    int position -> b
    com.google.common.reflect.TypeToken type -> c
    com.google.common.collect.ImmutableList annotations -> d
    com.google.common.reflect.TypeToken getType() -> getType
    com.google.common.reflect.Invokable getDeclaringInvokable() -> getDeclaringInvokable
    boolean isAnnotationPresent(java.lang.Class) -> isAnnotationPresent
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation[] getAnnotations() -> getAnnotations
    java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.reflect.Reflection -> com.google.common.reflect.Reflection:
    java.lang.String getPackageName(java.lang.Class) -> getPackageName
    java.lang.String getPackageName(java.lang.String) -> getPackageName
    void initialize(java.lang.Class[]) -> initialize
    java.lang.Object newProxy(java.lang.Class,java.lang.reflect.InvocationHandler) -> newProxy
com.google.common.reflect.TypeCapture -> CE:
    java.lang.reflect.Type capture() -> a
com.google.common.reflect.TypeParameter -> com.google.common.reflect.TypeParameter:
    java.lang.reflect.TypeVariable typeVariable -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.reflect.TypeResolver -> com.google.common.reflect.TypeResolver:
    com.google.common.reflect.TypeResolver$TypeTable typeTable -> a
    com.google.common.reflect.TypeResolver accordingTo(java.lang.reflect.Type) -> a
    com.google.common.reflect.TypeResolver where(java.lang.reflect.Type,java.lang.reflect.Type) -> where
    com.google.common.reflect.TypeResolver where(java.util.Map) -> a
    void populateTypeMappings(java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type) -> b
    java.lang.reflect.Type resolveType(java.lang.reflect.Type) -> resolveType
    java.lang.reflect.Type[] resolveTypes(java.lang.reflect.Type[]) -> a
    java.lang.Object expectArgument(java.lang.Class,java.lang.Object) -> b
    java.lang.Object access$000(java.lang.Class,java.lang.Object) -> a
    void access$100(java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type) -> a
    java.lang.reflect.Type[] access$300(com.google.common.reflect.TypeResolver,java.lang.reflect.Type[]) -> a
com.google.common.reflect.TypeResolver$1 -> CF:
    java.util.Map val$mappings -> a
    java.lang.reflect.Type val$to -> b
    void visitTypeVariable(java.lang.reflect.TypeVariable) -> a
    void visitWildcardType(java.lang.reflect.WildcardType) -> a
    void visitParameterizedType(java.lang.reflect.ParameterizedType) -> a
    void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> a
    void visitClass(java.lang.Class) -> a
com.google.common.reflect.TypeResolver$TypeMappingIntrospector -> CG:
    com.google.common.reflect.TypeResolver$WildcardCapturer wildcardCapturer -> a
    java.util.Map mappings -> b
    com.google.common.collect.ImmutableMap getTypeMappings(java.lang.reflect.Type) -> a
    void visitClass(java.lang.Class) -> a
    void visitParameterizedType(java.lang.reflect.ParameterizedType) -> a
    void visitTypeVariable(java.lang.reflect.TypeVariable) -> a
    void visitWildcardType(java.lang.reflect.WildcardType) -> a
com.google.common.reflect.TypeResolver$TypeTable -> CH:
    com.google.common.collect.ImmutableMap map -> a
    com.google.common.reflect.TypeResolver$TypeTable where(java.util.Map) -> a
    java.lang.reflect.Type resolveInternal(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable) -> a
com.google.common.reflect.TypeResolver$TypeTable$1 -> CI:
    java.lang.reflect.TypeVariable val$var -> a
    com.google.common.reflect.TypeResolver$TypeTable val$unguarded -> b
    com.google.common.reflect.TypeResolver$TypeTable this$0 -> c
    java.lang.reflect.Type resolveInternal(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver$TypeTable) -> a
com.google.common.reflect.TypeResolver$WildcardCapturer -> CJ:
    java.util.concurrent.atomic.AtomicInteger id -> a
    java.lang.reflect.Type capture(java.lang.reflect.Type) -> a
com.google.common.reflect.TypeToInstanceMap -> com.google.common.reflect.TypeToInstanceMap:
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
com.google.common.reflect.TypeToken -> com.google.common.reflect.TypeToken:
    java.lang.reflect.Type runtimeType -> a
    com.google.common.reflect.TypeResolver typeResolver -> b
    com.google.common.reflect.TypeToken of(java.lang.Class) -> of
    com.google.common.reflect.TypeToken of(java.lang.reflect.Type) -> of
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    com.google.common.reflect.TypeToken where(com.google.common.reflect.TypeParameter,com.google.common.reflect.TypeToken) -> where
    com.google.common.reflect.TypeToken where(com.google.common.reflect.TypeParameter,java.lang.Class) -> where
    com.google.common.reflect.TypeToken resolveType(java.lang.reflect.Type) -> resolveType
    com.google.common.reflect.TypeToken resolveSupertype(java.lang.reflect.Type) -> b
    com.google.common.reflect.TypeToken getGenericSuperclass() -> b
    com.google.common.reflect.TypeToken boundAsSuperclass(java.lang.reflect.Type) -> c
    com.google.common.collect.ImmutableList getGenericInterfaces() -> c
    com.google.common.collect.ImmutableList boundsAsInterfaces(java.lang.reflect.Type[]) -> a
    com.google.common.reflect.TypeToken$TypeSet getTypes() -> getTypes
    com.google.common.reflect.TypeToken getSupertype(java.lang.Class) -> getSupertype
    com.google.common.reflect.TypeToken getSubtype(java.lang.Class) -> getSubtype
    boolean isAssignableFrom(com.google.common.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isArray() -> isArray
    boolean isPrimitive() -> isPrimitive
    com.google.common.reflect.TypeToken wrap() -> wrap
    com.google.common.reflect.TypeToken unwrap() -> unwrap
    com.google.common.reflect.TypeToken getComponentType() -> getComponentType
    com.google.common.reflect.Invokable method(java.lang.reflect.Method) -> method
    com.google.common.reflect.Invokable constructor(java.lang.reflect.Constructor) -> constructor
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.reflect.TypeToken rejectTypeVariables() -> d
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    boolean isAssignableFromAny(java.lang.reflect.Type[],java.lang.reflect.Type) -> a
    boolean isAssignableToWildcardType(java.lang.reflect.Type,java.lang.reflect.WildcardType) -> a
    java.lang.reflect.Type supertypeBound(java.lang.reflect.WildcardType) -> a
    java.lang.reflect.Type subtypeBound(java.lang.reflect.Type) -> d
    java.lang.reflect.Type subtypeBound(java.lang.reflect.WildcardType) -> b
    java.lang.Class getRawType(java.lang.reflect.Type) -> a
    com.google.common.collect.ImmutableSet getRawTypes(java.lang.reflect.Type) -> e
    com.google.common.reflect.TypeToken toGenericType(java.lang.Class) -> a
    com.google.common.reflect.TypeToken getSupertypeFromUpperBounds(java.lang.Class,java.lang.reflect.Type[]) -> a
    java.lang.reflect.Type[] access$000(com.google.common.reflect.TypeToken,java.lang.reflect.Type[]) -> a
    com.google.common.collect.ImmutableSet access$200(com.google.common.reflect.TypeToken) -> a
    java.lang.reflect.Type access$400(com.google.common.reflect.TypeToken) -> b
com.google.common.reflect.TypeToken$1 -> CK:
    com.google.common.reflect.TypeToken this$0 -> a
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
com.google.common.reflect.TypeToken$2 -> CL:
    com.google.common.reflect.TypeToken this$0 -> a
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
com.google.common.reflect.TypeToken$3 -> CM:
    com.google.common.reflect.TypeToken this$0 -> a
    void visitTypeVariable(java.lang.reflect.TypeVariable) -> a
    void visitWildcardType(java.lang.reflect.WildcardType) -> a
    void visitParameterizedType(java.lang.reflect.ParameterizedType) -> a
    void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> a
com.google.common.reflect.TypeToken$4 -> CN:
    com.google.common.collect.ImmutableSet$Builder val$builder -> a
    void visitTypeVariable(java.lang.reflect.TypeVariable) -> a
    void visitWildcardType(java.lang.reflect.WildcardType) -> a
    void visitParameterizedType(java.lang.reflect.ParameterizedType) -> a
    void visitClass(java.lang.Class) -> a
    void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> a
com.google.common.reflect.TypeToken$ClassSet -> CO:
    com.google.common.collect.ImmutableSet classes -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> a
    java.util.Set delegate() -> delegate
    com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    java.util.Set rawTypes() -> rawTypes
    com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    java.lang.Object readResolve() -> readResolve
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.reflect.TypeToken$InterfaceSet -> CP:
    com.google.common.reflect.TypeToken$TypeSet allTypes -> c
    com.google.common.collect.ImmutableSet interfaces -> d
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> a
    java.util.Set delegate() -> delegate
    com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    java.util.Set rawTypes() -> rawTypes
    com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    java.lang.Object readResolve() -> readResolve
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.reflect.TypeToken$InterfaceSet$1 -> CQ:
    com.google.common.reflect.TypeToken$InterfaceSet this$1 -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$SimpleTypeToken -> CR:
    long serialVersionUID -> serialVersionUID
com.google.common.reflect.TypeToken$TypeCollector -> CS:
    com.google.common.reflect.TypeToken$TypeCollector FOR_GENERIC_TYPE -> a
    com.google.common.reflect.TypeToken$TypeCollector FOR_RAW_TYPE -> b
    com.google.common.reflect.TypeToken$TypeCollector classesOnly() -> a
    com.google.common.collect.ImmutableList collectTypes(java.lang.Object) -> a
    com.google.common.collect.ImmutableList collectTypes(java.lang.Iterable) -> a
    int collectTypes(java.lang.Object,java.util.Map) -> a
    java.lang.Class getRawType(java.lang.Object) -> b
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    java.lang.Object getSuperclass(java.lang.Object) -> d
com.google.common.reflect.TypeToken$TypeCollector$1 -> CT:
    java.lang.Object getSuperclass(java.lang.Object) -> d
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    java.lang.Class getRawType(java.lang.Object) -> b
com.google.common.reflect.TypeToken$TypeCollector$2 -> CU:
    java.lang.Object getSuperclass(java.lang.Object) -> d
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    java.lang.Class getRawType(java.lang.Object) -> b
com.google.common.reflect.TypeToken$TypeCollector$3 -> CV:
    com.google.common.reflect.TypeToken$TypeCollector this$0 -> c
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    com.google.common.collect.ImmutableList collectTypes(java.lang.Iterable) -> a
com.google.common.reflect.TypeToken$TypeCollector$4 -> CW:
    java.util.Comparator val$valueComparator -> a
    java.util.Map val$map -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector -> CX:
    com.google.common.reflect.TypeToken$TypeCollector delegate -> c
    java.lang.Class getRawType(java.lang.Object) -> b
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    java.lang.Object getSuperclass(java.lang.Object) -> d
com.google.common.reflect.TypeToken$TypeFilter -> CY:
    com.google.common.reflect.TypeToken$TypeFilter IGNORE_TYPE_VARIABLE_OR_WILDCARD -> a
    com.google.common.reflect.TypeToken$TypeFilter INTERFACE_ONLY -> b
    com.google.common.reflect.TypeToken$TypeFilter[] $VALUES -> c
    com.google.common.reflect.TypeToken$TypeFilter[] values() -> values
    com.google.common.reflect.TypeToken$TypeFilter valueOf(java.lang.String) -> valueOf
com.google.common.reflect.TypeToken$TypeFilter$1 -> CZ:
    boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$TypeFilter$2 -> Da:
    boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$TypeSet -> com.google.common.reflect.TypeToken$TypeSet:
    com.google.common.collect.ImmutableSet types -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> b
    com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    java.util.Set delegate() -> delegate
    java.util.Set rawTypes() -> rawTypes
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.reflect.TypeVisitor -> Db:
    java.util.Set visited -> a
    void visit(java.lang.reflect.Type[]) -> a
    void visitClass(java.lang.Class) -> a
    void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> a
    void visitParameterizedType(java.lang.reflect.ParameterizedType) -> a
    void visitTypeVariable(java.lang.reflect.TypeVariable) -> a
    void visitWildcardType(java.lang.reflect.WildcardType) -> a
com.google.common.reflect.Types -> Dc:
    com.google.common.base.Function TYPE_TO_STRING -> a
    com.google.common.base.Joiner COMMA_JOINER -> b
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[]) -> a
    java.lang.reflect.ParameterizedType newParameterizedType(java.lang.Class,java.lang.reflect.Type[]) -> a
    java.lang.reflect.TypeVariable newTypeVariable(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[]) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> d
    java.lang.String toString(java.lang.reflect.Type) -> b
    java.lang.reflect.Type getComponentType(java.lang.reflect.Type) -> c
    java.lang.Class getArrayClass(java.lang.Class) -> a
    java.lang.reflect.Type access$100(java.lang.reflect.Type[]) -> a
    void access$200(java.lang.reflect.Type[],java.lang.String) -> a
    java.lang.reflect.Type[] access$300(java.util.Collection) -> a
    com.google.common.base.Function access$400() -> a
    com.google.common.base.Joiner access$500() -> b
    java.lang.Iterable access$600(java.lang.Iterable) -> a
com.google.common.reflect.Types$1 -> Dd:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.reflect.Types$2 -> De:
    java.util.concurrent.atomic.AtomicReference val$result -> a
    void visitTypeVariable(java.lang.reflect.TypeVariable) -> a
    void visitWildcardType(java.lang.reflect.WildcardType) -> a
    void visitGenericArrayType(java.lang.reflect.GenericArrayType) -> a
    void visitClass(java.lang.Class) -> a
com.google.common.reflect.Types$ClassOwnership -> Df:
    com.google.common.reflect.Types$ClassOwnership OWNED_BY_ENCLOSING_CLASS -> a
    com.google.common.reflect.Types$ClassOwnership LOCAL_CLASS_HAS_NO_OWNER -> b
    com.google.common.reflect.Types$ClassOwnership JVM_BEHAVIOR -> c
    com.google.common.reflect.Types$ClassOwnership[] $VALUES -> d
    com.google.common.reflect.Types$ClassOwnership[] values() -> values
    com.google.common.reflect.Types$ClassOwnership valueOf(java.lang.String) -> valueOf
    java.lang.Class getOwnerType(java.lang.Class) -> a
com.google.common.reflect.Types$ClassOwnership$1 -> Dg:
    java.lang.Class getOwnerType(java.lang.Class) -> a
com.google.common.reflect.Types$ClassOwnership$1LocalClass -> Dh:
com.google.common.reflect.Types$ClassOwnership$2 -> Di:
    java.lang.Class getOwnerType(java.lang.Class) -> a
com.google.common.reflect.Types$ClassOwnership$3 -> Dj:
com.google.common.reflect.Types$GenericArrayTypeImpl -> Dk:
    java.lang.reflect.Type componentType -> a
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$JavaVersion -> Dl:
    com.google.common.reflect.Types$JavaVersion JAVA6 -> a
    com.google.common.reflect.Types$JavaVersion JAVA7 -> b
    com.google.common.reflect.Types$JavaVersion CURRENT -> c
    com.google.common.reflect.Types$JavaVersion[] $VALUES -> d
    com.google.common.reflect.Types$JavaVersion[] values() -> values
    com.google.common.reflect.Types$JavaVersion valueOf(java.lang.String) -> valueOf
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> a
    java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> b
    com.google.common.collect.ImmutableList usedInGenericType(java.lang.reflect.Type[]) -> a
com.google.common.reflect.Types$JavaVersion$1 -> Dm:
com.google.common.reflect.Types$JavaVersion$2 -> Dn:
    java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> b
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> a
com.google.common.reflect.Types$JavaVersion$3 -> Do:
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> a
    java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> b
com.google.common.reflect.Types$ParameterizedTypeImpl -> Dp:
    java.lang.reflect.Type ownerType -> a
    com.google.common.collect.ImmutableList argumentsList -> b
    java.lang.Class rawType -> c
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$TypeVariableImpl -> Dq:
    java.lang.reflect.GenericDeclaration genericDeclaration -> a
    java.lang.String name -> b
    com.google.common.collect.ImmutableList bounds -> c
    java.lang.reflect.Type[] getBounds() -> getBounds
    java.lang.reflect.GenericDeclaration getGenericDeclaration() -> getGenericDeclaration
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$WildcardTypeImpl -> Dr:
    com.google.common.collect.ImmutableList lowerBounds -> a
    com.google.common.collect.ImmutableList upperBounds -> b
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractCheckedFuture -> com.google.common.util.concurrent.AbstractCheckedFuture:
    java.lang.Exception mapException(java.lang.Exception) -> mapException
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.AbstractExecutionThreadService -> com.google.common.util.concurrent.AbstractExecutionThreadService:
    java.util.logging.Logger logger -> a
    com.google.common.util.concurrent.Service delegate -> b
    void startUp() -> startUp
    void run() -> run
    void shutDown() -> shutDown
    void triggerShutdown() -> triggerShutdown
    java.util.concurrent.Executor executor() -> executor
    java.lang.String toString() -> toString
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.Throwable failureCause() -> failureCause
    com.google.common.util.concurrent.Service startAsync() -> startAsync
    com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    void awaitRunning() -> awaitRunning
    void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    void awaitTerminated() -> awaitTerminated
    void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    java.lang.String serviceName() -> serviceName
    java.util.logging.Logger access$000() -> a
com.google.common.util.concurrent.AbstractExecutionThreadService$1 -> Ds:
    com.google.common.util.concurrent.AbstractExecutionThreadService this$0 -> a
    void doStart() -> doStart
    void doStop() -> doStop
com.google.common.util.concurrent.AbstractExecutionThreadService$1$1 -> Dt:
    com.google.common.util.concurrent.AbstractExecutionThreadService$1 this$1 -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.AbstractExecutionThreadService$1$2 -> Du:
    com.google.common.util.concurrent.AbstractExecutionThreadService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractExecutionThreadService$2 -> Dv:
    com.google.common.util.concurrent.AbstractExecutionThreadService this$0 -> a
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractFuture -> com.google.common.util.concurrent.AbstractFuture:
    com.google.common.util.concurrent.AbstractFuture$Sync sync -> a
    com.google.common.util.concurrent.ExecutionList executionList -> b
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object get() -> get
    boolean isDone() -> isDone
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    void interruptTask() -> interruptTask
    boolean wasInterrupted() -> wasInterrupted
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    boolean set(java.lang.Object) -> set
    boolean setException(java.lang.Throwable) -> setException
    java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> a
com.google.common.util.concurrent.AbstractFuture$Sync -> Dw:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> a
    java.lang.Throwable exception -> b
    int tryAcquireShared(int) -> tryAcquireShared
    boolean tryReleaseShared(int) -> tryReleaseShared
    java.lang.Object get(long) -> a
    java.lang.Object get() -> a
    java.lang.Object getValue() -> e
    boolean isDone() -> b
    boolean isCancelled() -> c
    boolean wasInterrupted() -> d
    boolean set(java.lang.Object) -> a
    boolean setException(java.lang.Throwable) -> a
    boolean cancel(boolean) -> a
    boolean complete(java.lang.Object,java.lang.Throwable,int) -> a
com.google.common.util.concurrent.AbstractIdleService -> com.google.common.util.concurrent.AbstractIdleService:
    com.google.common.base.Supplier threadNameSupplier -> a
    com.google.common.util.concurrent.Service delegate -> b
    void startUp() -> startUp
    void shutDown() -> shutDown
    java.util.concurrent.Executor executor() -> executor
    java.lang.String toString() -> toString
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.Throwable failureCause() -> failureCause
    com.google.common.util.concurrent.Service startAsync() -> startAsync
    com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    void awaitRunning() -> awaitRunning
    void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    void awaitTerminated() -> awaitTerminated
    void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    java.lang.String serviceName() -> serviceName
    com.google.common.base.Supplier access$000(com.google.common.util.concurrent.AbstractIdleService) -> a
com.google.common.util.concurrent.AbstractIdleService$1 -> Dx:
    com.google.common.util.concurrent.AbstractIdleService this$0 -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.AbstractIdleService$2 -> Dy:
    com.google.common.util.concurrent.AbstractIdleService this$0 -> a
    void doStart() -> doStart
    void doStop() -> doStop
com.google.common.util.concurrent.AbstractIdleService$2$1 -> Dz:
    com.google.common.util.concurrent.AbstractIdleService$2 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractIdleService$2$2 -> DA:
    com.google.common.util.concurrent.AbstractIdleService$2 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractIdleService$3 -> DB:
    com.google.common.util.concurrent.AbstractIdleService this$0 -> a
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractListeningExecutorService -> com.google.common.util.concurrent.AbstractListeningExecutorService:
    com.google.common.util.concurrent.ListenableFutureTask newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    com.google.common.util.concurrent.ListenableFutureTask newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
com.google.common.util.concurrent.AbstractScheduledService -> com.google.common.util.concurrent.AbstractScheduledService:
    java.util.logging.Logger logger -> a
    com.google.common.util.concurrent.AbstractService delegate -> b
    void runOneIteration() -> runOneIteration
    void startUp() -> startUp
    void shutDown() -> shutDown
    com.google.common.util.concurrent.AbstractScheduledService$Scheduler scheduler() -> scheduler
    java.util.concurrent.ScheduledExecutorService executor() -> executor
    java.lang.String serviceName() -> serviceName
    java.lang.String toString() -> toString
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.Throwable failureCause() -> failureCause
    com.google.common.util.concurrent.Service startAsync() -> startAsync
    com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    void awaitRunning() -> awaitRunning
    void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    void awaitTerminated() -> awaitTerminated
    void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    java.util.logging.Logger access$200() -> a
    com.google.common.util.concurrent.AbstractService access$400(com.google.common.util.concurrent.AbstractScheduledService) -> a
com.google.common.util.concurrent.AbstractScheduledService$1 -> DC:
    java.util.concurrent.Future runningTask -> b
    java.util.concurrent.ScheduledExecutorService executorService -> c
    java.util.concurrent.locks.ReentrantLock lock -> d
    java.lang.Runnable task -> e
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> a
    void doStart() -> doStart
    void doStop() -> doStop
    java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.AbstractScheduledService$1) -> a
    java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService$1,java.util.concurrent.Future) -> a
    java.util.concurrent.ScheduledExecutorService access$500(com.google.common.util.concurrent.AbstractScheduledService$1) -> b
    java.lang.Runnable access$600(com.google.common.util.concurrent.AbstractScheduledService$1) -> c
com.google.common.util.concurrent.AbstractScheduledService$1$1 -> DD:
    com.google.common.util.concurrent.AbstractScheduledService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$1$2 -> DE:
    com.google.common.util.concurrent.AbstractScheduledService$1 this$1 -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.AbstractScheduledService$1$3 -> DF:
    com.google.common.util.concurrent.AbstractScheduledService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$1$4 -> DG:
    com.google.common.util.concurrent.AbstractScheduledService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$2 -> DH:
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.AbstractScheduledService$3 -> DI:
    java.util.concurrent.ScheduledExecutorService val$executor -> a
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> b
    void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler:
    com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule getNextSchedule() -> getNextSchedule
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule:
    long delay -> a
    java.util.concurrent.TimeUnit unit -> b
com.google.common.util.concurrent.AbstractScheduledService$Scheduler -> com.google.common.util.concurrent.AbstractScheduledService$Scheduler:
    com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit) -> newFixedDelaySchedule
    com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedRateSchedule(long,long,java.util.concurrent.TimeUnit) -> newFixedRateSchedule
    java.util.concurrent.Future schedule$6e26a758(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> a
com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1 -> DJ:
    long val$initialDelay -> a
    long val$delay -> b
    java.util.concurrent.TimeUnit val$unit -> c
    java.util.concurrent.Future schedule$6e26a758(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> a
com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2 -> DK:
    long val$initialDelay -> a
    long val$period -> b
    java.util.concurrent.TimeUnit val$unit -> c
    java.util.concurrent.Future schedule$6e26a758(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> a
com.google.common.util.concurrent.AbstractService -> com.google.common.util.concurrent.AbstractService:
    com.google.common.util.concurrent.Monitor monitor -> a
    com.google.common.util.concurrent.AbstractService$Transition startup -> b
    com.google.common.util.concurrent.AbstractService$Transition shutdown -> c
    com.google.common.util.concurrent.Monitor$Guard isStartable -> d
    com.google.common.util.concurrent.Monitor$Guard isStoppable -> e
    com.google.common.util.concurrent.Monitor$Guard hasReachedRunning -> f
    com.google.common.util.concurrent.Monitor$Guard isStopped -> g
    java.util.List listeners -> h
    com.google.common.util.concurrent.ExecutionQueue queuedListeners -> i
    com.google.common.util.concurrent.AbstractService$StateSnapshot snapshot -> j
    void doStart() -> doStart
    void doStop() -> doStop
    com.google.common.util.concurrent.Service startAsync() -> startAsync
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void awaitRunning() -> awaitRunning
    void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    void awaitTerminated() -> awaitTerminated
    void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    void checkCurrentState(com.google.common.util.concurrent.Service$State) -> a
    void notifyStarted() -> notifyStarted
    void notifyStopped() -> notifyStopped
    void notifyFailed(java.lang.Throwable) -> notifyFailed
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    java.lang.Throwable failureCause() -> failureCause
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.String toString() -> toString
    void executeListeners() -> a
    void starting() -> b
    void running() -> c
    void stopping(com.google.common.util.concurrent.Service$State) -> b
    void terminated(com.google.common.util.concurrent.Service$State) -> c
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> a
    com.google.common.util.concurrent.AbstractService$Transition access$100(com.google.common.util.concurrent.AbstractService) -> a
    com.google.common.util.concurrent.AbstractService$Transition access$200(com.google.common.util.concurrent.AbstractService) -> b
com.google.common.util.concurrent.AbstractService$1 -> DL:
    com.google.common.util.concurrent.AbstractService this$0 -> a
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$10 -> DM:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.Service$State val$from -> b
    java.lang.Throwable val$cause -> c
    com.google.common.util.concurrent.AbstractService this$0 -> d
    void run() -> run
com.google.common.util.concurrent.AbstractService$11 -> DN:
    int[] $SwitchMap$com$google$common$util$concurrent$Service$State -> a
com.google.common.util.concurrent.AbstractService$2 -> DO:
    com.google.common.util.concurrent.AbstractService this$0 -> a
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$3 -> DP:
    com.google.common.util.concurrent.AbstractService this$0 -> a
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$4 -> DQ:
    com.google.common.util.concurrent.AbstractService this$0 -> a
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.AbstractService$5 -> DR:
    com.google.common.util.concurrent.AbstractService this$0 -> a
    void running() -> running
    void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.AbstractService$6 -> DS:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.AbstractService this$0 -> b
    void run() -> run
com.google.common.util.concurrent.AbstractService$7 -> DT:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.AbstractService this$0 -> b
    void run() -> run
com.google.common.util.concurrent.AbstractService$8 -> DU:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.Service$State val$from -> b
    com.google.common.util.concurrent.AbstractService this$0 -> c
    void run() -> run
com.google.common.util.concurrent.AbstractService$9 -> DV:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.Service$State val$from -> b
    com.google.common.util.concurrent.AbstractService this$0 -> c
    void run() -> run
com.google.common.util.concurrent.AbstractService$ListenerExecutorPair -> DW:
    com.google.common.util.concurrent.Service$Listener listener -> a
    java.util.concurrent.Executor executor -> b
com.google.common.util.concurrent.AbstractService$StateSnapshot -> DX:
    com.google.common.util.concurrent.Service$State state -> a
    boolean shutdownWhenStartupFinishes -> b
    java.lang.Throwable failure -> c
com.google.common.util.concurrent.AbstractService$Transition -> DY:
    com.google.common.util.concurrent.AbstractService this$0 -> a
    com.google.common.util.concurrent.Service$State get(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
com.google.common.util.concurrent.AsyncFunction -> com.google.common.util.concurrent.AsyncFunction:
    com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.AtomicDouble -> com.google.common.util.concurrent.AtomicDouble:
    long serialVersionUID -> serialVersionUID
    long value -> a
    java.util.concurrent.atomic.AtomicLongFieldUpdater updater -> b
    double get() -> get
    void set(double) -> set
    void lazySet(double) -> lazySet
    double getAndSet(double) -> getAndSet
    boolean compareAndSet(double,double) -> compareAndSet
    boolean weakCompareAndSet(double,double) -> weakCompareAndSet
    double getAndAdd(double) -> getAndAdd
    double addAndGet(double) -> addAndGet
    java.lang.String toString() -> toString
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.util.concurrent.AtomicDoubleArray -> com.google.common.util.concurrent.AtomicDoubleArray:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.atomic.AtomicLongArray longs -> a
    int length() -> length
    double get(int) -> get
    void set(int,double) -> set
    void lazySet(int,double) -> lazySet
    double getAndSet(int,double) -> getAndSet
    boolean compareAndSet(int,double,double) -> compareAndSet
    boolean weakCompareAndSet(int,double,double) -> weakCompareAndSet
    double getAndAdd(int,double) -> getAndAdd
    double addAndGet(int,double) -> addAndGet
    java.lang.String toString() -> toString
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.util.concurrent.AtomicLongMap -> com.google.common.util.concurrent.AtomicLongMap:
    java.util.concurrent.ConcurrentHashMap map -> a
    java.util.Map asMap -> b
    com.google.common.util.concurrent.AtomicLongMap create() -> create
    com.google.common.util.concurrent.AtomicLongMap create(java.util.Map) -> create
    long get(java.lang.Object) -> get
    long incrementAndGet(java.lang.Object) -> incrementAndGet
    long decrementAndGet(java.lang.Object) -> decrementAndGet
    long addAndGet(java.lang.Object,long) -> addAndGet
    long getAndIncrement(java.lang.Object) -> getAndIncrement
    long getAndDecrement(java.lang.Object) -> getAndDecrement
    long getAndAdd(java.lang.Object,long) -> getAndAdd
    long put(java.lang.Object,long) -> put
    void putAll(java.util.Map) -> putAll
    long remove(java.lang.Object) -> remove
    void removeAllZeros() -> removeAllZeros
    long sum() -> sum
    java.util.Map asMap() -> asMap
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    java.lang.String toString() -> toString
com.google.common.util.concurrent.AtomicLongMap$1 -> DZ:
    com.google.common.util.concurrent.AtomicLongMap this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Atomics -> com.google.common.util.concurrent.Atomics:
    java.util.concurrent.atomic.AtomicReference newReference() -> newReference
    java.util.concurrent.atomic.AtomicReference newReference(java.lang.Object) -> newReference
    java.util.concurrent.atomic.AtomicReferenceArray newReferenceArray(int) -> newReferenceArray
    java.util.concurrent.atomic.AtomicReferenceArray newReferenceArray(java.lang.Object[]) -> newReferenceArray
com.google.common.util.concurrent.Callables -> com.google.common.util.concurrent.Callables:
    java.util.concurrent.Callable returning(java.lang.Object) -> returning
    java.util.concurrent.Callable threadRenaming(java.util.concurrent.Callable,com.google.common.base.Supplier) -> a
    java.lang.Runnable threadRenaming(java.lang.Runnable,com.google.common.base.Supplier) -> a
    boolean trySetName(java.lang.String,java.lang.Thread) -> b
    boolean access$000(java.lang.String,java.lang.Thread) -> a
com.google.common.util.concurrent.Callables$1 -> Ea:
    java.lang.Object val$value -> a
    java.lang.Object call() -> call
com.google.common.util.concurrent.Callables$2 -> Eb:
    com.google.common.base.Supplier val$nameSupplier -> a
    java.util.concurrent.Callable val$callable -> b
    java.lang.Object call() -> call
com.google.common.util.concurrent.Callables$3 -> Ec:
    com.google.common.base.Supplier val$nameSupplier -> a
    java.lang.Runnable val$task -> b
    void run() -> run
com.google.common.util.concurrent.CheckedFuture -> com.google.common.util.concurrent.CheckedFuture:
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.CycleDetectingLockFactory -> com.google.common.util.concurrent.CycleDetectingLockFactory:
    java.util.concurrent.ConcurrentMap lockGraphNodesPerType -> b
    java.util.logging.Logger logger -> c
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policy policy -> a
    java.lang.ThreadLocal acquiredLocks -> d
    com.google.common.util.concurrent.CycleDetectingLockFactory newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> newInstance
    java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String) -> newReentrantLock
    java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String,boolean) -> newReentrantLock
    java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String) -> newReentrantReadWriteLock
    java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String,boolean) -> newReentrantReadWriteLock
    com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering newInstanceWithExplicitOrdering(java.lang.Class,com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> newInstanceWithExplicitOrdering
    java.util.logging.Logger access$100() -> a
    void access$600(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> a
    void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> b
com.google.common.util.concurrent.CycleDetectingLockFactory$1 -> Ed:
    java.lang.Object initialValue() -> initialValue
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock -> Ee:
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> a
    boolean isAcquiredByCurrentThread() -> b
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock -> Ef:
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode lockGraphNode -> b
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> a
    boolean isAcquiredByCurrentThread() -> b
    void lock() -> lock
    void lockInterruptibly() -> lockInterruptibly
    boolean tryLock() -> tryLock
    boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock -> Eg:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock readWriteLock -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> b
    void lock() -> lock
    void lockInterruptibly() -> lockInterruptibly
    boolean tryLock() -> tryLock
    boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock -> Eh:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock readLock -> b
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock writeLock -> c
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode lockGraphNode -> d
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> a
    java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock() -> readLock
    java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock() -> writeLock
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> a
    boolean isAcquiredByCurrentThread() -> b
    java.util.concurrent.locks.Lock writeLock() -> writeLock
    java.util.concurrent.locks.Lock readLock() -> readLock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock -> Ei:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock readWriteLock -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> b
    void lock() -> lock
    void lockInterruptibly() -> lockInterruptibly
    boolean tryLock() -> tryLock
    boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace -> Ej:
    java.lang.StackTraceElement[] EMPTY_STACK_TRACE -> a
    java.util.Set EXCLUDED_CLASS_NAMES -> b
com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode -> Ek:
    java.util.Map allowedPriorLocks -> a
    java.util.Map disallowedPriorLocks -> b
    java.lang.String lockName -> c
    java.lang.String getLockName() -> a
    void checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.List) -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set) -> a
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies:
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies THROW -> THROW
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies WARN -> WARN
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies DISABLED -> DISABLED
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] $VALUES -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] values() -> values
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies valueOf(java.lang.String) -> valueOf
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1 -> El:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2 -> Em:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3 -> En:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policy -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policy:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException -> com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException:
    com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace conflictingStackTrace -> c
    com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace getConflictingStackTrace() -> getConflictingStackTrace
    java.lang.String getMessage() -> getMessage
com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering -> com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering:
    java.util.Map lockGraphNodes -> b
    java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.Enum) -> newReentrantLock
    java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.Enum,boolean) -> newReentrantLock
    java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.Enum) -> newReentrantReadWriteLock
    java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.Enum,boolean) -> newReentrantReadWriteLock
com.google.common.util.concurrent.ExecutionError -> com.google.common.util.concurrent.ExecutionError:
    long serialVersionUID -> serialVersionUID
com.google.common.util.concurrent.ExecutionList -> com.google.common.util.concurrent.ExecutionList:
    java.util.logging.Logger log -> a
    com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair runnables -> b
    boolean executed -> c
    void add(java.lang.Runnable,java.util.concurrent.Executor) -> add
    void execute() -> execute
    void executeListener(java.lang.Runnable,java.util.concurrent.Executor) -> a
com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair -> Eo:
    java.lang.Runnable runnable -> a
    java.util.concurrent.Executor executor -> b
    com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair next -> c
com.google.common.util.concurrent.ExecutionQueue -> Ep:
    java.util.logging.Logger logger -> a
    java.util.concurrent.ConcurrentLinkedQueue queuedListeners -> b
    java.util.concurrent.locks.ReentrantLock lock -> c
    void add(java.lang.Runnable,java.util.concurrent.Executor) -> a
    void execute() -> a
    java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.ExecutionQueue) -> a
    java.util.logging.Logger access$200() -> b
com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair -> Eq:
    java.util.concurrent.Executor executor -> b
    java.lang.Runnable runnable -> c
    boolean hasBeenExecuted -> d
    com.google.common.util.concurrent.ExecutionQueue this$0 -> a
    void run() -> run
    void access$000(com.google.common.util.concurrent.ExecutionQueue$RunnableExecutorPair) -> a
com.google.common.util.concurrent.FakeTimeLimiter -> com.google.common.util.concurrent.FakeTimeLimiter:
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
com.google.common.util.concurrent.ForwardingBlockingQueue -> com.google.common.util.concurrent.ForwardingBlockingQueue:
    java.util.concurrent.BlockingQueue delegate() -> delegate
    int drainTo(java.util.Collection,int) -> drainTo
    int drainTo(java.util.Collection) -> drainTo
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    void put(java.lang.Object) -> put
    int remainingCapacity() -> remainingCapacity
    java.lang.Object take() -> take
    java.util.Queue delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingCheckedFuture -> com.google.common.util.concurrent.ForwardingCheckedFuture:
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
    com.google.common.util.concurrent.CheckedFuture delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture -> com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture:
    com.google.common.util.concurrent.CheckedFuture delegate -> a
    com.google.common.util.concurrent.CheckedFuture delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingExecutorService -> com.google.common.util.concurrent.ForwardingExecutorService:
    java.util.concurrent.ExecutorService delegate() -> delegate
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    java.util.List invokeAll(java.util.Collection) -> invokeAll
    java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    boolean isShutdown() -> isShutdown
    boolean isTerminated() -> isTerminated
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    void execute(java.lang.Runnable) -> execute
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture:
    java.util.concurrent.Future delegate() -> delegate
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture:
    java.util.concurrent.Future delegate -> a
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture:
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture:
    com.google.common.util.concurrent.ListenableFuture delegate -> a
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListeningExecutorService -> com.google.common.util.concurrent.ForwardingListeningExecutorService:
    com.google.common.util.concurrent.ListeningExecutorService delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    java.util.concurrent.ExecutorService delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingService -> com.google.common.util.concurrent.ForwardingService:
    com.google.common.util.concurrent.Service delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    boolean isRunning() -> isRunning
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.Throwable failureCause() -> failureCause
    com.google.common.util.concurrent.Service startAsync() -> startAsync
    com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    void awaitRunning() -> awaitRunning
    void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    void awaitTerminated() -> awaitTerminated
    void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    com.google.common.util.concurrent.Service$State standardStartAndWait() -> standardStartAndWait
    com.google.common.util.concurrent.Service$State standardStopAndWait() -> standardStopAndWait
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.FutureCallback -> com.google.common.util.concurrent.FutureCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
com.google.common.util.concurrent.FutureFallback -> com.google.common.util.concurrent.FutureFallback:
    com.google.common.util.concurrent.ListenableFuture create(java.lang.Throwable) -> create
com.google.common.util.concurrent.Futures -> com.google.common.util.concurrent.Futures:
    com.google.common.util.concurrent.AsyncFunction DEREFERENCER -> a
    com.google.common.collect.Ordering WITH_STRING_PARAM_FIRST -> b
    com.google.common.util.concurrent.CheckedFuture makeChecked(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> makeChecked
    com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object) -> immediateFuture
    com.google.common.util.concurrent.CheckedFuture immediateCheckedFuture(java.lang.Object) -> immediateCheckedFuture
    com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable) -> immediateFailedFuture
    com.google.common.util.concurrent.ListenableFuture immediateCancelledFuture() -> immediateCancelledFuture
    com.google.common.util.concurrent.CheckedFuture immediateFailedCheckedFuture(java.lang.Exception) -> immediateFailedCheckedFuture
    com.google.common.util.concurrent.ListenableFuture withFallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureFallback) -> withFallback
    com.google.common.util.concurrent.ListenableFuture withFallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureFallback,java.util.concurrent.Executor) -> withFallback
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction) -> transform
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> transform
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> transform
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor) -> transform
    java.util.concurrent.Future lazyTransform(java.util.concurrent.Future,com.google.common.base.Function) -> lazyTransform
    com.google.common.util.concurrent.ListenableFuture dereference(com.google.common.util.concurrent.ListenableFuture) -> dereference
    com.google.common.util.concurrent.ListenableFuture allAsList(com.google.common.util.concurrent.ListenableFuture[]) -> allAsList
    com.google.common.util.concurrent.ListenableFuture allAsList(java.lang.Iterable) -> allAsList
    com.google.common.util.concurrent.ListenableFuture nonCancellationPropagating(com.google.common.util.concurrent.ListenableFuture) -> nonCancellationPropagating
    com.google.common.util.concurrent.ListenableFuture successfulAsList(com.google.common.util.concurrent.ListenableFuture[]) -> successfulAsList
    com.google.common.util.concurrent.ListenableFuture successfulAsList(java.lang.Iterable) -> successfulAsList
    void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback) -> addCallback
    void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor) -> addCallback
    java.lang.Object get(java.util.concurrent.Future,java.lang.Class) -> get
    java.lang.Object get(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,java.lang.Class) -> get
    void wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class) -> a
    java.lang.Object getUnchecked(java.util.concurrent.Future) -> getUnchecked
    java.lang.Exception newWithCause(java.lang.Class,java.lang.Throwable) -> a
    java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable) -> a
    com.google.common.util.concurrent.ListenableFuture listFuture(com.google.common.collect.ImmutableList,boolean,java.util.concurrent.Executor) -> a
com.google.common.util.concurrent.Futures$1 -> Er:
    com.google.common.base.Function val$function -> a
    com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$2 -> Es:
    java.util.concurrent.Future val$input -> a
    com.google.common.base.Function val$function -> b
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object applyTransformation(java.lang.Object) -> a
com.google.common.util.concurrent.Futures$3 -> Et:
    com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$4 -> Eu:
    com.google.common.util.concurrent.ListenableFuture val$future -> a
    com.google.common.util.concurrent.FutureCallback val$callback -> b
    void run() -> run
com.google.common.util.concurrent.Futures$5 -> Ev:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$6 -> Ew:
    java.lang.Object combine(java.util.List) -> a
com.google.common.util.concurrent.Futures$ChainingListenableFuture -> Ex:
    com.google.common.util.concurrent.AsyncFunction function -> a
    com.google.common.util.concurrent.ListenableFuture inputFuture -> b
    com.google.common.util.concurrent.ListenableFuture outputFuture -> c
    java.util.concurrent.CountDownLatch outputCreated -> d
    boolean cancel(boolean) -> cancel
    void cancel(java.util.concurrent.Future,boolean) -> a
    void run() -> run
    com.google.common.util.concurrent.ListenableFuture access$302(com.google.common.util.concurrent.Futures$ChainingListenableFuture,com.google.common.util.concurrent.ListenableFuture) -> a
com.google.common.util.concurrent.Futures$ChainingListenableFuture$1 -> Ey:
    com.google.common.util.concurrent.ListenableFuture val$outputFuture -> a
    com.google.common.util.concurrent.Futures$ChainingListenableFuture this$0 -> b
    void run() -> run
com.google.common.util.concurrent.Futures$CombinedFuture -> Ez:
    java.util.logging.Logger logger -> f
    com.google.common.collect.ImmutableCollection futures -> a
    boolean allMustSucceed -> b
    java.util.concurrent.atomic.AtomicInteger remaining -> c
    com.google.common.util.concurrent.Futures$FutureCombiner combiner -> d
    java.util.List values -> e
    void init(java.util.concurrent.Executor) -> a
    void setExceptionAndMaybeLog(java.lang.Throwable) -> a
    void access$400(com.google.common.util.concurrent.Futures$CombinedFuture,int,java.util.concurrent.Future) -> a
com.google.common.util.concurrent.Futures$CombinedFuture$1 -> EA:
    com.google.common.util.concurrent.Futures$CombinedFuture this$0 -> a
    void run() -> run
com.google.common.util.concurrent.Futures$CombinedFuture$2 -> EB:
    int val$index -> a
    com.google.common.util.concurrent.ListenableFuture val$listenable -> b
    com.google.common.util.concurrent.Futures$CombinedFuture this$0 -> c
    void run() -> run
com.google.common.util.concurrent.Futures$FallbackFuture -> EC:
    com.google.common.util.concurrent.ListenableFuture running -> a
    boolean cancel(boolean) -> cancel
    com.google.common.util.concurrent.ListenableFuture access$102(com.google.common.util.concurrent.Futures$FallbackFuture,com.google.common.util.concurrent.ListenableFuture) -> a
    com.google.common.util.concurrent.ListenableFuture access$100(com.google.common.util.concurrent.Futures$FallbackFuture) -> a
com.google.common.util.concurrent.Futures$FallbackFuture$1 -> ED:
    com.google.common.util.concurrent.FutureFallback val$fallback -> a
    com.google.common.util.concurrent.Futures$FallbackFuture this$0 -> b
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
com.google.common.util.concurrent.Futures$FallbackFuture$1$1 -> EE:
    com.google.common.util.concurrent.Futures$FallbackFuture$1 this$1 -> a
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
com.google.common.util.concurrent.Futures$FutureCombiner -> EF:
    java.lang.Object combine(java.util.List) -> a
com.google.common.util.concurrent.Futures$ImmediateCancelledFuture -> EG:
    java.util.concurrent.CancellationException thrown -> a
    boolean isCancelled() -> isCancelled
    java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$ImmediateFailedCheckedFuture -> EH:
    java.lang.Exception thrown -> a
    java.lang.Object get() -> get
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.Futures$ImmediateFailedFuture -> EI:
    java.lang.Throwable thrown -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$ImmediateFuture -> EJ:
    java.util.logging.Logger log -> a
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
com.google.common.util.concurrent.Futures$ImmediateSuccessfulCheckedFuture -> EK:
    java.lang.Object value -> a
    java.lang.Object get() -> get
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture -> EL:
    java.lang.Object value -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$MappingCheckedFuture -> EM:
    com.google.common.base.Function mapper -> a
    java.lang.Exception mapException(java.lang.Exception) -> mapException
com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture -> EN:
com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture$1 -> EO:
    com.google.common.util.concurrent.ListenableFuture val$delegate -> a
    com.google.common.util.concurrent.Futures$NonCancellationPropagatingFuture this$0 -> b
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
com.google.common.util.concurrent.JdkFutureAdapters -> com.google.common.util.concurrent.JdkFutureAdapters:
    com.google.common.util.concurrent.ListenableFuture listenInPoolThread(java.util.concurrent.Future) -> listenInPoolThread
    com.google.common.util.concurrent.ListenableFuture listenInPoolThread(java.util.concurrent.Future,java.util.concurrent.Executor) -> listenInPoolThread
com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter -> EP:
    java.util.concurrent.ThreadFactory threadFactory -> a
    java.util.concurrent.Executor defaultAdapterExecutor -> b
    java.util.concurrent.Executor adapterExecutor -> c
    com.google.common.util.concurrent.ExecutionList executionList -> d
    java.util.concurrent.atomic.AtomicBoolean hasListeners -> e
    java.util.concurrent.Future delegate -> f
    java.util.concurrent.Future delegate() -> delegate
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    java.lang.Object delegate() -> delegate
    java.util.concurrent.Future access$000(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> a
    com.google.common.util.concurrent.ExecutionList access$100(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> b
com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1 -> EQ:
    com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter this$0 -> a
    void run() -> run
com.google.common.util.concurrent.ListenableFuture -> com.google.common.util.concurrent.ListenableFuture:
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.ListenableFutureTask -> com.google.common.util.concurrent.ListenableFutureTask:
    com.google.common.util.concurrent.ExecutionList executionList -> a
    com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable) -> create
    com.google.common.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object) -> create
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    void done() -> done
com.google.common.util.concurrent.ListenableScheduledFuture -> com.google.common.util.concurrent.ListenableScheduledFuture:
com.google.common.util.concurrent.ListeningExecutorService -> com.google.common.util.concurrent.ListeningExecutorService:
    com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.List invokeAll(java.util.Collection) -> invokeAll
    java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
com.google.common.util.concurrent.ListeningScheduledExecutorService -> com.google.common.util.concurrent.ListeningScheduledExecutorService:
    com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    com.google.common.util.concurrent.ListenableScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    com.google.common.util.concurrent.ListenableScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
com.google.common.util.concurrent.Monitor -> com.google.common.util.concurrent.Monitor:
    boolean fair -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    com.google.common.util.concurrent.Monitor$Guard activeGuards -> c
    void enter() -> enter
    void enterInterruptibly() -> enterInterruptibly
    boolean enter(long,java.util.concurrent.TimeUnit) -> enter
    boolean enterInterruptibly(long,java.util.concurrent.TimeUnit) -> enterInterruptibly
    boolean tryEnter() -> tryEnter
    void enterWhen(com.google.common.util.concurrent.Monitor$Guard) -> enterWhen
    void enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> enterWhenUninterruptibly
    boolean enterWhen(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterWhen
    boolean enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterWhenUninterruptibly
    boolean enterIf(com.google.common.util.concurrent.Monitor$Guard) -> enterIf
    boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> enterIfInterruptibly
    boolean enterIf(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterIf
    boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterIfInterruptibly
    boolean tryEnterIf(com.google.common.util.concurrent.Monitor$Guard) -> tryEnterIf
    void waitFor(com.google.common.util.concurrent.Monitor$Guard) -> waitFor
    void waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> waitForUninterruptibly
    boolean waitFor(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> waitFor
    boolean waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> waitForUninterruptibly
    void leave() -> leave
    boolean isFair() -> isFair
    boolean isOccupied() -> isOccupied
    boolean isOccupiedByCurrentThread() -> isOccupiedByCurrentThread
    int getOccupiedDepth() -> getOccupiedDepth
    int getQueueLength() -> getQueueLength
    boolean hasQueuedThreads() -> hasQueuedThreads
    boolean hasQueuedThread(java.lang.Thread) -> hasQueuedThread
    boolean hasWaiters(com.google.common.util.concurrent.Monitor$Guard) -> hasWaiters
    int getWaitQueueLength(com.google.common.util.concurrent.Monitor$Guard) -> getWaitQueueLength
    void signalNextWaiter() -> a
    boolean isSatisfied(com.google.common.util.concurrent.Monitor$Guard) -> a
    void beginWaitingFor(com.google.common.util.concurrent.Monitor$Guard) -> b
    void endWaitingFor(com.google.common.util.concurrent.Monitor$Guard) -> c
    void await(com.google.common.util.concurrent.Monitor$Guard,boolean) -> a
    void awaitUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,boolean) -> b
    boolean awaitNanos(com.google.common.util.concurrent.Monitor$Guard,long,boolean) -> a
    java.util.concurrent.locks.ReentrantLock access$000(com.google.common.util.concurrent.Monitor) -> a
com.google.common.util.concurrent.Monitor$Guard -> com.google.common.util.concurrent.Monitor$Guard:
    com.google.common.util.concurrent.Monitor monitor -> b
    java.util.concurrent.locks.Condition condition -> c
    int waiterCount -> d
    com.google.common.util.concurrent.Monitor$Guard next -> e
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.MoreExecutors -> com.google.common.util.concurrent.MoreExecutors:
    java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingExecutorService
    java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingScheduledExecutorService
    void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> addDelayedShutdownHook
    java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor) -> getExitingExecutorService
    java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor) -> getExitingScheduledExecutorService
    com.google.common.util.concurrent.ListeningExecutorService sameThreadExecutor() -> sameThreadExecutor
    com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService) -> listeningDecorator
    com.google.common.util.concurrent.ListeningScheduledExecutorService listeningDecorator(java.util.concurrent.ScheduledExecutorService) -> listeningDecorator
    java.util.concurrent.ThreadFactory platformThreadFactory() -> platformThreadFactory
    boolean isAppEngine() -> a
    java.lang.Thread newThread(java.lang.String,java.lang.Runnable) -> a
    java.util.concurrent.Executor renamingDecorator(java.util.concurrent.Executor,com.google.common.base.Supplier) -> a
    java.util.concurrent.ScheduledExecutorService renamingDecorator(java.util.concurrent.ScheduledExecutorService,com.google.common.base.Supplier) -> a
    void access$000(java.util.concurrent.ThreadPoolExecutor) -> a
com.google.common.util.concurrent.MoreExecutors$2 -> ER:
    java.util.concurrent.Executor val$executor -> a
    com.google.common.base.Supplier val$nameSupplier -> b
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.MoreExecutors$4 -> ES:
    com.google.common.base.Supplier val$nameSupplier -> a
    java.util.concurrent.Callable wrapTask(java.util.concurrent.Callable) -> a
    java.lang.Runnable wrapTask(java.lang.Runnable) -> a
com.google.common.util.concurrent.MoreExecutors$Application -> ET:
    java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> a
    java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> a
    void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> a
com.google.common.util.concurrent.MoreExecutors$Application$1 -> EU:
    java.util.concurrent.ExecutorService val$service -> a
    long val$terminationTimeout -> b
    java.util.concurrent.TimeUnit val$timeUnit -> c
    com.google.common.util.concurrent.MoreExecutors$Application this$0 -> d
    void run() -> run
com.google.common.util.concurrent.MoreExecutors$ListeningDecorator -> EV:
    java.util.concurrent.ExecutorService delegate -> a
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    boolean isShutdown() -> isShutdown
    boolean isTerminated() -> isTerminated
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService -> EW:
    java.util.concurrent.locks.Lock lock -> a
    java.util.concurrent.locks.Condition termination -> b
    int runningTasks -> c
    boolean shutdown -> d
    void execute(java.lang.Runnable) -> execute
    boolean isShutdown() -> isShutdown
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    boolean isTerminated() -> isTerminated
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    void endTask() -> a
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator -> EX:
    java.util.concurrent.ScheduledExecutorService delegate -> a
    com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    com.google.common.util.concurrent.ListenableScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    com.google.common.util.concurrent.ListenableScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    com.google.common.util.concurrent.ListenableScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$ListenableScheduledTask -> EY:
    java.util.concurrent.ScheduledFuture scheduledDelegate -> a
    boolean cancel(boolean) -> cancel
    long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    int compareTo(java.lang.Object) -> compareTo
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator$NeverSuccessfulListenableFutureTask -> EZ:
    java.lang.Runnable delegate -> a
    void run() -> run
com.google.common.util.concurrent.RateLimiter -> com.google.common.util.concurrent.RateLimiter:
    com.google.common.util.concurrent.RateLimiter$SleepingTicker ticker -> d
    long offsetNanos -> e
    double storedPermits -> a
    double maxPermits -> b
    double stableIntervalMicros -> c
    java.lang.Object mutex -> f
    long nextFreeTicketMicros -> g
    com.google.common.util.concurrent.RateLimiter create(double) -> create
    com.google.common.util.concurrent.RateLimiter create(double,long,java.util.concurrent.TimeUnit) -> create
    void setRate(double) -> setRate
    void doSetRate(double,double) -> a
    double getRate() -> getRate
    void acquire() -> acquire
    void acquire(int) -> acquire
    boolean tryAcquire(long,java.util.concurrent.TimeUnit) -> tryAcquire
    boolean tryAcquire(int) -> tryAcquire
    boolean tryAcquire() -> tryAcquire
    boolean tryAcquire(int,long,java.util.concurrent.TimeUnit) -> tryAcquire
    void checkPermits(int) -> a
    long reserveNextTicket(double,long) -> a
    long storedPermitsToWaitTime(double,double) -> b
    void resync(long) -> a
    long readSafeMicros() -> a
    java.lang.String toString() -> toString
com.google.common.util.concurrent.RateLimiter$Bursty -> Fa:
    double maxBurstSeconds -> d
    void doSetRate(double,double) -> a
    long storedPermitsToWaitTime(double,double) -> b
com.google.common.util.concurrent.RateLimiter$SleepingTicker -> Fb:
    com.google.common.util.concurrent.RateLimiter$SleepingTicker SYSTEM_TICKER -> a
    void sleepMicrosUninterruptibly(long) -> a
com.google.common.util.concurrent.RateLimiter$SleepingTicker$1 -> Fc:
    long read() -> read
    void sleepMicrosUninterruptibly(long) -> a
com.google.common.util.concurrent.RateLimiter$WarmingUp -> Fd:
    long warmupPeriodMicros -> d
    double slope -> e
    double halfPermits -> f
    void doSetRate(double,double) -> a
    long storedPermitsToWaitTime(double,double) -> b
    double permitsToTime(double) -> a
com.google.common.util.concurrent.Service -> com.google.common.util.concurrent.Service:
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    com.google.common.util.concurrent.Service startAsync() -> startAsync
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    com.google.common.util.concurrent.Service stopAsync() -> stopAsync
    void awaitRunning() -> awaitRunning
    void awaitRunning(long,java.util.concurrent.TimeUnit) -> awaitRunning
    void awaitTerminated() -> awaitTerminated
    void awaitTerminated(long,java.util.concurrent.TimeUnit) -> awaitTerminated
    java.lang.Throwable failureCause() -> failureCause
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.Service$Listener -> com.google.common.util.concurrent.Service$Listener:
    void starting() -> starting
    void running() -> running
    void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.Service$State -> com.google.common.util.concurrent.Service$State:
    com.google.common.util.concurrent.Service$State NEW -> NEW
    com.google.common.util.concurrent.Service$State STARTING -> STARTING
    com.google.common.util.concurrent.Service$State RUNNING -> RUNNING
    com.google.common.util.concurrent.Service$State STOPPING -> STOPPING
    com.google.common.util.concurrent.Service$State TERMINATED -> TERMINATED
    com.google.common.util.concurrent.Service$State FAILED -> FAILED
    com.google.common.util.concurrent.Service$State[] $VALUES -> a
    com.google.common.util.concurrent.Service$State[] values() -> values
    com.google.common.util.concurrent.Service$State valueOf(java.lang.String) -> valueOf
    boolean isTerminal() -> a
com.google.common.util.concurrent.Service$State$1 -> Fe:
    boolean isTerminal() -> a
com.google.common.util.concurrent.Service$State$2 -> Ff:
    boolean isTerminal() -> a
com.google.common.util.concurrent.Service$State$3 -> Fg:
    boolean isTerminal() -> a
com.google.common.util.concurrent.Service$State$4 -> Fh:
    boolean isTerminal() -> a
com.google.common.util.concurrent.Service$State$5 -> Fi:
    boolean isTerminal() -> a
com.google.common.util.concurrent.Service$State$6 -> Fj:
    boolean isTerminal() -> a
com.google.common.util.concurrent.ServiceManager -> com.google.common.util.concurrent.ServiceManager:
    java.util.logging.Logger logger -> a
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState state -> b
    com.google.common.collect.ImmutableMap services -> c
    void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor) -> addListener
    void addListener(com.google.common.util.concurrent.ServiceManager$Listener) -> addListener
    com.google.common.util.concurrent.ServiceManager startAsync() -> startAsync
    void awaitHealthy() -> awaitHealthy
    void awaitHealthy(long,java.util.concurrent.TimeUnit) -> awaitHealthy
    com.google.common.util.concurrent.ServiceManager stopAsync() -> stopAsync
    void awaitStopped() -> awaitStopped
    void awaitStopped(long,java.util.concurrent.TimeUnit) -> awaitStopped
    boolean isHealthy() -> isHealthy
    com.google.common.collect.ImmutableMultimap servicesByState() -> servicesByState
    com.google.common.collect.ImmutableMap startupTimes() -> startupTimes
    java.lang.String toString() -> toString
    java.util.logging.Logger access$300() -> a
com.google.common.util.concurrent.ServiceManager$1 -> Fk:
    com.google.common.util.concurrent.ServiceManager this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.ServiceManager$EmptyServiceManagerWarning -> Fl:
com.google.common.util.concurrent.ServiceManager$Listener -> com.google.common.util.concurrent.ServiceManager$Listener:
    void healthy() -> healthy
    void stopped() -> stopped
    void failure(com.google.common.util.concurrent.Service) -> failure
com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair -> Fm:
    com.google.common.util.concurrent.ServiceManager$Listener listener -> a
    java.util.concurrent.Executor executor -> b
com.google.common.util.concurrent.ServiceManager$NoOpService -> Fn:
    void doStart() -> doStart
    void doStop() -> doStop
com.google.common.util.concurrent.ServiceManager$ServiceListener -> Fo:
    com.google.common.base.Stopwatch watch -> a
    com.google.common.util.concurrent.Service service -> b
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState state -> c
    void starting() -> starting
    void running() -> running
    void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
    void finishedStarting(boolean) -> a
    void start() -> a
    void startTimer() -> c
    long startupTimeMillis() -> b
com.google.common.util.concurrent.ServiceManager$ServiceManagerState -> Fp:
    com.google.common.util.concurrent.Monitor monitor -> a
    int numberOfServices -> b
    int unstartedServices -> c
    int unstoppedServices -> d
    com.google.common.util.concurrent.Monitor$Guard awaitHealthGuard -> e
    com.google.common.util.concurrent.Monitor$Guard stoppedGuard -> f
    java.util.List listeners -> g
    com.google.common.util.concurrent.ExecutionQueue queuedListeners -> h
    void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor) -> a
    void serviceFailed(com.google.common.util.concurrent.Service) -> a
    void serviceStopped(com.google.common.util.concurrent.Service) -> b
    void access$200(com.google.common.util.concurrent.ServiceManager$ServiceManagerState) -> a
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1 -> Fq:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> a
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2 -> Fr:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> a
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$3 -> Fs:
    com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> b
    void run() -> run
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$4 -> Ft:
    com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.Service val$service -> b
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> c
    void run() -> run
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$5 -> Fu:
    com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> b
    void run() -> run
com.google.common.util.concurrent.SettableFuture -> com.google.common.util.concurrent.SettableFuture:
    com.google.common.util.concurrent.SettableFuture create() -> create
    boolean set(java.lang.Object) -> set
    boolean setException(java.lang.Throwable) -> setException
com.google.common.util.concurrent.SimpleTimeLimiter -> com.google.common.util.concurrent.SimpleTimeLimiter:
    java.util.concurrent.ExecutorService executor -> a
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
    java.lang.Exception throwCause(java.lang.Exception,boolean) -> b
    java.util.Set findInterruptibleMethods(java.lang.Class) -> a
    java.lang.Exception access$000(java.lang.Exception,boolean) -> a
com.google.common.util.concurrent.SimpleTimeLimiter$1 -> Fv:
    java.lang.Object val$target -> a
    long val$timeoutDuration -> b
    java.util.concurrent.TimeUnit val$timeoutUnit -> c
    java.util.Set val$interruptibleMethods -> d
    com.google.common.util.concurrent.SimpleTimeLimiter this$0 -> e
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.google.common.util.concurrent.SimpleTimeLimiter$1$1 -> Fw:
    java.lang.reflect.Method val$method -> a
    java.lang.Object[] val$args -> b
    com.google.common.util.concurrent.SimpleTimeLimiter$1 this$1 -> c
    java.lang.Object call() -> call
com.google.common.util.concurrent.Striped -> com.google.common.util.concurrent.Striped:
    com.google.common.base.Supplier READ_WRITE_LOCK_SUPPLIER -> a
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getAt(int) -> getAt
    int indexFor(java.lang.Object) -> a
    int size() -> size
    java.lang.Iterable bulkGet(java.lang.Iterable) -> bulkGet
    com.google.common.util.concurrent.Striped lock(int) -> lock
    com.google.common.util.concurrent.Striped lazyWeakLock(int) -> lazyWeakLock
    com.google.common.util.concurrent.Striped semaphore(int,int) -> semaphore
    com.google.common.util.concurrent.Striped lazyWeakSemaphore(int,int) -> lazyWeakSemaphore
    com.google.common.util.concurrent.Striped readWriteLock(int) -> readWriteLock
    com.google.common.util.concurrent.Striped lazyWeakReadWriteLock(int) -> lazyWeakReadWriteLock
com.google.common.util.concurrent.Striped$1 -> Fx:
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$2 -> Fy:
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$3 -> Fz:
    int val$permits -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$4 -> FA:
    int val$permits -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$5 -> FB:
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$CompactStriped -> FC:
    java.lang.Object[] array -> a
    java.lang.Object getAt(int) -> getAt
    int size() -> size
com.google.common.util.concurrent.Striped$LazyStriped -> FD:
    java.util.concurrent.ConcurrentMap locks -> a
    com.google.common.base.Supplier supplier -> b
    int size -> c
    java.lang.Object getAt(int) -> getAt
    int size() -> size
com.google.common.util.concurrent.Striped$PaddedLock -> FE:
com.google.common.util.concurrent.Striped$PaddedSemaphore -> FF:
com.google.common.util.concurrent.Striped$PowerOfTwoStriped -> FG:
    int mask -> d
    int indexFor(java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> get
com.google.common.util.concurrent.ThreadFactoryBuilder -> com.google.common.util.concurrent.ThreadFactoryBuilder:
    java.lang.String nameFormat -> a
    java.lang.Boolean daemon -> b
    java.lang.Integer priority -> c
    java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler -> d
    java.util.concurrent.ThreadFactory backingThreadFactory -> e
    com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String) -> setNameFormat
    com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean) -> setDaemon
    com.google.common.util.concurrent.ThreadFactoryBuilder setPriority(int) -> setPriority
    com.google.common.util.concurrent.ThreadFactoryBuilder setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setUncaughtExceptionHandler
    com.google.common.util.concurrent.ThreadFactoryBuilder setThreadFactory(java.util.concurrent.ThreadFactory) -> setThreadFactory
    java.util.concurrent.ThreadFactory build() -> build
com.google.common.util.concurrent.ThreadFactoryBuilder$1 -> FH:
    java.util.concurrent.ThreadFactory val$backingThreadFactory -> a
    java.lang.String val$nameFormat -> b
    java.util.concurrent.atomic.AtomicLong val$count -> c
    java.lang.Boolean val$daemon -> d
    java.lang.Integer val$priority -> e
    java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler -> f
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.TimeLimiter -> com.google.common.util.concurrent.TimeLimiter:
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
com.google.common.util.concurrent.UncaughtExceptionHandlers -> com.google.common.util.concurrent.UncaughtExceptionHandlers:
    java.lang.Thread$UncaughtExceptionHandler systemExit() -> systemExit
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> FI:
    java.util.logging.Logger logger -> a
    java.lang.Runtime runtime -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.common.util.concurrent.UncheckedExecutionException -> com.google.common.util.concurrent.UncheckedExecutionException:
    long serialVersionUID -> serialVersionUID
com.google.common.util.concurrent.UncheckedTimeoutException -> com.google.common.util.concurrent.UncheckedTimeoutException:
    long serialVersionUID -> serialVersionUID
com.google.common.util.concurrent.Uninterruptibles -> com.google.common.util.concurrent.Uninterruptibles:
    void awaitUninterruptibly(java.util.concurrent.CountDownLatch) -> awaitUninterruptibly
    boolean awaitUninterruptibly(java.util.concurrent.CountDownLatch,long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    void joinUninterruptibly(java.lang.Thread) -> joinUninterruptibly
    java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    java.lang.Object getUninterruptibly(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> getUninterruptibly
    void joinUninterruptibly(java.lang.Thread,long,java.util.concurrent.TimeUnit) -> joinUninterruptibly
    java.lang.Object takeUninterruptibly(java.util.concurrent.BlockingQueue) -> takeUninterruptibly
    void putUninterruptibly(java.util.concurrent.BlockingQueue,java.lang.Object) -> putUninterruptibly
    void sleepUninterruptibly(long,java.util.concurrent.TimeUnit) -> sleepUninterruptibly
com.google.common.util.concurrent.WrappingExecutorService -> FJ:
    java.util.concurrent.ExecutorService delegate -> a
    java.util.concurrent.Callable wrapTask(java.util.concurrent.Callable) -> a
    java.lang.Runnable wrapTask(java.lang.Runnable) -> a
    com.google.common.collect.ImmutableList wrapTasks(java.util.Collection) -> a
    void execute(java.lang.Runnable) -> execute
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.List invokeAll(java.util.Collection) -> invokeAll
    java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    boolean isShutdown() -> isShutdown
    boolean isTerminated() -> isTerminated
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
com.google.common.util.concurrent.WrappingExecutorService$1 -> FK:
    java.util.concurrent.Callable val$wrapped -> a
    com.google.common.util.concurrent.WrappingExecutorService this$0 -> b
    void run() -> run
com.google.common.util.concurrent.WrappingScheduledExecutorService -> FL:
    java.util.concurrent.ScheduledExecutorService delegate -> b
    java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
com.google.common.xml.XmlEscapers -> com.google.common.xml.XmlEscapers:
    com.google.common.escape.Escaper XML_ESCAPER -> a
    com.google.common.escape.Escaper XML_CONTENT_ESCAPER -> b
    com.google.common.escape.Escaper XML_ATTRIBUTE_ESCAPER -> c
    com.google.common.escape.Escaper xmlContentEscaper() -> xmlContentEscaper
    com.google.common.escape.Escaper xmlAttributeEscaper() -> xmlAttributeEscaper
com.google.tagmanager.AdvertiserIdMacro -> FM:
    java.lang.String ID -> a
    android.content.Context mContext -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.AdvertisingTrackingEnabledMacro -> FN:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.AdwordsClickReferrerListener -> FO:
    android.content.Context context -> a
    void changed(java.util.Map) -> a
com.google.tagmanager.AdwordsClickReferrerMacro -> FP:
    java.lang.String ID -> a
    java.lang.String COMPONENT -> d
    java.lang.String CONVERSION_ID -> e
    android.content.Context context -> f
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.AppIdMacro -> FQ:
    java.lang.String ID -> a
    android.content.Context mContext -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.AppNameMacro -> FR:
    java.lang.String ID -> a
    android.content.Context mContext -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.AppVersionMacro -> FS:
    java.lang.String ID -> a
    android.content.Context mContext -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.ArbitraryPixelTag -> com.google.tagmanager.ArbitraryPixelTag:
    java.lang.String ID -> d
    java.lang.String URL -> e
    java.lang.String ADDITIONAL_PARAMS -> f
    java.lang.String UNREPEATABLE -> g
    java.lang.String ARBITRARY_PIXEL_UNREPEATABLE -> a
    java.util.Set unrepeatableIds -> h
    com.google.tagmanager.ArbitraryPixelTag$HitSenderProvider mHitSenderProvider -> i
    android.content.Context mContext -> j
    void evaluateTrackingTag(java.util.Map) -> b
    boolean idProcessed(java.lang.String) -> a
com.google.tagmanager.ArbitraryPixelTag$1 -> FT:
    android.content.Context val$context -> a
    com.google.tagmanager.HitSender get() -> get
com.google.tagmanager.ArbitraryPixelTag$HitSenderProvider -> com.google.tagmanager.ArbitraryPixelTag$HitSenderProvider:
    com.google.tagmanager.HitSender get() -> get
com.google.tagmanager.Base16 -> FU:
    java.lang.String encode(byte[]) -> a
    byte[] decode(java.lang.String) -> a
com.google.tagmanager.Base64 -> com.google.tagmanager.Base64:
    byte[] ALPHABET -> a
    byte[] WEBSAFE_ALPHABET -> b
    byte[] DECODABET -> c
    byte[] WEBSAFE_DECODABET -> d
    java.lang.String encode(byte[],boolean) -> a
    java.lang.String encodeWebSafe(byte[],boolean) -> b
    java.lang.String encode(byte[],int,int,byte[],boolean) -> a
    int decode4to3(byte[],int,byte[],int,byte[]) -> a
    byte[] decode(java.lang.String) -> a
    byte[] decodeWebSafe(java.lang.String) -> b
    byte[] decode(byte[],int,int,byte[]) -> a
com.google.tagmanager.Base64$Base64DecoderException -> com.google.tagmanager.Base64$Base64DecoderException:
com.google.tagmanager.Base64Encoder -> FV:
    java.lang.String encodeToString(byte[],int) -> a
    byte[] decode(java.lang.String,int) -> a
com.google.tagmanager.Cache -> FW:
    void put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
com.google.tagmanager.CacheFactory -> com.google.tagmanager.CacheFactory:
    com.google.tagmanager.CacheFactory$CacheSizeManager mDefaultSizeManager -> a
    com.google.tagmanager.Cache createCache(int,com.google.tagmanager.CacheFactory$CacheSizeManager) -> a
com.google.tagmanager.CacheFactory$1 -> FX:
    com.google.tagmanager.CacheFactory this$0 -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.google.tagmanager.CacheFactory$CacheSizeManager -> com.google.tagmanager.CacheFactory$CacheSizeManager:
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.google.tagmanager.Clock -> FY:
    long currentTimeMillis() -> a
com.google.tagmanager.ConstantMacro -> FZ:
    java.lang.String ID -> a
    java.lang.String VALUE -> d
    java.lang.String getFunctionId() -> b
    java.lang.String getValueKey() -> c
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.Container -> com.google.tagmanager.Container:
    android.content.Context mContext -> c
    java.lang.String mContainerId -> d
    com.google.tagmanager.TagManager mTagManager -> e
    com.google.tagmanager.LoadCallback mNetworkLoadCallback -> a
    com.google.tagmanager.LoadCallback mDiskLoadCallback -> b
    com.google.tagmanager.Container$ResourceStorage mResourceStorage -> f
    com.google.tagmanager.Container$ResourceLoaderScheduler mNetworkLoadScheduler -> g
    com.google.tagmanager.Container$Callback mUserCallback -> h
    com.google.tagmanager.Runtime mRuntime -> i
    com.google.tagmanager.CtfeHost mCtfeHost -> j
    com.google.tagmanager.Clock mClock -> k
    java.util.Map mFunctionCallMacroHandlers -> l
    java.util.Map mFunctionCallTagHandlers -> m
    long mLastRefreshTime -> n
    java.lang.String mCtfeServerAddress -> o
    java.lang.String mCtfeUrlPathAndQuery -> p
    java.lang.String mResourceVersion -> q
    int mResourceFormatVersion -> r
    com.google.analytics.containertag.proto.Serving$Resource mLastLoadedResource -> s
    long mLastRefreshMethodCalledTime -> t
    int mNumTokens -> u
    java.lang.String getContainerId() -> getContainerId
    boolean getBoolean(java.lang.String) -> getBoolean
    double getDouble(java.lang.String) -> getDouble
    long getLong(java.lang.String) -> getLong
    java.lang.String getString(java.lang.String) -> getString
    long getLastRefreshTime() -> getLastRefreshTime
    void refresh() -> refresh
    void close() -> close
    boolean isDefault() -> isDefault
    void load(com.google.tagmanager.Container$Callback) -> a
    void registerFunctionCallMacroHandler(java.lang.String,com.google.tagmanager.Container$FunctionCallMacroHandler) -> registerFunctionCallMacroHandler
    com.google.tagmanager.Container$FunctionCallMacroHandler getFunctionCallMacroHandler(java.lang.String) -> getFunctionCallMacroHandler
    void registerFunctionCallTagHandler(java.lang.String,com.google.tagmanager.Container$FunctionCallTagHandler) -> registerFunctionCallTagHandler
    com.google.tagmanager.Container$FunctionCallTagHandler getFunctionCallTagHandler(java.lang.String) -> getFunctionCallTagHandler
    void callRefreshSuccess(com.google.tagmanager.Container$RefreshType) -> a
    void callRefreshFailure(com.google.tagmanager.Container$RefreshType,com.google.tagmanager.Container$RefreshFailure) -> a
    void callRefreshBegin(com.google.tagmanager.Container$RefreshType) -> b
    void evaluateTags(java.lang.String) -> a
    void load(com.google.tagmanager.Container$Callback,com.google.tagmanager.Container$ResourceLoaderScheduler,com.google.tagmanager.Clock) -> a
    void loadAfterDelay(long) -> a
    void saveResourceToDisk(com.google.analytics.containertag.proto.Serving$Resource) -> a
    void initEvaluators(com.google.analytics.containertag.proto.Serving$Resource,boolean) -> a
    void initEvaluatorsWithExpandedResource(com.google.tagmanager.ResourceUtil$ExpandedResource) -> a
    void setRuntime(com.google.tagmanager.Runtime) -> a
    com.google.tagmanager.Runtime getRuntime() -> b
    void setCtfeServerAddress(java.lang.String) -> b
    void setCtfeUrlPathAndQuery(java.lang.String) -> c
    java.lang.String getCtfeUrlPathAndQuery() -> a
    boolean isContainerPreview() -> c
    boolean isDefaultContainerRefreshMode() -> d
    void access$000(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType) -> a
    void access$100(com.google.tagmanager.Container,com.google.analytics.containertag.proto.Serving$Resource,boolean) -> a
    long access$202(com.google.tagmanager.Container,long) -> a
    long access$200(com.google.tagmanager.Container) -> a
    void access$300(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType) -> b
    void access$400(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType,com.google.tagmanager.Container$RefreshFailure) -> a
    com.google.analytics.containertag.proto.Serving$Resource access$500(com.google.tagmanager.Container) -> b
    boolean access$600(com.google.tagmanager.Container) -> c
    void access$700(com.google.tagmanager.Container,com.google.analytics.containertag.proto.Serving$Resource) -> a
com.google.tagmanager.Container$1 -> Ga:
    com.google.tagmanager.Container this$0 -> a
    long currentTimeMillis() -> a
com.google.tagmanager.Container$2 -> Gb:
    com.google.tagmanager.Clock val$clock -> a
    com.google.tagmanager.Container this$0 -> b
    void startLoad() -> a
    void onFailure(com.google.tagmanager.LoadCallback$Failure) -> a
    void onSuccess(java.lang.Object) -> a
com.google.tagmanager.Container$3 -> Gc:
    com.google.tagmanager.Clock val$clock -> a
    com.google.tagmanager.Container this$0 -> b
    void startLoad() -> a
    void onFailure(com.google.tagmanager.LoadCallback$Failure) -> a
    void onSuccess(java.lang.Object) -> a
com.google.tagmanager.Container$4 -> Gd:
    int[] $SwitchMap$com$google$tagmanager$LoadCallback$Failure -> a
com.google.tagmanager.Container$Callback -> com.google.tagmanager.Container$Callback:
    void containerRefreshBegin(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType) -> containerRefreshBegin
    void containerRefreshSuccess(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType) -> containerRefreshSuccess
    void containerRefreshFailure(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType,com.google.tagmanager.Container$RefreshFailure) -> containerRefreshFailure
com.google.tagmanager.Container$FunctionCallMacroHandler -> com.google.tagmanager.Container$FunctionCallMacroHandler:
    java.lang.Object getValue(java.lang.String,java.util.Map) -> getValue
com.google.tagmanager.Container$FunctionCallMacroHandlerAdapter -> Ge:
    com.google.tagmanager.Container this$0 -> a
    java.lang.Object evaluate(java.lang.String,java.util.Map) -> evaluate
com.google.tagmanager.Container$FunctionCallTagHandler -> com.google.tagmanager.Container$FunctionCallTagHandler:
    void execute(java.lang.String,java.util.Map) -> execute
com.google.tagmanager.Container$FunctionCallTagHandlerAdapter -> Gf:
    com.google.tagmanager.Container this$0 -> a
    java.lang.Object evaluate(java.lang.String,java.util.Map) -> evaluate
com.google.tagmanager.Container$RefreshFailure -> com.google.tagmanager.Container$RefreshFailure:
    com.google.tagmanager.Container$RefreshFailure NO_SAVED_CONTAINER -> NO_SAVED_CONTAINER
    com.google.tagmanager.Container$RefreshFailure IO_ERROR -> IO_ERROR
    com.google.tagmanager.Container$RefreshFailure NO_NETWORK -> NO_NETWORK
    com.google.tagmanager.Container$RefreshFailure NETWORK_ERROR -> NETWORK_ERROR
    com.google.tagmanager.Container$RefreshFailure SERVER_ERROR -> SERVER_ERROR
    com.google.tagmanager.Container$RefreshFailure UNKNOWN_ERROR -> UNKNOWN_ERROR
    com.google.tagmanager.Container$RefreshFailure[] $VALUES -> a
    com.google.tagmanager.Container$RefreshFailure[] values() -> values
    com.google.tagmanager.Container$RefreshFailure valueOf(java.lang.String) -> valueOf
com.google.tagmanager.Container$RefreshType -> com.google.tagmanager.Container$RefreshType:
    com.google.tagmanager.Container$RefreshType SAVED -> SAVED
    com.google.tagmanager.Container$RefreshType NETWORK -> NETWORK
    com.google.tagmanager.Container$RefreshType[] $VALUES -> a
    com.google.tagmanager.Container$RefreshType[] values() -> values
    com.google.tagmanager.Container$RefreshType valueOf(java.lang.String) -> valueOf
com.google.tagmanager.Container$ResourceLoaderScheduler -> Gg:
    void loadAfterDelay(long,java.lang.String) -> a
    void close() -> a
    void setLoadCallback(com.google.tagmanager.LoadCallback) -> a
    void setCtfeURLPathAndQuery(java.lang.String) -> a
com.google.tagmanager.Container$ResourceStorage -> Gh:
    void setLoadCallback(com.google.tagmanager.LoadCallback) -> a
    void loadResourceFromDiskInBackground() -> a
    void saveResourceToDiskInBackground(com.google.tagmanager.proto.Resource$ResourceWithMetadata) -> a
    com.google.analytics.containertag.proto.Serving$Resource loadResourceFromContainerAsset(java.lang.String) -> a
    com.google.tagmanager.ResourceUtil$ExpandedResource loadExpandedResourceFromJsonAsset(java.lang.String) -> b
    void close() -> b
com.google.tagmanager.ContainerOpener -> com.google.tagmanager.ContainerOpener:
    long DEFAULT_TIMEOUT_IN_MILLIS -> DEFAULT_TIMEOUT_IN_MILLIS
    java.util.Map mContainerIdNotifiersMap -> a
    com.google.tagmanager.TagManager mTagManager -> b
    java.lang.String mContainerId -> c
    long mTimeoutInMillis -> d
    com.google.tagmanager.ContainerOpener$Notifier mNotifier -> e
    com.google.tagmanager.Container mContainer -> f
    boolean mHaveNotified -> g
    com.google.tagmanager.Clock mClock -> h
    void openContainer(com.google.tagmanager.TagManager,java.lang.String,com.google.tagmanager.ContainerOpener$OpenType,java.lang.Long,com.google.tagmanager.ContainerOpener$Notifier) -> openContainer
    com.google.tagmanager.ContainerOpener$ContainerFuture openContainer(com.google.tagmanager.TagManager,java.lang.String,com.google.tagmanager.ContainerOpener$OpenType,java.lang.Long) -> openContainer
    void callNotifiers(com.google.tagmanager.Container) -> a
    void access$000(com.google.tagmanager.ContainerOpener,com.google.tagmanager.Container) -> a
    com.google.tagmanager.Container access$100(com.google.tagmanager.ContainerOpener) -> a
com.google.tagmanager.ContainerOpener$1 -> Gi:
    com.google.tagmanager.ContainerOpener this$0 -> a
    long currentTimeMillis() -> a
com.google.tagmanager.ContainerOpener$2 -> Gj:
    com.google.tagmanager.ContainerOpener$ContainerFutureImpl val$future -> a
    void containerAvailable(com.google.tagmanager.Container) -> containerAvailable
com.google.tagmanager.ContainerOpener$3 -> Gk:
    com.google.tagmanager.ContainerOpener this$0 -> a
    void run() -> run
com.google.tagmanager.ContainerOpener$ContainerFuture -> com.google.tagmanager.ContainerOpener$ContainerFuture:
    com.google.tagmanager.Container get() -> get
    boolean isDone() -> isDone
com.google.tagmanager.ContainerOpener$ContainerFutureImpl -> Gl:
    boolean mHaveGotten -> a
    com.google.tagmanager.Container mContainer -> b
    java.util.concurrent.Semaphore mContainerIsReady -> c
    com.google.tagmanager.Container get() -> get
    void setContainer(com.google.tagmanager.Container) -> a
    boolean isDone() -> isDone
com.google.tagmanager.ContainerOpener$Notifier -> com.google.tagmanager.ContainerOpener$Notifier:
    void containerAvailable(com.google.tagmanager.Container) -> containerAvailable
com.google.tagmanager.ContainerOpener$OpenType -> com.google.tagmanager.ContainerOpener$OpenType:
    com.google.tagmanager.ContainerOpener$OpenType PREFER_NON_DEFAULT -> PREFER_NON_DEFAULT
    com.google.tagmanager.ContainerOpener$OpenType PREFER_FRESH -> PREFER_FRESH
    com.google.tagmanager.ContainerOpener$OpenType[] $VALUES -> a
    com.google.tagmanager.ContainerOpener$OpenType[] values() -> values
    com.google.tagmanager.ContainerOpener$OpenType valueOf(java.lang.String) -> valueOf
com.google.tagmanager.ContainerOpener$WaitForFresh -> Gm:
    long mOldestTimeToBeFresh -> b
    com.google.tagmanager.ContainerOpener this$0 -> a
    void containerRefreshBegin(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType) -> containerRefreshBegin
    void containerRefreshSuccess(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType) -> containerRefreshSuccess
    void containerRefreshFailure(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType,com.google.tagmanager.Container$RefreshFailure) -> containerRefreshFailure
com.google.tagmanager.ContainerOpener$WaitForNonDefaultRefresh -> Gn:
    com.google.tagmanager.ContainerOpener this$0 -> a
    void containerRefreshBegin(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType) -> containerRefreshBegin
    void containerRefreshSuccess(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType) -> containerRefreshSuccess
    void containerRefreshFailure(com.google.tagmanager.Container,com.google.tagmanager.Container$RefreshType,com.google.tagmanager.Container$RefreshFailure) -> containerRefreshFailure
com.google.tagmanager.ContainsPredicate -> Go:
    java.lang.String ID -> a
    boolean evaluateString(java.lang.String,java.lang.String,java.util.Map) -> a
com.google.tagmanager.CtfeHost -> Gp:
    java.lang.String mCtfeServerAddress -> a
    void setCtfeServerAddress(java.lang.String) -> a
com.google.tagmanager.CustomFunctionCall -> com.google.tagmanager.CustomFunctionCall:
    java.lang.String ID -> a
    java.lang.String FUNCTION_CALL_NAME -> d
    java.lang.String ADDITIONAL_PARAMS -> e
    com.google.tagmanager.CustomFunctionCall$CustomEvaluator mFunctionCallEvaluator -> f
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.CustomFunctionCall$CustomEvaluator -> com.google.tagmanager.CustomFunctionCall$CustomEvaluator:
    java.lang.Object evaluate(java.lang.String,java.util.Map) -> evaluate
com.google.tagmanager.DataLayer -> com.google.tagmanager.DataLayer:
    java.lang.Object OBJECT_NOT_PRESENT -> OBJECT_NOT_PRESENT
    java.util.concurrent.ConcurrentHashMap mListeners -> a
    java.util.Map mModel -> b
    java.util.concurrent.locks.ReentrantLock mPushLock -> c
    java.util.LinkedList mUpdateQueue -> d
    void push(java.lang.Object,java.lang.Object) -> push
    void push(java.util.Map) -> push
    void processUpdate(java.util.Map) -> a
    java.lang.Object get(java.lang.String) -> get
    java.util.Map mapOf(java.lang.Object[]) -> mapOf
    java.util.List listOf(java.lang.Object[]) -> listOf
    void registerListener(com.google.tagmanager.DataLayer$Listener) -> a
    java.util.Map expandKeyValue(java.lang.Object,java.lang.Object) -> a
    void mergeMap(java.util.Map,java.util.Map) -> a
    void mergeList(java.util.List,java.util.List) -> a
com.google.tagmanager.DataLayer$Listener -> Gq:
    void changed(java.util.Map) -> a
com.google.tagmanager.DataLayerEventEvaluationInfoBuilder -> Gr:
    com.google.tagmanager.ResolvedFunctionCallBuilder createAndAddResult() -> a
    com.google.tagmanager.RuleEvaluationStepInfoBuilder createRulesEvaluation() -> b
com.google.tagmanager.DataLayerMacro -> Gs:
    java.lang.String ID -> a
    java.lang.String NAME -> d
    java.lang.String DEFAULT_VALUE -> e
    com.google.tagmanager.DataLayer mDataLayer -> f
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.DefaultLogger -> Gt:
    com.google.tagmanager.Logger$LogLevel mLogLevel -> a
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    com.google.tagmanager.Logger$LogLevel getLogLevel() -> getLogLevel
    void setLogLevel(com.google.tagmanager.Logger$LogLevel) -> setLogLevel
com.google.tagmanager.DelayedHitSender -> Gu:
    com.google.tagmanager.DelayedHitSender sInstance -> a
    java.lang.Object sInstanceLock -> b
    java.lang.String mWrapperUrl -> c
    java.lang.String mWrapperQueryParameter -> d
    com.google.tagmanager.RateLimiter mRateLimiter -> e
    com.google.tagmanager.HitSendingThread mSendingThread -> f
    com.google.tagmanager.HitSender getInstance(android.content.Context) -> a
    boolean sendHit(java.lang.String) -> a
com.google.tagmanager.DeviceIdMacro -> Gv:
    java.lang.String ID -> a
    android.content.Context mContext -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.DeviceNameMacro -> Gw:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.Dispatcher -> Gx:
    void dispatchHits(java.util.List) -> a
    boolean okToDispatch() -> a
com.google.tagmanager.EncodeMacro -> Gy:
    java.lang.String ID -> a
    java.lang.String ARG0 -> d
    java.lang.String NO_PADDING -> e
    java.lang.String INPUT_FORMAT -> f
    java.lang.String OUTPUT_FORMAT -> g
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.EndsWithPredicate -> Gz:
    java.lang.String ID -> a
    boolean evaluateString(java.lang.String,java.lang.String,java.util.Map) -> a
com.google.tagmanager.EqualsPredicate -> GA:
    java.lang.String ID -> a
    boolean evaluateString(java.lang.String,java.lang.String,java.util.Map) -> a
com.google.tagmanager.EventInfoBuilder -> GB:
    com.google.tagmanager.MacroEvaluationInfoBuilder createMacroEvaluationInfoBuilder() -> a
    com.google.tagmanager.DataLayerEventEvaluationInfoBuilder createDataLayerEventEvaluationInfoBuilder() -> b
com.google.tagmanager.EventInfoDistributor -> GC:
    com.google.tagmanager.EventInfoBuilder createMacroEvalutionEventInfo$58f0611f() -> a
    com.google.tagmanager.EventInfoBuilder createDataLayerEventEvaluationEventInfo$58f0611f() -> b
com.google.tagmanager.EventMacro -> GD:
    java.lang.String ID -> a
    com.google.tagmanager.Runtime mRuntime -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.FunctionCallImplementation -> GE:
    java.util.Set mRequiredKeys -> b
    java.lang.String mFunctionId -> c
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.FutureApis -> GF:
    int version() -> a
com.google.tagmanager.GreaterEqualsPredicate -> GG:
    java.lang.String ID -> a
    boolean evaluateNumber$25466e74(com.google.tagmanager.TypedNumber,com.google.tagmanager.TypedNumber) -> a
com.google.tagmanager.GreaterThanPredicate -> GH:
    java.lang.String ID -> a
    boolean evaluateNumber$25466e74(com.google.tagmanager.TypedNumber,com.google.tagmanager.TypedNumber) -> a
com.google.tagmanager.GtmVersionMacro -> GI:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.HashMacro -> GJ:
    java.lang.String ID -> a
    java.lang.String ARG0 -> d
    java.lang.String ALGORITHM -> e
    java.lang.String INPUT_FORMAT -> f
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.Hit -> GK:
    long mHitId -> a
    long mHitTime -> d
    long mHitFirstDispatchTime -> b
    java.lang.String mHitUrl -> c
com.google.tagmanager.HitSender -> GL:
    boolean sendHit(java.lang.String) -> a
com.google.tagmanager.HitSendingThread -> GM:
    void sendHit(java.lang.String) -> a
    void queueToThread(java.lang.Runnable) -> a
com.google.tagmanager.HitSendingThreadImpl -> GN:
    java.util.concurrent.LinkedBlockingQueue queue -> a
    boolean mDisabled -> b
    boolean mClosed -> c
    com.google.tagmanager.HitSendingThreadImpl sInstance -> d
    com.google.tagmanager.HitStore mUrlStore -> e
    android.content.Context mContext -> f
    com.google.tagmanager.HitSendingThreadImpl getInstance(android.content.Context) -> a
    void sendHit(java.lang.String) -> a
    void queueToThread(java.lang.Runnable) -> a
    void run() -> run
    com.google.tagmanager.HitStore access$000(com.google.tagmanager.HitSendingThreadImpl) -> a
    android.content.Context access$100(com.google.tagmanager.HitSendingThreadImpl) -> b
    com.google.tagmanager.HitStore access$002(com.google.tagmanager.HitSendingThreadImpl,com.google.tagmanager.HitStore) -> a
com.google.tagmanager.HitSendingThreadImpl$1 -> GO:
    com.google.tagmanager.HitSendingThread val$thread -> a
    long val$hitTime -> b
    java.lang.String val$url -> c
    com.google.tagmanager.HitSendingThreadImpl this$0 -> d
    void run() -> run
com.google.tagmanager.HitStore -> GP:
    void putHit(long,java.lang.String) -> a
    void dispatch() -> a
com.google.tagmanager.HitStoreStateListener -> GQ:
    void reportStoreIsEmpty(boolean) -> a
com.google.tagmanager.HttpNetworkClient -> GR:
    org.apache.http.client.HttpClient mClient -> a
    java.io.InputStream getInputStream(java.lang.String) -> a
    void close() -> a
com.google.tagmanager.HttpUrlConnectionNetworkClient -> GS:
    java.net.HttpURLConnection mConnection -> a
    java.io.InputStream getInputStream(java.lang.String) -> a
    void close() -> a
com.google.tagmanager.InstallReferrerMacro -> GT:
    java.lang.String ID -> a
    java.lang.String COMPONENT -> d
    android.content.Context context -> e
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.InstallReferrerReceiver -> com.google.tagmanager.InstallReferrerReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.tagmanager.InstallReferrerService -> com.google.tagmanager.InstallReferrerService:
    com.google.analytics.tracking.android.CampaignTrackingService gaService -> a
    android.content.Context contextOverride -> b
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.google.tagmanager.InstallReferrerUtil -> GU:
    java.lang.String installReferrer -> b
    java.util.Map clickReferrers -> a
    void cacheInstallReferrer(java.lang.String) -> a
    void saveInstallReferrer(android.content.Context,java.lang.String) -> a
    java.lang.String getInstallReferrer(android.content.Context,java.lang.String) -> b
    void addClickReferrer(android.content.Context,java.lang.String) -> c
    java.lang.String extractComponent(java.lang.String,java.lang.String) -> a
    java.lang.String getClickReferrer(android.content.Context,java.lang.String,java.lang.String) -> a
com.google.tagmanager.JoinerMacro -> GV:
    java.lang.String ID -> a
    java.lang.String ARG0 -> d
    java.lang.String ITEM_SEPARATOR -> e
    java.lang.String KEY_VALUE_SEPARATOR -> f
    java.lang.String ESCAPE -> g
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
    void addTo(java.util.Set,java.lang.String) -> a
    void append(java.lang.StringBuilder,java.lang.String,com.google.tagmanager.JoinerMacro$EscapeType,java.util.Set) -> a
    java.lang.String escape(java.lang.String,com.google.tagmanager.JoinerMacro$EscapeType,java.util.Set) -> a
com.google.tagmanager.JoinerMacro$1 -> GW:
    int[] $SwitchMap$com$google$analytics$midtier$proto$containertag$TypeSystem$Value$Type -> a
    int[] $SwitchMap$com$google$tagmanager$JoinerMacro$EscapeType -> b
com.google.tagmanager.JoinerMacro$EscapeType -> GX:
    com.google.tagmanager.JoinerMacro$EscapeType NONE -> a
    com.google.tagmanager.JoinerMacro$EscapeType URL -> b
    com.google.tagmanager.JoinerMacro$EscapeType BACKSLASH -> c
    com.google.tagmanager.JoinerMacro$EscapeType[] $VALUES -> d
    com.google.tagmanager.JoinerMacro$EscapeType[] values() -> values
    com.google.tagmanager.JoinerMacro$EscapeType valueOf(java.lang.String) -> valueOf
com.google.tagmanager.JsonUtils -> GY:
    com.google.tagmanager.ResourceUtil$ExpandedResource expandedResourceFromJsonString(java.lang.String) -> a
    java.lang.Object jsonObjectToObject(java.lang.Object) -> a
com.google.tagmanager.LRUCache -> GZ:
    android.util.LruCache lruCache -> a
    void put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
com.google.tagmanager.LRUCache$1 -> Ha:
    com.google.tagmanager.CacheFactory$CacheSizeManager val$sizeManager -> a
    com.google.tagmanager.LRUCache this$0 -> b
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.google.tagmanager.LanguageMacro -> Hb:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.LessEqualsPredicate -> Hc:
    java.lang.String ID -> a
    boolean evaluateNumber$25466e74(com.google.tagmanager.TypedNumber,com.google.tagmanager.TypedNumber) -> a
com.google.tagmanager.LessThanPredicate -> Hd:
    java.lang.String ID -> a
    boolean evaluateNumber$25466e74(com.google.tagmanager.TypedNumber,com.google.tagmanager.TypedNumber) -> a
com.google.tagmanager.LoadCallback -> com.google.tagmanager.LoadCallback:
    void startLoad() -> a
    void onSuccess(java.lang.Object) -> a
    void onFailure(com.google.tagmanager.LoadCallback$Failure) -> a
com.google.tagmanager.LoadCallback$Failure -> com.google.tagmanager.LoadCallback$Failure:
    com.google.tagmanager.LoadCallback$Failure NOT_AVAILABLE -> NOT_AVAILABLE
    com.google.tagmanager.LoadCallback$Failure IO_ERROR -> IO_ERROR
    com.google.tagmanager.LoadCallback$Failure SERVER_ERROR -> SERVER_ERROR
    com.google.tagmanager.LoadCallback$Failure[] $VALUES -> a
    com.google.tagmanager.LoadCallback$Failure[] values() -> values
    com.google.tagmanager.LoadCallback$Failure valueOf(java.lang.String) -> valueOf
com.google.tagmanager.Log -> He:
    com.google.tagmanager.Logger sLogger -> a
    void setLogger(com.google.tagmanager.Logger) -> a
    com.google.tagmanager.Logger getLogger() -> a
    void e(java.lang.String) -> a
    void e(java.lang.String,java.lang.Throwable) -> a
    void w(java.lang.String) -> b
    void w(java.lang.String,java.lang.Throwable) -> b
    void i(java.lang.String) -> c
    void d(java.lang.String) -> d
    void v(java.lang.String) -> e
    com.google.tagmanager.Logger$LogLevel getLogLevel() -> b
com.google.tagmanager.Logger -> com.google.tagmanager.Logger:
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    void setLogLevel(com.google.tagmanager.Logger$LogLevel) -> setLogLevel
    com.google.tagmanager.Logger$LogLevel getLogLevel() -> getLogLevel
com.google.tagmanager.Logger$LogLevel -> com.google.tagmanager.Logger$LogLevel:
    com.google.tagmanager.Logger$LogLevel VERBOSE -> VERBOSE
    com.google.tagmanager.Logger$LogLevel DEBUG -> DEBUG
    com.google.tagmanager.Logger$LogLevel INFO -> INFO
    com.google.tagmanager.Logger$LogLevel WARNING -> WARNING
    com.google.tagmanager.Logger$LogLevel ERROR -> ERROR
    com.google.tagmanager.Logger$LogLevel NONE -> NONE
    com.google.tagmanager.Logger$LogLevel[] $VALUES -> a
    com.google.tagmanager.Logger$LogLevel[] values() -> values
    com.google.tagmanager.Logger$LogLevel valueOf(java.lang.String) -> valueOf
com.google.tagmanager.MacroEvaluationInfoBuilder -> Hf:
    com.google.tagmanager.ResolvedFunctionCallBuilder createResult() -> a
    com.google.tagmanager.RuleEvaluationStepInfoBuilder createRulesEvaluation() -> b
com.google.tagmanager.MobileAdwordsUniqueIdMacro -> Hg:
    java.lang.String ID -> a
    android.content.Context mContext -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.NetworkClient -> Hh:
    java.io.InputStream getInputStream(java.lang.String) -> a
    void close() -> a
com.google.tagmanager.NetworkClientFactory -> Hi:
com.google.tagmanager.NetworkReceiver -> Hj:
    java.lang.String SELF_IDENTIFYING_EXTRA -> a
    com.google.tagmanager.ServiceManager mManager -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void register(android.content.Context) -> a
    void sendRadioPoweredBroadcast(android.content.Context) -> b
com.google.tagmanager.NoOpLogger -> Hk:
    void e(java.lang.String) -> e
    void e(java.lang.String,java.lang.Throwable) -> e
    void w(java.lang.String) -> w
    void w(java.lang.String,java.lang.Throwable) -> w
    void i(java.lang.String) -> i
    void i(java.lang.String,java.lang.Throwable) -> i
    void d(java.lang.String) -> d
    void d(java.lang.String,java.lang.Throwable) -> d
    void v(java.lang.String) -> v
    void v(java.lang.String,java.lang.Throwable) -> v
    com.google.tagmanager.Logger$LogLevel getLogLevel() -> getLogLevel
    void setLogLevel(com.google.tagmanager.Logger$LogLevel) -> setLogLevel
com.google.tagmanager.NoopDataLayerEventEvaluationInfoBuilder -> Hl:
    com.google.tagmanager.ResolvedFunctionCallBuilder createAndAddResult() -> a
    com.google.tagmanager.RuleEvaluationStepInfoBuilder createRulesEvaluation() -> b
com.google.tagmanager.NoopEventInfoBuilder -> Hm:
    com.google.tagmanager.MacroEvaluationInfoBuilder createMacroEvaluationInfoBuilder() -> a
    com.google.tagmanager.DataLayerEventEvaluationInfoBuilder createDataLayerEventEvaluationInfoBuilder() -> b
com.google.tagmanager.NoopEventInfoDistributor -> Hn:
    com.google.tagmanager.EventInfoBuilder createMacroEvalutionEventInfo$58f0611f() -> a
    com.google.tagmanager.EventInfoBuilder createDataLayerEventEvaluationEventInfo$58f0611f() -> b
com.google.tagmanager.NoopMacroEvaluationInfoBuilder -> Ho:
    com.google.tagmanager.ResolvedFunctionCallBuilder createResult() -> a
    com.google.tagmanager.RuleEvaluationStepInfoBuilder createRulesEvaluation() -> b
com.google.tagmanager.NoopResolvedFunctionCallBuilder -> Hp:
    com.google.tagmanager.ResolvedPropertyBuilder createResolvedPropertyBuilder$12d57696() -> a
com.google.tagmanager.NoopResolvedPropertyBuilder -> Hq:
    com.google.tagmanager.ValueBuilder createPropertyValueBuilder$65365732() -> a
com.google.tagmanager.NoopResolvedRuleBuilder -> com.google.tagmanager.NoopResolvedRuleBuilder:
    com.google.tagmanager.ResolvedFunctionCallBuilder createNegativePredicate() -> a
    com.google.tagmanager.ResolvedFunctionCallBuilder createPositivePredicate() -> b
    com.google.tagmanager.ResolvedFunctionCallTranslatorList getAddedMacroFunctions() -> c
    com.google.tagmanager.ResolvedFunctionCallTranslatorList getRemovedMacroFunctions() -> d
    com.google.tagmanager.ResolvedFunctionCallTranslatorList getAddedTagFunctions() -> e
    com.google.tagmanager.ResolvedFunctionCallTranslatorList getRemovedTagFunctions() -> f
com.google.tagmanager.NoopResolvedRuleBuilder$NoopResolvedFunctionCallTranslatorList -> com.google.tagmanager.NoopResolvedRuleBuilder$NoopResolvedFunctionCallTranslatorList:
    com.google.tagmanager.NoopResolvedRuleBuilder this$0 -> a
    void translateAndAddAll(java.util.List,java.util.List) -> translateAndAddAll
com.google.tagmanager.NoopRuleEvaluationStepInfoBuilder -> Hr:
    com.google.tagmanager.ResolvedRuleBuilder createResolvedRuleBuilder() -> a
com.google.tagmanager.NoopValueBuilder -> Hs:
    com.google.tagmanager.ValueBuilder getListItem$63419419() -> a
    com.google.tagmanager.ValueBuilder getMapKey$63419419() -> b
    com.google.tagmanager.ValueBuilder getMapValue$63419419() -> c
    com.google.tagmanager.ValueBuilder getTemplateToken$63419419() -> d
    com.google.tagmanager.MacroEvaluationInfoBuilder createValueMacroEvaluationInfoExtension() -> e
com.google.tagmanager.NumberPredicate -> Ht:
    boolean evaluateNoDefaultValues(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.Map) -> a
    boolean evaluateNumber$25466e74(com.google.tagmanager.TypedNumber,com.google.tagmanager.TypedNumber) -> a
com.google.tagmanager.ObjectAndStatic -> Hu:
    java.lang.Object mObject -> a
    boolean mIsStatic -> b
com.google.tagmanager.OsVersionMacro -> Hv:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.PersistentHitStore -> Hw:
    java.lang.String CREATE_HITS_TABLE -> a
    com.google.tagmanager.PersistentHitStore$UrlDatabaseHelper mDbHelper -> b
    com.google.tagmanager.Dispatcher mDispatcher -> c
    com.google.tagmanager.HitStoreStateListener mListener -> d
    android.content.Context mContext -> e
    java.lang.String mDatabaseName -> f
    long mLastDeleteStaleHitsTime -> g
    com.google.tagmanager.Clock mClock -> h
    void putHit(long,java.lang.String) -> a
    java.util.List peekHitIds(int) -> a
    java.util.List peekHits(int) -> b
    void deleteHits(java.lang.String[]) -> a
    void deleteHit(long) -> a
    int getNumStoredHits() -> c
    int getNumStoredUntriedHits() -> d
    void dispatch() -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase(java.lang.String) -> a
    void access$000(com.google.tagmanager.PersistentHitStore,long) -> a
    com.google.tagmanager.Clock access$100(com.google.tagmanager.PersistentHitStore) -> a
    void access$200(com.google.tagmanager.PersistentHitStore,long,long) -> a
    java.lang.String access$300(com.google.tagmanager.PersistentHitStore) -> b
    android.content.Context access$400(com.google.tagmanager.PersistentHitStore) -> c
    java.lang.String access$500() -> b
com.google.tagmanager.PersistentHitStore$1 -> Hx:
    com.google.tagmanager.PersistentHitStore this$0 -> a
    long currentTimeMillis() -> a
com.google.tagmanager.PersistentHitStore$StoreDispatchListener -> Hy:
    com.google.tagmanager.PersistentHitStore this$0 -> a
    void onHitDispatched(com.google.tagmanager.Hit) -> onHitDispatched
    void onHitPermanentDispatchFailure(com.google.tagmanager.Hit) -> onHitPermanentDispatchFailure
    void onHitTransientDispatchFailure(com.google.tagmanager.Hit) -> onHitTransientDispatchFailure
com.google.tagmanager.PersistentHitStore$UrlDatabaseHelper -> Hz:
    boolean mBadDatabase -> b
    long mLastDatabaseCheckTime -> c
    com.google.tagmanager.PersistentHitStore this$0 -> a
    boolean tablePresent(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.tagmanager.PlatformMacro -> HA:
    java.lang.String ID -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value PLATFORM -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.Predicate -> HB:
    java.lang.String ARG0 -> a
    java.lang.String ARG1 -> d
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
    boolean isCacheable() -> a
    boolean evaluateNoDefaultValues(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.Map) -> a
com.google.tagmanager.PreviewActivity -> com.google.tagmanager.PreviewActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.google.tagmanager.PreviewManager -> HC:
    com.google.tagmanager.PreviewManager sInstance -> a
    com.google.tagmanager.PreviewManager$PreviewMode mPreviewMode -> b
    java.lang.String mContainerId -> c
    java.lang.String mCTFEUrlPath -> d
    java.lang.String mCTFEUrlQuery -> e
    com.google.tagmanager.PreviewManager getInstance() -> a
    boolean setPreviewData(android.net.Uri) -> a
    com.google.tagmanager.PreviewManager$PreviewMode getPreviewMode() -> b
    java.lang.String getCTFEUrlPath() -> c
    java.lang.String getContainerId() -> d
    java.lang.String getContainerId(java.lang.String) -> a
com.google.tagmanager.PreviewManager$PreviewMode -> HD:
    com.google.tagmanager.PreviewManager$PreviewMode NONE -> a
    com.google.tagmanager.PreviewManager$PreviewMode CONTAINER -> b
    com.google.tagmanager.PreviewManager$PreviewMode CONTAINER_DEBUG -> c
    com.google.tagmanager.PreviewManager$PreviewMode[] $VALUES -> d
    com.google.tagmanager.PreviewManager$PreviewMode[] values() -> values
    com.google.tagmanager.PreviewManager$PreviewMode valueOf(java.lang.String) -> valueOf
com.google.tagmanager.ProtoExtensionRegistry -> HE:
    com.google.tagmanager.protobuf.ExtensionRegistryLite registry -> a
    com.google.tagmanager.protobuf.ExtensionRegistryLite getRegistry() -> a
com.google.tagmanager.RandomMacro -> HF:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.RateLimiter -> HG:
    boolean tokenAvailable() -> a
com.google.tagmanager.RegexGroupMacro -> HH:
    java.lang.String ID -> a
    java.lang.String TO_MATCH -> d
    java.lang.String REGEX -> e
    java.lang.String IGNORE_CASE -> f
    java.lang.String GROUP -> g
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.RegexPredicate -> HI:
    java.lang.String ID -> a
    java.lang.String IGNORE_CASE -> d
    boolean evaluateString(java.lang.String,java.lang.String,java.util.Map) -> a
com.google.tagmanager.ResolutionMacro -> HJ:
    java.lang.String ID -> a
    android.content.Context mContext -> d
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.ResolvedFunctionCallBuilder -> HK:
    com.google.tagmanager.ResolvedPropertyBuilder createResolvedPropertyBuilder$12d57696() -> a
com.google.tagmanager.ResolvedFunctionCallTranslatorList -> HL:
    void translateAndAddAll(java.util.List,java.util.List) -> translateAndAddAll
com.google.tagmanager.ResolvedPropertyBuilder -> HM:
    com.google.tagmanager.ValueBuilder createPropertyValueBuilder$65365732() -> a
com.google.tagmanager.ResolvedRuleBuilder -> HN:
    com.google.tagmanager.ResolvedFunctionCallBuilder createNegativePredicate() -> a
    com.google.tagmanager.ResolvedFunctionCallBuilder createPositivePredicate() -> b
    com.google.tagmanager.ResolvedFunctionCallTranslatorList getAddedMacroFunctions() -> c
    com.google.tagmanager.ResolvedFunctionCallTranslatorList getRemovedMacroFunctions() -> d
    com.google.tagmanager.ResolvedFunctionCallTranslatorList getAddedTagFunctions() -> e
    com.google.tagmanager.ResolvedFunctionCallTranslatorList getRemovedTagFunctions() -> f
com.google.tagmanager.ResourceLoader -> HO:
    android.content.Context mContext -> a
    com.google.tagmanager.NetworkClientFactory mClientFactory -> b
    java.lang.String mContainerId -> c
    java.lang.String mDefaultCtfeUrlPathAndQuery -> d
    com.google.tagmanager.LoadCallback mCallback -> e
    com.google.tagmanager.CtfeHost mCtfeHost -> f
    java.lang.String mCtfeUrlPathAndQuery -> g
    java.lang.String mPreviousVersion -> h
    void run() -> run
    void setLoadCallback(com.google.tagmanager.LoadCallback) -> a
    void setCtfeURLPathAndQuery(java.lang.String) -> a
    void setPreviousVersion(java.lang.String) -> b
com.google.tagmanager.ResourceLoaderSchedulerImpl -> HP:
    java.lang.String mContainerId -> a
    android.content.Context mContext -> b
    java.util.concurrent.ScheduledExecutorService mExecutor -> c
    com.google.tagmanager.ResourceLoaderSchedulerImpl$ResourceLoaderFactory mResourceLoaderFactory -> d
    java.util.concurrent.ScheduledFuture mFuture -> e
    boolean mClosed -> f
    com.google.tagmanager.CtfeHost mCtfeHost -> g
    java.lang.String mCtfeUrlPathAndQuery -> h
    com.google.tagmanager.LoadCallback mCallback -> i
    void close() -> a
    void setLoadCallback(com.google.tagmanager.LoadCallback) -> a
    void loadAfterDelay(long,java.lang.String) -> a
    void setCtfeURLPathAndQuery(java.lang.String) -> a
    void ensureNotClosed() -> b
com.google.tagmanager.ResourceLoaderSchedulerImpl$1 -> HQ:
    com.google.tagmanager.ResourceLoaderSchedulerImpl this$0 -> a
    java.util.concurrent.ScheduledExecutorService createExecutorService() -> a
com.google.tagmanager.ResourceLoaderSchedulerImpl$2 -> HR:
    com.google.tagmanager.ResourceLoaderSchedulerImpl this$0 -> a
    com.google.tagmanager.ResourceLoader createResourceLoader(com.google.tagmanager.CtfeHost) -> a
com.google.tagmanager.ResourceLoaderSchedulerImpl$ResourceLoaderFactory -> HS:
    com.google.tagmanager.ResourceLoader createResourceLoader(com.google.tagmanager.CtfeHost) -> a
com.google.tagmanager.ResourceLoaderSchedulerImpl$ScheduledExecutorServiceFactory -> HT:
    java.util.concurrent.ScheduledExecutorService createExecutorService() -> a
com.google.tagmanager.ResourceStorageImpl -> HU:
    android.content.Context mContext -> c
    java.lang.String mContainerId -> a
    java.util.concurrent.ExecutorService mExecutor -> d
    com.google.tagmanager.LoadCallback mCallback -> b
    void setLoadCallback(com.google.tagmanager.LoadCallback) -> a
    void loadResourceFromDiskInBackground() -> a
    void saveResourceToDiskInBackground(com.google.tagmanager.proto.Resource$ResourceWithMetadata) -> a
    com.google.analytics.containertag.proto.Serving$Resource loadResourceFromContainerAsset(java.lang.String) -> a
    com.google.tagmanager.ResourceUtil$ExpandedResource loadExpandedResourceFromJsonAsset(java.lang.String) -> b
    void close() -> b
    boolean saveResourceToDisk(com.google.tagmanager.proto.Resource$ResourceWithMetadata) -> b
    java.io.File getResourceFile() -> c
    java.lang.String stringFromInputStream(java.io.InputStream) -> a
com.google.tagmanager.ResourceStorageImpl$1 -> HV:
    com.google.tagmanager.ResourceStorageImpl this$0 -> a
    void run() -> run
com.google.tagmanager.ResourceStorageImpl$2 -> HW:
    com.google.tagmanager.proto.Resource$ResourceWithMetadata val$resource -> a
    com.google.tagmanager.ResourceStorageImpl this$0 -> b
    void run() -> run
com.google.tagmanager.ResourceUtil -> com.google.tagmanager.ResourceUtil:
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value$Builder newValueBuilderBasedOnValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value expandValue(int,com.google.analytics.containertag.proto.Serving$Resource,com.google.analytics.midtier.proto.containertag.TypeSystem$Value[],java.util.Set) -> a
    com.google.analytics.containertag.proto.Serving$ServingValue getServingValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> b
    void logAndThrow(java.lang.String) -> a
    java.lang.Object getWithBoundsCheck(java.util.List,int,java.lang.String) -> a
    com.google.tagmanager.ResourceUtil$ExpandedFunctionCall expandFunctionCall$3c4a1e57(com.google.analytics.containertag.proto.Serving$FunctionCall,com.google.analytics.containertag.proto.Serving$Resource,com.google.analytics.midtier.proto.containertag.TypeSystem$Value[]) -> a
    com.google.tagmanager.ResourceUtil$ExpandedRule expandRule(com.google.analytics.containertag.proto.Serving$Rule,java.util.List,java.util.List,java.util.List,com.google.analytics.containertag.proto.Serving$Resource) -> a
com.google.tagmanager.ResourceUtil$1 -> HX:
    int[] $SwitchMap$com$google$analytics$midtier$proto$containertag$TypeSystem$Value$Type -> a
com.google.tagmanager.ResourceUtil$ExpandedFunctionCall -> com.google.tagmanager.ResourceUtil$ExpandedFunctionCall:
    java.util.Map mPropertiesMap -> a
    com.google.tagmanager.ResourceUtil$ExpandedFunctionCallBuilder newBuilder() -> newBuilder
    void updateCacheableProperty(java.lang.String,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> updateCacheableProperty
    java.util.Map getProperties() -> getProperties
    java.lang.String toString() -> toString
com.google.tagmanager.ResourceUtil$ExpandedFunctionCallBuilder -> com.google.tagmanager.ResourceUtil$ExpandedFunctionCallBuilder:
    java.util.Map mPropertiesMap -> a
    com.google.tagmanager.ResourceUtil$ExpandedFunctionCallBuilder addProperty(java.lang.String,com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> addProperty
    com.google.tagmanager.ResourceUtil$ExpandedFunctionCall build() -> build
com.google.tagmanager.ResourceUtil$ExpandedResource -> com.google.tagmanager.ResourceUtil$ExpandedResource:
    java.util.List mRules -> a
    java.util.Map mMacros -> b
    java.lang.String mVersion -> c
    int mResourceFormatVersion -> d
    com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder newBuilder() -> newBuilder
    java.util.List getRules() -> getRules
    java.lang.String getVersion() -> getVersion
    int getResourceFormatVersion() -> getResourceFormatVersion
    java.util.List getMacros(java.lang.String) -> getMacros
    java.util.Map getAllMacros() -> getAllMacros
    java.lang.String toString() -> toString
com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder -> com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder:
    java.util.List mRules -> a
    java.util.List mTags -> b
    java.util.List mPredicates -> c
    java.util.Map mMacros -> d
    java.lang.String mVersion -> e
    int mResourceFormatVersion -> f
    com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder addRule(com.google.tagmanager.ResourceUtil$ExpandedRule) -> addRule
    com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder addMacro(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall) -> addMacro
    com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder setVersion(java.lang.String) -> setVersion
    com.google.tagmanager.ResourceUtil$ExpandedResourceBuilder setResourceFormatVersion(int) -> setResourceFormatVersion
    com.google.tagmanager.ResourceUtil$ExpandedResource build() -> build
com.google.tagmanager.ResourceUtil$ExpandedRule -> com.google.tagmanager.ResourceUtil$ExpandedRule:
    java.util.List mPositivePredicates -> a
    java.util.List mNegativePredicates -> b
    java.util.List mAddTags -> c
    java.util.List mRemoveTags -> d
    java.util.List mAddMacros -> e
    java.util.List mRemoveMacros -> f
    java.util.List mAddMacroRuleNames -> g
    java.util.List mRemoveMacroRuleNames -> h
    java.util.List mAddTagRuleNames -> i
    java.util.List mRemoveTagRuleNames -> j
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder newBuilder() -> newBuilder
    java.util.List getPositivePredicates() -> getPositivePredicates
    java.util.List getNegativePredicates() -> getNegativePredicates
    java.util.List getAddTags() -> getAddTags
    java.util.List getRemoveTags() -> getRemoveTags
    java.util.List getAddMacros() -> getAddMacros
    java.util.List getAddMacroRuleNames() -> getAddMacroRuleNames
    java.util.List getRemoveMacroRuleNames() -> getRemoveMacroRuleNames
    java.util.List getAddTagRuleNames() -> getAddTagRuleNames
    java.util.List getRemoveTagRuleNames() -> getRemoveTagRuleNames
    java.util.List getRemoveMacros() -> getRemoveMacros
    java.lang.String toString() -> toString
com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder -> com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder:
    java.util.List mPositivePredicates -> a
    java.util.List mNegativePredicates -> b
    java.util.List mAddTags -> c
    java.util.List mRemoveTags -> d
    java.util.List mAddMacros -> e
    java.util.List mRemoveMacros -> f
    java.util.List mAddMacroRuleNames -> g
    java.util.List mRemoveMacroRuleNames -> h
    java.util.List mAddTagRuleNames -> i
    java.util.List mRemoveTagRuleNames -> j
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addPositivePredicate(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall) -> addPositivePredicate
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addNegativePredicate(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall) -> addNegativePredicate
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addAddTag(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall) -> addAddTag
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addAddTagRuleName(java.lang.String) -> addAddTagRuleName
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addRemoveTag(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall) -> addRemoveTag
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addRemoveTagRuleName(java.lang.String) -> addRemoveTagRuleName
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addAddMacro(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall) -> addAddMacro
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addAddMacroRuleName(java.lang.String) -> addAddMacroRuleName
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addRemoveMacro(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall) -> addRemoveMacro
    com.google.tagmanager.ResourceUtil$ExpandedRuleBuilder addRemoveMacroRuleName(java.lang.String) -> addRemoveMacroRuleName
    com.google.tagmanager.ResourceUtil$ExpandedRule build() -> build
com.google.tagmanager.ResourceUtil$InvalidResourceException -> com.google.tagmanager.ResourceUtil$InvalidResourceException:
com.google.tagmanager.RuleEvaluationStepInfoBuilder -> HY:
    com.google.tagmanager.ResolvedRuleBuilder createResolvedRuleBuilder() -> a
com.google.tagmanager.Runtime -> HZ:
    com.google.tagmanager.ObjectAndStatic DEFAULT_VALUE_AND_STATIC -> a
    com.google.tagmanager.ResourceUtil$ExpandedResource mResource -> b
    com.google.tagmanager.EventInfoDistributor eventInfoDistributor -> c
    java.util.Map mTrackingTagMap -> d
    java.util.Map mPredicateMap -> e
    java.util.Map mMacroMap -> f
    com.google.tagmanager.Cache mFunctionCallCache -> g
    com.google.tagmanager.Cache mMacroEvaluationCache -> h
    java.util.Set mRules -> i
    java.util.Map mMacroLookup -> j
    java.lang.String mCurrentEventName -> k
    void evaluateTags(java.lang.String) -> a
    com.google.tagmanager.ObjectAndStatic evaluateMacroReference(java.lang.String) -> b
    void setCurrentEventName(java.lang.String) -> c
    java.lang.String getCurrentEventName() -> a
    com.google.tagmanager.ObjectAndStatic calculateMacrosToRun$77d8e894(java.util.Set,java.util.Map,java.util.Map,java.util.Map,java.util.Map,java.util.Set,com.google.tagmanager.RuleEvaluationStepInfoBuilder) -> a
    com.google.tagmanager.Runtime$MacroInfo getOrAddMacroInfo(java.util.Map,java.lang.String) -> a
    com.google.tagmanager.ObjectAndStatic calculateGenericToRun(java.util.Set,java.util.Set,com.google.tagmanager.Runtime$AddRemoveSetPopulator,com.google.tagmanager.RuleEvaluationStepInfoBuilder) -> a
    java.lang.String getFunctionName(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall) -> a
    void addFunctionImplToMap(java.util.Map,com.google.tagmanager.FunctionCallImplementation) -> a
    void addMacro(com.google.tagmanager.FunctionCallImplementation) -> a
    void addTrackingTag(com.google.tagmanager.FunctionCallImplementation) -> b
    void addPredicate(com.google.tagmanager.FunctionCallImplementation) -> c
    com.google.tagmanager.ObjectAndStatic evaluatePredicate(com.google.tagmanager.ResourceUtil$ExpandedFunctionCall,java.util.Set,com.google.tagmanager.ResolvedFunctionCallBuilder) -> a
    com.google.tagmanager.ObjectAndStatic evaluatePredicatesInRule(com.google.tagmanager.ResourceUtil$ExpandedRule,java.util.Set,com.google.tagmanager.ResolvedRuleBuilder) -> a
    com.google.tagmanager.ObjectAndStatic evaluateMacroReferenceCycleDetection(java.lang.String,java.util.Set,com.google.tagmanager.MacroEvaluationInfoBuilder) -> a
    com.google.tagmanager.ObjectAndStatic macroExpandValue(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.Set,com.google.tagmanager.ValueBuilder) -> a
    com.google.tagmanager.ObjectAndStatic executeFunction(java.util.Map,com.google.tagmanager.ResourceUtil$ExpandedFunctionCall,java.util.Set,com.google.tagmanager.ResolvedFunctionCallBuilder) -> a
com.google.tagmanager.Runtime$1 -> Ia:
    com.google.tagmanager.Runtime this$0 -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.google.tagmanager.Runtime$2 -> Ib:
    com.google.tagmanager.Runtime this$0 -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
com.google.tagmanager.Runtime$3 -> Ic:
    java.util.Map val$addMacros -> a
    java.util.Map val$addMacroRuleNames -> b
    java.util.Map val$removeMacros -> c
    java.util.Map val$removeMacroRuleNames -> d
    com.google.tagmanager.Runtime this$0 -> e
    void rulePassed(com.google.tagmanager.ResourceUtil$ExpandedRule,java.util.Set,java.util.Set,com.google.tagmanager.ResolvedRuleBuilder) -> a
com.google.tagmanager.Runtime$4 -> Id:
    com.google.tagmanager.Runtime this$0 -> a
    void rulePassed(com.google.tagmanager.ResourceUtil$ExpandedRule,java.util.Set,java.util.Set,com.google.tagmanager.ResolvedRuleBuilder) -> a
com.google.tagmanager.Runtime$5 -> Ie:
    int[] $SwitchMap$com$google$analytics$midtier$proto$containertag$TypeSystem$Value$Type -> a
com.google.tagmanager.Runtime$AddRemoveSetPopulator -> If:
    void rulePassed(com.google.tagmanager.ResourceUtil$ExpandedRule,java.util.Set,java.util.Set,com.google.tagmanager.ResolvedRuleBuilder) -> a
com.google.tagmanager.Runtime$MacroInfo -> Ig:
    java.util.Set mRules -> a
    java.util.Map mAddMacros -> b
    java.util.Map mRemoveMacros -> c
    java.util.Map mAddMacroNames -> d
    java.util.Map mRemoveMacroNames -> e
    com.google.tagmanager.ResourceUtil$ExpandedFunctionCall mDefault -> f
    void addRule(com.google.tagmanager.ResourceUtil$ExpandedRule) -> a
com.google.tagmanager.RuntimeVersionMacro -> Ih:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.SdkVersionMacro -> Ii:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.SendHitRateLimiter -> Ij:
    long mMillisecondsPerToken -> a
    int mMaxTokens -> b
    double mTokens -> c
    long mLastTrackTime -> d
    java.lang.Object mTokenLock -> e
    boolean tokenAvailable() -> a
com.google.tagmanager.ServiceManager -> Ik:
    void updateConnectivityStatus(boolean) -> a
    void onRadioPowered() -> a
com.google.tagmanager.ServiceManagerImpl -> Il:
    java.lang.Object MSG_OBJECT -> a
    android.content.Context ctx -> b
    com.google.tagmanager.HitStore store -> c
    com.google.tagmanager.HitSendingThread thread -> d
    int dispatchPeriodInSeconds -> e
    boolean pendingDispatch -> f
    boolean readyToDispatch -> g
    boolean connected -> h
    boolean listenForNetwork -> i
    com.google.tagmanager.HitStoreStateListener listener -> j
    android.os.Handler handler -> k
    com.google.tagmanager.NetworkReceiver networkReceiver -> l
    boolean storeIsEmpty -> m
    com.google.tagmanager.ServiceManagerImpl instance -> n
    com.google.tagmanager.ServiceManagerImpl getInstance() -> b
    void initialize(android.content.Context,com.google.tagmanager.HitSendingThread) -> a
    com.google.tagmanager.HitStore getStore() -> c
    void dispatch() -> d
    void updatePowerSaveMode(boolean,boolean) -> a
    void updateConnectivityStatus(boolean) -> a
    void onRadioPowered() -> a
    boolean access$000(com.google.tagmanager.ServiceManagerImpl) -> a
    java.lang.Object access$100() -> e
    int access$200(com.google.tagmanager.ServiceManagerImpl) -> b
    boolean access$300(com.google.tagmanager.ServiceManagerImpl) -> c
    android.os.Handler access$400(com.google.tagmanager.ServiceManagerImpl) -> d
    com.google.tagmanager.HitStore access$500(com.google.tagmanager.ServiceManagerImpl) -> e
com.google.tagmanager.ServiceManagerImpl$1 -> Im:
    com.google.tagmanager.ServiceManagerImpl this$0 -> a
    void reportStoreIsEmpty(boolean) -> a
com.google.tagmanager.ServiceManagerImpl$2 -> In:
    com.google.tagmanager.ServiceManagerImpl this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.google.tagmanager.ServiceManagerImpl$3 -> Io:
    com.google.tagmanager.ServiceManagerImpl this$0 -> a
    void run() -> run
com.google.tagmanager.SharedPreferencesUtil -> Ip:
    void saveAsync(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
com.google.tagmanager.SharedPreferencesUtil$1 -> Iq:
    android.content.SharedPreferences$Editor val$editor -> a
    void run() -> run
com.google.tagmanager.SimpleCache -> Ir:
    java.util.Map mHashMap -> a
    int mMaxSize -> b
    com.google.tagmanager.CacheFactory$CacheSizeManager mSizeManager -> c
    int mTotalSize -> d
    void put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
com.google.tagmanager.SimpleNetworkDispatcher -> com.google.tagmanager.SimpleNetworkDispatcher:
    java.lang.String userAgent -> a
    org.apache.http.client.HttpClient httpClient -> b
    android.content.Context ctx -> c
    com.google.tagmanager.SimpleNetworkDispatcher$DispatchListener dispatchListener -> d
    boolean okToDispatch() -> a
    void dispatchHits(java.util.List) -> a
    org.apache.http.HttpEntityEnclosingRequest constructGtmRequest(java.net.URL) -> a
    void logDebugInformation(org.apache.http.HttpEntityEnclosingRequest) -> a
    java.net.URL getUrl(com.google.tagmanager.Hit) -> a
com.google.tagmanager.SimpleNetworkDispatcher$DispatchListener -> com.google.tagmanager.SimpleNetworkDispatcher$DispatchListener:
    void onHitDispatched(com.google.tagmanager.Hit) -> onHitDispatched
    void onHitPermanentDispatchFailure(com.google.tagmanager.Hit) -> onHitPermanentDispatchFailure
    void onHitTransientDispatchFailure(com.google.tagmanager.Hit) -> onHitTransientDispatchFailure
com.google.tagmanager.StartsWithPredicate -> Is:
    java.lang.String ID -> a
    boolean evaluateString(java.lang.String,java.lang.String,java.util.Map) -> a
com.google.tagmanager.StringPredicate -> It:
    boolean evaluateNoDefaultValues(com.google.analytics.midtier.proto.containertag.TypeSystem$Value,com.google.analytics.midtier.proto.containertag.TypeSystem$Value,java.util.Map) -> a
    boolean evaluateString(java.lang.String,java.lang.String,java.util.Map) -> a
com.google.tagmanager.TagManager -> com.google.tagmanager.TagManager:
    com.google.tagmanager.TagManager$ContainerProvider mContainerProvider -> a
    android.content.Context mContext -> b
    com.google.tagmanager.DataLayer mDataLayer -> c
    com.google.tagmanager.TagManager$RefreshMode mRefreshMode -> d
    java.lang.String mCtfeServerAddr -> e
    java.util.concurrent.ConcurrentMap mContainers -> f
    com.google.tagmanager.TagManager sInstance -> g
    com.google.tagmanager.TagManager getInstance(android.content.Context) -> getInstance
    com.google.tagmanager.DataLayer getDataLayer() -> getDataLayer
    com.google.tagmanager.Container openContainer(java.lang.String,com.google.tagmanager.Container$Callback) -> openContainer
    android.content.Context getContext() -> getContext
    void setLogger(com.google.tagmanager.Logger) -> setLogger
    com.google.tagmanager.Logger getLogger() -> getLogger
    void setRefreshMode(com.google.tagmanager.TagManager$RefreshMode) -> setRefreshMode
    com.google.tagmanager.TagManager$RefreshMode getRefreshMode() -> getRefreshMode
    com.google.tagmanager.Container getContainer(java.lang.String) -> getContainer
    boolean setPreviewData(android.net.Uri) -> a
    boolean removeContainer(java.lang.String) -> a
    void access$000(com.google.tagmanager.TagManager,java.lang.String) -> a
com.google.tagmanager.TagManager$1 -> Iu:
    com.google.tagmanager.TagManager this$0 -> a
    void changed(java.util.Map) -> a
com.google.tagmanager.TagManager$2 -> Iv:
    com.google.tagmanager.Container newContainer(android.content.Context,java.lang.String,com.google.tagmanager.TagManager) -> a
com.google.tagmanager.TagManager$3 -> Iw:
    int[] $SwitchMap$com$google$tagmanager$PreviewManager$PreviewMode -> a
com.google.tagmanager.TagManager$ContainerProvider -> Ix:
    com.google.tagmanager.Container newContainer(android.content.Context,java.lang.String,com.google.tagmanager.TagManager) -> a
com.google.tagmanager.TagManager$Logger -> com.google.tagmanager.TagManager$Logger:
com.google.tagmanager.TagManager$RefreshMode -> com.google.tagmanager.TagManager$RefreshMode:
    com.google.tagmanager.TagManager$RefreshMode STANDARD -> STANDARD
    com.google.tagmanager.TagManager$RefreshMode DEFAULT_CONTAINER -> DEFAULT_CONTAINER
    com.google.tagmanager.TagManager$RefreshMode[] $VALUES -> a
    com.google.tagmanager.TagManager$RefreshMode[] values() -> values
    com.google.tagmanager.TagManager$RefreshMode valueOf(java.lang.String) -> valueOf
com.google.tagmanager.TimeMacro -> Iy:
    java.lang.String ID -> a
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
com.google.tagmanager.TrackerProvider -> Iz:
    com.google.analytics.tracking.android.GoogleAnalytics mGoogleAnalytics -> a
    android.content.Context mContext -> b
    void initTrackProviderIfNecessary() -> a
com.google.tagmanager.TrackerProvider$1 -> IA:
    int[] $SwitchMap$com$google$tagmanager$Logger$LogLevel -> a
com.google.tagmanager.TrackerProvider$LoggerImpl -> IB:
    void error(java.lang.String) -> error
    void error(java.lang.Exception) -> error
    void info(java.lang.String) -> info
    void verbose(java.lang.String) -> verbose
    void warn(java.lang.String) -> warn
    com.google.analytics.tracking.android.Logger$LogLevel getLogLevel() -> getLogLevel
    void setLogLevel(com.google.analytics.tracking.android.Logger$LogLevel) -> setLogLevel
com.google.tagmanager.TrackingTag -> IC:
    boolean isCacheable() -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value evaluate(java.util.Map) -> a
    void evaluateTrackingTag(java.util.Map) -> b
com.google.tagmanager.TypedNumber -> ID:
    double mDouble -> a
    long mInt64 -> b
    boolean mIsInt64 -> c
    com.google.tagmanager.TypedNumber numberWithDouble(java.lang.Double) -> a
    com.google.tagmanager.TypedNumber numberWithInt64(long) -> a
    com.google.tagmanager.TypedNumber numberWithString(java.lang.String) -> a
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(com.google.tagmanager.TypedNumber) -> a
    boolean isDouble() -> a
    boolean isInt64() -> b
    double doubleValue() -> doubleValue
    float floatValue() -> floatValue
    long longValue() -> longValue
    int intValue() -> intValue
    short shortValue() -> shortValue
    byte byteValue() -> byteValue
    int compareTo(java.lang.Object) -> compareTo
com.google.tagmanager.Types -> IE:
    java.lang.Object DEFAULT_OBJECT -> a
    java.lang.Long DEFAULT_INT64 -> b
    java.lang.Double DEFAULT_DOUBLE -> c
    com.google.tagmanager.TypedNumber DEFAULT_NUMBER -> d
    java.lang.String DEFAULT_STRING -> e
    java.lang.Boolean DEFAULT_BOOLEAN -> f
    java.util.List DEFAULT_LIST -> g
    java.util.Map DEFAULT_MAP -> h
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value DEFAULT_VALUE -> i
    java.lang.Long getDefaultInt64() -> a
    java.lang.Double getDefaultDouble() -> b
    java.lang.Boolean getDefaultBoolean() -> c
    com.google.tagmanager.TypedNumber getDefaultNumber() -> d
    java.lang.String getDefaultString() -> e
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value getDefaultValue() -> f
    java.lang.String objectToString(java.lang.Object) -> b
    java.lang.String valueToString(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> a
    com.google.tagmanager.TypedNumber valueToNumber(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> b
    java.lang.Long valueToInt64(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> c
    java.lang.Double valueToDouble(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> d
    java.lang.Boolean valueToBoolean(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> e
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value objectToValue(java.lang.Object) -> a
    com.google.analytics.midtier.proto.containertag.TypeSystem$Value functionIdToValue(java.lang.String) -> a
    boolean isDoubleableNumber(java.lang.Object) -> c
    double getDouble(java.lang.Object) -> d
    boolean isInt64ableNumber(java.lang.Object) -> e
    long getInt64(java.lang.Object) -> f
    com.google.tagmanager.TypedNumber parseNumber(java.lang.String) -> b
    java.lang.Object valueToObject(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> f
com.google.tagmanager.Types$1 -> IF:
    int[] $SwitchMap$com$google$analytics$midtier$proto$containertag$TypeSystem$Value$Type -> a
com.google.tagmanager.UniversalAnalyticsTag -> IG:
    java.lang.String ID -> a
    java.lang.String ACCOUNT -> d
    java.lang.String ANALYTICS_PASS_THROUGH -> e
    java.lang.String ANALYTICS_FIELDS -> f
    java.lang.String TRACK_TRANSACTION -> g
    java.lang.String TRANSACTION_DATALAYER_MAP -> h
    java.lang.String TRANSACTION_ITEM_DATALAYER_MAP -> i
    java.util.Map defaultTransactionMap -> j
    java.util.Map defaultItemMap -> k
    java.util.Set mTurnOffAnonymizeIpValues -> l
    com.google.tagmanager.TrackerProvider mTrackerProvider -> m
    com.google.tagmanager.DataLayer mDataLayer -> n
    boolean checkBooleanProperty(java.util.Map,java.lang.String) -> a
    void evaluateTrackingTag(java.util.Map) -> b
    java.lang.String getDataLayerString(java.lang.String) -> a
    java.util.List getTransactionItems() -> b
    void addParam(java.util.Map,java.lang.String,java.lang.String) -> a
    java.util.Map valueToMap(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> a
    java.util.Map convertToGaFields(com.google.analytics.midtier.proto.containertag.TypeSystem$Value) -> b
com.google.tagmanager.ValueBuilder -> IH:
    com.google.tagmanager.ValueBuilder getListItem$63419419() -> a
    com.google.tagmanager.ValueBuilder getMapKey$63419419() -> b
    com.google.tagmanager.ValueBuilder getMapValue$63419419() -> c
    com.google.tagmanager.ValueBuilder getTemplateToken$63419419() -> d
    com.google.tagmanager.MacroEvaluationInfoBuilder createValueMacroEvaluationInfoExtension() -> e
com.google.tagmanager.ValueEscapeUtil -> II:
    com.google.tagmanager.ObjectAndStatic applyEscapings(com.google.tagmanager.ObjectAndStatic,java.util.List) -> a
    java.lang.String urlEncode(java.lang.String) -> a
    com.google.tagmanager.ObjectAndStatic escapeUri(com.google.tagmanager.ObjectAndStatic) -> a
com.google.tagmanager.ValueEscapeUtil$1 -> IJ:
    int[] $SwitchMap$com$google$analytics$midtier$proto$containertag$TypeSystem$Value$Escaping -> a
com.google.tagmanager.proto.MutableResource -> com.google.tagmanager.proto.MutableResource:
    void registerAllExtensions(com.google.tagmanager.protobuf.ExtensionRegistryLite) -> registerAllExtensions
com.google.tagmanager.proto.MutableResource$ResourceWithMetadata -> com.google.tagmanager.proto.MutableResource$ResourceWithMetadata:
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata defaultInstance -> a
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> b
    int TIME_STAMP_FIELD_NUMBER -> TIME_STAMP_FIELD_NUMBER
    long timeStamp_ -> c
    int RESOURCE_FIELD_NUMBER -> RESOURCE_FIELD_NUMBER
    com.google.analytics.containertag.proto.MutableServing$Resource resource_ -> d
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite immutableDefault -> e
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata newMessageForType() -> newMessageForType
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata newMessage() -> newMessage
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata getDefaultInstance() -> getDefaultInstance
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasTimeStamp() -> hasTimeStamp
    long getTimeStamp() -> getTimeStamp
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata setTimeStamp(long) -> setTimeStamp
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata clearTimeStamp() -> clearTimeStamp
    void ensureResourceInitialized() -> b
    boolean hasResource() -> hasResource
    com.google.analytics.containertag.proto.MutableServing$Resource getResource() -> getResource
    com.google.analytics.containertag.proto.MutableServing$Resource getMutableResource() -> getMutableResource
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata setResource(com.google.analytics.containertag.proto.MutableServing$Resource) -> setResource
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata clearResource() -> clearResource
    boolean isInitialized() -> isInitialized
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata clone() -> clone
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata mergeFrom(com.google.tagmanager.proto.MutableResource$ResourceWithMetadata) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    com.google.tagmanager.proto.MutableResource$ResourceWithMetadata clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.tagmanager.proto.Resource -> com.google.tagmanager.proto.Resource:
    void registerAllExtensions(com.google.tagmanager.protobuf.ExtensionRegistryLite) -> registerAllExtensions
com.google.tagmanager.proto.Resource$ResourceWithMetadata -> com.google.tagmanager.proto.Resource$ResourceWithMetadata:
    com.google.tagmanager.proto.Resource$ResourceWithMetadata defaultInstance -> a
    com.google.tagmanager.protobuf.ByteString unknownFields -> b
    com.google.tagmanager.protobuf.Parser PARSER -> PARSER
    int bitField0_ -> c
    int TIME_STAMP_FIELD_NUMBER -> TIME_STAMP_FIELD_NUMBER
    long timeStamp_ -> d
    int RESOURCE_FIELD_NUMBER -> RESOURCE_FIELD_NUMBER
    com.google.analytics.containertag.proto.Serving$Resource resource_ -> e
    byte memoizedIsInitialized -> f
    int memoizedSerializedSize -> g
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MutableMessageLite mutableDefault -> h
    com.google.tagmanager.proto.Resource$ResourceWithMetadata getDefaultInstance() -> getDefaultInstance
    com.google.tagmanager.proto.Resource$ResourceWithMetadata getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean hasTimeStamp() -> hasTimeStamp
    long getTimeStamp() -> getTimeStamp
    boolean hasResource() -> hasResource
    com.google.analytics.containertag.proto.Serving$Resource getResource() -> getResource
    void initFields() -> b
    boolean isInitialized() -> isInitialized
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseFrom(byte[]) -> parseFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseFrom(java.io.InputStream) -> parseFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder newBuilder() -> newBuilder
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder newBuilder(com.google.tagmanager.proto.Resource$ResourceWithMetadata) -> newBuilder
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    long access$302(com.google.tagmanager.proto.Resource$ResourceWithMetadata,long) -> a
    com.google.analytics.containertag.proto.Serving$Resource access$402(com.google.tagmanager.proto.Resource$ResourceWithMetadata,com.google.analytics.containertag.proto.Serving$Resource) -> a
    int access$502(com.google.tagmanager.proto.Resource$ResourceWithMetadata,int) -> a
    com.google.tagmanager.protobuf.ByteString access$600(com.google.tagmanager.proto.Resource$ResourceWithMetadata) -> a
com.google.tagmanager.proto.Resource$ResourceWithMetadata$1 -> IK:
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder -> com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder:
    int bitField0_ -> a
    long timeStamp_ -> b
    com.google.analytics.containertag.proto.Serving$Resource resource_ -> c
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder clear() -> clear
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder clone() -> clone
    com.google.tagmanager.proto.Resource$ResourceWithMetadata getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.proto.Resource$ResourceWithMetadata build() -> build
    com.google.tagmanager.proto.Resource$ResourceWithMetadata buildPartial() -> buildPartial
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder mergeFrom(com.google.tagmanager.proto.Resource$ResourceWithMetadata) -> mergeFrom
    boolean isInitialized() -> isInitialized
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean hasTimeStamp() -> hasTimeStamp
    long getTimeStamp() -> getTimeStamp
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder setTimeStamp(long) -> setTimeStamp
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder clearTimeStamp() -> clearTimeStamp
    boolean hasResource() -> hasResource
    com.google.analytics.containertag.proto.Serving$Resource getResource() -> getResource
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder setResource(com.google.analytics.containertag.proto.Serving$Resource) -> setResource
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder setResource(com.google.analytics.containertag.proto.Serving$Resource$Builder) -> setResource
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder mergeResource(com.google.analytics.containertag.proto.Serving$Resource) -> mergeResource
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder clearResource() -> clearResource
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
    com.google.tagmanager.proto.Resource$ResourceWithMetadata$Builder access$100() -> a
com.google.tagmanager.proto.Resource$ResourceWithMetadataOrBuilder -> com.google.tagmanager.proto.Resource$ResourceWithMetadataOrBuilder:
    boolean hasTimeStamp() -> hasTimeStamp
    long getTimeStamp() -> getTimeStamp
    boolean hasResource() -> hasResource
    com.google.analytics.containertag.proto.Serving$Resource getResource() -> getResource
com.google.tagmanager.protobuf.AbstractMessageLite -> com.google.tagmanager.protobuf.AbstractMessageLite:
    int memoizedHashCode -> memoizedHashCode
    com.google.tagmanager.protobuf.ByteString toByteString() -> toByteString
    byte[] toByteArray() -> toByteArray
    void writeTo(java.io.OutputStream) -> writeTo
    void writeDelimitedTo(java.io.OutputStream) -> writeDelimitedTo
    com.google.tagmanager.protobuf.MutableMessageLite mutableCopy() -> mutableCopy
    com.google.tagmanager.protobuf.UninitializedMessageException newUninitializedMessageException() -> a
    void checkByteStringIsUtf8(com.google.tagmanager.protobuf.ByteString) -> checkByteStringIsUtf8
com.google.tagmanager.protobuf.AbstractMessageLite$Builder -> com.google.tagmanager.protobuf.AbstractMessageLite$Builder:
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.ByteString) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(byte[]) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream) -> mergeFrom
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder mergeFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeDelimitedFrom
    boolean mergeDelimitedFrom(java.io.InputStream) -> mergeDelimitedFrom
    com.google.tagmanager.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.tagmanager.protobuf.MessageLite) -> newUninitializedMessageException
    void addAll(java.lang.Iterable,java.util.Collection) -> addAll
    void checkForNullValues(java.lang.Iterable) -> a
    java.lang.Object clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(byte[],int,int) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(byte[]) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.ByteString) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
com.google.tagmanager.protobuf.AbstractMessageLite$Builder$LimitedInputStream -> IL:
    int limit -> a
    int available() -> available
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
com.google.tagmanager.protobuf.AbstractMutableMessageLite -> com.google.tagmanager.protobuf.AbstractMutableMessageLite:
    boolean isMutable -> a
    int cachedSize -> cachedSize
    void makeImmutable() -> makeImmutable
    void assertMutable() -> assertMutable
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MutableMessageLite mutableCopy() -> mutableCopy
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    com.google.tagmanager.protobuf.ByteString toByteString() -> toByteString
    byte[] toByteArray() -> toByteArray
    void writeTo(java.io.OutputStream) -> writeTo
    void writeDelimitedTo(java.io.OutputStream) -> writeDelimitedTo
    com.google.tagmanager.protobuf.UninitializedMessageException newUninitializedMessageException() -> a
    int getCachedSize() -> getCachedSize
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream) -> mergeFrom
    boolean mergePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergePartialFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.ByteString) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeFrom(byte[]) -> mergeFrom
    boolean mergeFrom(byte[],int,int) -> mergeFrom
    boolean mergeFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeFrom(java.nio.ByteBuffer) -> mergeFrom
    boolean mergeFrom(java.nio.ByteBuffer,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeFrom(java.io.InputStream) -> mergeFrom
    boolean mergeFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeDelimitedFrom(java.io.InputStream) -> mergeDelimitedFrom
    boolean mergeDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeDelimitedFrom
    boolean parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    boolean parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    boolean parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(byte[]) -> parseFrom
    boolean parseFrom(byte[],int,int) -> parseFrom
    boolean parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(java.nio.ByteBuffer) -> parseFrom
    boolean parseFrom(java.nio.ByteBuffer,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(java.io.InputStream) -> parseFrom
    boolean parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    boolean parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.tagmanager.protobuf.UninitializedMessageException newUninitializedMessageException(com.google.tagmanager.protobuf.MessageLite) -> newUninitializedMessageException
    com.google.tagmanager.protobuf.Parser internalNewParserForType(com.google.tagmanager.protobuf.MutableMessageLite) -> internalNewParserForType
    void addAll(java.lang.Iterable,java.util.Collection) -> addAll
    boolean isProto1Group() -> isProto1Group
    java.lang.Object clone() -> clone
com.google.tagmanager.protobuf.AbstractMutableMessageLite$1 -> IM:
    com.google.tagmanager.protobuf.MutableMessageLite val$defaultInstance -> a
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
com.google.tagmanager.protobuf.AbstractParser -> com.google.tagmanager.protobuf.AbstractParser:
    com.google.tagmanager.protobuf.ExtensionRegistryLite EMPTY_REGISTRY -> a
    com.google.tagmanager.protobuf.MessageLite checkMessageInitialized(com.google.tagmanager.protobuf.MessageLite) -> a
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(com.google.tagmanager.protobuf.ByteString) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(byte[],int,int) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(byte[]) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(byte[],int,int) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(byte[]) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialFrom(java.io.InputStream) -> parsePartialFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parseFrom(java.io.InputStream) -> parseFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialDelimitedFrom
    com.google.tagmanager.protobuf.MessageLite parsePartialDelimitedFrom(java.io.InputStream) -> parsePartialDelimitedFrom
    com.google.tagmanager.protobuf.MessageLite parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    com.google.tagmanager.protobuf.MessageLite parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    java.lang.Object parsePartialDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialDelimitedFrom
    java.lang.Object parsePartialDelimitedFrom(java.io.InputStream) -> parsePartialDelimitedFrom
    java.lang.Object parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    java.lang.Object parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    java.lang.Object parsePartialFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parsePartialFrom(java.io.InputStream) -> parsePartialFrom
    java.lang.Object parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parseFrom(java.io.InputStream) -> parseFrom
    java.lang.Object parsePartialFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parsePartialFrom(byte[]) -> parsePartialFrom
    java.lang.Object parsePartialFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parsePartialFrom(byte[],int,int) -> parsePartialFrom
    java.lang.Object parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parseFrom(byte[]) -> parseFrom
    java.lang.Object parseFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parseFrom(byte[],int,int) -> parseFrom
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.ByteString) -> parsePartialFrom
    java.lang.Object parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parsePartialFrom
    java.lang.Object parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
com.google.tagmanager.protobuf.BoundedByteString -> IN:
    int bytesOffset -> c
    int bytesLength -> d
    byte byteAt(int) -> byteAt
    int size() -> size
    int getOffsetIntoBytes() -> a
    void copyToInternal(byte[],int,int,int) -> copyToInternal
    com.google.tagmanager.protobuf.ByteString$ByteIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.tagmanager.protobuf.BoundedByteString$BoundedByteIterator -> IO:
    int position -> b
    int limit -> c
    com.google.tagmanager.protobuf.BoundedByteString this$0 -> a
    boolean hasNext() -> hasNext
    byte nextByte() -> nextByte
    void remove() -> remove
    java.lang.Object next() -> next
com.google.tagmanager.protobuf.ByteString -> com.google.tagmanager.protobuf.ByteString:
    com.google.tagmanager.protobuf.ByteString EMPTY -> EMPTY
    boolean $assertionsDisabled -> a
    byte byteAt(int) -> byteAt
    com.google.tagmanager.protobuf.ByteString$ByteIterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.tagmanager.protobuf.ByteString substring(int) -> substring
    com.google.tagmanager.protobuf.ByteString substring(int,int) -> substring
    boolean startsWith(com.google.tagmanager.protobuf.ByteString) -> startsWith
    boolean endsWith(com.google.tagmanager.protobuf.ByteString) -> endsWith
    com.google.tagmanager.protobuf.ByteString copyFrom(byte[],int,int) -> copyFrom
    com.google.tagmanager.protobuf.ByteString copyFrom(byte[]) -> copyFrom
    com.google.tagmanager.protobuf.ByteString copyFrom(java.nio.ByteBuffer,int) -> copyFrom
    com.google.tagmanager.protobuf.ByteString copyFrom(java.nio.ByteBuffer) -> copyFrom
    com.google.tagmanager.protobuf.ByteString copyFrom(java.lang.String,java.lang.String) -> copyFrom
    com.google.tagmanager.protobuf.ByteString copyFromUtf8(java.lang.String) -> copyFromUtf8
    com.google.tagmanager.protobuf.ByteString readFrom(java.io.InputStream) -> readFrom
    com.google.tagmanager.protobuf.ByteString readFrom(java.io.InputStream,int) -> readFrom
    com.google.tagmanager.protobuf.ByteString readFrom(java.io.InputStream,int,int) -> readFrom
    com.google.tagmanager.protobuf.ByteString readChunk(java.io.InputStream,int) -> a
    com.google.tagmanager.protobuf.ByteString concat(com.google.tagmanager.protobuf.ByteString) -> concat
    com.google.tagmanager.protobuf.ByteString copyFrom(java.lang.Iterable) -> copyFrom
    com.google.tagmanager.protobuf.ByteString balancedConcat(java.util.Iterator,int) -> a
    void copyTo(byte[],int) -> copyTo
    void copyTo(byte[],int,int,int) -> copyTo
    void copyToInternal(byte[],int,int,int) -> copyToInternal
    void copyTo(java.nio.ByteBuffer) -> copyTo
    byte[] toByteArray() -> toByteArray
    void writeTo(java.io.OutputStream) -> writeTo
    void writeTo(java.io.OutputStream,int,int) -> a
    void writeToInternal(java.io.OutputStream,int,int) -> b
    java.nio.ByteBuffer asReadOnlyByteBuffer() -> asReadOnlyByteBuffer
    java.util.List asReadOnlyByteBufferList() -> asReadOnlyByteBufferList
    java.lang.String toString(java.lang.String) -> toString
    java.lang.String toStringUtf8() -> toStringUtf8
    boolean isValidUtf8() -> isValidUtf8
    int partialIsValidUtf8(int,int,int) -> partialIsValidUtf8
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.io.InputStream newInput() -> newInput
    com.google.tagmanager.protobuf.CodedInputStream newCodedInput() -> newCodedInput
    com.google.tagmanager.protobuf.ByteString$Output newOutput(int) -> newOutput
    com.google.tagmanager.protobuf.ByteString$Output newOutput() -> newOutput
    com.google.tagmanager.protobuf.ByteString$CodedBuilder newCodedBuilder(int) -> a
    int getTreeDepth() -> getTreeDepth
    boolean isBalanced() -> isBalanced
    int peekCachedHashCode() -> peekCachedHashCode
    int partialHash(int,int,int) -> partialHash
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
com.google.tagmanager.protobuf.ByteString$ByteIterator -> com.google.tagmanager.protobuf.ByteString$ByteIterator:
    byte nextByte() -> nextByte
com.google.tagmanager.protobuf.ByteString$CodedBuilder -> IP:
    com.google.tagmanager.protobuf.CodedOutputStream output -> a
    byte[] buffer -> b
    com.google.tagmanager.protobuf.ByteString build() -> a
com.google.tagmanager.protobuf.ByteString$Output -> com.google.tagmanager.protobuf.ByteString$Output:
    byte[] EMPTY_BYTE_ARRAY -> a
    int initialCapacity -> b
    java.util.ArrayList flushedBuffers -> c
    int flushedBuffersTotalBytes -> d
    byte[] buffer -> e
    int bufferPos -> f
    void write(int) -> write
    void write(byte[],int,int) -> write
    com.google.tagmanager.protobuf.ByteString toByteString() -> toByteString
    void writeTo(java.io.OutputStream) -> writeTo
    int size() -> size
    void reset() -> reset
    java.lang.String toString() -> toString
    void flushFullBuffer(int) -> a
com.google.tagmanager.protobuf.CodedInputStream -> com.google.tagmanager.protobuf.CodedInputStream:
    byte[] buffer -> a
    boolean bufferIsImmutable -> b
    int bufferSize -> c
    int bufferSizeAfterLimit -> d
    int bufferPos -> e
    java.io.InputStream input -> f
    int lastTag -> g
    boolean enableAliasing -> h
    int totalBytesRetired -> i
    int currentLimit -> j
    int recursionDepth -> k
    int recursionLimit -> l
    int sizeLimit -> m
    com.google.tagmanager.protobuf.CodedInputStream$RefillCallback refillCallback -> n
    com.google.tagmanager.protobuf.CodedInputStream newInstance(java.io.InputStream) -> newInstance
    com.google.tagmanager.protobuf.CodedInputStream newInstance(byte[]) -> newInstance
    com.google.tagmanager.protobuf.CodedInputStream newInstance(byte[],int,int) -> newInstance
    com.google.tagmanager.protobuf.CodedInputStream newInstance(java.nio.ByteBuffer) -> newInstance
    com.google.tagmanager.protobuf.CodedInputStream newInstance(com.google.tagmanager.protobuf.LiteralByteString) -> a
    int readTag() -> readTag
    void checkLastTagWas(int) -> checkLastTagWas
    int getLastTag() -> getLastTag
    boolean skipField(int) -> skipField
    boolean skipField(int,com.google.tagmanager.protobuf.CodedOutputStream) -> skipField
    void skipMessage() -> skipMessage
    void skipMessage(com.google.tagmanager.protobuf.CodedOutputStream) -> skipMessage
    void mergeToMessage(com.google.tagmanager.protobuf.MutableMessageLite) -> mergeToMessage
    double readDouble() -> readDouble
    float readFloat() -> readFloat
    long readUInt64() -> readUInt64
    long readInt64() -> readInt64
    int readInt32() -> readInt32
    long readFixed64() -> readFixed64
    int readFixed32() -> readFixed32
    boolean readBool() -> readBool
    java.lang.String readString() -> readString
    java.lang.String readStringRequireUtf8() -> readStringRequireUtf8
    void readGroup(int,com.google.tagmanager.protobuf.MessageLite$Builder,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> readGroup
    void readGroup(int,com.google.tagmanager.protobuf.MutableMessageLite,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> readGroup
    com.google.tagmanager.protobuf.MessageLite readGroup(int,com.google.tagmanager.protobuf.Parser,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> readGroup
    void readUnknownGroup(int,com.google.tagmanager.protobuf.MessageLite$Builder) -> readUnknownGroup
    void readMessage(com.google.tagmanager.protobuf.MessageLite$Builder,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> readMessage
    void readMessage(com.google.tagmanager.protobuf.MutableMessageLite,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> readMessage
    com.google.tagmanager.protobuf.MessageLite readMessage(com.google.tagmanager.protobuf.Parser,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> readMessage
    com.google.tagmanager.protobuf.ByteString readBytes() -> readBytes
    byte[] readByteArray() -> readByteArray
    java.nio.ByteBuffer readByteBuffer() -> readByteBuffer
    int readUInt32() -> readUInt32
    int readEnum() -> readEnum
    int readSFixed32() -> readSFixed32
    long readSFixed64() -> readSFixed64
    int readSInt32() -> readSInt32
    long readSInt64() -> readSInt64
    int readRawVarint32() -> readRawVarint32
    int readRawVarint32(int,java.io.InputStream) -> readRawVarint32
    long readRawVarint64() -> readRawVarint64
    int readRawLittleEndian32() -> readRawLittleEndian32
    long readRawLittleEndian64() -> readRawLittleEndian64
    int decodeZigZag32(int) -> decodeZigZag32
    long decodeZigZag64(long) -> decodeZigZag64
    void enableAliasing(boolean) -> enableAliasing
    int setRecursionLimit(int) -> setRecursionLimit
    int setSizeLimit(int) -> setSizeLimit
    void resetSizeCounter() -> resetSizeCounter
    int pushLimit(int) -> pushLimit
    void recomputeBufferSizeAfterLimit() -> a
    void popLimit(int) -> popLimit
    int getBytesUntilLimit() -> getBytesUntilLimit
    boolean isAtEnd() -> isAtEnd
    int getTotalBytesRead() -> getTotalBytesRead
    boolean refillBuffer(boolean) -> a
    byte readRawByte() -> readRawByte
    byte[] readRawBytes(int) -> readRawBytes
    void skipRawBytes(int) -> skipRawBytes
    int access$000(com.google.tagmanager.protobuf.CodedInputStream) -> a
    byte[] access$100(com.google.tagmanager.protobuf.CodedInputStream) -> b
com.google.tagmanager.protobuf.CodedInputStream$RefillCallback -> IQ:
    void onRefill() -> a
com.google.tagmanager.protobuf.CodedInputStream$SkippedDataSink -> IR:
    int lastPos -> a
    java.io.ByteArrayOutputStream byteArrayStream -> b
    com.google.tagmanager.protobuf.CodedInputStream this$0 -> c
    void onRefill() -> a
com.google.tagmanager.protobuf.CodedOutputStream -> com.google.tagmanager.protobuf.CodedOutputStream:
    byte[] buffer -> a
    int limit -> b
    int position -> c
    int totalBytesWritten -> d
    java.io.OutputStream output -> e
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    int LITTLE_ENDIAN_32_SIZE -> LITTLE_ENDIAN_32_SIZE
    int LITTLE_ENDIAN_64_SIZE -> LITTLE_ENDIAN_64_SIZE
    int computePreferredBufferSize(int) -> a
    com.google.tagmanager.protobuf.CodedOutputStream newInstance(java.io.OutputStream) -> newInstance
    com.google.tagmanager.protobuf.CodedOutputStream newInstance(java.io.OutputStream,int) -> newInstance
    com.google.tagmanager.protobuf.CodedOutputStream newInstance(byte[]) -> newInstance
    com.google.tagmanager.protobuf.CodedOutputStream newInstance(byte[],int,int) -> newInstance
    com.google.tagmanager.protobuf.CodedOutputStream newInstance(java.nio.ByteBuffer) -> newInstance
    com.google.tagmanager.protobuf.CodedOutputStream newInstance(java.nio.ByteBuffer,int) -> newInstance
    void writeDouble(int,double) -> writeDouble
    void writeFloat(int,float) -> writeFloat
    void writeUInt64(int,long) -> writeUInt64
    void writeInt64(int,long) -> writeInt64
    void writeInt32(int,int) -> writeInt32
    void writeFixed64(int,long) -> writeFixed64
    void writeFixed32(int,int) -> writeFixed32
    void writeBool(int,boolean) -> writeBool
    void writeString(int,java.lang.String) -> writeString
    void writeGroup(int,com.google.tagmanager.protobuf.MessageLite) -> writeGroup
    void writeGroupWithCachedSizes(int,com.google.tagmanager.protobuf.MutableMessageLite) -> writeGroupWithCachedSizes
    void writeUnknownGroup(int,com.google.tagmanager.protobuf.MessageLite) -> writeUnknownGroup
    void writeMessage(int,com.google.tagmanager.protobuf.MessageLite) -> writeMessage
    void writeMessageWithCachedSizes(int,com.google.tagmanager.protobuf.MutableMessageLite) -> writeMessageWithCachedSizes
    void writeBytes(int,com.google.tagmanager.protobuf.ByteString) -> writeBytes
    void writeByteArray(int,byte[]) -> writeByteArray
    void writeByteBuffer(int,java.nio.ByteBuffer) -> writeByteBuffer
    void writeUInt32(int,int) -> writeUInt32
    void writeEnum(int,int) -> writeEnum
    void writeSFixed32(int,int) -> writeSFixed32
    void writeSFixed64(int,long) -> writeSFixed64
    void writeSInt32(int,int) -> writeSInt32
    void writeSInt64(int,long) -> writeSInt64
    void writeMessageSetExtension(int,com.google.tagmanager.protobuf.MessageLite) -> writeMessageSetExtension
    void writeRawMessageSetExtension(int,com.google.tagmanager.protobuf.ByteString) -> writeRawMessageSetExtension
    void writeDoubleNoTag(double) -> writeDoubleNoTag
    void writeFloatNoTag(float) -> writeFloatNoTag
    void writeUInt64NoTag(long) -> writeUInt64NoTag
    void writeInt64NoTag(long) -> writeInt64NoTag
    void writeInt32NoTag(int) -> writeInt32NoTag
    void writeFixed64NoTag(long) -> writeFixed64NoTag
    void writeFixed32NoTag(int) -> writeFixed32NoTag
    void writeBoolNoTag(boolean) -> writeBoolNoTag
    void writeStringNoTag(java.lang.String) -> writeStringNoTag
    void writeGroupNoTag(com.google.tagmanager.protobuf.MessageLite) -> writeGroupNoTag
    void writeGroupNoTagWithCachedSizes(com.google.tagmanager.protobuf.MutableMessageLite) -> writeGroupNoTagWithCachedSizes
    void writeUnknownGroupNoTag(com.google.tagmanager.protobuf.MessageLite) -> writeUnknownGroupNoTag
    void writeMessageNoTag(com.google.tagmanager.protobuf.MessageLite) -> writeMessageNoTag
    void writeMessageNoTagWithCachedSizes(com.google.tagmanager.protobuf.MutableMessageLite) -> writeMessageNoTagWithCachedSizes
    void writeBytesNoTag(com.google.tagmanager.protobuf.ByteString) -> writeBytesNoTag
    void writeByteArrayNoTag(byte[]) -> writeByteArrayNoTag
    void writeByteBufferNoTag(java.nio.ByteBuffer) -> writeByteBufferNoTag
    void writeUInt32NoTag(int) -> writeUInt32NoTag
    void writeEnumNoTag(int) -> writeEnumNoTag
    void writeSFixed32NoTag(int) -> writeSFixed32NoTag
    void writeSFixed64NoTag(long) -> writeSFixed64NoTag
    void writeSInt32NoTag(int) -> writeSInt32NoTag
    void writeSInt64NoTag(long) -> writeSInt64NoTag
    int computeDoubleSize(int,double) -> computeDoubleSize
    int computeFloatSize(int,float) -> computeFloatSize
    int computeUInt64Size(int,long) -> computeUInt64Size
    int computeInt64Size(int,long) -> computeInt64Size
    int computeInt32Size(int,int) -> computeInt32Size
    int computeFixed64Size(int,long) -> computeFixed64Size
    int computeFixed32Size(int,int) -> computeFixed32Size
    int computeBoolSize(int,boolean) -> computeBoolSize
    int computeStringSize(int,java.lang.String) -> computeStringSize
    int computeGroupSize(int,com.google.tagmanager.protobuf.MessageLite) -> computeGroupSize
    int computeUnknownGroupSize(int,com.google.tagmanager.protobuf.MessageLite) -> computeUnknownGroupSize
    int computeMessageSize(int,com.google.tagmanager.protobuf.MessageLite) -> computeMessageSize
    int computeBytesSize(int,com.google.tagmanager.protobuf.ByteString) -> computeBytesSize
    int computeByteArraySize(int,byte[]) -> computeByteArraySize
    int computeByteBufferSize(int,java.nio.ByteBuffer) -> computeByteBufferSize
    int computeLazyFieldSize(int,com.google.tagmanager.protobuf.LazyField) -> computeLazyFieldSize
    int computeUInt32Size(int,int) -> computeUInt32Size
    int computeEnumSize(int,int) -> computeEnumSize
    int computeSFixed32Size(int,int) -> computeSFixed32Size
    int computeSFixed64Size(int,long) -> computeSFixed64Size
    int computeSInt32Size(int,int) -> computeSInt32Size
    int computeSInt64Size(int,long) -> computeSInt64Size
    int computeMessageSetExtensionSize(int,com.google.tagmanager.protobuf.MessageLite) -> computeMessageSetExtensionSize
    int computeRawMessageSetExtensionSize(int,com.google.tagmanager.protobuf.ByteString) -> computeRawMessageSetExtensionSize
    int computeLazyFieldMessageSetExtensionSize(int,com.google.tagmanager.protobuf.LazyField) -> computeLazyFieldMessageSetExtensionSize
    int computeDoubleSizeNoTag(double) -> computeDoubleSizeNoTag
    int computeFloatSizeNoTag(float) -> computeFloatSizeNoTag
    int computeUInt64SizeNoTag(long) -> computeUInt64SizeNoTag
    int computeInt64SizeNoTag(long) -> computeInt64SizeNoTag
    int computeInt32SizeNoTag(int) -> computeInt32SizeNoTag
    int computeFixed64SizeNoTag(long) -> computeFixed64SizeNoTag
    int computeFixed32SizeNoTag(int) -> computeFixed32SizeNoTag
    int computeBoolSizeNoTag(boolean) -> computeBoolSizeNoTag
    int computeStringSizeNoTag(java.lang.String) -> computeStringSizeNoTag
    int computeGroupSizeNoTag(com.google.tagmanager.protobuf.MessageLite) -> computeGroupSizeNoTag
    int computeUnknownGroupSizeNoTag(com.google.tagmanager.protobuf.MessageLite) -> computeUnknownGroupSizeNoTag
    int computeMessageSizeNoTag(com.google.tagmanager.protobuf.MessageLite) -> computeMessageSizeNoTag
    int computeLazyFieldSizeNoTag(com.google.tagmanager.protobuf.LazyField) -> computeLazyFieldSizeNoTag
    int computeBytesSizeNoTag(com.google.tagmanager.protobuf.ByteString) -> computeBytesSizeNoTag
    int computeByteArraySizeNoTag(byte[]) -> computeByteArraySizeNoTag
    int computeByteBufferSizeNoTag(java.nio.ByteBuffer) -> computeByteBufferSizeNoTag
    int computeUInt32SizeNoTag(int) -> computeUInt32SizeNoTag
    int computeEnumSizeNoTag(int) -> computeEnumSizeNoTag
    int computeSFixed32SizeNoTag(int) -> computeSFixed32SizeNoTag
    int computeSFixed64SizeNoTag(long) -> computeSFixed64SizeNoTag
    int computeSInt32SizeNoTag(int) -> computeSInt32SizeNoTag
    int computeSInt64SizeNoTag(long) -> computeSInt64SizeNoTag
    void refreshBuffer() -> a
    void flush() -> flush
    int spaceLeft() -> spaceLeft
    void checkNoSpaceLeft() -> checkNoSpaceLeft
    int getTotalBytesWritten() -> getTotalBytesWritten
    void writeRawByte(byte) -> writeRawByte
    void writeRawByte(int) -> writeRawByte
    void writeRawBytes(com.google.tagmanager.protobuf.ByteString) -> writeRawBytes
    void writeRawBytes(byte[]) -> writeRawBytes
    void writeRawBytes(java.nio.ByteBuffer) -> writeRawBytes
    void writeRawBytes(byte[],int,int) -> writeRawBytes
    void writeRawBytes(com.google.tagmanager.protobuf.ByteString,int,int) -> writeRawBytes
    void writeTag(int,int) -> writeTag
    int computeTagSize(int) -> computeTagSize
    void writeRawVarint32(int) -> writeRawVarint32
    int computeRawVarint32Size(int) -> computeRawVarint32Size
    void writeRawVarint64(long) -> writeRawVarint64
    int computeRawVarint64Size(long) -> computeRawVarint64Size
    void writeRawLittleEndian32(int) -> writeRawLittleEndian32
    void writeRawLittleEndian64(long) -> writeRawLittleEndian64
    int encodeZigZag32(int) -> encodeZigZag32
    long encodeZigZag64(long) -> encodeZigZag64
com.google.tagmanager.protobuf.CodedOutputStream$ByteBufferOutputStream -> IS:
    java.nio.ByteBuffer byteBuffer -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
com.google.tagmanager.protobuf.CodedOutputStream$OutOfSpaceException -> com.google.tagmanager.protobuf.CodedOutputStream$OutOfSpaceException:
    long serialVersionUID -> serialVersionUID
com.google.tagmanager.protobuf.ExtensionRegistryLite -> com.google.tagmanager.protobuf.ExtensionRegistryLite:
    boolean eagerlyParseMessageSets -> a
    java.util.Map extensionsByNumber -> b
    com.google.tagmanager.protobuf.ExtensionRegistryLite EMPTY -> c
    boolean isEagerlyParseMessageSets() -> isEagerlyParseMessageSets
    void setEagerlyParseMessageSets(boolean) -> setEagerlyParseMessageSets
    com.google.tagmanager.protobuf.ExtensionRegistryLite newInstance() -> newInstance
    com.google.tagmanager.protobuf.ExtensionRegistryLite getEmptyRegistry() -> getEmptyRegistry
    com.google.tagmanager.protobuf.ExtensionRegistryLite getUnmodifiable() -> getUnmodifiable
    com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension findLiteExtensionByNumber(com.google.tagmanager.protobuf.MessageLite,int) -> findLiteExtensionByNumber
    void add(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> add
com.google.tagmanager.protobuf.ExtensionRegistryLite$ObjectIntPair -> IT:
    java.lang.Object object -> a
    int number -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.tagmanager.protobuf.FieldSet -> com.google.tagmanager.protobuf.FieldSet:
    com.google.tagmanager.protobuf.SmallSortedMap fields -> a
    boolean isImmutable -> b
    boolean hasLazyField -> c
    com.google.tagmanager.protobuf.FieldSet DEFAULT_INSTANCE -> d
    com.google.tagmanager.protobuf.FieldSet newFieldSet() -> a
    com.google.tagmanager.protobuf.FieldSet emptySet() -> b
    void makeImmutable() -> c
    boolean isImmutable() -> d
    com.google.tagmanager.protobuf.FieldSet clone() -> e
    java.lang.Object convertToImmutable(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> c
    java.lang.Object convertToMutable(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> d
    com.google.tagmanager.protobuf.FieldSet cloneWithAllFieldsToImmutable() -> f
    com.google.tagmanager.protobuf.FieldSet cloneWithAllFieldsToMutable() -> g
    void clear() -> h
    java.util.Iterator iterator() -> i
    boolean hasField(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite) -> a
    java.lang.Object getField(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite) -> b
    void setField(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> a
    void clearField(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite) -> c
    int getRepeatedFieldCount(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite) -> d
    java.lang.Object getRepeatedField(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite,int) -> a
    void setRepeatedField(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite,int,java.lang.Object) -> a
    void addRepeatedField(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> b
    void verifyType(com.google.tagmanager.protobuf.WireFormat$FieldType,java.lang.Object) -> a
    boolean isInitialized() -> j
    boolean isInitialized(java.util.Map$Entry) -> a
    int getWireFormatForFieldType(com.google.tagmanager.protobuf.WireFormat$FieldType,boolean) -> a
    void mergeFrom(com.google.tagmanager.protobuf.FieldSet) -> a
    void mergeFromField(java.util.Map$Entry) -> b
    java.lang.Object readPrimitiveField(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.WireFormat$FieldType,boolean) -> a
    java.lang.Object readPrimitiveFieldForMutable(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.WireFormat$FieldType,boolean) -> b
    void writeElement(com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.WireFormat$FieldType,int,java.lang.Object) -> a
    void writeElementNoTag(com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.WireFormat$FieldType,java.lang.Object) -> a
    void writeField(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object,com.google.tagmanager.protobuf.CodedOutputStream) -> a
    int getSerializedSize() -> k
    int getMessageSetSerializedSize() -> l
    int getMessageSetSerializedSize(java.util.Map$Entry) -> c
    int computeElementSize(com.google.tagmanager.protobuf.WireFormat$FieldType,int,java.lang.Object) -> a
    int computeElementSizeNoTag(com.google.tagmanager.protobuf.WireFormat$FieldType,java.lang.Object) -> b
    int computeFieldSize(com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite,java.lang.Object) -> e
    java.lang.Object clone() -> clone
com.google.tagmanager.protobuf.FieldSet$1 -> IU:
    int[] $SwitchMap$com$google$protobuf$WireFormat$JavaType -> a
    int[] $SwitchMap$com$google$protobuf$WireFormat$FieldType -> b
com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite -> com.google.tagmanager.protobuf.FieldSet$FieldDescriptorLite:
    int getNumber() -> getNumber
    com.google.tagmanager.protobuf.WireFormat$FieldType getLiteType() -> getLiteType
    com.google.tagmanager.protobuf.WireFormat$JavaType getLiteJavaType() -> getLiteJavaType
    boolean isRepeated() -> isRepeated
    boolean isPacked() -> isPacked
    com.google.tagmanager.protobuf.Internal$EnumLiteMap getEnumType() -> getEnumType
    com.google.tagmanager.protobuf.MessageLite$Builder internalMergeFrom(com.google.tagmanager.protobuf.MessageLite$Builder,com.google.tagmanager.protobuf.MessageLite) -> internalMergeFrom
    com.google.tagmanager.protobuf.MutableMessageLite internalMergeFrom(com.google.tagmanager.protobuf.MutableMessageLite,com.google.tagmanager.protobuf.MutableMessageLite) -> internalMergeFrom
com.google.tagmanager.protobuf.GeneratedMessageLite -> com.google.tagmanager.protobuf.GeneratedMessageLite:
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    boolean parseUnknownField(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    void makeExtensionsImmutable() -> makeExtensionsImmutable
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault() -> internalMutableDefault
    com.google.tagmanager.protobuf.MutableMessageLite internalMutableDefault(java.lang.String) -> internalMutableDefault
    com.google.tagmanager.protobuf.MutableMessageLite mutableCopy() -> mutableCopy
    com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension newSingularGeneratedExtension(com.google.tagmanager.protobuf.MessageLite,java.lang.Object,com.google.tagmanager.protobuf.MessageLite,com.google.tagmanager.protobuf.Internal$EnumLiteMap,int,com.google.tagmanager.protobuf.WireFormat$FieldType,java.lang.Class) -> newSingularGeneratedExtension
    com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension newRepeatedGeneratedExtension(com.google.tagmanager.protobuf.MessageLite,com.google.tagmanager.protobuf.MessageLite,com.google.tagmanager.protobuf.Internal$EnumLiteMap,int,com.google.tagmanager.protobuf.WireFormat$FieldType,boolean,java.lang.Class) -> newRepeatedGeneratedExtension
    java.lang.reflect.Method getMethodOrDie(java.lang.Class,java.lang.String,java.lang.Class[]) -> a
    java.lang.Object invokeOrDie(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> a
    java.lang.Object writeReplace() -> writeReplace
    boolean access$100(com.google.tagmanager.protobuf.FieldSet,com.google.tagmanager.protobuf.MessageLite,com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite,int) -> a
com.google.tagmanager.protobuf.GeneratedMessageLite$1 -> IV:
    int[] $SwitchMap$com$google$protobuf$WireFormat$JavaType -> a
com.google.tagmanager.protobuf.GeneratedMessageLite$Builder -> com.google.tagmanager.protobuf.GeneratedMessageLite$Builder:
    com.google.tagmanager.protobuf.ByteString unknownFields -> a
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.GeneratedMessageLite) -> mergeFrom
    com.google.tagmanager.protobuf.GeneratedMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    boolean parseUnknownField(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    com.google.tagmanager.protobuf.ByteString getUnknownFields() -> getUnknownFields
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder setUnknownFields(com.google.tagmanager.protobuf.ByteString) -> setUnknownFields
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    java.lang.Object clone() -> clone
com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder -> com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder:
    com.google.tagmanager.protobuf.FieldSet extensions -> a
    boolean extensionsIsMutable -> b
    void internalSetExtensionSet(com.google.tagmanager.protobuf.FieldSet) -> a
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder clear() -> clear
    void ensureExtensionsIsMutable() -> a
    void verifyExtensionContainingType(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> a
    boolean hasExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> hasExtension
    int getExtensionCount(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtensionCount
    java.lang.Object getExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtension
    java.lang.Object getExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,int) -> getExtension
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder setExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,java.lang.Object) -> setExtension
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder setExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,int,java.lang.Object) -> setExtension
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder addExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,java.lang.Object) -> addExtension
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder clearExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> clearExtension
    boolean extensionsAreInitialized() -> extensionsAreInitialized
    boolean parseUnknownField(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    void mergeExtensionFields(com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage) -> mergeExtensionFields
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.GeneratedMessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.AbstractMessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    java.lang.Object clone() -> clone
    com.google.tagmanager.protobuf.FieldSet access$000(com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableBuilder) -> a
com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage -> com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage:
    com.google.tagmanager.protobuf.FieldSet extensions -> a
    void verifyExtensionContainingType(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> a
    boolean hasExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> hasExtension
    int getExtensionCount(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtensionCount
    java.lang.Object getExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtension
    java.lang.Object getExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,int) -> getExtension
    boolean extensionsAreInitialized() -> extensionsAreInitialized
    boolean parseUnknownField(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    com.google.tagmanager.protobuf.MutableMessageLite mutableCopy() -> mutableCopy
    void makeExtensionsImmutable() -> makeExtensionsImmutable
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter newExtensionWriter() -> newExtensionWriter
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter newMessageSetExtensionWriter() -> newMessageSetExtensionWriter
    int extensionsSerializedSize() -> extensionsSerializedSize
    int extensionsSerializedSizeAsMessageSet() -> extensionsSerializedSizeAsMessageSet
    com.google.tagmanager.protobuf.FieldSet access$200(com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage) -> a
com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter -> com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage$ExtensionWriter:
    java.util.Iterator iter -> b
    java.util.Map$Entry next -> c
    boolean messageSetWireFormat -> d
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessage this$0 -> a
    void writeUntil(int,com.google.tagmanager.protobuf.CodedOutputStream) -> writeUntil
com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessageOrBuilder -> com.google.tagmanager.protobuf.GeneratedMessageLite$ExtendableMessageOrBuilder:
    boolean hasExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> hasExtension
    int getExtensionCount(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtensionCount
    java.lang.Object getExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtension
    java.lang.Object getExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,int) -> getExtension
com.google.tagmanager.protobuf.GeneratedMessageLite$ExtensionDescriptor -> IW:
    com.google.tagmanager.protobuf.Internal$EnumLiteMap enumTypeMap -> a
    int number -> b
    com.google.tagmanager.protobuf.WireFormat$FieldType type -> c
    boolean isRepeated -> d
    boolean isPacked -> e
    int getNumber() -> getNumber
    com.google.tagmanager.protobuf.WireFormat$FieldType getLiteType() -> getLiteType
    com.google.tagmanager.protobuf.WireFormat$JavaType getLiteJavaType() -> getLiteJavaType
    boolean isRepeated() -> isRepeated
    boolean isPacked() -> isPacked
    com.google.tagmanager.protobuf.Internal$EnumLiteMap getEnumType() -> getEnumType
    com.google.tagmanager.protobuf.MessageLite$Builder internalMergeFrom(com.google.tagmanager.protobuf.MessageLite$Builder,com.google.tagmanager.protobuf.MessageLite) -> internalMergeFrom
    com.google.tagmanager.protobuf.MutableMessageLite internalMergeFrom(com.google.tagmanager.protobuf.MutableMessageLite,com.google.tagmanager.protobuf.MutableMessageLite) -> internalMergeFrom
    int compareTo(java.lang.Object) -> compareTo
com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension -> com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension:
    com.google.tagmanager.protobuf.MessageLite containingTypeDefaultInstance -> a
    java.lang.Object defaultValue -> b
    com.google.tagmanager.protobuf.MessageLite messageDefaultInstance -> c
    com.google.tagmanager.protobuf.GeneratedMessageLite$ExtensionDescriptor descriptor -> d
    java.lang.Class singularType -> e
    java.lang.reflect.Method enumValueOf -> f
    com.google.tagmanager.protobuf.MessageLite getContainingTypeDefaultInstance() -> getContainingTypeDefaultInstance
    int getNumber() -> getNumber
    com.google.tagmanager.protobuf.MessageLite getMessageDefaultInstance() -> getMessageDefaultInstance
    java.lang.Object fromFieldSetType(java.lang.Object) -> a
    java.lang.Object singularFromFieldSetType(java.lang.Object) -> b
    java.lang.Object toFieldSetType(java.lang.Object) -> c
    java.lang.Object singularToFieldSetType(java.lang.Object) -> d
com.google.tagmanager.protobuf.GeneratedMessageLite$SerializedForm -> IX:
    long serialVersionUID -> serialVersionUID
    java.lang.String messageClassName -> a
    byte[] asBytes -> b
    java.lang.Object readResolve() -> readResolve
com.google.tagmanager.protobuf.GeneratedMutableMessageLite -> com.google.tagmanager.protobuf.GeneratedMutableMessageLite:
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.ByteString unknownFields -> unknownFields
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    boolean parseUnknownField(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    com.google.tagmanager.protobuf.MessageLite$Builder internalCopyToBuilder(com.google.tagmanager.protobuf.MutableMessageLite,com.google.tagmanager.protobuf.MessageLite) -> a
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault() -> internalImmutableDefault
    com.google.tagmanager.protobuf.MessageLite internalImmutableDefault(java.lang.String) -> internalImmutableDefault
    com.google.tagmanager.protobuf.MessageLite immutableCopy() -> immutableCopy
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite mergeFrom(com.google.tagmanager.protobuf.GeneratedMutableMessageLite) -> mergeFrom
    java.lang.Object writeReplace() -> writeReplace
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
com.google.tagmanager.protobuf.GeneratedMutableMessageLite$1 -> IY:
    int[] $SwitchMap$com$google$protobuf$WireFormat$JavaType -> a
com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage -> com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage:
    com.google.tagmanager.protobuf.FieldSet extensions -> a
    void internalSetExtensionSet(com.google.tagmanager.protobuf.FieldSet) -> a
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage clear() -> clear
    void ensureExtensionsIsMutable() -> b
    void verifyExtensionContainingType(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> a
    boolean hasExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> hasExtension
    int getExtensionCount(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtensionCount
    java.lang.Object getExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getExtension
    java.lang.Object getExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,int) -> getExtension
    com.google.tagmanager.protobuf.MutableMessageLite getMutableExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> getMutableExtension
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage setExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,java.lang.Object) -> setExtension
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage setExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,int,java.lang.Object) -> setExtension
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage addExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension,java.lang.Object) -> addExtension
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage clearExtension(com.google.tagmanager.protobuf.GeneratedMessageLite$GeneratedExtension) -> clearExtension
    boolean extensionsAreInitialized() -> extensionsAreInitialized
    boolean parseUnknownField(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.CodedOutputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite,int) -> parseUnknownField
    com.google.tagmanager.protobuf.MessageLite immutableCopy() -> immutableCopy
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage$ExtensionWriter newExtensionWriter() -> newExtensionWriter
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage$ExtensionWriter newMessageSetExtensionWriter() -> newMessageSetExtensionWriter
    int extensionsSerializedSize() -> extensionsSerializedSize
    int extensionsSerializedSizeAsMessageSet() -> extensionsSerializedSizeAsMessageSet
    void mergeExtensionFields(com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage) -> mergeExtensionFields
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.FieldSet access$000(com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage) -> a
com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage$ExtensionWriter -> com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage$ExtensionWriter:
    java.util.Iterator iter -> b
    java.util.Map$Entry next -> c
    boolean messageSetWireFormat -> d
    com.google.tagmanager.protobuf.GeneratedMutableMessageLite$ExtendableMutableMessage this$0 -> a
    void writeUntil(int,com.google.tagmanager.protobuf.CodedOutputStream) -> writeUntil
com.google.tagmanager.protobuf.GeneratedMutableMessageLite$SerializedForm -> IZ:
    long serialVersionUID -> serialVersionUID
    java.lang.String messageClassName -> a
    byte[] asBytes -> b
    java.lang.Object readResolve() -> readResolve
com.google.tagmanager.protobuf.Internal -> com.google.tagmanager.protobuf.Internal:
    byte[] EMPTY_BYTE_ARRAY -> EMPTY_BYTE_ARRAY
    java.nio.ByteBuffer EMPTY_BYTE_BUFFER -> EMPTY_BYTE_BUFFER
    java.lang.String stringDefaultValue(java.lang.String) -> stringDefaultValue
    com.google.tagmanager.protobuf.ByteString bytesDefaultValue(java.lang.String) -> bytesDefaultValue
    byte[] byteArrayDefaultValue(java.lang.String) -> byteArrayDefaultValue
    java.nio.ByteBuffer byteBufferDefaultValue(java.lang.String) -> byteBufferDefaultValue
    java.nio.ByteBuffer copyByteBuffer(java.nio.ByteBuffer) -> copyByteBuffer
    boolean isValidUtf8(com.google.tagmanager.protobuf.ByteString) -> isValidUtf8
    boolean isValidUtf8(byte[]) -> isValidUtf8
    byte[] toByteArray(java.lang.String) -> toByteArray
    java.lang.String toStringUtf8(byte[]) -> toStringUtf8
    int hashLong(long) -> hashLong
    int hashBoolean(boolean) -> hashBoolean
    int hashEnum(com.google.tagmanager.protobuf.Internal$EnumLite) -> hashEnum
    int hashEnumList(java.util.List) -> hashEnumList
    boolean equals(java.util.List,java.util.List) -> equals
    int hashCode(java.util.List) -> hashCode
    int hashCode(byte[]) -> hashCode
    boolean equalsByteBuffer(java.nio.ByteBuffer,java.nio.ByteBuffer) -> equalsByteBuffer
    boolean equalsByteBuffer(java.util.List,java.util.List) -> equalsByteBuffer
    int hashCodeByteBuffer(java.util.List) -> hashCodeByteBuffer
    int hashCodeByteBuffer(java.nio.ByteBuffer) -> hashCodeByteBuffer
    com.google.tagmanager.protobuf.MutableMessageLite mergeFrom(com.google.tagmanager.protobuf.MutableMessageLite,com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MutableMessageLite mergeFrom(com.google.tagmanager.protobuf.MutableMessageLite,com.google.tagmanager.protobuf.CodedInputStream) -> mergeFrom
    com.google.tagmanager.protobuf.MutableMessageLite mergeFrom(com.google.tagmanager.protobuf.MutableMessageLite,byte[]) -> mergeFrom
    boolean isProto1Group(com.google.tagmanager.protobuf.MessageLite) -> a
com.google.tagmanager.protobuf.Internal$EnumLite -> com.google.tagmanager.protobuf.Internal$EnumLite:
    int getNumber() -> getNumber
com.google.tagmanager.protobuf.Internal$EnumLiteMap -> com.google.tagmanager.protobuf.Internal$EnumLiteMap:
    com.google.tagmanager.protobuf.Internal$EnumLite findValueByNumber(int) -> findValueByNumber
com.google.tagmanager.protobuf.InvalidProtocolBufferException -> com.google.tagmanager.protobuf.InvalidProtocolBufferException:
    long serialVersionUID -> serialVersionUID
    com.google.tagmanager.protobuf.MessageLite unfinishedMessage -> a
    com.google.tagmanager.protobuf.InvalidProtocolBufferException setUnfinishedMessage(com.google.tagmanager.protobuf.MessageLite) -> setUnfinishedMessage
    com.google.tagmanager.protobuf.MessageLite getUnfinishedMessage() -> getUnfinishedMessage
    com.google.tagmanager.protobuf.InvalidProtocolBufferException truncatedMessage() -> a
    com.google.tagmanager.protobuf.InvalidProtocolBufferException negativeSize() -> b
    com.google.tagmanager.protobuf.InvalidProtocolBufferException malformedVarint() -> c
    com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidTag() -> d
    com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidEndTag() -> e
    com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidWireType() -> f
    com.google.tagmanager.protobuf.InvalidProtocolBufferException recursionLimitExceeded() -> g
    com.google.tagmanager.protobuf.InvalidProtocolBufferException sizeLimitExceeded() -> h
    com.google.tagmanager.protobuf.InvalidProtocolBufferException parseFailure() -> i
    com.google.tagmanager.protobuf.InvalidProtocolBufferException invalidUtf8() -> j
com.google.tagmanager.protobuf.LazyField -> Ja:
    com.google.tagmanager.protobuf.MessageLite defaultInstance -> d
    com.google.tagmanager.protobuf.ExtensionRegistryLite extensionRegistry -> e
    com.google.tagmanager.protobuf.ByteString bytes -> a
    com.google.tagmanager.protobuf.MessageLite value -> b
    boolean isDirty -> c
    com.google.tagmanager.protobuf.MessageLite getValue() -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    void ensureInitialized() -> b
com.google.tagmanager.protobuf.LazyField$LazyEntry -> Jb:
    java.util.Map$Entry entry -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.tagmanager.protobuf.LazyField$LazyIterator -> Jc:
    java.util.Iterator iterator -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.tagmanager.protobuf.LazyStringArrayList -> com.google.tagmanager.protobuf.LazyStringArrayList:
    com.google.tagmanager.protobuf.LazyStringList EMPTY -> EMPTY
    java.util.List list -> a
    java.lang.String get(int) -> get
    int size() -> size
    java.lang.String set(int,java.lang.String) -> set
    void add(int,java.lang.String) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean addAllByteString(java.util.Collection) -> addAllByteString
    boolean addAllByteArray(java.util.Collection) -> addAllByteArray
    java.lang.String remove(int) -> remove
    void clear() -> clear
    void add(com.google.tagmanager.protobuf.ByteString) -> add
    void add(byte[]) -> add
    com.google.tagmanager.protobuf.ByteString getByteString(int) -> getByteString
    byte[] getByteArray(int) -> getByteArray
    void set(int,com.google.tagmanager.protobuf.ByteString) -> set
    void set(int,byte[]) -> set
    java.lang.String asString(java.lang.Object) -> b
    byte[] asByteArray(java.lang.Object) -> c
    java.util.List getUnderlyingElements() -> getUnderlyingElements
    void mergeFrom(com.google.tagmanager.protobuf.LazyStringList) -> mergeFrom
    java.util.List asByteArrayList() -> asByteArrayList
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    byte[] access$000(java.lang.Object) -> a
com.google.tagmanager.protobuf.LazyStringArrayList$ByteArrayListView -> Jd:
    java.util.List list -> a
    int size() -> size
    java.lang.Object remove(int) -> remove
    void add(int,java.lang.Object) -> add
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.tagmanager.protobuf.LazyStringList -> com.google.tagmanager.protobuf.LazyStringList:
    com.google.tagmanager.protobuf.ByteString getByteString(int) -> getByteString
    byte[] getByteArray(int) -> getByteArray
    void add(com.google.tagmanager.protobuf.ByteString) -> add
    void add(byte[]) -> add
    void set(int,com.google.tagmanager.protobuf.ByteString) -> set
    void set(int,byte[]) -> set
    boolean addAllByteString(java.util.Collection) -> addAllByteString
    boolean addAllByteArray(java.util.Collection) -> addAllByteArray
    java.util.List getUnderlyingElements() -> getUnderlyingElements
    void mergeFrom(com.google.tagmanager.protobuf.LazyStringList) -> mergeFrom
    java.util.List asByteArrayList() -> asByteArrayList
com.google.tagmanager.protobuf.LiteralByteString -> Je:
    byte[] bytes -> b
    int hash -> c
    byte byteAt(int) -> byteAt
    int size() -> size
    com.google.tagmanager.protobuf.ByteString substring(int,int) -> substring
    void copyToInternal(byte[],int,int,int) -> copyToInternal
    void copyTo(java.nio.ByteBuffer) -> copyTo
    java.nio.ByteBuffer asReadOnlyByteBuffer() -> asReadOnlyByteBuffer
    java.util.List asReadOnlyByteBufferList() -> asReadOnlyByteBufferList
    void writeTo(java.io.OutputStream) -> writeTo
    void writeToInternal(java.io.OutputStream,int,int) -> b
    java.lang.String toString(java.lang.String) -> toString
    boolean isValidUtf8() -> isValidUtf8
    int partialIsValidUtf8(int,int,int) -> partialIsValidUtf8
    boolean equals(java.lang.Object) -> equals
    boolean equalsRange(com.google.tagmanager.protobuf.LiteralByteString,int,int) -> a
    int hashCode() -> hashCode
    int peekCachedHashCode() -> peekCachedHashCode
    int partialHash(int,int,int) -> partialHash
    int hashCode(int,byte[],int,int) -> a
    int hashCode(byte[]) -> a
    java.io.InputStream newInput() -> newInput
    com.google.tagmanager.protobuf.CodedInputStream newCodedInput() -> newCodedInput
    com.google.tagmanager.protobuf.ByteString$ByteIterator iterator() -> iterator
    int getTreeDepth() -> getTreeDepth
    boolean isBalanced() -> isBalanced
    int getOffsetIntoBytes() -> a
    java.util.Iterator iterator() -> iterator
com.google.tagmanager.protobuf.LiteralByteString$LiteralByteIterator -> Jf:
    int position -> b
    int limit -> c
    com.google.tagmanager.protobuf.LiteralByteString this$0 -> a
    boolean hasNext() -> hasNext
    byte nextByte() -> nextByte
    void remove() -> remove
    java.lang.Object next() -> next
com.google.tagmanager.protobuf.MessageLite -> com.google.tagmanager.protobuf.MessageLite:
    void writeTo(com.google.tagmanager.protobuf.CodedOutputStream) -> writeTo
    int getSerializedSize() -> getSerializedSize
    com.google.tagmanager.protobuf.Parser getParserForType() -> getParserForType
    com.google.tagmanager.protobuf.ByteString toByteString() -> toByteString
    byte[] toByteArray() -> toByteArray
    void writeTo(java.io.OutputStream) -> writeTo
    void writeDelimitedTo(java.io.OutputStream) -> writeDelimitedTo
    com.google.tagmanager.protobuf.MutableMessageLite mutableCopy() -> mutableCopy
    com.google.tagmanager.protobuf.MessageLite$Builder newBuilderForType() -> newBuilderForType
    com.google.tagmanager.protobuf.MessageLite$Builder toBuilder() -> toBuilder
com.google.tagmanager.protobuf.MessageLite$Builder -> com.google.tagmanager.protobuf.MessageLite$Builder:
    com.google.tagmanager.protobuf.MessageLite$Builder clear() -> clear
    com.google.tagmanager.protobuf.MessageLite build() -> build
    com.google.tagmanager.protobuf.MessageLite buildPartial() -> buildPartial
    com.google.tagmanager.protobuf.MessageLite$Builder clone() -> clone
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.ByteString) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(byte[]) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(byte[],int,int) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream) -> mergeFrom
    com.google.tagmanager.protobuf.MessageLite$Builder mergeFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeDelimitedFrom(java.io.InputStream) -> mergeDelimitedFrom
    boolean mergeDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeDelimitedFrom
com.google.tagmanager.protobuf.MessageLiteOrBuilder -> com.google.tagmanager.protobuf.MessageLiteOrBuilder:
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    boolean isInitialized() -> isInitialized
com.google.tagmanager.protobuf.MutableMessageLite -> com.google.tagmanager.protobuf.MutableMessageLite:
    com.google.tagmanager.protobuf.MessageLite getDefaultInstanceForType() -> getDefaultInstanceForType
    com.google.tagmanager.protobuf.MutableMessageLite newMessageForType() -> newMessageForType
    com.google.tagmanager.protobuf.MessageLite immutableCopy() -> immutableCopy
    com.google.tagmanager.protobuf.MutableMessageLite clone() -> clone
    int getCachedSize() -> getCachedSize
    void writeToWithCachedSizes(com.google.tagmanager.protobuf.CodedOutputStream) -> writeToWithCachedSizes
    com.google.tagmanager.protobuf.MutableMessageLite clear() -> clear
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergePartialFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.ByteString) -> mergeFrom
    boolean mergeFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeFrom(byte[]) -> mergeFrom
    boolean mergeFrom(byte[],int,int) -> mergeFrom
    boolean mergeFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeFrom(java.nio.ByteBuffer) -> mergeFrom
    boolean mergeFrom(java.nio.ByteBuffer,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeFrom(java.io.InputStream) -> mergeFrom
    boolean mergeFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeFrom
    boolean mergeDelimitedFrom(java.io.InputStream) -> mergeDelimitedFrom
    boolean mergeDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> mergeDelimitedFrom
    boolean parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    boolean parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(byte[]) -> parseFrom
    boolean parseFrom(byte[],int,int) -> parseFrom
    boolean parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(java.nio.ByteBuffer) -> parseFrom
    boolean parseFrom(java.nio.ByteBuffer,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseFrom(java.io.InputStream) -> parseFrom
    boolean parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    boolean parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    boolean parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
com.google.tagmanager.protobuf.Parser -> com.google.tagmanager.protobuf.Parser:
    java.lang.Object parseFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parseFrom
    java.lang.Object parseFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream) -> parsePartialFrom
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.CodedInputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parseFrom(com.google.tagmanager.protobuf.ByteString) -> parseFrom
    java.lang.Object parseFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.ByteString) -> parsePartialFrom
    java.lang.Object parsePartialFrom(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parseFrom(byte[],int,int) -> parseFrom
    java.lang.Object parseFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parseFrom(byte[]) -> parseFrom
    java.lang.Object parseFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parsePartialFrom(byte[],int,int) -> parsePartialFrom
    java.lang.Object parsePartialFrom(byte[],int,int,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parsePartialFrom(byte[]) -> parsePartialFrom
    java.lang.Object parsePartialFrom(byte[],com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parseFrom(java.io.InputStream) -> parseFrom
    java.lang.Object parseFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseFrom
    java.lang.Object parsePartialFrom(java.io.InputStream) -> parsePartialFrom
    java.lang.Object parsePartialFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialFrom
    java.lang.Object parseDelimitedFrom(java.io.InputStream) -> parseDelimitedFrom
    java.lang.Object parseDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parseDelimitedFrom
    java.lang.Object parsePartialDelimitedFrom(java.io.InputStream) -> parsePartialDelimitedFrom
    java.lang.Object parsePartialDelimitedFrom(java.io.InputStream,com.google.tagmanager.protobuf.ExtensionRegistryLite) -> parsePartialDelimitedFrom
com.google.tagmanager.protobuf.RopeByteString -> Jg:
    int[] minLengthByDepth -> b
    int totalLength -> c
    com.google.tagmanager.protobuf.ByteString left -> d
    com.google.tagmanager.protobuf.ByteString right -> e
    int leftLength -> f
    int treeDepth -> g
    int hash -> h
    com.google.tagmanager.protobuf.ByteString concatenate(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ByteString) -> a
    com.google.tagmanager.protobuf.LiteralByteString concatenateBytes(com.google.tagmanager.protobuf.ByteString,com.google.tagmanager.protobuf.ByteString) -> b
    byte byteAt(int) -> byteAt
    int size() -> size
    int getTreeDepth() -> getTreeDepth
    boolean isBalanced() -> isBalanced
    com.google.tagmanager.protobuf.ByteString substring(int,int) -> substring
    void copyToInternal(byte[],int,int,int) -> copyToInternal
    void copyTo(java.nio.ByteBuffer) -> copyTo
    java.nio.ByteBuffer asReadOnlyByteBuffer() -> asReadOnlyByteBuffer
    java.util.List asReadOnlyByteBufferList() -> asReadOnlyByteBufferList
    void writeTo(java.io.OutputStream) -> writeTo
    void writeToInternal(java.io.OutputStream,int,int) -> b
    java.lang.String toString(java.lang.String) -> toString
    boolean isValidUtf8() -> isValidUtf8
    int partialIsValidUtf8(int,int,int) -> partialIsValidUtf8
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int peekCachedHashCode() -> peekCachedHashCode
    int partialHash(int,int,int) -> partialHash
    com.google.tagmanager.protobuf.CodedInputStream newCodedInput() -> newCodedInput
    java.io.InputStream newInput() -> newInput
    com.google.tagmanager.protobuf.ByteString$ByteIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
    int[] access$300() -> a
    com.google.tagmanager.protobuf.ByteString access$500(com.google.tagmanager.protobuf.RopeByteString) -> a
    com.google.tagmanager.protobuf.ByteString access$600(com.google.tagmanager.protobuf.RopeByteString) -> b
com.google.tagmanager.protobuf.RopeByteString$Balancer -> Jh:
    java.util.Deque prefixesStack -> a
    void doBalance(com.google.tagmanager.protobuf.ByteString) -> a
    int getDepthBinForLength(int) -> a
com.google.tagmanager.protobuf.RopeByteString$PieceIterator -> Ji:
    java.util.Deque breadCrumbs -> a
    com.google.tagmanager.protobuf.LiteralByteString next -> b
    com.google.tagmanager.protobuf.LiteralByteString getLeafByLeft(com.google.tagmanager.protobuf.ByteString) -> a
    com.google.tagmanager.protobuf.LiteralByteString getNextNonEmptyLeaf() -> b
    boolean hasNext() -> hasNext
    com.google.tagmanager.protobuf.LiteralByteString next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.google.tagmanager.protobuf.RopeByteString$RopeByteIterator -> Jj:
    com.google.tagmanager.protobuf.RopeByteString$PieceIterator pieces -> c
    com.google.tagmanager.protobuf.ByteString$ByteIterator bytes -> d
    int bytesRemaining -> a
    com.google.tagmanager.protobuf.RopeByteString this$0 -> b
    boolean hasNext() -> hasNext
    byte nextByte() -> nextByte
    void remove() -> remove
    java.lang.Object next() -> next
com.google.tagmanager.protobuf.RopeByteString$RopeInputStream -> Jk:
    com.google.tagmanager.protobuf.RopeByteString$PieceIterator pieceIterator -> b
    com.google.tagmanager.protobuf.LiteralByteString currentPiece -> c
    int currentPieceSize -> d
    int currentPieceIndex -> e
    int currentPieceOffsetInRope -> f
    int mark -> g
    com.google.tagmanager.protobuf.RopeByteString this$0 -> a
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int readSkipInternal(byte[],int,int) -> a
    int read() -> read
    int available() -> available
    boolean markSupported() -> markSupported
    void mark(int) -> mark
    void reset() -> reset
    void initialize() -> a
    void advanceIfCurrentPieceFullyRead() -> b
com.google.tagmanager.protobuf.SmallSortedMap -> Jl:
    int maxArraySize -> b
    java.util.List entryList -> c
    java.util.Map overflowEntries -> d
    boolean isImmutable -> a
    com.google.tagmanager.protobuf.SmallSortedMap$EntrySet lazyEntrySet -> e
    com.google.tagmanager.protobuf.SmallSortedMap newFieldMap(int) -> a
    void makeImmutable() -> a
    int getNumArrayEntries() -> b
    java.util.Map$Entry getArrayEntryAt(int) -> b
    java.lang.Iterable getOverflowEntries() -> c
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Comparable,java.lang.Object) -> a
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeArrayEntryAt(int) -> c
    int binarySearchInArray(java.lang.Comparable) -> a
    java.util.Set entrySet() -> entrySet
    void checkMutable() -> d
    java.util.SortedMap getOverflowEntriesMutable() -> e
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void access$200(com.google.tagmanager.protobuf.SmallSortedMap) -> a
    java.util.List access$400(com.google.tagmanager.protobuf.SmallSortedMap) -> b
    java.lang.Object access$500(com.google.tagmanager.protobuf.SmallSortedMap,int) -> a
    java.util.Map access$600(com.google.tagmanager.protobuf.SmallSortedMap) -> c
com.google.tagmanager.protobuf.SmallSortedMap$1 -> Jm:
    void makeImmutable() -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.google.tagmanager.protobuf.SmallSortedMap$EmptySet -> Jn:
    java.util.Iterator ITERATOR -> a
    java.lang.Iterable ITERABLE -> b
    java.lang.Iterable iterable() -> a
    java.util.Iterator access$700() -> b
com.google.tagmanager.protobuf.SmallSortedMap$EmptySet$1 -> Jo:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.tagmanager.protobuf.SmallSortedMap$EmptySet$2 -> Jp:
    java.util.Iterator iterator() -> iterator
com.google.tagmanager.protobuf.SmallSortedMap$Entry -> Jq:
    java.lang.Comparable key -> b
    java.lang.Object value -> c
    com.google.tagmanager.protobuf.SmallSortedMap this$0 -> a
    java.lang.Comparable getKey() -> a
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object,java.lang.Object) -> a
    java.lang.Object getKey() -> getKey
    int compareTo(java.lang.Object) -> compareTo
com.google.tagmanager.protobuf.SmallSortedMap$EntryIterator -> Jr:
    int pos -> b
    boolean nextCalledBeforeRemove -> c
    java.util.Iterator lazyOverflowIterator -> d
    com.google.tagmanager.protobuf.SmallSortedMap this$0 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.util.Iterator getOverflowIterator() -> a
    java.lang.Object next() -> next
com.google.tagmanager.protobuf.SmallSortedMap$EntrySet -> Js:
    com.google.tagmanager.protobuf.SmallSortedMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean add(java.lang.Object) -> add
com.google.tagmanager.protobuf.UninitializedMessageException -> com.google.tagmanager.protobuf.UninitializedMessageException:
    long serialVersionUID -> serialVersionUID
    java.util.List missingFields -> a
    java.util.List getMissingFields() -> getMissingFields
    com.google.tagmanager.protobuf.InvalidProtocolBufferException asInvalidProtocolBufferException() -> asInvalidProtocolBufferException
    java.lang.String buildDescription(java.util.List) -> a
com.google.tagmanager.protobuf.UnmodifiableLazyStringList -> com.google.tagmanager.protobuf.UnmodifiableLazyStringList:
    com.google.tagmanager.protobuf.LazyStringList list -> a
    java.lang.String get(int) -> get
    int size() -> size
    com.google.tagmanager.protobuf.ByteString getByteString(int) -> getByteString
    void add(com.google.tagmanager.protobuf.ByteString) -> add
    void set(int,com.google.tagmanager.protobuf.ByteString) -> set
    boolean addAllByteString(java.util.Collection) -> addAllByteString
    byte[] getByteArray(int) -> getByteArray
    void add(byte[]) -> add
    void set(int,byte[]) -> set
    boolean addAllByteArray(java.util.Collection) -> addAllByteArray
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.Iterator iterator() -> iterator
    java.util.List getUnderlyingElements() -> getUnderlyingElements
    void mergeFrom(com.google.tagmanager.protobuf.LazyStringList) -> mergeFrom
    java.util.List asByteArrayList() -> asByteArrayList
    java.lang.Object get(int) -> get
    com.google.tagmanager.protobuf.LazyStringList access$000(com.google.tagmanager.protobuf.UnmodifiableLazyStringList) -> a
com.google.tagmanager.protobuf.UnmodifiableLazyStringList$1 -> Jt:
    java.util.ListIterator iter -> a
    int val$index -> b
    com.google.tagmanager.protobuf.UnmodifiableLazyStringList this$0 -> c
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void remove() -> remove
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.lang.Object previous() -> previous
    java.lang.Object next() -> next
com.google.tagmanager.protobuf.UnmodifiableLazyStringList$2 -> Ju:
    java.util.Iterator iter -> a
    com.google.tagmanager.protobuf.UnmodifiableLazyStringList this$0 -> b
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.tagmanager.protobuf.Utf8 -> Jv:
    boolean isValidUtf8(byte[],int,int) -> a
    int partialIsValidUtf8(byte[],int,int) -> b
    int incompleteStateFor(int,int) -> a
    int incompleteStateFor(int,int,int) -> a
    int incompleteStateFor(byte[],int,int) -> c
com.google.tagmanager.protobuf.WireFormat -> com.google.tagmanager.protobuf.WireFormat:
    int WIRETYPE_VARINT -> WIRETYPE_VARINT
    int WIRETYPE_FIXED64 -> WIRETYPE_FIXED64
    int WIRETYPE_LENGTH_DELIMITED -> WIRETYPE_LENGTH_DELIMITED
    int WIRETYPE_START_GROUP -> WIRETYPE_START_GROUP
    int WIRETYPE_END_GROUP -> WIRETYPE_END_GROUP
    int WIRETYPE_FIXED32 -> WIRETYPE_FIXED32
    int MESSAGE_SET_ITEM_TAG -> a
    int MESSAGE_SET_ITEM_END_TAG -> b
    int MESSAGE_SET_TYPE_ID_TAG -> c
    int MESSAGE_SET_MESSAGE_TAG -> d
    int getTagWireType(int) -> a
    int getTagFieldNumber(int) -> getTagFieldNumber
    int makeTag(int,int) -> a
com.google.tagmanager.protobuf.WireFormat$FieldType -> com.google.tagmanager.protobuf.WireFormat$FieldType:
    com.google.tagmanager.protobuf.WireFormat$FieldType DOUBLE -> DOUBLE
    com.google.tagmanager.protobuf.WireFormat$FieldType FLOAT -> FLOAT
    com.google.tagmanager.protobuf.WireFormat$FieldType INT64 -> INT64
    com.google.tagmanager.protobuf.WireFormat$FieldType UINT64 -> UINT64
    com.google.tagmanager.protobuf.WireFormat$FieldType INT32 -> INT32
    com.google.tagmanager.protobuf.WireFormat$FieldType FIXED64 -> FIXED64
    com.google.tagmanager.protobuf.WireFormat$FieldType FIXED32 -> FIXED32
    com.google.tagmanager.protobuf.WireFormat$FieldType BOOL -> BOOL
    com.google.tagmanager.protobuf.WireFormat$FieldType STRING -> STRING
    com.google.tagmanager.protobuf.WireFormat$FieldType GROUP -> GROUP
    com.google.tagmanager.protobuf.WireFormat$FieldType MESSAGE -> MESSAGE
    com.google.tagmanager.protobuf.WireFormat$FieldType BYTES -> BYTES
    com.google.tagmanager.protobuf.WireFormat$FieldType UINT32 -> UINT32
    com.google.tagmanager.protobuf.WireFormat$FieldType ENUM -> ENUM
    com.google.tagmanager.protobuf.WireFormat$FieldType SFIXED32 -> SFIXED32
    com.google.tagmanager.protobuf.WireFormat$FieldType SFIXED64 -> SFIXED64
    com.google.tagmanager.protobuf.WireFormat$FieldType SINT32 -> SINT32
    com.google.tagmanager.protobuf.WireFormat$FieldType SINT64 -> SINT64
    com.google.tagmanager.protobuf.WireFormat$JavaType javaType -> a
    int wireType -> b
    com.google.tagmanager.protobuf.WireFormat$FieldType[] $VALUES -> c
    com.google.tagmanager.protobuf.WireFormat$FieldType[] values() -> values
    com.google.tagmanager.protobuf.WireFormat$FieldType valueOf(java.lang.String) -> valueOf
    com.google.tagmanager.protobuf.WireFormat$JavaType getJavaType() -> getJavaType
    int getWireType() -> getWireType
    boolean isPackable() -> isPackable
com.google.tagmanager.protobuf.WireFormat$FieldType$1 -> Jw:
    boolean isPackable() -> isPackable
com.google.tagmanager.protobuf.WireFormat$FieldType$2 -> Jx:
    boolean isPackable() -> isPackable
com.google.tagmanager.protobuf.WireFormat$FieldType$3 -> Jy:
    boolean isPackable() -> isPackable
com.google.tagmanager.protobuf.WireFormat$FieldType$4 -> Jz:
    boolean isPackable() -> isPackable
com.google.tagmanager.protobuf.WireFormat$JavaType -> com.google.tagmanager.protobuf.WireFormat$JavaType:
    com.google.tagmanager.protobuf.WireFormat$JavaType INT -> INT
    com.google.tagmanager.protobuf.WireFormat$JavaType LONG -> LONG
    com.google.tagmanager.protobuf.WireFormat$JavaType FLOAT -> FLOAT
    com.google.tagmanager.protobuf.WireFormat$JavaType DOUBLE -> DOUBLE
    com.google.tagmanager.protobuf.WireFormat$JavaType BOOLEAN -> BOOLEAN
    com.google.tagmanager.protobuf.WireFormat$JavaType STRING -> STRING
    com.google.tagmanager.protobuf.WireFormat$JavaType BYTE_STRING -> BYTE_STRING
    com.google.tagmanager.protobuf.WireFormat$JavaType ENUM -> ENUM
    com.google.tagmanager.protobuf.WireFormat$JavaType MESSAGE -> MESSAGE
    java.lang.Object defaultDefault -> a
    com.google.tagmanager.protobuf.WireFormat$JavaType[] $VALUES -> b
    com.google.tagmanager.protobuf.WireFormat$JavaType[] values() -> values
    com.google.tagmanager.protobuf.WireFormat$JavaType valueOf(java.lang.String) -> valueOf
org.bwgz.android.common.ActivityItem -> org.bwgz.android.common.ActivityItem:
    java.lang.String title -> title
    java.lang.String description -> description
    java.lang.Class activity -> activity
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.Class getActivity() -> getActivity
    void setActivity(java.lang.Class) -> setActivity
    java.lang.String getLineOne() -> getLineOne
    java.lang.String getLineTwo() -> getLineTwo
org.bwgz.android.common.ActivityListActivity -> org.bwgz.android.common.ActivityListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.ActivityListActivity$1 -> org.bwgz.android.common.ActivityListActivity$1:
    org.bwgz.android.common.ActivityListActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.bwgz.android.common.IntentItem -> org.bwgz.android.common.IntentItem:
    java.lang.String title -> title
    java.lang.String description -> description
    android.content.Intent intent -> intent
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    android.content.Intent getIntent() -> getIntent
    void setIntent(android.content.Intent) -> setIntent
    java.lang.String getLineOne() -> getLineOne
    java.lang.String getLineTwo() -> getLineTwo
org.bwgz.android.common.IntentListActivity -> org.bwgz.android.common.IntentListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.IntentListActivity$1 -> org.bwgz.android.common.IntentListActivity$1:
    org.bwgz.android.common.IntentListActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.bwgz.android.common.TextActivity -> org.bwgz.android.common.TextActivity:
    java.lang.String TAG -> TAG
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    int getTextResId() -> getTextResId
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.TwoLineItem -> org.bwgz.android.common.TwoLineItem:
    java.lang.String getLineOne() -> getLineOne
    java.lang.String getLineTwo() -> getLineTwo
org.bwgz.android.common.TwoLineListActivity -> org.bwgz.android.common.TwoLineListActivity:
    android.widget.ListView listView -> listView
    java.util.List getList() -> getList
    android.widget.ListView getListView() -> getListView
    void setListView(android.widget.ListView) -> setListView
    android.widget.ArrayAdapter getAdapter() -> getAdapter
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
org.bwgz.android.common.TwoLineListActivity$1 -> org.bwgz.android.common.TwoLineListActivity$1:
    org.bwgz.android.common.TwoLineListActivity this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.bwgz.android.common.sherlock.ActivityListActivity -> org.bwgz.android.common.sherlock.ActivityListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.sherlock.ActivityListActivity$1 -> org.bwgz.android.common.sherlock.ActivityListActivity$1:
    org.bwgz.android.common.sherlock.ActivityListActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.bwgz.android.common.sherlock.IntentListActivity -> org.bwgz.android.common.sherlock.IntentListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.sherlock.IntentListActivity$1 -> org.bwgz.android.common.sherlock.IntentListActivity$1:
    org.bwgz.android.common.sherlock.IntentListActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.bwgz.android.common.sherlock.TextActivity -> org.bwgz.android.common.sherlock.TextActivity:
    java.lang.String TAG -> TAG
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    int getTextResId() -> getTextResId
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.sherlock.TwoLineListActivity -> org.bwgz.android.common.sherlock.TwoLineListActivity:
    android.widget.ListView listView -> listView
    java.util.List getList() -> getList
    android.widget.ListView getListView() -> getListView
    void setListView(android.widget.ListView) -> setListView
    android.widget.ArrayAdapter getAdapter() -> getAdapter
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
org.bwgz.android.common.sherlock.TwoLineListActivity$1 -> org.bwgz.android.common.sherlock.TwoLineListActivity$1:
    org.bwgz.android.common.sherlock.TwoLineListActivity this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.bwgz.android.environment.ConnectivityActivity -> org.bwgz.android.environment.ConnectivityActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.ConnectivityTwoLineList -> org.bwgz.android.environment.ConnectivityTwoLineList:
    long serialVersionUID -> serialVersionUID
org.bwgz.android.environment.DisplayActivity -> org.bwgz.android.environment.DisplayActivity:
    org.bwgz.android.environment.DisplayTwoLineList list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.DisplayTwoLineList -> org.bwgz.android.environment.DisplayTwoLineList:
    long serialVersionUID -> serialVersionUID
    java.lang.String getDensityString(int) -> getDensityString
org.bwgz.android.environment.EnvironmentActivity -> org.bwgz.android.environment.EnvironmentActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.EnvironmentTwoLineItem -> org.bwgz.android.environment.EnvironmentTwoLineItem:
    java.lang.String title -> title
    java.lang.String description -> description
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getLineOne() -> getLineOne
    java.lang.String getLineTwo() -> getLineTwo
org.bwgz.android.environment.NetworkInfoActivity -> org.bwgz.android.environment.NetworkInfoActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.NetworkInfoTwoLineList -> org.bwgz.android.environment.NetworkInfoTwoLineList:
    long serialVersionUID -> serialVersionUID
    java.lang.String EXTRA_TYPE_NAME -> EXTRA_TYPE_NAME
org.bwgz.android.environment.OperatingSystemActivity -> org.bwgz.android.environment.OperatingSystemActivity:
    org.bwgz.android.environment.OperatingSystemTwoLineList list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.OperatingSystemTwoLineList -> org.bwgz.android.environment.OperatingSystemTwoLineList:
    long serialVersionUID -> serialVersionUID
    int JELLY_BEAN_MR1 -> JELLY_BEAN_MR1
    java.util.HashMap map -> map
    java.lang.String getSDKName(int) -> getSDKName
org.bwgz.android.environment.SystemActivity -> org.bwgz.android.environment.SystemActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.SystemTwoLineList -> org.bwgz.android.environment.SystemTwoLineList:
    long serialVersionUID -> serialVersionUID
org.bwgz.android.environment.sherlock.ConnectivityActivity -> org.bwgz.android.environment.sherlock.ConnectivityActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.sherlock.DisplayActivity -> org.bwgz.android.environment.sherlock.DisplayActivity:
    org.bwgz.android.environment.DisplayTwoLineList list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.sherlock.EnvironmentActivity -> org.bwgz.android.environment.sherlock.EnvironmentActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.sherlock.NetworkInfoActivity -> org.bwgz.android.environment.sherlock.NetworkInfoActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.sherlock.OperatingSystemActivity -> org.bwgz.android.environment.sherlock.OperatingSystemActivity:
    org.bwgz.android.environment.OperatingSystemTwoLineList list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.sherlock.SystemActivity -> org.bwgz.android.environment.sherlock.SystemActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.google.api.services.freebase.model.MqlReadResponse -> org.bwgz.google.api.services.freebase.model.MqlReadResponse:
    java.lang.Object cursor -> cursor
    java.lang.Integer cost -> cost
    java.lang.Object result -> result
    java.lang.Object getCursor() -> getCursor
    void setCursor(java.lang.Object) -> setCursor
    java.lang.Integer getCost() -> getCost
    void setCost(java.lang.Integer) -> setCost
    java.lang.Object getResult() -> getResult
    void setResult(java.lang.Object) -> setResult
org.bwgz.google.api.services.freebase.model.ValueType -> org.bwgz.google.api.services.freebase.model.ValueType:
    org.bwgz.google.api.services.freebase.model.ValueType FLOAT -> FLOAT
    org.bwgz.google.api.services.freebase.model.ValueType INT -> INT
    org.bwgz.google.api.services.freebase.model.ValueType BOOL -> BOOL
    org.bwgz.google.api.services.freebase.model.ValueType DATETIME -> DATETIME
    org.bwgz.google.api.services.freebase.model.ValueType URI -> URI
    org.bwgz.google.api.services.freebase.model.ValueType STRING -> STRING
    org.bwgz.google.api.services.freebase.model.ValueType OBJECT -> OBJECT
    org.bwgz.google.api.services.freebase.model.ValueType KEY -> KEY
    org.bwgz.google.api.services.freebase.model.ValueType COMPOUND -> COMPOUND
    java.lang.String key -> key
    org.bwgz.google.api.services.freebase.model.ValueType[] $VALUES -> $VALUES
    org.bwgz.google.api.services.freebase.model.ValueType[] values() -> values
    org.bwgz.google.api.services.freebase.model.ValueType valueOf(java.lang.String) -> valueOf
    java.lang.String getKey() -> getKey
org.bwgz.google.api.services.freebase.util.TopicUtil -> org.bwgz.google.api.services.freebase.util.TopicUtil:
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicValue,java.lang.String) -> getPropertyValue
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicPropertyvalue,int,java.lang.String) -> getPropertyValue
    java.util.List getPropertyValues(com.google.api.services.freebase.model.TopicPropertyvalue) -> getPropertyValues
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicLookup$Property,java.lang.String,int,java.lang.String) -> getPropertyValue
    java.util.List getPropertyValues(com.google.api.services.freebase.model.TopicLookup$Property,java.lang.String) -> getPropertyValues
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicLookup,java.lang.String,int,java.lang.String) -> getPropertyValue
    java.util.List getPropertyValues(com.google.api.services.freebase.model.TopicLookup,java.lang.String) -> getPropertyValues
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicPropertyvalue,int) -> getPropertyValue
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicLookup$Property,java.lang.String,int) -> getPropertyValue
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicLookup,java.lang.String,int) -> getPropertyValue
    java.lang.Object getFirstPropertyValue(com.google.api.services.freebase.model.TopicLookup,java.lang.String) -> getFirstPropertyValue
    java.lang.String getPropertyValueType(com.google.api.services.freebase.model.TopicPropertyvalue) -> getPropertyValueType
    java.lang.String getPropertyValueType(com.google.api.services.freebase.model.TopicLookup$Property,java.lang.String) -> getPropertyValueType
    java.lang.String getPropertyValueType(com.google.api.services.freebase.model.TopicLookup,java.lang.String) -> getPropertyValueType
org.bwgz.google.freebase.cache.FreebaseCursorCache -> org.bwgz.google.freebase.cache.FreebaseCursorCache:
    org.bwgz.google.freebase.cache.FreebaseCursorCache instance -> instance
    java.util.List cursors -> cursors
    org.bwgz.google.freebase.cache.FreebaseCursorCache getInstance(java.io.InputStream) -> getInstance
    org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor search(java.util.List,int,int,int) -> search
    org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor getCursor(int) -> getCursor
    int getMaxResults() -> getMaxResults
org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor -> org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor:
    int offset -> offset
    int length -> length
    java.lang.String cursor -> cursor
    int getOffset() -> getOffset
    void setOffset(int) -> setOffset
    int getLength() -> getLength
    void setLength(int) -> setLength
    java.lang.String getCursor() -> getCursor
    void setCursor(java.lang.String) -> setCursor
org.bwgz.google.freebase.cache.QuotationMidCacheLoader -> org.bwgz.google.freebase.cache.QuotationMidCacheLoader:
    java.lang.String query -> query
    org.bwgz.google.freebase.cache.FreebaseCursorCache freebaseCursorCache -> freebaseCursorCache
    org.bwgz.google.freebase.client.FreebaseHelper freebaseHelper -> freebaseHelper
    java.lang.String getMid(java.lang.String,int) -> getMid
    java.lang.String getMid(org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor,int) -> getMid
    java.lang.String load(java.lang.Integer) -> load
    int getMaxResults() -> getMaxResults
    java.lang.Object load(java.lang.Object) -> load
org.bwgz.google.freebase.cache.QuotationMidCacheLoader$Quotation -> org.bwgz.google.freebase.cache.QuotationMidCacheLoader$Quotation:
    java.lang.String mid -> mid
    java.lang.String getMid() -> getMid
    void setMid(java.lang.String) -> setMid
org.bwgz.google.freebase.client.FreebaseHelper -> org.bwgz.google.freebase.client.FreebaseHelper:
    java.lang.String[] reasons -> reasons
    long KEY_PERIOD -> KEY_PERIOD
    long keyLastUsed -> keyLastUsed
    com.google.api.services.freebase.Freebase freebase -> freebase
    java.lang.String[] keys -> keys
    java.util.Random random -> random
    java.lang.String getRandomKey() -> getRandomKey
    boolean useKey() -> useKey
    boolean shouldRetryWithKey(com.google.api.client.googleapis.json.GoogleJsonResponseException) -> shouldRetryWithKey
    com.google.api.services.freebase.model.TopicLookup fetchTopic(java.lang.String,java.lang.String,java.lang.String[]) -> fetchTopic
    com.google.api.services.freebase.model.TopicLookup fetchTopic(java.lang.String,java.lang.String[]) -> fetchTopic
    byte[] fetchImage(java.lang.String,long,long) -> fetchImage
    org.bwgz.google.api.services.freebase.model.MqlReadResponse mqlRead(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String) -> mqlRead
    com.google.api.services.freebase.Freebase getFreebase() -> getFreebase
    void setFreebase(com.google.api.services.freebase.Freebase) -> setFreebase
org.bwgz.google.freebase.client.HTTPStatusCode -> org.bwgz.google.freebase.client.HTTPStatusCode:
    org.bwgz.google.freebase.client.HTTPStatusCode OK -> OK
    org.bwgz.google.freebase.client.HTTPStatusCode CREATED -> CREATED
    org.bwgz.google.freebase.client.HTTPStatusCode ACCEPTED -> ACCEPTED
    org.bwgz.google.freebase.client.HTTPStatusCode NO_CONTENT -> NO_CONTENT
    org.bwgz.google.freebase.client.HTTPStatusCode MOVED_PERMANENTLY -> MOVED_PERMANENTLY
    org.bwgz.google.freebase.client.HTTPStatusCode SEE_OTHER -> SEE_OTHER
    org.bwgz.google.freebase.client.HTTPStatusCode NOT_MODIFIED -> NOT_MODIFIED
    org.bwgz.google.freebase.client.HTTPStatusCode TEMPORARY_REDIRECT -> TEMPORARY_REDIRECT
    org.bwgz.google.freebase.client.HTTPStatusCode BAD_REQUEST -> BAD_REQUEST
    org.bwgz.google.freebase.client.HTTPStatusCode UNAUTHORIZED -> UNAUTHORIZED
    org.bwgz.google.freebase.client.HTTPStatusCode FORBIDDEN -> FORBIDDEN
    org.bwgz.google.freebase.client.HTTPStatusCode NOT_FOUND -> NOT_FOUND
    org.bwgz.google.freebase.client.HTTPStatusCode NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    org.bwgz.google.freebase.client.HTTPStatusCode CONFLICT -> CONFLICT
    org.bwgz.google.freebase.client.HTTPStatusCode GONE -> GONE
    org.bwgz.google.freebase.client.HTTPStatusCode PRECONDITION_FAILED -> PRECONDITION_FAILED
    org.bwgz.google.freebase.client.HTTPStatusCode UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    org.bwgz.google.freebase.client.HTTPStatusCode INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    org.bwgz.google.freebase.client.HTTPStatusCode SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    int code -> code
    java.lang.String reason -> reason
    org.bwgz.google.freebase.client.HTTPStatusCode$Family family -> family
    org.bwgz.google.freebase.client.HTTPStatusCode[] ENUM$VALUES -> ENUM$VALUES
    org.bwgz.google.freebase.client.HTTPStatusCode$Family getFamily() -> getFamily
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    org.bwgz.google.freebase.client.HTTPStatusCode fromStatusCode(int) -> fromStatusCode
    org.bwgz.google.freebase.client.HTTPStatusCode[] values() -> values
    org.bwgz.google.freebase.client.HTTPStatusCode valueOf(java.lang.String) -> valueOf
org.bwgz.google.freebase.client.HTTPStatusCode$Family -> org.bwgz.google.freebase.client.HTTPStatusCode$Family:
    org.bwgz.google.freebase.client.HTTPStatusCode$Family INFORMATIONAL -> INFORMATIONAL
    org.bwgz.google.freebase.client.HTTPStatusCode$Family SUCCESSFUL -> SUCCESSFUL
    org.bwgz.google.freebase.client.HTTPStatusCode$Family REDIRECTION -> REDIRECTION
    org.bwgz.google.freebase.client.HTTPStatusCode$Family CLIENT_ERROR -> CLIENT_ERROR
    org.bwgz.google.freebase.client.HTTPStatusCode$Family SERVER_ERROR -> SERVER_ERROR
    org.bwgz.google.freebase.client.HTTPStatusCode$Family OTHER -> OTHER
    org.bwgz.google.freebase.client.HTTPStatusCode$Family[] ENUM$VALUES -> ENUM$VALUES
    org.bwgz.google.freebase.client.HTTPStatusCode$Family[] values() -> values
    org.bwgz.google.freebase.client.HTTPStatusCode$Family valueOf(java.lang.String) -> valueOf
org.bwgz.quotation.BuildConfig -> org.bwgz.quotation.BuildConfig:
    boolean DEBUG -> DEBUG
org.bwgz.quotation.R -> org.bwgz.quotation.R:
org.bwgz.quotation.R$anim -> org.bwgz.quotation.R$anim:
    int clockwise_refresh -> clockwise_refresh
org.bwgz.quotation.R$array -> org.bwgz.quotation.R$array:
    int freebase_api_keys -> freebase_api_keys
org.bwgz.quotation.R$attr -> org.bwgz.quotation.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int verticalDivider -> verticalDivider
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
org.bwgz.quotation.R$bool -> org.bwgz.quotation.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
    int ga_autoActivityTracking -> ga_autoActivityTracking
    int ga_reportUncaughtExceptions -> ga_reportUncaughtExceptions
org.bwgz.quotation.R$color -> org.bwgz.quotation.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
org.bwgz.quotation.R$dimen -> org.bwgz.quotation.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int widget_margin -> widget_margin
org.bwgz.quotation.R$drawable -> org.bwgz.quotation.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int appwidget_bg -> appwidget_bg
    int appwidget_bg_clickable -> appwidget_bg_clickable
    int appwidget_bg_focused -> appwidget_bg_focused
    int appwidget_bg_pressed -> appwidget_bg_pressed
    int appwidget_button_center -> appwidget_button_center
    int appwidget_button_left -> appwidget_button_left
    int appwidget_button_right -> appwidget_button_right
    int appwidget_dark_bg -> appwidget_dark_bg
    int appwidget_dark_bg_clickable -> appwidget_dark_bg_clickable
    int appwidget_dark_bg_focused -> appwidget_dark_bg_focused
    int appwidget_dark_bg_pressed -> appwidget_dark_bg_pressed
    int appwidget_inner_focused_c -> appwidget_inner_focused_c
    int appwidget_inner_focused_l -> appwidget_inner_focused_l
    int appwidget_inner_focused_r -> appwidget_inner_focused_r
    int appwidget_inner_pressed_c -> appwidget_inner_pressed_c
    int appwidget_inner_pressed_l -> appwidget_inner_pressed_l
    int appwidget_inner_pressed_r -> appwidget_inner_pressed_r
    int churchill -> churchill
    int content_new -> content_new
    int einstein -> einstein
    int ic_launcher -> ic_launcher
    int launch -> launch
    int light_feather_pen_035160_ -> light_feather_pen_035160_
    int navigation_back -> navigation_back
    int navigation_forward -> navigation_forward
    int navigation_refresh -> navigation_refresh
    int navigation_refresh_000 -> navigation_refresh_000
    int navigation_refresh_090 -> navigation_refresh_090
    int original_appwidget_bg_clickable -> original_appwidget_bg_clickable
    int person_placeholder -> person_placeholder
    int social_share -> social_share
    int spinner_black_20 -> spinner_black_20
org.bwgz.quotation.R$id -> org.bwgz.quotation.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int actionbar_back -> actionbar_back
    int actionbar_forward -> actionbar_forward
    int actionbar_new -> actionbar_new
    int actionbar_share -> actionbar_share
    int adView -> adView
    int author -> author
    int authorFragment -> authorFragment
    int description -> description
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int image -> image
    int large_quote_widget -> large_quote_widget
    int launch -> launch
    int listMode -> listMode
    int normal -> normal
    int quotation -> quotation
    int quotationFragment -> quotationFragment
    int quote -> quote
    int quote_scroller -> quote_scroller
    int refresher -> refresher
    int settings -> settings
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int small_quote_widget -> small_quote_widget
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
org.bwgz.quotation.R$integer -> org.bwgz.quotation.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
org.bwgz.quotation.R$layout -> org.bwgz.quotation.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int author_fragment -> author_fragment
    int large_quote_widget -> large_quote_widget
    int launch_activity -> launch_activity
    int quotation_fragment -> quotation_fragment
    int quote_activity -> quote_activity
    int refresh_action_view -> refresh_action_view
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
    int small_quote_widget -> small_quote_widget
org.bwgz.quotation.R$menu -> org.bwgz.quotation.R$menu:
    int main_menu -> main_menu
org.bwgz.quotation.R$raw -> org.bwgz.quotation.R$raw:
    int attribution -> attribution
    int legal -> legal
    int termsofuse -> termsofuse
org.bwgz.quotation.R$string -> org.bwgz.quotation.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int actionbar_back -> actionbar_back
    int actionbar_forward -> actionbar_forward
    int actionbar_new -> actionbar_new
    int actionbar_share -> actionbar_share
    int ad_unit_id -> ad_unit_id
    int app_name -> app_name
    int ga_trackingId -> ga_trackingId
    int initialization_message -> initialization_message
    int large_widget_name -> large_widget_name
    int loading_quote -> loading_quote
    int menu_settings -> menu_settings
    int org_bwgz_quotation_activity_QuotationActivity -> org_bwgz_quotation_activity_QuotationActivity
    int org_bwgz_quotation_activity_SettingsActivity -> org_bwgz_quotation_activity_SettingsActivity
    int sharing_quote -> sharing_quote
    int small_widget_name -> small_widget_name
    int title_about -> title_about
    int title_attribution -> title_attribution
    int title_environment -> title_environment
    int title_legal -> title_legal
    int title_settings -> title_settings
    int title_terms_of_use -> title_terms_of_use
    int title_version -> title_version
    int unattributed_quote -> unattributed_quote
    int version -> version
org.bwgz.quotation.R$style -> org.bwgz.quotation.R$style:
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
org.bwgz.quotation.R$styleable -> org.bwgz.quotation.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
org.bwgz.quotation.R$xml -> org.bwgz.quotation.R$xml:
    int authenticator -> authenticator
    int large_quote_widget -> large_quote_widget
    int settings -> settings
    int small_quote_widget -> small_quote_widget
    int syncadapter -> syncadapter
org.bwgz.quotation.activity.AttributionActivity -> org.bwgz.quotation.activity.AttributionActivity:
    int getTextResId() -> getTextResId
org.bwgz.quotation.activity.AuthorFragment -> org.bwgz.quotation.activity.AuthorFragment:
    java.lang.String TAG -> TAG
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    java.lang.String generateCitation(java.lang.String,java.lang.String,java.lang.String) -> generateCitation
    void setAuthors(android.database.Cursor) -> setAuthors
org.bwgz.quotation.activity.LaunchActivity -> org.bwgz.quotation.activity.LaunchActivity:
    java.lang.String TAG -> TAG
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
org.bwgz.quotation.activity.LegalActivity -> org.bwgz.quotation.activity.LegalActivity:
    int getTextResId() -> getTextResId
org.bwgz.quotation.activity.QuotationActivity -> org.bwgz.quotation.activity.QuotationActivity:
    java.lang.String TAG -> TAG
    java.lang.String HISTORY -> HISTORY
    java.lang.String LOAD_STATE -> LOAD_STATE
    java.lang.String LOAD_URI -> LOAD_URI
    java.lang.String authorsQuery -> authorsQuery
    int LOADER_ID_QUTOATION -> LOADER_ID_QUTOATION
    int LOADER_ID_AUTHOR -> LOADER_ID_AUTHOR
    int[] LOADER_IDS -> LOADER_IDS
    long AD_FREE_PERIOD -> AD_FREE_PERIOD
    org.bwgz.quotation.activity.QuotationActivity$LoadState state -> state
    org.bwgz.quotation.activity.QuotationActivity$LazyLoadMessageHandler lazyLoadMessageHandler -> lazyLoadMessageHandler
    android.os.AsyncTask lazyAdViewTask -> lazyAdViewTask
    org.bwgz.quotation.activity.QuotationActivity$History history -> history
    com.actionbarsherlock.view.Menu menu -> menu
    void startLoadMessage() -> startLoadMessage
    void stopLoadMessage() -> stopLoadMessage
    void startLoadAnimation() -> startLoadAnimation
    void stopLoadAnimation() -> stopLoadAnimation
    void setLoadState(org.bwgz.quotation.activity.QuotationActivity$LoadState) -> setLoadState
    long getRemaingAdFreePeriod() -> getRemaingAdFreePeriod
    void onCreate(android.os.Bundle) -> onCreate
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void initLoader(android.support.v4.app.LoaderManager,int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    void initLoaders(android.support.v4.app.LoaderManager,android.net.Uri) -> initLoaders
    void loadQuote(android.net.Uri) -> loadQuote
    void loadRandomQuote() -> loadRandomQuote
    void onLoadComplete(android.support.v4.content.Loader,android.database.Cursor) -> onLoadComplete
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    org.bwgz.quotation.activity.QuotationActivity$LoadState access$2(org.bwgz.quotation.activity.QuotationActivity) -> access$2
org.bwgz.quotation.activity.QuotationActivity$History -> org.bwgz.quotation.activity.QuotationActivity$History:
    int index -> index
    java.util.List list -> list
    void add(java.lang.String) -> add
    void add(android.net.Uri) -> add
    boolean hasBack() -> hasBack
    boolean hasForward() -> hasForward
    android.net.Uri current() -> current
    android.net.Uri back() -> back
    android.net.Uri forward() -> forward
    void dump() -> dump
org.bwgz.quotation.activity.QuotationActivity$LazyAdViewTask -> org.bwgz.quotation.activity.QuotationActivity$LazyAdViewTask:
    android.view.View view -> view
    java.lang.Thread thread -> thread
    org.bwgz.quotation.activity.QuotationActivity this$0 -> this$0
    boolean sleep(long) -> sleep
    java.lang.Void doInBackground(java.lang.Long[]) -> doInBackground
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.bwgz.quotation.activity.QuotationActivity$LazyLoadMessage -> org.bwgz.quotation.activity.QuotationActivity$LazyLoadMessage:
    android.os.Handler handler -> handler
    org.bwgz.quotation.activity.QuotationActivity this$0 -> this$0
    void run() -> run
org.bwgz.quotation.activity.QuotationActivity$LazyLoadMessageHandler -> org.bwgz.quotation.activity.QuotationActivity$LazyLoadMessageHandler:
    android.widget.Toast toast -> toast
    void handleMessage(android.os.Message) -> handleMessage
org.bwgz.quotation.activity.QuotationActivity$LoadState -> org.bwgz.quotation.activity.QuotationActivity$LoadState:
    org.bwgz.quotation.activity.QuotationActivity$LoadState LOADING -> LOADING
    org.bwgz.quotation.activity.QuotationActivity$LoadState LOADED -> LOADED
    org.bwgz.quotation.activity.QuotationActivity$LoadState[] ENUM$VALUES -> ENUM$VALUES
    org.bwgz.quotation.activity.QuotationActivity$LoadState[] values() -> values
    org.bwgz.quotation.activity.QuotationActivity$LoadState valueOf(java.lang.String) -> valueOf
org.bwgz.quotation.activity.QuotationFragment -> org.bwgz.quotation.activity.QuotationFragment:
    java.lang.String TAG -> TAG
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void setQuotation(java.lang.String) -> setQuotation
    void setQuotation(android.database.Cursor) -> setQuotation
org.bwgz.quotation.activity.SettingsActivity -> org.bwgz.quotation.activity.SettingsActivity:
    void addFragment() -> addFragment
    void addResource() -> addResource
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.quotation.activity.SettingsActivity$SettingsFragment -> org.bwgz.quotation.activity.SettingsActivity$SettingsFragment:
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.quotation.activity.TermsOfUseActivity -> org.bwgz.quotation.activity.TermsOfUseActivity:
    int getTextResId() -> getTextResId
org.bwgz.quotation.app.QuotationApplication -> org.bwgz.quotation.app.QuotationApplication:
    java.lang.String TAG -> TAG
    java.lang.String APPLICATION_PREFERENCES -> APPLICATION_PREFERENCES
    java.lang.String PREFERENCE_APPLICATION_INITIALIZED_DATE -> PREFERENCE_APPLICATION_INITIALIZED_DATE
    boolean hasQuotationAccount(android.accounts.AccountManager) -> hasQuotationAccount
    void initializeQuotationAccount(android.content.Context) -> initializeQuotationAccount
    void initialize(android.content.Context) -> initialize
    void onCreate() -> onCreate
org.bwgz.quotation.content.provider.AccountAuthenticatorService -> org.bwgz.quotation.content.provider.AccountAuthenticatorService:
    android.accounts.AbstractAccountAuthenticator accountAuthenticator -> accountAuthenticator
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
org.bwgz.quotation.content.provider.AccountAuthenticatorService$AccountAuthenticatorImpl -> org.bwgz.quotation.content.provider.AccountAuthenticatorService$AccountAuthenticatorImpl:
    android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String) -> editProperties
    android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> addAccount
    android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle) -> confirmCredentials
    android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> getAuthToken
    java.lang.String getAuthTokenLabel(java.lang.String) -> getAuthTokenLabel
    android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> updateCredentials
    android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[]) -> hasFeatures
org.bwgz.quotation.content.provider.QuotationAccount -> org.bwgz.quotation.content.provider.QuotationAccount:
    java.lang.String NAME -> NAME
    java.lang.String TYPE -> TYPE
org.bwgz.quotation.content.provider.QuotationContentProvider -> org.bwgz.quotation.content.provider.QuotationContentProvider:
    java.lang.String TAG -> TAG
    int QUEUE_CAPACITY -> QUEUE_CAPACITY
    java.util.concurrent.ArrayBlockingQueue queue -> queue
    org.bwgz.quotation.content.provider.RandomUriProducerTask randomUriProducerTask -> randomUriProducerTask
    org.bwgz.quotation.content.provider.QuotationContentProvider$EvictTask evictTask -> evictTask
    android.content.UriMatcher uriMatcher -> uriMatcher
    int QUOTATION -> QUOTATION
    int QUOTATION_ID -> QUOTATION_ID
    int QUOTATION_RANDOM -> QUOTATION_RANDOM
    int PERSON -> PERSON
    int PERSON_ID -> PERSON_ID
    int QUOTATION_PERSON -> QUOTATION_PERSON
    int PERSON_QUOTATION -> PERSON_QUOTATION
    int MAX_EVICTABLE_QUOTATIONS -> MAX_EVICTABLE_QUOTATIONS
    org.bwgz.quotation.content.provider.QuotationSQLiteHelper quotationSQLiteHelper -> quotationSQLiteHelper
    org.bwgz.google.freebase.client.FreebaseHelper freebaseHelper -> freebaseHelper
    void runEvictTask() -> runEvictTask
    void runRandomUriProducerTask() -> runRandomUriProducerTask
    android.net.Uri getRandomQuotationUri() -> getRandomQuotationUri
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    java.lang.String getTable(android.net.Uri) -> getTable
    boolean doSync(android.net.Uri) -> doSync
    android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String access$0() -> access$0
org.bwgz.quotation.content.provider.QuotationContentProvider$EvictTask -> org.bwgz.quotation.content.provider.QuotationContentProvider$EvictTask:
    java.lang.String evictableQuotationsQuery -> evictableQuotationsQuery
    java.lang.String lowerQuotationsQuery -> lowerQuotationsQuery
    java.lang.String emptyAuthorsQuery -> emptyAuthorsQuery
    org.bwgz.quotation.content.provider.QuotationContentProvider this$0 -> this$0
    int getEvictableQuotations() -> getEvictableQuotations
    void run() -> run
org.bwgz.quotation.content.provider.QuotationContract -> org.bwgz.quotation.content.provider.QuotationContract:
    java.lang.String AUTHORITY -> AUTHORITY
    android.net.Uri AUTHORITY_URI -> AUTHORITY_URI
    java.lang.String DATABASE -> DATABASE
org.bwgz.quotation.content.provider.QuotationContract$CacheColumns -> org.bwgz.quotation.content.provider.QuotationContract$CacheColumns:
    java.lang.String EVICTABLE -> EVICTABLE
org.bwgz.quotation.content.provider.QuotationContract$CitationColumns -> org.bwgz.quotation.content.provider.QuotationContract$CitationColumns:
    java.lang.String CITATION_PROVIDER -> CITATION_PROVIDER
    java.lang.String CITATION_STATEMENT -> CITATION_STATEMENT
    java.lang.String CITATION_URI -> CITATION_URI
org.bwgz.quotation.content.provider.QuotationContract$LanguageColumns -> org.bwgz.quotation.content.provider.QuotationContract$LanguageColumns:
    java.lang.String LANGUAGE -> LANGUAGE
org.bwgz.quotation.content.provider.QuotationContract$Person -> org.bwgz.quotation.content.provider.QuotationContract$Person:
    java.lang.String TABLE -> TABLE
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEM_TYPE -> CONTENT_ITEM_TYPE
    android.net.Uri withAppendedId(java.lang.String) -> withAppendedId
    java.lang.String getId(java.lang.String) -> getId
    java.lang.String getId(android.net.Uri) -> getId
org.bwgz.quotation.content.provider.QuotationContract$PersonColumns -> org.bwgz.quotation.content.provider.QuotationContract$PersonColumns:
    java.lang.String NAME -> NAME
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String IMAGE -> IMAGE
org.bwgz.quotation.content.provider.QuotationContract$Quotation -> org.bwgz.quotation.content.provider.QuotationContract$Quotation:
    java.lang.String TABLE -> TABLE
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEM_TYPE -> CONTENT_ITEM_TYPE
    android.net.Uri withAppendedId(java.lang.String) -> withAppendedId
    java.lang.String getId(java.lang.String) -> getId
    java.lang.String getId(android.net.Uri) -> getId
org.bwgz.quotation.content.provider.QuotationContract$QuotationColumns -> org.bwgz.quotation.content.provider.QuotationContract$QuotationColumns:
    java.lang.String QUOTATION -> QUOTATION
org.bwgz.quotation.content.provider.QuotationContract$QuotationPerson -> org.bwgz.quotation.content.provider.QuotationContract$QuotationPerson:
    java.lang.String TABLE -> TABLE
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEM_TYPE -> CONTENT_ITEM_TYPE
    android.net.Uri withAppendedId(java.lang.String) -> withAppendedId
    java.lang.String getId(java.lang.String) -> getId
    java.lang.String getId(android.net.Uri) -> getId
org.bwgz.quotation.content.provider.QuotationContract$QuotationPersonColumns -> org.bwgz.quotation.content.provider.QuotationContract$QuotationPersonColumns:
    java.lang.String QUOTATION_ID -> QUOTATION_ID
    java.lang.String PERSON_ID -> PERSON_ID
org.bwgz.quotation.content.provider.QuotationContract$StatusColumns -> org.bwgz.quotation.content.provider.QuotationContract$StatusColumns:
    java.lang.String MODIFIED -> MODIFIED
org.bwgz.quotation.content.provider.QuotationSQLiteHelper -> org.bwgz.quotation.content.provider.QuotationSQLiteHelper:
    java.lang.String TAG -> TAG
    java.lang.String QUOTATION_CREATE -> QUOTATION_CREATE
    java.lang.String PERSON_CREATE -> PERSON_CREATE
    java.lang.String QUOTATION_PERSON_CREATE -> QUOTATION_PERSON_CREATE
    int DATABASE_VERSION -> DATABASE_VERSION
    java.lang.String[] tables -> tables
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    long insert(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues) -> insert
    long insert(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues,boolean) -> insert
    int update(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[]) -> delete
    java.lang.String access$0() -> access$0
org.bwgz.quotation.content.provider.QuotationSQLiteHelper$InitializeDatabaseTask -> org.bwgz.quotation.content.provider.QuotationSQLiteHelper$InitializeDatabaseTask:
    java.lang.String COMMON_TYPE_DESCRIPTION -> COMMON_TYPE_DESCRIPTION
    java.lang.String PEOPLE_PERSON_QUOTATIONS -> PEOPLE_PERSON_QUOTATIONS
    java.lang.String TYPE_OBJECT_NAME -> TYPE_OBJECT_NAME
    org.bwgz.quotation.content.provider.QuotationSQLiteHelper this$0 -> this$0
    void initialize(android.database.sqlite.SQLiteDatabase) -> initialize
    java.lang.Void doInBackground(android.database.sqlite.SQLiteDatabase[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.bwgz.quotation.content.provider.QuotationSyncAdapter -> org.bwgz.quotation.content.provider.QuotationSyncAdapter:
    java.lang.String TAG -> TAG
    java.lang.String TYPE_OBJECT_NAME -> TYPE_OBJECT_NAME
    java.lang.String COMMON_TOPIC_DESCRIPTION -> COMMON_TOPIC_DESCRIPTION
    java.lang.String COMMON_TOPIC_IMAGE -> COMMON_TOPIC_IMAGE
    java.lang.String PEOPLE_PERSON_QUOTATIONS -> PEOPLE_PERSON_QUOTATIONS
    java.lang.String MEDIA_COMMON_QUOTATION_AUTHOR -> MEDIA_COMMON_QUOTATION_AUTHOR
    java.lang.String[] personFilters -> personFilters
    java.lang.String[] quotationFilters -> quotationFilters
    java.lang.String SYNC_EXTRAS_URI -> SYNC_EXTRAS_URI
    org.bwgz.google.freebase.client.FreebaseHelper freebaseHelper -> freebaseHelper
    android.content.ContentProviderOperation$Builder createQuotationNewInsertBuilder(java.lang.String,java.lang.String,java.lang.String) -> createQuotationNewInsertBuilder
    android.content.ContentProviderOperation$Builder createPersonNewInsertBuilder(java.lang.String,java.lang.String,byte[],java.lang.String,com.google.api.services.freebase.model.TopicValue$Citation,java.lang.String) -> createPersonNewInsertBuilder
    android.content.ContentProviderOperation$Builder createQuotationPersonNewInsertBuilder(java.lang.String,java.lang.String) -> createQuotationPersonNewInsertBuilder
    java.util.ArrayList createQuotationContentProviderOperationList(android.net.Uri) -> createQuotationContentProviderOperationList
    java.util.ArrayList createPersonContentProviderOperationList(android.net.Uri) -> createPersonContentProviderOperationList
    void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult) -> onPerformSync
org.bwgz.quotation.content.provider.QuotationSyncService -> org.bwgz.quotation.content.provider.QuotationSyncService:
    java.lang.String TAG -> TAG
    android.content.AbstractThreadedSyncAdapter syncAdapter -> syncAdapter
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
org.bwgz.quotation.content.provider.RandomUriProducer -> org.bwgz.quotation.content.provider.RandomUriProducer:
    java.lang.String TAG -> TAG
    java.util.Random random -> random
    android.content.Context context -> context
    org.bwgz.google.freebase.cache.QuotationMidCacheLoader midLoader -> midLoader
    com.google.common.cache.LoadingCache midCache -> midCache
    boolean isConnected() -> isConnected
    java.lang.String getNextIdFromFreebase() -> getNextIdFromFreebase
    java.lang.String getNextIdFromDatabase() -> getNextIdFromDatabase
    java.lang.String getNextIdFromDatabaseWithRetry(int,long) -> getNextIdFromDatabaseWithRetry
    android.net.Uri getNextUri() -> getNextUri
org.bwgz.quotation.content.provider.RandomUriProducerTask -> org.bwgz.quotation.content.provider.RandomUriProducerTask:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    org.bwgz.quotation.content.provider.RandomUriProducer producer -> producer
    java.lang.Void doInBackground(java.util.concurrent.ArrayBlockingQueue[]) -> doInBackground
    void onPostExecute(java.lang.Void) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.bwgz.quotation.widget.LargeQuoteWidgetProvider -> org.bwgz.quotation.widget.LargeQuoteWidgetProvider:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
org.bwgz.quotation.widget.QuoteWidgetService -> org.bwgz.quotation.widget.QuoteWidgetService:
    java.lang.String TAG -> TAG
    java.lang.String authorsQuery -> authorsQuery
    java.lang.String ACTION_UPDATE_WIDGETS -> ACTION_UPDATE_WIDGETS
    java.lang.String ACTION_REFRESH_WIDGET -> ACTION_REFRESH_WIDGET
    java.lang.String EXTRA_UPDATE_LAYOUT_ID -> EXTRA_UPDATE_LAYOUT_ID
    java.lang.String EXTRA_UPDATE_WIDGET_IDS -> EXTRA_UPDATE_WIDGET_IDS
    java.lang.String getQuotation(int,int,android.net.Uri) -> getQuotation
    java.lang.String getAuthor(android.net.Uri) -> getAuthor
    android.graphics.Bitmap getImage(android.net.Uri) -> getImage
    android.net.Uri getRandomQuotationUri() -> getRandomQuotationUri
    void updateWidget(int,int,android.net.Uri,java.lang.String,java.lang.String,android.graphics.Bitmap) -> updateWidget
    void onUpdate(android.appwidget.AppWidgetManager,int,int) -> onUpdate
    void onUpdate(android.appwidget.AppWidgetManager,int,int[]) -> onUpdate
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onHandleIntent(android.content.Intent) -> onHandleIntent
org.bwgz.quotation.widget.QuoteWidgetService$CursorContentObserver -> org.bwgz.quotation.widget.QuoteWidgetService$CursorContentObserver:
    boolean hasChanged -> hasChanged
    boolean selfChange -> selfChange
    void onChange(boolean) -> onChange
    boolean hasChanged(long) -> hasChanged
    boolean hasChanged() -> hasChanged
    void resetStatus() -> resetStatus
    boolean getSelfChangeState() -> getSelfChangeState
    void setSelfChangeState(boolean) -> setSelfChangeState
org.bwgz.quotation.widget.SmallQuoteWidgetProvider -> org.bwgz.quotation.widget.SmallQuoteWidgetProvider:
    java.lang.String TAG -> TAG
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl -> sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl:
    java.lang.reflect.Type[] actualTypeArguments -> a
    java.lang.Class rawType -> b
    java.lang.reflect.Type ownerType -> c
    void validateConstructorArguments() -> a
    sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl make(java.lang.Class,java.lang.reflect.Type[],java.lang.reflect.Type) -> make
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.reflect.Type getRawType() -> getRawType
