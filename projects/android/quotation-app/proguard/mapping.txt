android.annotation.SuppressLint -> android.annotation.SuppressLint:
    java.lang.String[] value() -> value
android.annotation.TargetApi -> android.annotation.TargetApi:
    int value() -> value
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat -> android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl IMPL -> a
    int FEEDBACK_ALL_MASK -> FEEDBACK_ALL_MASK
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    java.lang.String flagToString(int) -> flagToString
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> a:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> b:
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoVersionImpl -> c:
    java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> c
    android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> d
    boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> a
    java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> b
    java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> e
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    boolean startActivities(android.app.Activity,android.content.Intent[]) -> startActivities
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivities(android.app.Activity,android.content.Intent[]) -> startActivities
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mDestroyed -> mDestroyed
    boolean mRemoved -> mRemoved
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState() -> restoreViewState
    void setIndex(int) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void performStart() -> performStart
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    android.support.v4.app.HCSparseArray mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragmentIndex(int) -> invalidateSupportFragmentIndex
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(int,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    android.support.v4.app.HCSparseArray loaders -> loaders
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    java.lang.String makeFragmentName(int,int) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.HCSparseArray -> android.support.v4.app.HCSparseArray:
    java.lang.Object DELETED -> DELETED
    boolean mGarbage -> mGarbage
    int[] mKeys -> mKeys
    java.lang.Object[] mValues -> mValues
    int mSize -> mSize
    java.lang.Object get(int) -> get
    java.lang.Object get(int,java.lang.Object) -> get
    void delete(int) -> delete
    void remove(int) -> remove
    void removeAt(int) -> removeAt
    void gc() -> gc
    void put(int,java.lang.Object) -> put
    int size() -> size
    int keyAt(int) -> keyAt
    java.lang.Object valueAt(int) -> valueAt
    void setValueAt(int,java.lang.Object) -> setValueAt
    int indexOfKey(int) -> indexOfKey
    int indexOfValue(java.lang.Object) -> indexOfValue
    void clear() -> clear
    void append(int,java.lang.Object) -> append
    int binarySearch(int[],int,int,int) -> binarySearch
    int idealByteArraySize(int) -> idealByteArraySize
    int idealIntArraySize(int) -> idealIntArraySize
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.HCSparseArray mLoaders -> mLoaders
    android.support.v4.app.HCSparseArray mInactiveLoaders -> mInactiveLoaders
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.app.Notification getNotification() -> getNotification
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> getNotification
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> getNotification
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification getNotification(android.support.v4.app.NotificationCompat$Builder) -> getNotification
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.Watson -> android.support.v4.app.Watson:
    java.lang.String TAG -> TAG
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
android.support.v4.app.Watson$OnCreateOptionsMenuListener -> android.support.v4.app.Watson$OnCreateOptionsMenuListener:
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
android.support.v4.app.Watson$OnOptionsItemSelectedListener -> android.support.v4.app.Watson$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
android.support.v4.app.Watson$OnPrepareOptionsMenuListener -> android.support.v4.app.Watson$OnPrepareOptionsMenuListener:
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
android.support.v4.content.AsyncTaskLoader -> android.support.v4.content.AsyncTaskLoader:
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> a
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> b
    long mUpdateThrottle -> c
    long mLastLoadCompleteTime -> d
    android.os.Handler mHandler -> e
    void setUpdateThrottle(long) -> setUpdateThrottle
    void onForceLoad() -> onForceLoad
    boolean cancelLoad() -> cancelLoad
    void onCanceled(java.lang.Object) -> onCanceled
    void executePendingTask() -> a
    void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> a
    void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> b
    java.lang.Object loadInBackground() -> loadInBackground
    java.lang.Object onLoadInBackground() -> onLoadInBackground
    void waitForLoader() -> waitForLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> d:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    void onPostExecute(java.lang.Object) -> a
    void onCancelled() -> a
    void run() -> run
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.CursorLoader -> android.support.v4.content.CursorLoader:
    android.support.v4.content.Loader$ForceLoadContentObserver mObserver -> f
    android.net.Uri mUri -> g
    java.lang.String[] mProjection -> h
    java.lang.String mSelection -> i
    java.lang.String[] mSelectionArgs -> j
    java.lang.String mSortOrder -> k
    android.database.Cursor mCursor -> l
    android.database.Cursor loadInBackground() -> loadInBackground
    void deliverResult(android.database.Cursor) -> deliverResult
    void onStartLoading() -> onStartLoading
    void onStopLoading() -> onStopLoading
    void onCanceled(android.database.Cursor) -> onCanceled
    void onReset() -> onReset
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    java.lang.String[] getProjection() -> getProjection
    void setProjection(java.lang.String[]) -> setProjection
    java.lang.String getSelection() -> getSelection
    void setSelection(java.lang.String) -> setSelection
    java.lang.String[] getSelectionArgs() -> getSelectionArgs
    void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    java.lang.String getSortOrder() -> getSortOrder
    void setSortOrder(java.lang.String) -> setSortOrder
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.Object loadInBackground() -> loadInBackground
    void onCanceled(java.lang.Object) -> onCanceled
    void deliverResult(java.lang.Object) -> deliverResult
android.support.v4.content.IntentCompat -> android.support.v4.content.IntentCompat:
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_AVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_AVAILABLE
    java.lang.String ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE -> ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE
    java.lang.String EXTRA_CHANGED_PACKAGE_LIST -> EXTRA_CHANGED_PACKAGE_LIST
    java.lang.String EXTRA_CHANGED_UID_LIST -> EXTRA_CHANGED_UID_LIST
    int FLAG_ACTIVITY_TASK_ON_HOME -> FLAG_ACTIVITY_TASK_ON_HOME
    int FLAG_ACTIVITY_CLEAR_TASK -> FLAG_ACTIVITY_CLEAR_TASK
android.support.v4.content.Loader -> android.support.v4.content.Loader:
    int mId -> m
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> n
    android.content.Context mContext -> o
    boolean mStarted -> p
    boolean mAbandoned -> q
    boolean mReset -> r
    boolean mContentChanged -> s
    void deliverResult(java.lang.Object) -> deliverResult
    android.content.Context getContext() -> getContext
    int getId() -> getId
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    boolean isStarted() -> isStarted
    boolean isAbandoned() -> isAbandoned
    boolean isReset() -> isReset
    void startLoading() -> startLoading
    void onStartLoading() -> onStartLoading
    void forceLoad() -> forceLoad
    void onForceLoad() -> onForceLoad
    void stopLoading() -> stopLoading
    void onStopLoading() -> onStopLoading
    void abandon() -> abandon
    void onAbandon() -> onAbandon
    void reset() -> reset
    void onReset() -> onReset
    boolean takeContentChanged() -> takeContentChanged
    void onContentChanged() -> onContentChanged
    java.lang.String dataToString(java.lang.Object) -> dataToString
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$ForceLoadContentObserver -> android.support.v4.content.Loader$ForceLoadContentObserver:
    android.support.v4.content.Loader this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.Loader$OnLoadCompleteListener:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
android.support.v4.content.LocalBroadcastManager -> android.support.v4.content.LocalBroadcastManager:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
    boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> e:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> f:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> g:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.content.ModernAsyncTask -> android.support.v4.content.ModernAsyncTask:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    java.lang.Object postResult(java.lang.Object) -> b
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate$1b4f7664() -> b
    void onCancelled() -> a
    boolean cancel(boolean) -> a
    android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> h:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> i:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> j:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> k:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> l:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> m:
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.content.ModernAsyncTask$Status:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> PENDING
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> RUNNING
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> FINISHED
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> a
    android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> n:
    java.lang.Object[] mParams -> b
android.support.v4.content.pm.ActivityInfoCompat -> android.support.v4.content.pm.ActivityInfoCompat:
    int CONFIG_UI_MODE -> CONFIG_UI_MODE
android.support.v4.database.DatabaseUtilsCompat -> android.support.v4.database.DatabaseUtilsCompat:
    java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
    java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
android.support.v4.os.ParcelableCompat -> android.support.v4.os.ParcelableCompat:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> newCreator
android.support.v4.os.ParcelableCompat$CompatCreator -> o:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.os.ParcelableCompatCreatorCallbacks:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> p:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.util.DebugUtils -> android.support.v4.util.DebugUtils:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
android.support.v4.util.LogWriter -> android.support.v4.util.LogWriter:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.LruCache -> android.support.v4.util.LruCache:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void trimToSize(int) -> a
    java.lang.Object remove(java.lang.Object) -> remove
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    java.lang.Object create(java.lang.Object) -> create
    int safeSizeOf(java.lang.Object,java.lang.Object) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    void evictAll() -> evictAll
    int size() -> size
    int maxSize() -> maxSize
    int hitCount() -> hitCount
    int missCount() -> missCount
    int createCount() -> createCount
    int putCount() -> putCount
    int evictionCount() -> evictionCount
    java.util.Map snapshot() -> snapshot
    java.lang.String toString() -> toString
android.support.v4.util.TimeUtils -> android.support.v4.util.TimeUtils:
    int HUNDRED_DAY_FIELD_LEN -> HUNDRED_DAY_FIELD_LEN
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    int accumField(int,int,boolean,int) -> a
    int printField(char[],int,char,int,boolean,int) -> a
    int formatDurationLocked(long,int) -> a
    void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    void formatDuration(long,java.io.PrintWriter) -> formatDuration
    void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.AccessibilityDelegateCompat:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> q:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> r:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> s:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> t:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.AccessibilityDelegateCompatIcs:
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> u:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.KeyEventCompat -> android.support.v4.view.KeyEventCompat:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    int normalizeMetaState(int) -> normalizeMetaState
    boolean metaStateHasModifiers(int,int) -> metaStateHasModifiers
    boolean metaStateHasNoModifiers(int) -> metaStateHasNoModifiers
    boolean hasModifiers(android.view.KeyEvent,int) -> hasModifiers
    boolean hasNoModifiers(android.view.KeyEvent) -> hasNoModifiers
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> v:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> w:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> x:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MenuCompat -> android.support.v4.view.MenuCompat:
    android.support.v4.view.MenuCompat$MenuVersionImpl IMPL -> a
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
android.support.v4.view.MenuCompat$BaseMenuVersionImpl -> y:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuCompat$HoneycombMenuVersionImpl -> z:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuCompat$MenuVersionImpl -> A:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
android.support.v4.view.MenuItemCompat -> android.support.v4.view.MenuItemCompat:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    android.support.v4.view.MenuItemCompat$MenuVersionImpl IMPL -> a
    boolean setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl -> B:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl -> C:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MenuItemCompat$MenuVersionImpl -> D:
    boolean setShowAsAction(android.view.MenuItem,int) -> a
    android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.MotionEventCompat:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int ACTION_MASK -> ACTION_MASK
    int ACTION_POINTER_DOWN -> ACTION_POINTER_DOWN
    int ACTION_POINTER_UP -> ACTION_POINTER_UP
    int ACTION_HOVER_MOVE -> ACTION_HOVER_MOVE
    int ACTION_SCROLL -> ACTION_SCROLL
    int ACTION_POINTER_INDEX_MASK -> ACTION_POINTER_INDEX_MASK
    int ACTION_POINTER_INDEX_SHIFT -> ACTION_POINTER_INDEX_SHIFT
    int getActionMasked(android.view.MotionEvent) -> getActionMasked
    int getActionIndex(android.view.MotionEvent) -> getActionIndex
    int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    int getPointerId(android.view.MotionEvent,int) -> getPointerId
    float getX(android.view.MotionEvent,int) -> getX
    float getY(android.view.MotionEvent,int) -> getY
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> E:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> F:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> G:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.PagerAdapter:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> e
    float mLastKnownPositionOffset -> f
    int mScaledTextSpacing -> g
    boolean mUpdatingText -> h
    boolean mUpdatingPositions -> i
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> j
    int[] ATTRS -> k
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
android.support.v4.view.PagerTitleStrip$PageListener -> H:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.VelocityTrackerCompat:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> I:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> J:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> K:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.ViewCompat:
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    int getOverScrollMode(android.view.View) -> getOverScrollMode
    void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> L:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> M:
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> N:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$ViewCompatImpl -> O:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ViewConfigurationCompat:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> P:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> Q:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> R:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.ViewGroupCompat:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> S:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> T:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> U:
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.PagerAdapter mAdapter -> e
    int mCurItem -> f
    int mRestoredCurItem -> g
    android.os.Parcelable mRestoredAdapterState -> h
    java.lang.ClassLoader mRestoredClassLoader -> i
    android.widget.Scroller mScroller -> j
    android.support.v4.view.ViewPager$PagerObserver mObserver -> k
    int mPageMargin -> l
    android.graphics.drawable.Drawable mMarginDrawable -> m
    int mTopPageBounds -> n
    int mBottomPageBounds -> o
    int mChildWidthMeasureSpec -> p
    int mChildHeightMeasureSpec -> q
    boolean mInLayout -> r
    boolean mScrollingCacheEnabled -> s
    boolean mPopulatePending -> t
    boolean mScrolling -> u
    int mOffscreenPageLimit -> v
    boolean mIsBeingDragged -> w
    boolean mIsUnableToDrag -> x
    int mTouchSlop -> y
    float mInitialMotionX -> z
    float mLastMotionX -> A
    float mLastMotionY -> B
    int mActivePointerId -> C
    android.view.VelocityTracker mVelocityTracker -> D
    int mMinimumVelocity -> E
    int mMaximumVelocity -> F
    int mFlingDistance -> G
    boolean mFakeDragging -> H
    long mFakeDragBeginTime -> I
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> J
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> K
    boolean mFirstLayout -> L
    boolean mCalledSuper -> M
    int mDecorChildCount -> N
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> O
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> P
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Q
    int SCROLL_STATE_IDLE -> SCROLL_STATE_IDLE
    int SCROLL_STATE_DRAGGING -> SCROLL_STATE_DRAGGING
    int SCROLL_STATE_SETTLING -> SCROLL_STATE_SETTLING
    int mScrollState -> R
    void initViewPager() -> c
    void setScrollState(int) -> a
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> setCurrentItem
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    void addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> d
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> b
    void onPageScrolled(int,float,int) -> onPageScrolled
    void completeScroll() -> e
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean beginFakeDrag() -> beginFakeDrag
    void endFakeDrag() -> endFakeDrag
    void fakeDragBy(float) -> fakeDragBy
    boolean isFakeDragging() -> isFakeDragging
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> f
    void setScrollingCacheEnabled(boolean) -> a
    boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    boolean arrowScroll(int) -> arrowScroll
    boolean pageLeft() -> g
    boolean pageRight() -> h
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$100() -> b
android.support.v4.view.ViewPager$1 -> V:
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> W:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> X:
android.support.v4.view.ViewPager$ItemInfo -> Y:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> isDecor
    int gravity -> gravity
android.support.v4.view.ViewPager$OnAdapterChangeListener -> Z:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$OnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.ViewPager$PagerObserver -> aa:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> ab:
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
android.support.v4.view.ViewPager$SimpleOnPageChangeListener -> android.support.v4.view.ViewPager$SimpleOnPageChangeListener:
    void onPageScrolled(int,float,int) -> onPageScrolled
    void onPageSelected(int) -> onPageSelected
    void onPageScrollStateChanged(int) -> onPageScrollStateChanged
android.support.v4.view.accessibility.AccessibilityEventCompat -> android.support.v4.view.accessibility.AccessibilityEventCompat:
    android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl IMPL -> a
    int TYPE_VIEW_HOVER_ENTER -> TYPE_VIEW_HOVER_ENTER
    int TYPE_VIEW_HOVER_EXIT -> TYPE_VIEW_HOVER_EXIT
    int TYPE_TOUCH_EXPLORATION_GESTURE_START -> TYPE_TOUCH_EXPLORATION_GESTURE_START
    int TYPE_TOUCH_EXPLORATION_GESTURE_END -> TYPE_TOUCH_EXPLORATION_GESTURE_END
    int TYPE_WINDOW_CONTENT_CHANGED -> TYPE_WINDOW_CONTENT_CHANGED
    int TYPE_VIEW_SCROLLED -> TYPE_VIEW_SCROLLED
    int TYPE_VIEW_TEXT_SELECTION_CHANGED -> TYPE_VIEW_TEXT_SELECTION_CHANGED
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    void appendRecord(android.view.accessibility.AccessibilityEvent,android.support.v4.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    android.support.v4.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl -> ac:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl -> ad:
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventVersionImpl -> ae:
    int getRecordCount(android.view.accessibility.AccessibilityEvent) -> a
    void appendRecord(android.view.accessibility.AccessibilityEvent,java.lang.Object) -> a
    java.lang.Object getRecord(android.view.accessibility.AccessibilityEvent,int) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl IMPL -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> addAccessibilityStateChangeListener
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> removeAccessibilityStateChangeListener
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl -> af:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl$1 -> ag:
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat val$listener -> a
    android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerIcsImpl this$0 -> b
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerStubImpl -> ah:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityManagerVersionImpl -> ai:
    java.lang.Object newAccessiblityStateChangeListener(android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> a
    boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat) -> b
    java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> a
    java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> a
android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> android.support.v4.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    java.lang.Object mListener -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs -> aj:
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$1 -> ak:
    android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge val$bridge -> a
    void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
android.support.v4.view.accessibility.AccessibilityManagerCompatIcs$AccessibilityStateChangeListenerBridge -> al:
    void onAccessibilityStateChanged(boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.accessibility.AccessibilityNodeInfoCompat:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    int ACTION_FOCUS -> ACTION_FOCUS
    int ACTION_CLEAR_FOCUS -> ACTION_CLEAR_FOCUS
    int ACTION_SELECT -> ACTION_SELECT
    int ACTION_CLEAR_SELECTION -> ACTION_CLEAR_SELECTION
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    void setSource(android.view.View) -> setSource
    int getWindowId() -> getWindowId
    int getChildCount() -> getChildCount
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    void addChild(android.view.View) -> addChild
    int getActions() -> getActions
    void addAction(int) -> addAction
    boolean performAction(int) -> performAction
    java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    void setParent(android.view.View) -> setParent
    void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    boolean isCheckable() -> isCheckable
    void setCheckable(boolean) -> setCheckable
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isFocusable() -> isFocusable
    void setFocusable(boolean) -> setFocusable
    boolean isFocused() -> isFocused
    void setFocused(boolean) -> setFocused
    boolean isSelected() -> isSelected
    void setSelected(boolean) -> setSelected
    boolean isClickable() -> isClickable
    void setClickable(boolean) -> setClickable
    boolean isLongClickable() -> isLongClickable
    void setLongClickable(boolean) -> setLongClickable
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    java.lang.CharSequence getPackageName() -> getPackageName
    void setPackageName(java.lang.CharSequence) -> setPackageName
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.lang.CharSequence getText() -> getText
    void setText(java.lang.CharSequence) -> setText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> am:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> b
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
    java.lang.Object getChild(java.lang.Object,int) -> c
    java.lang.Object getParent(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> an:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    int getWindowId(java.lang.Object) -> i
    int getChildCount(java.lang.Object) -> c
    java.lang.Object getChild(java.lang.Object,int) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    boolean performAction(java.lang.Object,int) -> b
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    java.lang.Object getParent(java.lang.Object) -> u
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    boolean isCheckable(java.lang.Object) -> j
    void setCheckable(java.lang.Object,boolean) -> a
    boolean isChecked(java.lang.Object) -> k
    void setChecked(java.lang.Object,boolean) -> b
    boolean isFocusable(java.lang.Object) -> n
    void setFocusable(java.lang.Object,boolean) -> e
    boolean isFocused(java.lang.Object) -> o
    void setFocused(java.lang.Object,boolean) -> f
    boolean isSelected(java.lang.Object) -> s
    void setSelected(java.lang.Object,boolean) -> j
    boolean isClickable(java.lang.Object) -> l
    void setClickable(java.lang.Object,boolean) -> c
    boolean isLongClickable(java.lang.Object) -> p
    void setLongClickable(java.lang.Object,boolean) -> g
    boolean isEnabled(java.lang.Object) -> m
    void setEnabled(java.lang.Object,boolean) -> d
    boolean isPassword(java.lang.Object) -> q
    void setPassword(java.lang.Object,boolean) -> h
    boolean isScrollable(java.lang.Object) -> r
    void setScrollable(java.lang.Object,boolean) -> i
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> h
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> ao:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.Object getChild(java.lang.Object,int) -> c
    int getChildCount(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent(java.lang.Object) -> g
    java.lang.CharSequence getText(java.lang.Object) -> h
    int getWindowId(java.lang.Object) -> i
    boolean isCheckable(java.lang.Object) -> j
    boolean isChecked(java.lang.Object) -> k
    boolean isClickable(java.lang.Object) -> l
    boolean isEnabled(java.lang.Object) -> m
    boolean isFocusable(java.lang.Object) -> n
    boolean isFocused(java.lang.Object) -> o
    boolean isLongClickable(java.lang.Object) -> p
    boolean isPassword(java.lang.Object) -> q
    boolean isScrollable(java.lang.Object) -> r
    boolean isSelected(java.lang.Object) -> s
    boolean performAction(java.lang.Object,int) -> b
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setCheckable(java.lang.Object,boolean) -> a
    void setChecked(java.lang.Object,boolean) -> b
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> c
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> d
    void setFocusable(java.lang.Object,boolean) -> e
    void setFocused(java.lang.Object,boolean) -> f
    void setLongClickable(java.lang.Object,boolean) -> g
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setPassword(java.lang.Object,boolean) -> h
    void setScrollable(java.lang.Object,boolean) -> i
    void setSelected(java.lang.Object,boolean) -> j
    void setSource(java.lang.Object,android.view.View) -> c
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    void recycle(java.lang.Object) -> t
    java.lang.Object getParent(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.accessibility.AccessibilityRecordCompat:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    java.lang.Object getImpl() -> getImpl
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain(android.support.v4.view.accessibility.AccessibilityRecordCompat) -> obtain
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    void setSource(android.view.View) -> setSource
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    int getWindowId() -> getWindowId
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    boolean isEnabled() -> isEnabled
    void setEnabled(boolean) -> setEnabled
    boolean isPassword() -> isPassword
    void setPassword(boolean) -> setPassword
    boolean isFullScreen() -> isFullScreen
    void setFullScreen(boolean) -> setFullScreen
    boolean isScrollable() -> isScrollable
    void setScrollable(boolean) -> setScrollable
    int getItemCount() -> getItemCount
    void setItemCount(int) -> setItemCount
    int getCurrentItemIndex() -> getCurrentItemIndex
    void setCurrentItemIndex(int) -> setCurrentItemIndex
    int getFromIndex() -> getFromIndex
    void setFromIndex(int) -> setFromIndex
    int getToIndex() -> getToIndex
    void setToIndex(int) -> setToIndex
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    int getAddedCount() -> getAddedCount
    void setAddedCount(int) -> setAddedCount
    int getRemovedCount() -> getRemovedCount
    void setRemovedCount(int) -> setRemovedCount
    java.lang.CharSequence getClassName() -> getClassName
    void setClassName(java.lang.CharSequence) -> setClassName
    java.util.List getText() -> getText
    java.lang.CharSequence getBeforeText() -> getBeforeText
    void setBeforeText(java.lang.CharSequence) -> setBeforeText
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void setContentDescription(java.lang.CharSequence) -> setContentDescription
    android.os.Parcelable getParcelableData() -> getParcelableData
    void setParcelableData(android.os.Parcelable) -> setParcelableData
    void recycle() -> recycle
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> ap:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    java.lang.Object getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> aq:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> a
    java.lang.Object getSource(java.lang.Object) -> m
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    void setChecked(java.lang.Object,boolean) -> a
    boolean isEnabled(java.lang.Object) -> r
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> t
    void setPassword(java.lang.Object,boolean) -> d
    boolean isFullScreen(java.lang.Object) -> s
    void setFullScreen(java.lang.Object,boolean) -> c
    boolean isScrollable(java.lang.Object) -> u
    void setScrollable(java.lang.Object,boolean) -> e
    int getItemCount(java.lang.Object) -> h
    void setItemCount(java.lang.Object,int) -> d
    int getCurrentItemIndex(java.lang.Object) -> f
    void setCurrentItemIndex(java.lang.Object,int) -> b
    int getFromIndex(java.lang.Object) -> g
    void setFromIndex(java.lang.Object,int) -> c
    int getToIndex(java.lang.Object) -> o
    void setToIndex(java.lang.Object,int) -> h
    int getScrollX(java.lang.Object) -> k
    void setScrollX(java.lang.Object,int) -> f
    int getScrollY(java.lang.Object) -> l
    void setScrollY(java.lang.Object,int) -> g
    int getAddedCount(java.lang.Object) -> b
    void setAddedCount(java.lang.Object,int) -> a
    int getRemovedCount(java.lang.Object) -> j
    void setRemovedCount(java.lang.Object,int) -> e
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    java.util.List getText(java.lang.Object) -> n
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void recycle(java.lang.Object) -> v
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> ar:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(java.lang.Object) -> a
    int getAddedCount(java.lang.Object) -> b
    java.lang.CharSequence getBeforeText(java.lang.Object) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    int getCurrentItemIndex(java.lang.Object) -> f
    int getFromIndex(java.lang.Object) -> g
    int getItemCount(java.lang.Object) -> h
    android.os.Parcelable getParcelableData(java.lang.Object) -> i
    int getRemovedCount(java.lang.Object) -> j
    int getScrollX(java.lang.Object) -> k
    int getScrollY(java.lang.Object) -> l
    java.lang.Object getSource(java.lang.Object) -> m
    java.util.List getText(java.lang.Object) -> n
    int getToIndex(java.lang.Object) -> o
    int getWindowId(java.lang.Object) -> p
    boolean isChecked(java.lang.Object) -> q
    boolean isEnabled(java.lang.Object) -> r
    boolean isFullScreen(java.lang.Object) -> s
    boolean isPassword(java.lang.Object) -> t
    boolean isScrollable(java.lang.Object) -> u
    void recycle(java.lang.Object) -> v
    void setAddedCount(java.lang.Object,int) -> a
    void setBeforeText(java.lang.Object,java.lang.CharSequence) -> a
    void setChecked(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> b
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> c
    void setCurrentItemIndex(java.lang.Object,int) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFromIndex(java.lang.Object,int) -> c
    void setFullScreen(java.lang.Object,boolean) -> c
    void setItemCount(java.lang.Object,int) -> d
    void setParcelableData(java.lang.Object,android.os.Parcelable) -> a
    void setPassword(java.lang.Object,boolean) -> d
    void setRemovedCount(java.lang.Object,int) -> e
    void setScrollX(java.lang.Object,int) -> f
    void setScrollY(java.lang.Object,int) -> g
    void setScrollable(java.lang.Object,boolean) -> e
    void setSource(java.lang.Object,android.view.View) -> a
    void setToIndex(java.lang.Object,int) -> h
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.CursorAdapter:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$ChangeObserver -> as:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> at:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> au:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> av:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.EdgeEffectCompat:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> setSize
    boolean isFinished() -> isFinished
    void finish() -> finish
    boolean onPull(float) -> onPull
    boolean onRelease() -> onRelease
    boolean onAbsorb(int) -> onAbsorb
    boolean draw(android.graphics.Canvas) -> draw
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> aw:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> ax:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> ay:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.ResourceCursorAdapter:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.SearchViewCompat -> android.support.v4.widget.SearchViewCompat:
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl IMPL -> a
    android.view.View newSearchView(android.content.Context) -> newSearchView
    void setOnQueryTextListener(android.view.View,android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> setOnQueryTextListener
    android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl access$000() -> a
android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat -> android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat:
    java.lang.Object mListener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl -> az:
    android.view.View newSearchView(android.content.Context) -> a
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl$1 -> aA:
    android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat val$listener -> a
    android.support.v4.widget.SearchViewCompat$SearchViewCompatHoneycombImpl this$0 -> b
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SearchViewCompat$SearchViewCompatImpl -> aB:
    android.view.View newSearchView(android.content.Context) -> a
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
android.support.v4.widget.SearchViewCompat$SearchViewCompatStubImpl -> aC:
    android.view.View newSearchView(android.content.Context) -> a
    java.lang.Object newOnQueryTextListener(android.support.v4.widget.SearchViewCompat$OnQueryTextListenerCompat) -> a
    void setOnQueryTextListener(java.lang.Object,java.lang.Object) -> a
android.support.v4.widget.SearchViewCompatHoneycomb -> aD:
android.support.v4.widget.SearchViewCompatHoneycomb$1 -> aE:
    android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge val$listener -> a
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
android.support.v4.widget.SearchViewCompatHoneycomb$OnQueryTextListenerCompatBridge -> aF:
    boolean onQueryTextSubmit(java.lang.String) -> a
    boolean onQueryTextChange(java.lang.String) -> b
android.support.v4.widget.SimpleCursorAdapter -> android.support.v4.widget.SimpleCursorAdapter:
    int[] mFrom -> mFrom
    int[] mTo -> mTo
    int mStringConversionColumn -> b
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter mCursorToStringConverter -> c
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder mViewBinder -> d
    java.lang.String[] mOriginalFrom -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    android.support.v4.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    void setViewBinder(android.support.v4.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    int getStringConversionColumn() -> getStringConversionColumn
    void setStringConversionColumn(int) -> setStringConversionColumn
    android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    void setCursorToStringConverter(android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    void findColumns(java.lang.String[]) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter -> android.support.v4.widget.SimpleCursorAdapter$CursorToStringConverter:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
android.support.v4.widget.SimpleCursorAdapter$ViewBinder -> android.support.v4.widget.SimpleCursorAdapter$ViewBinder:
    boolean setViewValue(android.view.View,android.database.Cursor,int) -> setViewValue
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.ActionBarSherlock:
    java.lang.String TAG -> TAG
    java.lang.Class[] CONSTRUCTOR_ARGS -> CONSTRUCTOR_ARGS
    java.util.HashMap IMPLEMENTATIONS -> IMPLEMENTATIONS
    int FLAG_DELEGATE -> FLAG_DELEGATE
    android.app.Activity mActivity -> mActivity
    boolean mIsDelegate -> mIsDelegate
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> mMenuInflater
    void registerImplementation(java.lang.Class) -> registerImplementation
    boolean unregisterImplementation(java.lang.Class) -> unregisterImplementation
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity) -> wrap
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> wrap
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackCreateOptionsMenu
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackPrepareOptionsMenu
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> callbackOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void ensureActionBar() -> ensureActionBar
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.ActionBarSherlock$Implementation:
    int DEFAULT_API -> DEFAULT_API
    int DEFAULT_DPI -> DEFAULT_DPI
    int api() -> api
    int dpi() -> dpi
com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener:
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener:
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
com.actionbarsherlock.R -> com.actionbarsherlock.R:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.R$attr:
    int dropDownHintAppearance -> dropDownHintAppearance
    int textAppearanceSmall -> textAppearanceSmall
    int actionModeStyle -> actionModeStyle
    int searchViewCloseIcon -> searchViewCloseIcon
    int activityChooserViewStyle -> activityChooserViewStyle
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int headerBackground -> headerBackground
    int dividerVertical -> dividerVertical
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionBarDivider -> actionBarDivider
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int divider -> divider
    int navigationMode -> navigationMode
    int listPopupWindowStyle -> listPopupWindowStyle
    int actionBarItemBackground -> actionBarItemBackground
    int homeLayout -> homeLayout
    int progressBarPadding -> progressBarPadding
    int horizontalDivider -> horizontalDivider
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int textColorPrimary -> textColorPrimary
    int selectableItemBackground -> selectableItemBackground
    int backgroundSplit -> backgroundSplit
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int title -> title
    int preserveIconSpacing -> preserveIconSpacing
    int actionBarSize -> actionBarSize
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int searchViewEditQuery -> searchViewEditQuery
    int itemPadding -> itemPadding
    int searchViewTextField -> searchViewTextField
    int logo -> logo
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int backgroundStacked -> backgroundStacked
    int searchViewSearchIcon -> searchViewSearchIcon
    int itemTextAppearance -> itemTextAppearance
    int windowActionBar -> windowActionBar
    int windowSplitActionBar -> windowSplitActionBar
    int spinnerItemStyle -> spinnerItemStyle
    int background -> background
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int windowMinWidthMajor -> windowMinWidthMajor
    int initialActivityCount -> initialActivityCount
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int dropDownListViewStyle -> dropDownListViewStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int windowMinWidthMinor -> windowMinWidthMinor
    int actionModeBackground -> actionModeBackground
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int height -> height
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorSearchUrl -> textColorSearchUrl
    int actionButtonStyle -> actionButtonStyle
    int windowAnimationStyle -> windowAnimationStyle
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int actionBarTabStyle -> actionBarTabStyle
    int windowContentOverlay -> windowContentOverlay
    int actionBarStyle -> actionBarStyle
    int windowActionModeOverlay -> windowActionModeOverlay
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int actionModeShareDrawable -> actionModeShareDrawable
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int windowNoTitle -> windowNoTitle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int verticalDivider -> verticalDivider
    int homeAsUpIndicator -> homeAsUpIndicator
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int itemBackground -> itemBackground
    int iconifiedByDefault -> iconifiedByDefault
    int searchResultListItemHeight -> searchResultListItemHeight
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionBarSplitStyle -> actionBarSplitStyle
    int popupMenuStyle -> popupMenuStyle
    int searchViewGoIcon -> searchViewGoIcon
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int buttonStyleSmall -> buttonStyleSmall
    int displayOptions -> displayOptions
    int titleTextStyle -> titleTextStyle
    int icon -> icon
    int customNavigationLayout -> customNavigationLayout
    int actionModeSplitBackground -> actionModeSplitBackground
    int queryHint -> queryHint
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int windowActionBarOverlay -> windowActionBarOverlay
    int searchDropdownBackground -> searchDropdownBackground
    int subtitleTextStyle -> subtitleTextStyle
    int progressBarStyle -> progressBarStyle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int subtitle -> subtitle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextColor -> actionMenuTextColor
com.actionbarsherlock.R$bool -> com.actionbarsherlock.R$bool:
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
com.actionbarsherlock.R$color -> com.actionbarsherlock.R$color:
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
    int abs__background_holo_dark -> abs__background_holo_dark
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.R$dimen:
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
com.actionbarsherlock.R$drawable -> com.actionbarsherlock.R$drawable:
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_go -> abs__ic_go
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__toast_frame -> abs__toast_frame
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ic_clear -> abs__ic_clear
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
com.actionbarsherlock.R$id -> com.actionbarsherlock.R$id:
    int abs__action_bar_container -> abs__action_bar_container
    int normal -> normal
    int abs__search_go_btn -> abs__search_go_btn
    int abs__default_activity_button -> abs__default_activity_button
    int homeAsUp -> homeAsUp
    int abs__search_bar -> abs__search_bar
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__imageButton -> abs__imageButton
    int edit_query -> edit_query
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__search_voice_btn -> abs__search_voice_btn
    int disableHome -> disableHome
    int showTitle -> showTitle
    int abs__up -> abs__up
    int abs__split_action_bar -> abs__split_action_bar
    int abs__action_context_bar -> abs__action_context_bar
    int abs__list_item -> abs__list_item
    int abs__progress_horizontal -> abs__progress_horizontal
    int showHome -> showHome
    int abs__home -> abs__home
    int abs__search_src_text -> abs__search_src_text
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__checkbox -> abs__checkbox
    int abs__search_close_btn -> abs__search_close_btn
    int abs__image -> abs__image
    int showCustom -> showCustom
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__content -> abs__content
    int abs__icon -> abs__icon
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__search_badge -> abs__search_badge
    int abs__action_bar -> abs__action_bar
    int abs__search_plate -> abs__search_plate
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int wrap_content -> wrap_content
    int listMode -> listMode
    int abs__title -> abs__title
    int abs__progress_circular -> abs__progress_circular
    int useLogo -> useLogo
    int tabMode -> tabMode
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__radio -> abs__radio
    int abs__action_bar_title -> abs__action_bar_title
    int abs__search_button -> abs__search_button
    int abs__shortcut -> abs__shortcut
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__textButton -> abs__textButton
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__submit_area -> abs__submit_area
com.actionbarsherlock.R$integer -> com.actionbarsherlock.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.actionbarsherlock.R$layout -> com.actionbarsherlock.R$layout:
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__action_menu_layout -> abs__action_menu_layout
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__list_menu_item_layout -> abs__list_menu_item_layout
    int sherlock_spinner_item -> sherlock_spinner_item
    int abs__screen_simple -> abs__screen_simple
    int abs__search_view -> abs__search_view
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_bar_tab -> abs__action_bar_tab
com.actionbarsherlock.R$string -> com.actionbarsherlock.R$string:
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__action_mode_done -> abs__action_mode_done
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
com.actionbarsherlock.R$style -> com.actionbarsherlock.R$style:
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Theme_Sherlock -> Theme_Sherlock
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int Sherlock___Theme -> Sherlock___Theme
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Widget -> Widget
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.R$styleable:
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockView_android_focusable -> SherlockView_android_focusable
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int[] SherlockTheme -> SherlockTheme
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int[] SherlockView -> SherlockView
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    int NAVIGATION_MODE_STANDARD -> NAVIGATION_MODE_STANDARD
    int NAVIGATION_MODE_LIST -> NAVIGATION_MODE_LIST
    int NAVIGATION_MODE_TABS -> NAVIGATION_MODE_TABS
    int DISPLAY_USE_LOGO -> DISPLAY_USE_LOGO
    int DISPLAY_SHOW_HOME -> DISPLAY_SHOW_HOME
    int DISPLAY_HOME_AS_UP -> DISPLAY_HOME_AS_UP
    int DISPLAY_SHOW_TITLE -> DISPLAY_SHOW_TITLE
    int DISPLAY_SHOW_CUSTOM -> DISPLAY_SHOW_CUSTOM
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int[] ATTRS -> ATTRS
    int gravity -> gravity
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.app.ActionBar$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.app.ActionBar$TabListener -> com.actionbarsherlock.app.ActionBar$TabListener:
    void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockDialogFragment -> com.actionbarsherlock.app.SherlockDialogFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockFragment -> com.actionbarsherlock.app.SherlockFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    java.lang.String TAG -> TAG
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    boolean mIgnoreNativeCreate -> mIgnoreNativeCreate
    boolean mIgnoreNativePrepare -> mIgnoreNativePrepare
    boolean mIgnoreNativeSelected -> mIgnoreNativeSelected
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListFragment -> com.actionbarsherlock.app.SherlockListFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.ActionBarSherlockCompat:
    int DEFAULT_FEATURES -> DEFAULT_FEATURES
    java.lang.String PANELS_TAG -> PANELS_TAG
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.util.HashMap mNativeItemMap -> mNativeItemMap
    android.view.ViewGroup mDecor -> mDecor
    android.view.ViewGroup mContentParent -> mContentParent
    boolean mIsTitleReady -> mIsTitleReady
    boolean mIsDestroyed -> mIsDestroyed
    boolean mClosingActionMenu -> mClosingActionMenu
    boolean mMenuIsPrepared -> mMenuIsPrepared
    boolean mMenuRefreshContent -> mMenuRefreshContent
    android.os.Bundle mMenuFrozenActionViewState -> mMenuFrozenActionViewState
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> aActionBar
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> wActionBar
    int mFeatures -> mFeatures
    int mUiOptions -> mUiOptions
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> mCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar mHorizontalProgressBar -> mHorizontalProgressBar
    com.actionbarsherlock.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> mActionModeView
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    android.content.Context getThemedContext() -> getThemedContext
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean preparePanel() -> preparePanel
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    void reopenMenu(boolean) -> reopenMenu
    boolean initializePanelMenu() -> initializePanelMenu
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> checkCloseActionMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setFeatureInt(int,int) -> setFeatureInt
    void updateInt(int,int,boolean) -> updateInt
    void onIntChanged(int,int) -> onIntChanged
    void updateProgressBars(int) -> updateProgressBars
    void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> showProgressBars
    void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> hideProgressBars
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> getCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean) -> getHorizontalProgressBar
    int getFeatures() -> getFeatures
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void installDecor() -> installDecor
    android.view.ViewGroup generateLayout() -> generateLayout
    boolean isReservingOverflow() -> isReservingOverflow
    int loadUiOptionsFromManifest(android.app.Activity) -> loadUiOptionsFromManifest
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> cleanActivityName
    void ensureActionBar() -> ensureActionBar
    com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$0
    android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$1
    com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$2
    void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode) -> access$3
    boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$4
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$5
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.ActionBarSherlockCompat$1:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mWrapped -> mWrapped
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.ActionBarSherlockNative:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> mActionBar
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper) -> access$0
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$1
    android.app.Activity access$2(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$2
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper:
    android.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.ResourcesCompat:
    java.lang.String TAG -> TAG
    boolean getResources_getBoolean(android.content.Context,int) -> getResources_getBoolean
    int getResources_getInteger(android.content.Context,int) -> getResources_getInteger
    int loadLogoFromManifest(android.app.Activity) -> loadLogoFromManifest
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.app.ActionBarImpl:
    android.content.Context mContext -> mContext
    android.content.Context mThemedContext -> mThemedContext
    android.app.Activity mActivity -> mActivity
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> mContainerView
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> mActionView
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> mContentView
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    java.util.ArrayList mTabs -> mTabs
    com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl mSelectedTab -> mSelectedTab
    int mSavedTabPosition -> mSavedTabPosition
    com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl mActionMode -> mActionMode
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> mDeferredDestroyActionMode
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> mDeferredModeDestroyCallback
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    int CONTEXT_DISPLAY_NORMAL -> CONTEXT_DISPLAY_NORMAL
    int CONTEXT_DISPLAY_SPLIT -> CONTEXT_DISPLAY_SPLIT
    int INVALID_POSITION -> INVALID_POSITION
    int mContextDisplayMode -> mContextDisplayMode
    boolean mHasEmbeddedTabs -> mHasEmbeddedTabs
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> mCurrentShowAnim
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentModeAnim -> mCurrentModeAnim
    boolean mShowHideAnimationEnabled -> mShowHideAnimationEnabled
    boolean mWasHiddenBeforeMode -> mWasHiddenBeforeMode
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> mHideListener
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> mShowListener
    void init(android.view.View) -> init
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    void ensureTabsExist() -> ensureTabsExist
    void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    void setCustomView(int) -> setCustomView
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    void removeAllTabs() -> removeAllTabs
    void cleanupTabs() -> cleanupTabs
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> configureTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    int getHeight() -> getHeight
    void show() -> show
    void show(boolean) -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void animateToMode(boolean) -> animateToMode
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    int getTabCount() -> getTabCount
    void setNavigationMode(int) -> setNavigationMode
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$0
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$1
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$2
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$3
    void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> access$4
    com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$5
    com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$6
    android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$7
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$8
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.app.ActionBarImpl$1:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.app.ActionBarImpl$2:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.lang.ref.WeakReference mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    void finish() -> finish
    void invalidate() -> invalidate
    boolean dispatchOnCreate() -> dispatchOnCreate
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl:
    com.actionbarsherlock.app.ActionBar$TabListener mCallback -> mCallback
    java.lang.Object mTag -> mTag
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mContentDesc -> mContentDesc
    int mPosition -> mPosition
    android.view.View mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    com.actionbarsherlock.app.ActionBar$TabListener getCallback() -> getCallback
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper:
    android.app.Activity mActivity -> mActivity
    android.app.ActionBar mActionBar -> mActionBar
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> mNavigationListener
    java.util.Set mMenuVisibilityListeners -> mMenuVisibilityListeners
    android.support.v4.app.FragmentTransaction mFragmentTransaction -> mFragmentTransaction
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
    android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$0
    android.support.v4.app.FragmentTransaction access$1(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$1
    void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction) -> access$2
com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper:
    android.app.ActionBar$Tab mNativeTab -> mNativeTab
    java.lang.Object mTag -> mTag
    com.actionbarsherlock.app.ActionBar$TabListener mListener -> mListener
    com.actionbarsherlock.internal.app.ActionBarWrapper this$0 -> this$0
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> mListeners
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> mPlayingSet
    java.util.HashMap mNodeMap -> mNodeMap
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mSortedNodes -> mSortedNodes
    boolean mNeedsSort -> mNeedsSort
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> mSetListener
    boolean mTerminated -> mTerminated
    boolean mStarted -> mStarted
    long mStartDelay -> mStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> mDelayAnim
    long mDuration -> mDuration
    void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> sortNodes
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$2
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$3
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$4
    void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> access$5
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$6
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> canceled
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    java.util.ArrayList val$nodesToStart -> val$nodesToStart
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> mCurrentNode
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> with
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> before
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> after
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency:
    int WITH -> WITH
    int AFTER -> AFTER
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> node
    int rule -> rule
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> mNode
    int mRule -> mRule
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> startIfReady
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> animation
    java.util.ArrayList dependencies -> dependencies
    java.util.ArrayList tmpDependencies -> tmpDependencies
    java.util.ArrayList nodeDependencies -> nodeDependencies
    java.util.ArrayList nodeDependents -> nodeDependents
    boolean done -> done
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> firstValue
    float lastValue -> lastValue
    float deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet:
    int firstValue -> firstValue
    int lastValue -> lastValue
    int deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe:
    float mFraction -> mFraction
    java.lang.Class mValueType -> mValueType
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mHasValue -> mHasValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> mValue
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> mValue
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    java.lang.Object mValue -> mValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> mNumKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> mFirstKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> mLastKeyframe
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mKeyframes -> mKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator:
    boolean DBG -> DBG
    java.lang.Object mTarget -> mTarget
    java.lang.String mPropertyName -> mPropertyName
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> mPropertyName
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.Class mValueType -> mValueType
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> mKeyframeSet
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    java.lang.Class[] FLOAT_VARIANTS -> FLOAT_VARIANTS
    java.lang.Class[] INTEGER_VARIANTS -> INTEGER_VARIANTS
    java.lang.Class[] DOUBLE_VARIANTS -> DOUBLE_VARIANTS
    java.util.HashMap sSetterPropertyMap -> sSetterPropertyMap
    java.util.HashMap sGetterPropertyMap -> sGetterPropertyMap
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> mPropertyMapLock
    java.lang.Object[] mTmpValueArray -> mTmpValueArray
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    java.lang.Object mAnimatedValue -> mAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    void setupSetter(java.lang.Class) -> setupSetter
    void setupGetter(java.lang.Class) -> setupGetter
    void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe) -> setupValue
    void setupStartValue(java.lang.Object) -> setupStartValue
    void setupEndValue(java.lang.Object) -> setupEndValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void init() -> init
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> calculateValue
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> mFloatKeyframeSet
    float mFloatAnimatedValue -> mFloatAnimatedValue
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> mIntKeyframeSet
    int mIntAnimatedValue -> mIntAnimatedValue
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator:
    long DEFAULT_FRAME_DELAY -> DEFAULT_FRAME_DELAY
    int ANIMATION_START -> ANIMATION_START
    int ANIMATION_FRAME -> ANIMATION_FRAME
    int STOPPED -> STOPPED
    int RUNNING -> RUNNING
    int SEEKED -> SEEKED
    long mStartTime -> mStartTime
    long mSeekTime -> mSeekTime
    java.lang.ThreadLocal sAnimationHandler -> sAnimationHandler
    java.lang.ThreadLocal sAnimations -> sAnimations
    java.lang.ThreadLocal sPendingAnimations -> sPendingAnimations
    java.lang.ThreadLocal sDelayedAnims -> sDelayedAnims
    java.lang.ThreadLocal sEndingAnims -> sEndingAnims
    java.lang.ThreadLocal sReadyAnims -> sReadyAnims
    android.view.animation.Interpolator sDefaultInterpolator -> sDefaultInterpolator
    boolean mPlayingBackwards -> mPlayingBackwards
    int mCurrentIteration -> mCurrentIteration
    float mCurrentFraction -> mCurrentFraction
    boolean mStartedDelay -> mStartedDelay
    long mDelayStartTime -> mDelayStartTime
    int mPlayingState -> mPlayingState
    boolean mRunning -> mRunning
    boolean mStarted -> mStarted
    boolean mInitialized -> mInitialized
    long mDuration -> mDuration
    long mStartDelay -> mStartDelay
    long sFrameDelay -> sFrameDelay
    int mRepeatCount -> mRepeatCount
    int mRepeatMode -> mRepeatMode
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mUpdateListeners -> mUpdateListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> mValues
    java.util.HashMap mValuesMap -> mValuesMap
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> start
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> endAnimation
    void startAnimation() -> startAnimation
    boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    boolean animationFrame(long) -> animationFrame
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.ThreadLocal access$2() -> access$2
    java.lang.ThreadLocal access$3() -> access$3
    java.lang.ThreadLocal access$4() -> access$4
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$5
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$6
    java.lang.ThreadLocal access$7() -> access$7
    java.lang.ThreadLocal access$8() -> access$8
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> access$9
    void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> access$10
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$11
    long access$12() -> access$12
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> PROXIES
    java.lang.ref.WeakReference mView -> mView
    float mAlpha -> mAlpha
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    android.graphics.RectF mBefore -> mBefore
    android.graphics.RectF mAfter -> mAfter
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    void prepareForUpdate() -> prepareForUpdate
    void invalidateAfterUpdate() -> invalidateAfterUpdate
    void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.ActionProviderWrapper:
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    com.actionbarsherlock.view.ActionProvider unwrap() -> unwrap
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.StandaloneActionMode -> com.actionbarsherlock.internal.view.StandaloneActionMode:
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    boolean mFinished -> mFinished
    boolean mFocusable -> mFocusable
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.View_HasStateListenerSupport:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener:
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.actionbarsherlock.internal.view.menu.ActionMenu -> com.actionbarsherlock.internal.view.menu.ActionMenu:
    android.content.Context mContext -> mContext
    boolean mIsQwerty -> mIsQwerty
    java.util.ArrayList mItems -> mItems
    android.content.Context getContext() -> getContext
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    int findItemIndex(int) -> findItemIndex
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent) -> findItemWithShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.ActionMenuItem:
    int mId -> mId
    int mGroup -> mGroup
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    android.content.Context mContext -> mContext
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> invoke
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    java.lang.CharSequence mTitle -> mTitle
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> mItemInvoker
    android.widget.ImageButton mImageButton -> mImageButton
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> mTextButton
    boolean mAllowTextWithIcon -> mAllowTextWithIcon
    boolean mExpandedFormat -> mExpandedFormat
    int mMinWidth -> mMinWidth
    java.util.Set mListeners -> mListeners
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> updateTextButtonVisibility
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean showsIcon() -> showsIcon
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> mOverflowButton
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    int mWidthLimit -> mWidthLimit
    int mActionItemWidthLimit -> mActionItemWidthLimit
    int mMaxItems -> mMaxItems
    boolean mMaxItemsSet -> mMaxItemsSet
    boolean mStrictWidthLimit -> mStrictWidthLimit
    boolean mWidthLimitSet -> mWidthLimitSet
    boolean mExpandedActionViewsExclusive -> mExpandedActionViewsExclusive
    int mMinCellSize -> mMinCellSize
    android.util.SparseBooleanArray mActionButtonGroups -> mActionButtonGroups
    android.view.View mScrapActionButtonView -> mScrapActionButtonView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> mOverflowPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> mActionButtonPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> mPostedOpenRunnable
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> mPopupPresenterCallback
    int mOpenSubMenuId -> mOpenSubMenuId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    boolean reserveOverflow(android.content.Context) -> reserveOverflow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWidthLimit(int,boolean) -> setWidthLimit
    void setReserveOverflow(boolean) -> setReserveOverflow
    void setItemLimit(int) -> setItemLimit
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void updateMenuView(boolean) -> updateMenuView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> findViewForItem
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean dismissPopupMenus() -> dismissPopupMenus
    boolean hideSubMenus() -> hideSubMenus
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$0
    void access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> access$1
    android.view.View access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$2
    void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> access$3
    void access$4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> access$4
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey:
    boolean get(android.content.Context) -> get
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton:
    java.util.Set mListeners -> mListeners
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> openSubMenuId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> IS_FROYO
    int MIN_CELL_SIZE -> MIN_CELL_SIZE
    int GENERATED_ITEM_PADDING -> GENERATED_ITEM_PADDING
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    boolean mReserveOverflow -> mReserveOverflow
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> mPresenter
    boolean mFormatItems -> mFormatItems
    int mFormatItemsWidth -> mFormatItemsWidth
    int mMinCellSize -> mMinCellSize
    int mGeneratedItemPadding -> mGeneratedItemPadding
    boolean mFirst -> mFirst
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    boolean isExpandedFormat() -> isExpandedFormat
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> isOverflowButton
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    boolean expandable -> expandable
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.BaseMenuPresenter:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.content.Context mSystemContext -> mSystemContext
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> mCallback
    int mMenuLayoutRes -> mMenuLayoutRes
    int mItemLayoutRes -> mItemLayoutRes
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> mMenuView
    int mId -> mId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    android.widget.ImageView mIconView -> mIconView
    android.widget.RadioButton mRadioButton -> mRadioButton
    android.widget.TextView mTitleView -> mTitleView
    android.widget.CheckBox mCheckBox -> mCheckBox
    android.widget.TextView mShortcutView -> mShortcutView
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mTextAppearance -> mTextAppearance
    android.content.Context mTextAppearanceContext -> mTextAppearanceContext
    boolean mPreserveIconSpacing -> mPreserveIconSpacing
    android.view.LayoutInflater mInflater -> mInflater
    boolean mForceShowIcon -> mForceShowIcon
    android.content.Context mContext -> mContext
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> insertIconView
    void insertRadioButton() -> insertRadioButton
    void insertCheckBox() -> insertCheckBox
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.MenuBuilder:
    java.lang.String PRESENTER_KEY -> PRESENTER_KEY
    java.lang.String ACTION_VIEW_STATES_KEY -> ACTION_VIEW_STATES_KEY
    java.lang.String EXPANDED_ACTION_VIEW_ID -> EXPANDED_ACTION_VIEW_ID
    int[] sCategoryToOrder -> sCategoryToOrder
    android.content.Context mContext -> mContext
    android.content.res.Resources mResources -> mResources
    boolean mQwertyMode -> mQwertyMode
    boolean mShortcutsVisible -> mShortcutsVisible
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> mCallback
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mVisibleItems -> mVisibleItems
    boolean mIsVisibleItemsStale -> mIsVisibleItemsStale
    java.util.ArrayList mActionItems -> mActionItems
    java.util.ArrayList mNonActionItems -> mNonActionItems
    boolean mIsActionItemsStale -> mIsActionItemsStale
    int mDefaultShowAsAction -> mDefaultShowAsAction
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> mCurrentMenuInfo
    java.lang.CharSequence mHeaderTitle -> mHeaderTitle
    android.graphics.drawable.Drawable mHeaderIcon -> mHeaderIcon
    android.view.View mHeaderView -> mHeaderView
    boolean mPreventDispatchingItemsChanged -> mPreventDispatchingItemsChanged
    boolean mItemsChangedWhileDispatchPrevented -> mItemsChangedWhileDispatchPrevented
    boolean mOptionalIconsVisible -> mOptionalIconsVisible
    boolean mIsClosing -> mIsClosing
    java.util.ArrayList mTempShortcutItemList -> mTempShortcutItemList
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> mPresenters
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> mExpandedItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> addMenuPresenter
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> removeMenuPresenter
    void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> dispatchSubMenuSelected
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    void savePresenterStates(android.os.Bundle) -> savePresenterStates
    void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> removeItemAtInt
    void removeItemAt(int) -> removeItemAt
    void clearAll() -> clearAll
    void clear() -> clear
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> setExclusiveItemChecked
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> findItemIndex
    int findGroupIndex(int) -> findGroupIndex
    int findGroupIndex(int,int) -> findGroupIndex
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> getOrdering
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.content.res.Resources getResources() -> getResources
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    void changeMenuMode() -> changeMenuMode
    int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> performItemAction
    void close(boolean) -> close
    void close() -> close
    void onItemsChanged(boolean) -> onItemsChanged
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemVisibleChanged
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    java.util.ArrayList getVisibleItems() -> getVisibleItems
    void flagActionItems() -> flagActionItems
    java.util.ArrayList getActionItems() -> getActionItems
    java.util.ArrayList getNonActionItems() -> getNonActionItems
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    android.view.View getHeaderView() -> getHeaderView
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> bindNativeOverflow
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.MenuItemImpl:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_MASK -> SHOW_AS_ACTION_MASK
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    java.lang.Runnable mItemCallback -> mItemCallback
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    int IS_ACTION -> IS_ACTION
    int mShowAsAction -> mShowAsAction
    android.view.View mActionView -> mActionView
    com.actionbarsherlock.view.ActionProvider mActionProvider -> mActionProvider
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> mOnActionExpandListener
    boolean mIsActionViewExpanded -> mIsActionViewExpanded
    int NO_ICON -> NO_ICON
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> mMenuInfo
    java.lang.String sPrependShortcutLabel -> sPrependShortcutLabel
    java.lang.String sEnterShortcutLabel -> sEnterShortcutLabel
    java.lang.String sDeleteShortcutLabel -> sDeleteShortcutLabel
    java.lang.String sSpaceShortcutLabel -> sSpaceShortcutLabel
    boolean invoke() -> invoke
    boolean isEnabled() -> isEnabled
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> getOrdering
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    java.lang.Runnable getCallback() -> getCallback
    com.actionbarsherlock.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> getShortcut
    java.lang.String getShortcutLabel() -> getShortcutLabel
    boolean shouldShowShortcut() -> shouldShowShortcut
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> setSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> getTitleForItemView
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> setCheckedInt
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> setVisibleInt
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> actionFormatChanged
    boolean shouldShowIcon() -> shouldShowIcon
    boolean isActionButton() -> isActionButton
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    void setIsActionButton(boolean) -> setIsActionButton
    boolean showsTextAsAction() -> showsTextAsAction
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    boolean isActionViewExpanded() -> isActionViewExpanded
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper:
    android.view.MenuItem mNativeItem -> mNativeItem
    com.actionbarsherlock.view.SubMenu mSubMenu -> mSubMenu
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> mMenuItemClickListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> mActionExpandListener
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> mNativeActionExpandListener
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper) -> access$0
com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1 -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1:
    com.actionbarsherlock.internal.view.menu.MenuItemWrapper this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper:
    int ITEM_LAYOUT -> ITEM_LAYOUT
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    int mPopupMaxWidth -> mPopupMaxWidth
    android.view.View mAnchorView -> mAnchorView
    boolean mOverflowOnly -> mOverflowOnly
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    boolean mForceShowIcon -> mForceShowIcon
    android.view.ViewGroup mMeasureParent -> mMeasureParent
    void setAnchorView(android.view.View) -> setAnchorView
    void setForceShowIcon(boolean) -> setForceShowIcon
    void show() -> show
    boolean tryShow() -> tryShow
    void dismiss() -> dismiss
    void onDismiss() -> onDismiss
    boolean isShowing() -> isShowing
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> measureContentWidth
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$0
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$1
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$2
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$3
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> mAdapterMenu
    int mExpandedIndex -> mExpandedIndex
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> access$1
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.MenuView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.MenuView$ItemView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setEnabled(boolean) -> setEnabled
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.MenuWrapper:
    android.view.Menu mNativeMenu -> mNativeMenu
    java.util.WeakHashMap mNativeMap -> mNativeMap
    android.view.Menu unwrap() -> unwrap
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> addInternal
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void invalidate() -> invalidate
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.SubMenuBuilder:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> mParentMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> mItem
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    boolean isShortcutsVisible() -> isShortcutsVisible
    com.actionbarsherlock.view.Menu getParentMenu() -> getParentMenu
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.SubMenuWrapper:
    android.view.SubMenu mNativeSubMenu -> mNativeSubMenu
    com.actionbarsherlock.view.MenuItem mItem -> mItem
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> mMenuView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    boolean mSplitActionBar -> mSplitActionBar
    boolean mSplitWhenNarrow -> mSplitWhenNarrow
    int mContentHeight -> mContentHeight
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> animateToVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> showOverflowMenu
    void postShowOverflowMenu() -> postShowOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    void dismissPopupMenus() -> dismissPopupMenus
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    int positionChild(android.view.View,int,int,int) -> positionChild
    int positionChildInverse(android.view.View,int,int,int) -> positionChildInverse
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.AbsActionBarView$1:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> mIsTransitioning
    android.view.View mTabContainer -> mTabContainer
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> mActionBarView
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.graphics.drawable.Drawable mStackedBackground -> mStackedBackground
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mIsSplit -> mIsSplit
    boolean mIsStacked -> mIsStacked
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> mClose
    android.view.View mCustomView -> mCustomView
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> mCurrentAnimation
    boolean mAnimateInOnLayout -> mAnimateInOnLayout
    int mAnimationMode -> mAnimationMode
    int ANIMATE_IDLE -> ANIMATE_IDLE
    int ANIMATE_IN -> ANIMATE_IN
    int ANIMATE_OUT -> ANIMATE_OUT
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> initTitle
    void initForMode(com.actionbarsherlock.view.ActionMode) -> initForMode
    void closeMode() -> closeMode
    void finishAnimation() -> finishAnimation
    void killMode() -> killMode
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> makeInAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation() -> makeOutAnimation
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarContextView$1 -> com.actionbarsherlock.internal.widget.ActionBarContextView$1:
    com.actionbarsherlock.internal.widget.ActionBarContextView this$0 -> this$0
    com.actionbarsherlock.view.ActionMode val$mode -> val$mode
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    java.lang.String TAG -> TAG
    int DISPLAY_DEFAULT -> DISPLAY_DEFAULT
    int DISPLAY_RELAYOUT_MASK -> DISPLAY_RELAYOUT_MASK
    int DEFAULT_CUSTOM_GRAVITY -> DEFAULT_CUSTOM_GRAVITY
    int mNavigationMode -> mNavigationMode
    int mDisplayOptions -> mDisplayOptions
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.graphics.drawable.Drawable mLogo -> mLogo
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> mHomeLayout
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> mExpandedHomeLayout
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    android.view.View mTitleUpView -> mTitleUpView
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> mSpinner
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> mListNavLayout
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    android.view.View mCustomNavView -> mCustomNavView
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> mProgressView
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> mIndeterminateProgressView
    int mProgressBarPadding -> mProgressBarPadding
    int mItemPadding -> mItemPadding
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    int mProgressStyle -> mProgressStyle
    int mIndeterminateProgressStyle -> mIndeterminateProgressStyle
    boolean mUserTitle -> mUserTitle
    boolean mIncludeTabs -> mIncludeTabs
    boolean mIsCollapsable -> mIsCollapsable
    boolean mIsCollapsed -> mIsCollapsed
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> mOptionsMenu
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> mLogoNavItem
    android.widget.SpinnerAdapter mSpinnerAdapter -> mSpinnerAdapter
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> mCallback
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> mExpandedMenuPresenter
    android.view.View mExpandedActionView -> mExpandedActionView
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> mWindowCallback
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> mNavItemSelectedListener
    android.view.View$OnClickListener mExpandedActionViewUpListener -> mExpandedActionViewUpListener
    android.view.View$OnClickListener mUpClickListener -> mUpClickListener
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> isSplitActionBar
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> configPresenters
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> initTitle
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> isCollapsed
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> access$0
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> access$2
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> access$3
    android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> access$4
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> access$5
    android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> access$6
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> access$7
    com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> access$8
    android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> access$9
    int access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> access$10
    void access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> access$11
    int access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> access$12
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.ActionBarView$1:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.ActionBarView$2:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.ActionBarView$3:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> mCurrentExpandedItem
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> mUpView
    android.widget.ImageView mIconView -> mIconView
    int mUpWidth -> mUpWidth
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> expandedMenuItemId
    boolean isOverflowOpen -> isOverflowOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_Button -> R_styleable_Button
    int R_styleable_Button_textAllCaps -> R_styleable_Button_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_TextView -> R_styleable_TextView
    int R_styleable_TextView_textAllCaps -> R_styleable_TextView_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper:
    com.actionbarsherlock.view.CollapsibleActionView child -> child
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> unwrap
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mSpinnerPadding -> mSpinnerPadding
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> mRecycler
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.graphics.Rect mTouchFrame -> mTouchFrame
    void initAbsSpinner() -> initAbsSpinner
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> resetList
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> getChildHeight
    int getChildWidth(android.view.View) -> getChildWidth
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> recycleAllViews
    void setSelection(int,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean) -> setSelectionInt
    void layout(int,boolean) -> layout
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    int pointToPosition(int,int) -> pointToPosition
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> access$2
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin:
    android.util.SparseArray mScrapHeap -> mScrapHeap
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> this$0
    void put(int,android.view.View) -> put
    android.view.View get(int) -> get
    void clear() -> clear
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> selectedId
    int position -> position
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificTop -> mSpecificTop
    int mSyncPosition -> mSyncPosition
    long mSyncRowId -> mSyncRowId
    long mSyncHeight -> mSyncHeight
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutHeight -> mLayoutHeight
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedRowId -> mNextSelectedRowId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedRowId -> mSelectedRowId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedRowId -> mOldSelectedRowId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> isScrollableForAccessibility
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> access$0
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$1
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$2
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> mInstanceState
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void clearSavedState() -> clearSavedState
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener:
    boolean onItemLongClick(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemLongClick
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> com.actionbarsherlock.internal.widget.IcsColorDrawable:
    int color -> color
    android.graphics.Paint paint -> paint
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_divider -> LinearLayout_divider
    int LinearLayout_showDividers -> LinearLayout_showDividers
    int LinearLayout_dividerPadding -> LinearLayout_dividerPadding
    int SHOW_DIVIDER_NONE -> SHOW_DIVIDER_NONE
    int SHOW_DIVIDER_BEGINNING -> SHOW_DIVIDER_BEGINNING
    int SHOW_DIVIDER_MIDDLE -> SHOW_DIVIDER_MIDDLE
    int SHOW_DIVIDER_END -> SHOW_DIVIDER_END
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    int EXPAND_LIST_TIMEOUT -> EXPAND_LIST_TIMEOUT
    android.content.Context mContext -> mContext
    android.widget.PopupWindow mPopup -> mPopup
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> mDropDownList
    int mDropDownHeight -> mDropDownHeight
    int mDropDownWidth -> mDropDownWidth
    int mDropDownHorizontalOffset -> mDropDownHorizontalOffset
    int mDropDownVerticalOffset -> mDropDownVerticalOffset
    boolean mDropDownVerticalOffsetSet -> mDropDownVerticalOffsetSet
    int mListItemExpandMaximum -> mListItemExpandMaximum
    android.view.View mPromptView -> mPromptView
    int mPromptPosition -> mPromptPosition
    android.database.DataSetObserver mObserver -> mObserver
    android.view.View mDropDownAnchorView -> mDropDownAnchorView
    android.graphics.drawable.Drawable mDropDownListHighlight -> mDropDownListHighlight
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> mItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> mResizePopupRunnable
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> mTouchInterceptor
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> mScrollListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> mHideSelector
    android.os.Handler mHandler -> mHandler
    android.graphics.Rect mTempRect -> mTempRect
    boolean mModal -> mModal
    int POSITION_PROMPT_ABOVE -> POSITION_PROMPT_ABOVE
    int POSITION_PROMPT_BELOW -> POSITION_PROMPT_BELOW
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptPosition(int) -> setPromptPosition
    void setModal(boolean) -> setModal
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setAnchorView(android.view.View) -> setAnchorView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setContentWidth(int) -> setContentWidth
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void show() -> show
    void dismiss() -> dismiss
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInputMethodMode(int) -> setInputMethodMode
    void setSelection(int) -> setSelection
    void clearListSelection() -> clearListSelection
    boolean isShowing() -> isShowing
    boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    android.widget.ListView getListView() -> getListView
    int buildDropDown() -> buildDropDown
    int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    int measureHeightOfChildren(int,int,int,int,int) -> measureHeightOfChildren
    void measureScrapChild(android.view.View,int,int) -> measureScrapChild
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$0
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$1
    android.widget.PopupWindow access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$2
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$3
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$4
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$5
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$1:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView:
    boolean mListSelectionHidden -> mListSelectionHidden
    boolean mHijackFocus -> mHijackFocus
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> access$0
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    int MAX_LEVEL -> MAX_LEVEL
    int ANIMATION_RESOLUTION -> ANIMATION_RESOLUTION
    int TIMEOUT_SEND_ACCESSIBILITY_EVENT -> TIMEOUT_SEND_ACCESSIBILITY_EVENT
    int[] ProgressBar -> ProgressBar
    int ProgressBar_maxWidth -> ProgressBar_maxWidth
    int ProgressBar_maxHeight -> ProgressBar_maxHeight
    int ProgressBar_max -> ProgressBar_max
    int ProgressBar_progress -> ProgressBar_progress
    int ProgressBar_secondaryProgress -> ProgressBar_secondaryProgress
    int ProgressBar_indeterminate -> ProgressBar_indeterminate
    int ProgressBar_indeterminateOnly -> ProgressBar_indeterminateOnly
    int ProgressBar_indeterminateDrawable -> ProgressBar_indeterminateDrawable
    int ProgressBar_progressDrawable -> ProgressBar_progressDrawable
    int ProgressBar_indeterminateDuration -> ProgressBar_indeterminateDuration
    int ProgressBar_indeterminateBehavior -> ProgressBar_indeterminateBehavior
    int ProgressBar_minWidth -> ProgressBar_minWidth
    int ProgressBar_minHeight -> ProgressBar_minHeight
    int ProgressBar_interpolator -> ProgressBar_interpolator
    int ProgressBar_animationResolution -> ProgressBar_animationResolution
    int mMinWidth -> mMinWidth
    int mMaxWidth -> mMaxWidth
    int mMinHeight -> mMinHeight
    int mMaxHeight -> mMaxHeight
    int mProgress -> mProgress
    int mSecondaryProgress -> mSecondaryProgress
    int mMax -> mMax
    int mBehavior -> mBehavior
    int mDuration -> mDuration
    boolean mIndeterminate -> mIndeterminate
    boolean mOnlyIndeterminate -> mOnlyIndeterminate
    android.view.animation.Transformation mTransformation -> mTransformation
    android.view.animation.AlphaAnimation mAnimation -> mAnimation
    android.graphics.drawable.Drawable mIndeterminateDrawable -> mIndeterminateDrawable
    int mIndeterminateRealLeft -> mIndeterminateRealLeft
    int mIndeterminateRealTop -> mIndeterminateRealTop
    android.graphics.drawable.Drawable mProgressDrawable -> mProgressDrawable
    android.graphics.drawable.Drawable mCurrentDrawable -> mCurrentDrawable
    android.graphics.Bitmap mSampleTile -> mSampleTile
    boolean mNoInvalidate -> mNoInvalidate
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> mRefreshProgressRunnable
    long mUiThreadId -> mUiThreadId
    boolean mShouldStartAnimationDrawable -> mShouldStartAnimationDrawable
    long mLastDrawTime -> mLastDrawTime
    boolean mInDrawing -> mInDrawing
    int mAnimationResolution -> mAnimationResolution
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> mAccessibilityEventSender
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
    void initProgressBar() -> initProgressBar
    boolean isIndeterminate() -> isIndeterminate
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> doRefreshProgress
    void onProgressRefresh(float,boolean) -> onProgressRefresh
    void refreshProgress(int,int,boolean) -> refreshProgress
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void incrementProgressBy(int) -> incrementProgressBy
    void incrementSecondaryProgressBy(int) -> incrementSecondaryProgressBy
    void startAnimation() -> startAnimation
    void stopAnimation() -> stopAnimation
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> updateDrawableBounds
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> updateDrawableState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> scheduleAccessibilityEventSender
    void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> access$0
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> access$1
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable:
    int mId -> mId
    int mProgress -> mProgress
    boolean mFromUser -> mFromUser
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
    void setup(int,int,boolean) -> setup
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> progress
    int secondaryProgress -> secondaryProgress
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    int MAX_ITEMS_MEASURED -> MAX_ITEMS_MEASURED
    int MODE_DROPDOWN -> MODE_DROPDOWN
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> mPopup
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> mTempAdapter
    int mDropDownWidth -> mDropDownWidth
    int mGravity -> mGravity
    boolean mDisableChildrenWhenDisabled -> mDisableChildrenWhenDisabled
    android.graphics.Rect mTempRect -> mTempRect
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> layout
    android.view.View makeAndAddView(int) -> makeAndAddView
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> measureContentWidth
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> access$0
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    android.widget.ListAdapter mListAdapter -> mListAdapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup:
    java.lang.CharSequence mHintText -> mHintText
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> this$0
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    java.lang.CharSequence getHintText() -> getHintText
    void setPromptText(java.lang.CharSequence) -> setPromptText
    void show() -> show
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> access$0
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> this$1
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup:
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void show() -> show
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    void setPromptText(java.lang.CharSequence) -> setPromptText
    java.lang.CharSequence getHintText() -> getHintText
com.actionbarsherlock.internal.widget.IcsToast -> com.actionbarsherlock.internal.widget.IcsToast:
    int LENGTH_LONG -> LENGTH_LONG
    int LENGTH_SHORT -> LENGTH_SHORT
    java.lang.String TAG -> TAG
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
    android.widget.Toast makeText(android.content.Context,int,int) -> makeText
    void setText(java.lang.CharSequence) -> setText
com.actionbarsherlock.internal.widget.IcsView -> com.actionbarsherlock.internal.widget.IcsView:
    int getMeasuredStateInt(android.view.View) -> getMeasuredStateInt
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> mTabClickListener
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> mTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> mTabSpinner
    boolean mAllowCollapse -> mAllowCollapse
    android.view.LayoutInflater mInflater -> mInflater
    int mMaxTabWidth -> mMaxTabWidth
    int mContentHeight -> mContentHeight
    int mSelectedTabIndex -> mSelectedTabIndex
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> isCollapsed
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> performCollapse
    boolean performExpand() -> performExpand
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout() -> createTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> createSpinner
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> animateToVisibility
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> createTabView
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void updateTab(int) -> updateTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> access$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> access$1
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> mParent
    com.actionbarsherlock.app.ActionBar$Tab mTab -> mTab
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> mTextView
    android.widget.ImageView mIconView -> mIconView
    android.view.View mCustomView -> mCustomView
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> init
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> bindTab
    void onMeasure(int,int) -> onMeasure
    void update() -> update
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.TabsLinearLayout -> com.actionbarsherlock.internal.widget.TabsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_measureWithLargestChild -> LinearLayout_measureWithLargestChild
    boolean mUseLargestChild -> mUseLargestChild
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> useLargestChildHorizontal
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.view.ActionMode:
    java.lang.Object mTag -> mTag
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.view.ActionMode$Callback:
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.view.ActionProvider:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.view.CollapsibleActionView:
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.view.Menu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
    int NONE -> NONE
    int FIRST -> FIRST
    int CATEGORY_CONTAINER -> CATEGORY_CONTAINER
    int CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    int CATEGORY_SECONDARY -> CATEGORY_SECONDARY
    int CATEGORY_ALTERNATIVE -> CATEGORY_ALTERNATIVE
    int FLAG_APPEND_TO_GROUP -> FLAG_APPEND_TO_GROUP
    int FLAG_PERFORM_NO_CLOSE -> FLAG_PERFORM_NO_CLOSE
    int FLAG_ALWAYS_PERFORM_CLOSE -> FLAG_ALWAYS_PERFORM_CLOSE
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.view.MenuInflater:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String XML_MENU -> XML_MENU
    java.lang.String XML_GROUP -> XML_GROUP
    java.lang.String XML_ITEM -> XML_ITEM
    int NO_ID -> NO_ID
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> ACTION_VIEW_CONSTRUCTOR_SIGNATURE
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
    java.lang.Object[] mActionViewConstructorArguments -> mActionViewConstructorArguments
    java.lang.Object[] mActionProviderConstructorArguments -> mActionProviderConstructorArguments
    android.content.Context mContext -> mContext
    java.lang.Object mRealOwner -> mRealOwner
    void inflate(int,com.actionbarsherlock.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> parseMenu
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> access$0
    java.lang.Class[] access$1() -> access$1
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> access$2
    java.lang.Object access$3(com.actionbarsherlock.view.MenuInflater) -> access$3
    java.lang.Class[] access$4() -> access$4
    java.lang.Object[] access$5(com.actionbarsherlock.view.MenuInflater) -> access$5
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Class[] PARAM_TYPES -> PARAM_TYPES
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.reflect.Method mMethod -> mMethod
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.MenuInflater$MenuState -> com.actionbarsherlock.view.MenuInflater$MenuState:
    com.actionbarsherlock.view.Menu menu -> menu
    int groupId -> groupId
    int groupCategory -> groupCategory
    int groupOrder -> groupOrder
    int groupCheckable -> groupCheckable
    boolean groupVisible -> groupVisible
    boolean groupEnabled -> groupEnabled
    boolean itemAdded -> itemAdded
    int itemId -> itemId
    int itemCategoryOrder -> itemCategoryOrder
    java.lang.CharSequence itemTitle -> itemTitle
    java.lang.CharSequence itemTitleCondensed -> itemTitleCondensed
    int itemIconResId -> itemIconResId
    char itemAlphabeticShortcut -> itemAlphabeticShortcut
    char itemNumericShortcut -> itemNumericShortcut
    int itemCheckable -> itemCheckable
    boolean itemChecked -> itemChecked
    boolean itemVisible -> itemVisible
    boolean itemEnabled -> itemEnabled
    int itemShowAsAction -> itemShowAsAction
    int itemActionViewLayout -> itemActionViewLayout
    java.lang.String itemActionViewClassName -> itemActionViewClassName
    java.lang.String itemActionProviderClassName -> itemActionProviderClassName
    java.lang.String itemListenerMethodName -> itemListenerMethodName
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> itemActionProvider
    int defaultGroupId -> defaultGroupId
    int defaultItemId -> defaultItemId
    int defaultItemCategory -> defaultItemCategory
    int defaultItemOrder -> defaultItemOrder
    int defaultItemCheckable -> defaultItemCheckable
    boolean defaultItemChecked -> defaultItemChecked
    boolean defaultItemVisible -> defaultItemVisible
    boolean defaultItemEnabled -> defaultItemEnabled
    com.actionbarsherlock.view.MenuInflater this$0 -> this$0
    void resetGroup() -> resetGroup
    void readGroup(android.util.AttributeSet) -> readGroup
    void readItem(android.util.AttributeSet) -> readItem
    char getShortcut(java.lang.String) -> getShortcut
    void setItem(com.actionbarsherlock.view.MenuItem) -> setItem
    void addItem() -> addItem
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> addSubMenuItem
    boolean hasAddedItem() -> hasAddedItem
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> access$0
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.view.MenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.view.MenuItem$OnActionExpandListener:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.view.SubMenu:
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.view.Window -> com.actionbarsherlock.view.Window:
    long FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    long FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    long FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    long FEATURE_NO_TITLE -> FEATURE_NO_TITLE
    long FEATURE_PROGRESS -> FEATURE_PROGRESS
    long FEATURE_INDETERMINATE_PROGRESS -> FEATURE_INDETERMINATE_PROGRESS
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.view.Window$Callback:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.widget.ActivityChooserModel -> com.actionbarsherlock.widget.ActivityChooserModel:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TAG_HISTORICAL_RECORDS -> TAG_HISTORICAL_RECORDS
    java.lang.String TAG_HISTORICAL_RECORD -> TAG_HISTORICAL_RECORD
    java.lang.String ATTRIBUTE_ACTIVITY -> ATTRIBUTE_ACTIVITY
    java.lang.String ATTRIBUTE_TIME -> ATTRIBUTE_TIME
    java.lang.String ATTRIBUTE_WEIGHT -> ATTRIBUTE_WEIGHT
    java.lang.String DEFAULT_HISTORY_FILE_NAME -> DEFAULT_HISTORY_FILE_NAME
    int DEFAULT_HISTORY_MAX_LENGTH -> DEFAULT_HISTORY_MAX_LENGTH
    int DEFAULT_ACTIVITY_INFLATION -> DEFAULT_ACTIVITY_INFLATION
    float DEFAULT_HISTORICAL_RECORD_WEIGHT -> DEFAULT_HISTORICAL_RECORD_WEIGHT
    java.lang.String HISTORY_FILE_EXTENSION -> HISTORY_FILE_EXTENSION
    int INVALID_INDEX -> INVALID_INDEX
    java.lang.Object sRegistryLock -> sRegistryLock
    java.util.Map sDataModelRegistry -> sDataModelRegistry
    java.lang.Object mInstanceLock -> mInstanceLock
    java.util.List mActivites -> mActivites
    java.util.List mHistoricalRecords -> mHistoricalRecords
    android.content.Context mContext -> mContext
    java.lang.String mHistoryFileName -> mHistoryFileName
    android.content.Intent mIntent -> mIntent
    com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> mActivitySorter
    int mHistoryMaxSize -> mHistoryMaxSize
    boolean mCanReadHistoricalData -> mCanReadHistoricalData
    boolean mReadShareHistoryCalled -> mReadShareHistoryCalled
    boolean mHistoricalRecordsChanged -> mHistoricalRecordsChanged
    android.os.Handler mHandler -> mHandler
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> mActivityChoserModelPolicy
    java.util.concurrent.Executor SERIAL_EXECUTOR -> SERIAL_EXECUTOR
    com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    void setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    int getActivityCount() -> getActivityCount
    android.content.pm.ResolveInfo getActivity(int) -> getActivity
    int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    android.content.Intent chooseActivity(int) -> chooseActivity
    void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setDefaultActivity(int) -> setDefaultActivity
    void readHistoricalData() -> readHistoricalData
    void persistHistoricalData() -> persistHistoricalData
    void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    void sortActivities() -> sortActivities
    void setHistoryMaxSize(int) -> setHistoryMaxSize
    int getHistoryMaxSize() -> getHistoryMaxSize
    int getHistorySize() -> getHistorySize
    boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord) -> addHisoricalRecord
    void pruneExcessiveHistoricalRecordsLocked() -> pruneExcessiveHistoricalRecordsLocked
    void loadActivitiesLocked() -> loadActivitiesLocked
    android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel) -> access$0
    java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel) -> access$1
    java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel) -> access$2
    java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel) -> access$3
    void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean) -> access$4
    android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel) -> access$5
    void access$6(com.actionbarsherlock.widget.ActivityChooserModel) -> access$6
    void access$7(com.actionbarsherlock.widget.ActivityChooserModel) -> access$7
    java.lang.String access$8() -> access$8
com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient:
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter -> com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter -> com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter:
    float WEIGHT_DECAY_COEFFICIENT -> WEIGHT_DECAY_COEFFICIENT
    java.util.Map mPackageNameToActivityMap -> mPackageNameToActivityMap
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord -> com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
    com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader) -> access$1
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1 -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1:
    com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader this$1 -> this$1
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener -> com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ActivityChooserView -> com.actionbarsherlock.widget.ActivityChooserView:
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> mAdapter
    com.actionbarsherlock.widget.ActivityChooserView$Callbacks mCallbacks -> mCallbacks
    com.actionbarsherlock.internal.widget.IcsLinearLayout mActivityChooserContent -> mActivityChooserContent
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> mActivityChooserContentBackground
    android.widget.FrameLayout mExpandActivityOverflowButton -> mExpandActivityOverflowButton
    android.widget.ImageView mExpandActivityOverflowButtonImage -> mExpandActivityOverflowButtonImage
    android.widget.FrameLayout mDefaultActivityButton -> mDefaultActivityButton
    android.widget.ImageView mDefaultActivityButtonImage -> mDefaultActivityButtonImage
    int mListPopupMaxWidth -> mListPopupMaxWidth
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    android.database.DataSetObserver mModelDataSetOberver -> mModelDataSetOberver
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> mOnGlobalLayoutListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mListPopupWindow -> mListPopupWindow
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mIsSelectingDefaultActivity -> mIsSelectingDefaultActivity
    int mInitialActivityCount -> mInitialActivityCount
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    int mDefaultActionButtonContentDescription -> mDefaultActionButtonContentDescription
    android.content.Context mContext -> mContext
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(com.actionbarsherlock.view.ActionProvider) -> setProvider
    boolean showPopup() -> showPopup
    void showPopupUnchecked(int) -> showPopupUnchecked
    boolean dismissPopup() -> dismissPopup
    boolean isShowingPopup() -> isShowingPopup
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> updateAppearance
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView) -> access$0
    com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView) -> access$1
    void access$2(com.actionbarsherlock.widget.ActivityChooserView,int) -> access$2
    boolean access$3(com.actionbarsherlock.widget.ActivityChooserView) -> access$3
    android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView) -> access$4
    android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView) -> access$5
    android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView) -> access$6
    void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean) -> access$7
    int access$8(com.actionbarsherlock.widget.ActivityChooserView) -> access$8
    android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView) -> access$9
    android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView) -> access$10
    boolean access$11() -> access$11
    void access$12(com.actionbarsherlock.widget.ActivityChooserView) -> access$12
com.actionbarsherlock.widget.ActivityChooserView$1 -> com.actionbarsherlock.widget.ActivityChooserView$1:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.widget.ActivityChooserView$2 -> com.actionbarsherlock.widget.ActivityChooserView$2:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.ActivityChooserView$3 -> com.actionbarsherlock.widget.ActivityChooserView$3:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter -> com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter:
    int MAX_ACTIVITY_COUNT_UNLIMITED -> MAX_ACTIVITY_COUNT_UNLIMITED
    int MAX_ACTIVITY_COUNT_DEFAULT -> MAX_ACTIVITY_COUNT_DEFAULT
    int ITEM_VIEW_TYPE_ACTIVITY -> ITEM_VIEW_TYPE_ACTIVITY
    int ITEM_VIEW_TYPE_FOOTER -> ITEM_VIEW_TYPE_FOOTER
    int ITEM_VIEW_TYPE_COUNT -> ITEM_VIEW_TYPE_COUNT
    com.actionbarsherlock.widget.ActivityChooserModel mDataModel -> mDataModel
    int mMaxActivityCount -> mMaxActivityCount
    boolean mShowDefaultActivity -> mShowDefaultActivity
    boolean mHighlightDefaultActivity -> mHighlightDefaultActivity
    boolean mShowFooterView -> mShowFooterView
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setDataModel
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> measureContentWidth
    void setMaxActivityCount(int) -> setMaxActivityCount
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setShowFooterView(boolean) -> setShowFooterView
    int getActivityCount() -> getActivityCount
    int getHistorySize() -> getHistorySize
    int getMaxActivityCount() -> getMaxActivityCount
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    boolean getShowDefaultActivity() -> getShowDefaultActivity
com.actionbarsherlock.widget.ActivityChooserView$Callbacks -> com.actionbarsherlock.widget.ActivityChooserView$Callbacks:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> notifyOnDismissListener
com.actionbarsherlock.widget.ActivityChooserView$SetActivated -> com.actionbarsherlock.widget.ActivityChooserView$SetActivated:
    void invoke(android.view.View,boolean) -> invoke
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String IME_OPTION_NO_MICROPHONE -> IME_OPTION_NO_MICROPHONE
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> mOnQueryChangeListener
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> mOnCloseListener
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> mOnQueryTextFocusChangeListener
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> mOnSuggestionListener
    android.view.View$OnClickListener mOnSearchClickListener -> mOnSearchClickListener
    boolean mIconifiedByDefault -> mIconifiedByDefault
    boolean mIconified -> mIconified
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> mSuggestionsAdapter
    android.view.View mSearchButton -> mSearchButton
    android.view.View mSubmitButton -> mSubmitButton
    android.view.View mSearchPlate -> mSearchPlate
    android.view.View mSubmitArea -> mSubmitArea
    android.widget.ImageView mCloseButton -> mCloseButton
    android.view.View mSearchEditFrame -> mSearchEditFrame
    android.view.View mVoiceButton -> mVoiceButton
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> mQueryTextView
    android.view.View mDropDownAnchor -> mDropDownAnchor
    android.widget.ImageView mSearchHintIcon -> mSearchHintIcon
    boolean mSubmitButtonEnabled -> mSubmitButtonEnabled
    java.lang.CharSequence mQueryHint -> mQueryHint
    boolean mQueryRefinement -> mQueryRefinement
    boolean mClearingFocus -> mClearingFocus
    int mMaxWidth -> mMaxWidth
    boolean mVoiceButtonEnabled -> mVoiceButtonEnabled
    java.lang.CharSequence mOldQueryText -> mOldQueryText
    java.lang.CharSequence mUserQuery -> mUserQuery
    boolean mExpandedInActionView -> mExpandedInActionView
    int mCollapsedImeOptions -> mCollapsedImeOptions
    android.app.SearchableInfo mSearchable -> mSearchable
    android.os.Bundle mAppSearchData -> mAppSearchData
    java.lang.Runnable mShowImeRunnable -> mShowImeRunnable
    java.lang.Runnable mUpdateDrawableStateRunnable -> mUpdateDrawableStateRunnable
    java.lang.Runnable mReleaseCursorRunnable -> mReleaseCursorRunnable
    android.content.Intent mVoiceWebSearchIntent -> mVoiceWebSearchIntent
    android.content.Intent mVoiceAppSearchIntent -> mVoiceAppSearchIntent
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    android.view.View$OnKeyListener mTextKeyListener -> mTextKeyListener
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> mOnEditorActionListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.text.TextWatcher mTextWatcher -> mTextWatcher
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    boolean isIconfiedByDefault() -> isIconfiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> isIconified
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> updateViewsVisibility
    boolean hasVoiceSearch() -> hasVoiceSearch
    boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    void updateSubmitButton(boolean) -> updateSubmitButton
    void updateSubmitArea() -> updateSubmitArea
    void updateCloseButton() -> updateCloseButton
    void postUpdateFocusedState() -> postUpdateFocusedState
    void updateFocusedState() -> updateFocusedState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    void updateQueryHint() -> updateQueryHint
    void updateSearchAutoComplete() -> updateSearchAutoComplete
    void updateVoiceButton(boolean) -> updateVoiceButton
    void onTextChanged(java.lang.CharSequence) -> onTextChanged
    void onSubmitQuery() -> onSubmitQuery
    void dismissSuggestions() -> dismissSuggestions
    void onCloseClicked() -> onCloseClicked
    void onSearchClicked() -> onSearchClicked
    void onVoiceClicked() -> onVoiceClicked
    void onTextFocusChanged() -> onTextFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    boolean onItemSelected(int) -> onItemSelected
    void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    void launchIntent(android.content.Intent) -> launchIntent
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    void forceSuggestionQuery() -> forceSuggestionQuery
    boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
    void showSoftInputUnchecked(android.view.View,android.view.inputmethod.InputMethodManager,int) -> showSoftInputUnchecked
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> setText
    void access$0(android.view.View,android.view.inputmethod.InputMethodManager,int) -> access$0
    void access$1(com.actionbarsherlock.widget.SearchView) -> access$1
    android.support.v4.widget.CursorAdapter access$2(com.actionbarsherlock.widget.SearchView) -> access$2
    android.view.View access$3(com.actionbarsherlock.widget.SearchView) -> access$3
    void access$4(com.actionbarsherlock.widget.SearchView) -> access$4
    android.widget.ImageView access$5(com.actionbarsherlock.widget.SearchView) -> access$5
    void access$6(com.actionbarsherlock.widget.SearchView) -> access$6
    android.view.View access$7(com.actionbarsherlock.widget.SearchView) -> access$7
    void access$8(com.actionbarsherlock.widget.SearchView) -> access$8
    android.view.View access$9(com.actionbarsherlock.widget.SearchView) -> access$9
    void access$10(com.actionbarsherlock.widget.SearchView) -> access$10
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete access$11(com.actionbarsherlock.widget.SearchView) -> access$11
    void access$12(com.actionbarsherlock.widget.SearchView) -> access$12
    android.app.SearchableInfo access$13(com.actionbarsherlock.widget.SearchView) -> access$13
    boolean access$14(com.actionbarsherlock.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> access$14
    void access$15(com.actionbarsherlock.widget.SearchView,int,java.lang.String,java.lang.String) -> access$15
    boolean access$16(com.actionbarsherlock.widget.SearchView,int,int,java.lang.String) -> access$16
    boolean access$17(com.actionbarsherlock.widget.SearchView,int) -> access$17
    void access$18(com.actionbarsherlock.widget.SearchView,java.lang.CharSequence) -> access$18
    void access$19(android.widget.AutoCompleteTextView,boolean) -> access$19
    void access$20(com.actionbarsherlock.widget.SearchView,boolean) -> access$20
    android.view.View$OnFocusChangeListener access$21(com.actionbarsherlock.widget.SearchView) -> access$21
    void access$22(com.actionbarsherlock.widget.SearchView) -> access$22
com.actionbarsherlock.widget.SearchView$1 -> com.actionbarsherlock.widget.SearchView$1:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$10 -> com.actionbarsherlock.widget.SearchView$10:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.actionbarsherlock.widget.SearchView$11 -> com.actionbarsherlock.widget.SearchView$11:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.actionbarsherlock.widget.SearchView$12 -> com.actionbarsherlock.widget.SearchView$12:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.SearchView$2 -> com.actionbarsherlock.widget.SearchView$2:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$3 -> com.actionbarsherlock.widget.SearchView$3:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$4 -> com.actionbarsherlock.widget.SearchView$4:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.widget.SearchView$5 -> com.actionbarsherlock.widget.SearchView$5:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.actionbarsherlock.widget.SearchView$6 -> com.actionbarsherlock.widget.SearchView$6:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.actionbarsherlock.widget.SearchView$7 -> com.actionbarsherlock.widget.SearchView$7:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.widget.SearchView$8 -> com.actionbarsherlock.widget.SearchView$8:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.widget.SearchView$9 -> com.actionbarsherlock.widget.SearchView$9:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.actionbarsherlock.widget.SearchView$OnCloseListener -> com.actionbarsherlock.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> com.actionbarsherlock.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> com.actionbarsherlock.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> mThreshold
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> isEmpty
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$0(com.actionbarsherlock.widget.SearchView$SearchAutoComplete) -> access$0
com.actionbarsherlock.widget.ShareActionProvider -> com.actionbarsherlock.widget.ShareActionProvider:
    int DEFAULT_INITIAL_ACTIVITY_COUNT -> DEFAULT_INITIAL_ACTIVITY_COUNT
    int mMaxShownActivityCount -> mMaxShownActivityCount
    com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> DEFAULT_SHARE_HISTORY_FILE_NAME
    android.content.Context mContext -> mContext
    java.lang.String mShareHistoryFileName -> mShareHistoryFileName
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> mOnShareTargetSelectedListener
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> mOnChooseActivityListener
    void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    void setShareIntent(android.content.Intent) -> setShareIntent
    void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider) -> access$0
    java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider) -> access$1
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider) -> access$2
com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener -> com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener:
    boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy -> com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.widget.SuggestionsAdapter -> com.actionbarsherlock.widget.SuggestionsAdapter:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    int QUERY_LIMIT -> QUERY_LIMIT
    int REFINE_NONE -> REFINE_NONE
    int REFINE_BY_ENTRY -> REFINE_BY_ENTRY
    int REFINE_ALL -> REFINE_ALL
    android.app.SearchManager mSearchManager -> mSearchManager
    android.app.SearchableInfo mSearchable -> mSearchable
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    android.content.Context mProviderContext -> mProviderContext
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    boolean mClosed -> mClosed
    int mQueryRefinement -> mQueryRefinement
    android.content.res.ColorStateList mUrlColor -> mUrlColor
    int INVALID_INDEX -> INVALID_INDEX
    int mText1Col -> mText1Col
    int mText2Col -> mText2Col
    int mText2UrlCol -> mText2UrlCol
    int mIconName1Col -> mIconName1Col
    int mIconName2Col -> mIconName2Col
    int mFlagsCol -> mFlagsCol
    void setQueryRefinement(int) -> setQueryRefinement
    int getQueryRefinement() -> getQueryRefinement
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getSuggestions(java.lang.String,int) -> getSuggestions
    void close() -> close
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> getTheDrawable
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache:
    android.widget.TextView mText1 -> mText1
    android.widget.TextView mText2 -> mText2
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.ImageView mIconRefine -> mIconRefine
com.fasterxml.jackson.core.Base64Variant -> com.fasterxml.jackson.core.Base64Variant:
    long serialVersionUID -> serialVersionUID
    int BASE64_VALUE_INVALID -> BASE64_VALUE_INVALID
    int BASE64_VALUE_PADDING -> BASE64_VALUE_PADDING
    int[] _asciiToBase64 -> a
    char[] _base64ToAsciiC -> b
    byte[] _base64ToAsciiB -> c
    java.lang.String _name -> _name
    boolean _usesPadding -> _usesPadding
    char _paddingChar -> _paddingChar
    int _maxLineLength -> _maxLineLength
    java.lang.Object readResolve() -> readResolve
    java.lang.String getName() -> getName
    boolean usesPadding() -> usesPadding
    boolean usesPaddingChar(char) -> usesPaddingChar
    boolean usesPaddingChar(int) -> usesPaddingChar
    char getPaddingChar() -> getPaddingChar
    byte getPaddingByte() -> getPaddingByte
    int getMaxLineLength() -> getMaxLineLength
    int decodeBase64Char(char) -> decodeBase64Char
    int decodeBase64Char(int) -> decodeBase64Char
    int decodeBase64Byte(byte) -> decodeBase64Byte
    char encodeBase64BitsAsChar(int) -> encodeBase64BitsAsChar
    int encodeBase64Chunk(int,char[],int) -> encodeBase64Chunk
    void encodeBase64Chunk(java.lang.StringBuilder,int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,char[],int) -> encodeBase64Partial
    void encodeBase64Partial(java.lang.StringBuilder,int,int) -> encodeBase64Partial
    byte encodeBase64BitsAsByte(int) -> encodeBase64BitsAsByte
    int encodeBase64Chunk(int,byte[],int) -> encodeBase64Chunk
    int encodeBase64Partial(int,int,byte[],int) -> encodeBase64Partial
    java.lang.String encode(byte[]) -> encode
    java.lang.String encode(byte[],boolean) -> encode
    java.lang.String toString() -> toString
com.fasterxml.jackson.core.Base64Variants -> com.fasterxml.jackson.core.Base64Variants:
    com.fasterxml.jackson.core.Base64Variant MIME -> MIME
    com.fasterxml.jackson.core.Base64Variant MIME_NO_LINEFEEDS -> MIME_NO_LINEFEEDS
    com.fasterxml.jackson.core.Base64Variant PEM -> PEM
    com.fasterxml.jackson.core.Base64Variant MODIFIED_FOR_URL -> MODIFIED_FOR_URL
    com.fasterxml.jackson.core.Base64Variant getDefaultVariant() -> getDefaultVariant
    com.fasterxml.jackson.core.Base64Variant valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.FormatSchema -> com.fasterxml.jackson.core.FormatSchema:
    java.lang.String getSchemaType() -> getSchemaType
com.fasterxml.jackson.core.JsonEncoding -> com.fasterxml.jackson.core.JsonEncoding:
    com.fasterxml.jackson.core.JsonEncoding UTF8 -> UTF8
    com.fasterxml.jackson.core.JsonEncoding UTF16_BE -> UTF16_BE
    com.fasterxml.jackson.core.JsonEncoding UTF16_LE -> UTF16_LE
    com.fasterxml.jackson.core.JsonEncoding UTF32_BE -> UTF32_BE
    com.fasterxml.jackson.core.JsonEncoding UTF32_LE -> UTF32_LE
    java.lang.String _javaName -> _javaName
    boolean _bigEndian -> _bigEndian
    com.fasterxml.jackson.core.JsonEncoding[] $VALUES -> a
    com.fasterxml.jackson.core.JsonEncoding[] values() -> values
    com.fasterxml.jackson.core.JsonEncoding valueOf(java.lang.String) -> valueOf
    java.lang.String getJavaName() -> getJavaName
    boolean isBigEndian() -> isBigEndian
com.fasterxml.jackson.core.JsonFactory -> com.fasterxml.jackson.core.JsonFactory:
    long serialVersionUID -> serialVersionUID
    java.lang.String FORMAT_NAME_JSON -> FORMAT_NAME_JSON
    int DEFAULT_FACTORY_FEATURE_FLAGS -> DEFAULT_FACTORY_FEATURE_FLAGS
    int DEFAULT_PARSER_FEATURE_FLAGS -> DEFAULT_PARSER_FEATURE_FLAGS
    int DEFAULT_GENERATOR_FEATURE_FLAGS -> DEFAULT_GENERATOR_FEATURE_FLAGS
    com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR -> a
    java.lang.ThreadLocal _recyclerRef -> _recyclerRef
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols -> _rootCharSymbols
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _rootByteSymbols -> _rootByteSymbols
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    int _factoryFeatures -> _factoryFeatures
    int _parserFeatures -> _parserFeatures
    int _generatorFeatures -> _generatorFeatures
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.io.InputDecorator _inputDecorator -> _inputDecorator
    com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator -> _outputDecorator
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    com.fasterxml.jackson.core.JsonFactory copy() -> copy
    void _checkInvalidCopy(java.lang.Class) -> _checkInvalidCopy
    java.lang.Object readResolve() -> readResolve
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    java.lang.String getFormatName() -> getFormatName
    com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasFormat
    boolean requiresCustomCodec() -> requiresCustomCodec
    com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonFactory$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonFactory$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonFactory$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.core.io.InputDecorator getInputDecorator() -> getInputDecorator
    com.fasterxml.jackson.core.JsonFactory setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator) -> setInputDecorator
    com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonFactory setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    com.fasterxml.jackson.core.io.OutputDecorator getOutputDecorator() -> getOutputDecorator
    com.fasterxml.jackson.core.JsonFactory setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator) -> setOutputDecorator
    com.fasterxml.jackson.core.JsonFactory setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    java.lang.String getRootValueSeparator() -> getRootValueSeparator
    com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonParser createParser(java.io.File) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[]) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int) -> createParser
    com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) -> createParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.File) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.net.URL) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(byte[]) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(byte[],int,int) -> createJsonParser
    com.fasterxml.jackson.core.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding) -> createJsonGenerator
    com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createJsonParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext) -> _createJsonParser
    com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createJsonParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext) -> _createJsonParser
    com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext) -> _createParser
    com.fasterxml.jackson.core.JsonParser _createJsonParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext) -> _createJsonParser
    com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _createGenerator
    com.fasterxml.jackson.core.JsonGenerator _createJsonGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext) -> _createJsonGenerator
    com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _createUTF8Generator
    com.fasterxml.jackson.core.JsonGenerator _createUTF8JsonGenerator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext) -> _createUTF8JsonGenerator
    java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext) -> _createWriter
    com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object,boolean) -> _createContext
    com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler() -> _getBufferRecycler
    java.io.InputStream _optimizedStreamFromURL(java.net.URL) -> _optimizedStreamFromURL
com.fasterxml.jackson.core.JsonFactory$Feature -> com.fasterxml.jackson.core.JsonFactory$Feature:
    com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES -> INTERN_FIELD_NAMES
    com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES -> CANONICALIZE_FIELD_NAMES
    boolean _defaultState -> a
    com.fasterxml.jackson.core.JsonFactory$Feature[] $VALUES -> b
    com.fasterxml.jackson.core.JsonFactory$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonFactory$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    boolean enabledIn(int) -> enabledIn
    int getMask() -> getMask
com.fasterxml.jackson.core.JsonGenerationException -> com.fasterxml.jackson.core.JsonGenerationException:
    long serialVersionUID -> serialVersionUID
com.fasterxml.jackson.core.JsonGenerator -> com.fasterxml.jackson.core.JsonGenerator:
    com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter -> _cfgPrettyPrinter
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    com.fasterxml.jackson.core.JsonGenerator configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean) -> configure
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setPrettyPrinter
    com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> getPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    void writeBinary(byte[],int,int) -> writeBinary
    void writeBinary(byte[]) -> writeBinary
    int writeBinary(java.io.InputStream,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
    void writeBooleanField(java.lang.String,boolean) -> writeBooleanField
    void writeNullField(java.lang.String) -> writeNullField
    void writeNumberField(java.lang.String,int) -> writeNumberField
    void writeNumberField(java.lang.String,long) -> writeNumberField
    void writeNumberField(java.lang.String,double) -> writeNumberField
    void writeNumberField(java.lang.String,float) -> writeNumberField
    void writeNumberField(java.lang.String,java.math.BigDecimal) -> writeNumberField
    void writeBinaryField(java.lang.String,byte[]) -> writeBinaryField
    void writeArrayFieldStart(java.lang.String) -> writeArrayFieldStart
    void writeObjectFieldStart(java.lang.String) -> writeObjectFieldStart
    void writeObjectField(java.lang.String,java.lang.Object) -> writeObjectField
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    boolean isClosed() -> isClosed
    void close() -> close
com.fasterxml.jackson.core.JsonGenerator$Feature -> com.fasterxml.jackson.core.JsonGenerator$Feature:
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET -> AUTO_CLOSE_TARGET
    com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT -> AUTO_CLOSE_JSON_CONTENT
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES -> QUOTE_FIELD_NAMES
    com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS -> QUOTE_NON_NUMERIC_NUMBERS
    com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS -> WRITE_NUMBERS_AS_STRINGS
    com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM -> FLUSH_PASSED_TO_STREAM
    com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII -> ESCAPE_NON_ASCII
    boolean _defaultState -> a
    int _mask -> b
    com.fasterxml.jackson.core.JsonGenerator$Feature[] $VALUES -> c
    com.fasterxml.jackson.core.JsonGenerator$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonGenerator$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.core.JsonLocation -> com.fasterxml.jackson.core.JsonLocation:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonLocation NA -> NA
    long _totalBytes -> a
    long _totalChars -> b
    int _lineNr -> c
    int _columnNr -> d
    java.lang.Object _sourceRef -> e
    java.lang.Object getSourceRef() -> getSourceRef
    int getLineNr() -> getLineNr
    int getColumnNr() -> getColumnNr
    long getCharOffset() -> getCharOffset
    long getByteOffset() -> getByteOffset
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.JsonParseException -> com.fasterxml.jackson.core.JsonParseException:
    long serialVersionUID -> serialVersionUID
com.fasterxml.jackson.core.JsonParser -> com.fasterxml.jackson.core.JsonParser:
    int _features -> _features
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    java.lang.Object getInputSource() -> getInputSource
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    boolean requiresCustomCodec() -> requiresCustomCodec
    com.fasterxml.jackson.core.Version version() -> version
    void close() -> close
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    com.fasterxml.jackson.core.JsonParser configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean) -> configure
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean isExpectedStartArrayToken() -> isExpectedStartArrayToken
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    boolean hasTextCharacters() -> hasTextCharacters
    java.lang.Number getNumberValue() -> getNumberValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    boolean getBooleanValue() -> getBooleanValue
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    byte[] getBinaryValue() -> getBinaryValue
    int readBinaryValue(java.io.OutputStream) -> readBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.Object readValueAs(java.lang.Class) -> readValueAs
    java.lang.Object readValueAs(com.fasterxml.jackson.core.type.TypeReference) -> readValueAs
    java.util.Iterator readValuesAs(java.lang.Class) -> readValuesAs
    java.util.Iterator readValuesAs(com.fasterxml.jackson.core.type.TypeReference) -> readValuesAs
    com.fasterxml.jackson.core.TreeNode readValueAsTree() -> readValueAsTree
    com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String) -> _constructError
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
com.fasterxml.jackson.core.JsonParser$1 -> aG:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.core.JsonParser$Feature -> com.fasterxml.jackson.core.JsonParser$Feature:
    com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE -> AUTO_CLOSE_SOURCE
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_COMMENTS -> ALLOW_COMMENTS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_FIELD_NAMES -> ALLOW_UNQUOTED_FIELD_NAMES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_SINGLE_QUOTES -> ALLOW_SINGLE_QUOTES
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_UNQUOTED_CONTROL_CHARS -> ALLOW_UNQUOTED_CONTROL_CHARS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER -> ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NUMERIC_LEADING_ZEROS -> ALLOW_NUMERIC_LEADING_ZEROS
    com.fasterxml.jackson.core.JsonParser$Feature ALLOW_NON_NUMERIC_NUMBERS -> ALLOW_NON_NUMERIC_NUMBERS
    boolean _defaultState -> a
    com.fasterxml.jackson.core.JsonParser$Feature[] $VALUES -> b
    com.fasterxml.jackson.core.JsonParser$Feature[] values() -> values
    com.fasterxml.jackson.core.JsonParser$Feature valueOf(java.lang.String) -> valueOf
    int collectDefaults() -> collectDefaults
    boolean enabledByDefault() -> enabledByDefault
    int getMask() -> getMask
com.fasterxml.jackson.core.JsonParser$NumberType -> com.fasterxml.jackson.core.JsonParser$NumberType:
    com.fasterxml.jackson.core.JsonParser$NumberType INT -> INT
    com.fasterxml.jackson.core.JsonParser$NumberType LONG -> LONG
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_INTEGER -> BIG_INTEGER
    com.fasterxml.jackson.core.JsonParser$NumberType FLOAT -> FLOAT
    com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE -> DOUBLE
    com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL -> BIG_DECIMAL
    com.fasterxml.jackson.core.JsonParser$NumberType[] $VALUES -> a
    com.fasterxml.jackson.core.JsonParser$NumberType[] values() -> values
    com.fasterxml.jackson.core.JsonParser$NumberType valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.JsonProcessingException -> com.fasterxml.jackson.core.JsonProcessingException:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.JsonLocation _location -> _location
    com.fasterxml.jackson.core.JsonLocation getLocation() -> getLocation
    java.lang.String getOriginalMessage() -> getOriginalMessage
    java.lang.String getMessageSuffix() -> getMessageSuffix
    java.lang.String getMessage() -> getMessage
    java.lang.String toString() -> toString
com.fasterxml.jackson.core.JsonStreamContext -> com.fasterxml.jackson.core.JsonStreamContext:
    int TYPE_ROOT -> TYPE_ROOT
    int TYPE_ARRAY -> TYPE_ARRAY
    int TYPE_OBJECT -> TYPE_OBJECT
    int _type -> _type
    int _index -> _index
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
    boolean inArray() -> inArray
    boolean inRoot() -> inRoot
    boolean inObject() -> inObject
    java.lang.String getTypeDesc() -> getTypeDesc
    int getEntryCount() -> getEntryCount
    int getCurrentIndex() -> getCurrentIndex
    java.lang.String getCurrentName() -> getCurrentName
com.fasterxml.jackson.core.JsonToken -> com.fasterxml.jackson.core.JsonToken:
    com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    com.fasterxml.jackson.core.JsonToken START_OBJECT -> START_OBJECT
    com.fasterxml.jackson.core.JsonToken END_OBJECT -> END_OBJECT
    com.fasterxml.jackson.core.JsonToken START_ARRAY -> START_ARRAY
    com.fasterxml.jackson.core.JsonToken END_ARRAY -> END_ARRAY
    com.fasterxml.jackson.core.JsonToken FIELD_NAME -> FIELD_NAME
    com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT -> VALUE_EMBEDDED_OBJECT
    com.fasterxml.jackson.core.JsonToken VALUE_STRING -> VALUE_STRING
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    com.fasterxml.jackson.core.JsonToken VALUE_TRUE -> VALUE_TRUE
    com.fasterxml.jackson.core.JsonToken VALUE_FALSE -> VALUE_FALSE
    com.fasterxml.jackson.core.JsonToken VALUE_NULL -> VALUE_NULL
    java.lang.String _serialized -> a
    char[] _serializedChars -> b
    byte[] _serializedBytes -> c
    com.fasterxml.jackson.core.JsonToken[] $VALUES -> d
    com.fasterxml.jackson.core.JsonToken[] values() -> values
    com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String) -> valueOf
    java.lang.String asString() -> asString
    char[] asCharArray() -> asCharArray
    byte[] asByteArray() -> asByteArray
    boolean isNumeric() -> isNumeric
    boolean isScalarValue() -> isScalarValue
com.fasterxml.jackson.core.ObjectCodec -> com.fasterxml.jackson.core.ObjectCodec:
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValue
    java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValue
    com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) -> readTree
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,java.lang.Class) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.TypeReference) -> readValues
    java.util.Iterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.type.ResolvedType) -> readValues
    void writeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object) -> writeValue
    com.fasterxml.jackson.core.TreeNode createObjectNode() -> createObjectNode
    com.fasterxml.jackson.core.TreeNode createArrayNode() -> createArrayNode
    com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode) -> treeAsTokens
    java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode,java.lang.Class) -> treeToValue
    com.fasterxml.jackson.core.JsonFactory getJsonFactory() -> getJsonFactory
    com.fasterxml.jackson.core.JsonFactory getFactory() -> getFactory
com.fasterxml.jackson.core.PrettyPrinter -> com.fasterxml.jackson.core.PrettyPrinter:
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
com.fasterxml.jackson.core.SerializableString -> com.fasterxml.jackson.core.SerializableString:
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    int appendQuoted(char[],int) -> appendQuoted
    int appendUnquotedUTF8(byte[],int) -> appendUnquotedUTF8
    int appendUnquoted(char[],int) -> appendUnquoted
    int writeQuotedUTF8(java.io.OutputStream) -> writeQuotedUTF8
    int writeUnquotedUTF8(java.io.OutputStream) -> writeUnquotedUTF8
    int putQuotedUTF8(java.nio.ByteBuffer) -> putQuotedUTF8
    int putUnquotedUTF8(java.nio.ByteBuffer) -> putUnquotedUTF8
com.fasterxml.jackson.core.TreeNode -> com.fasterxml.jackson.core.TreeNode:
    com.fasterxml.jackson.core.JsonToken asToken() -> asToken
    com.fasterxml.jackson.core.JsonParser$NumberType numberType() -> numberType
    com.fasterxml.jackson.core.JsonParser traverse() -> traverse
com.fasterxml.jackson.core.Version -> com.fasterxml.jackson.core.Version:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.Version UNKNOWN_VERSION -> a
    int _majorVersion -> _majorVersion
    int _minorVersion -> _minorVersion
    int _patchLevel -> _patchLevel
    java.lang.String _groupId -> _groupId
    java.lang.String _artifactId -> _artifactId
    java.lang.String _snapshotInfo -> _snapshotInfo
    com.fasterxml.jackson.core.Version unknownVersion() -> unknownVersion
    boolean isUknownVersion() -> isUknownVersion
    boolean isSnapshot() -> isSnapshot
    int getMajorVersion() -> getMajorVersion
    int getMinorVersion() -> getMinorVersion
    int getPatchLevel() -> getPatchLevel
    java.lang.String getGroupId() -> getGroupId
    java.lang.String getArtifactId() -> getArtifactId
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.fasterxml.jackson.core.Version) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.core.Versioned -> com.fasterxml.jackson.core.Versioned:
    com.fasterxml.jackson.core.Version version() -> version
com.fasterxml.jackson.core.base.GeneratorBase -> com.fasterxml.jackson.core.base.GeneratorBase:
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    int _features -> _features
    boolean _cfgNumbersAsStrings -> _cfgNumbersAsStrings
    com.fasterxml.jackson.core.json.JsonWriteContext _writeContext -> _writeContext
    boolean _closed -> _closed
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.json.JsonWriteContext getOutputContext() -> getOutputContext
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    void _releaseBuffers() -> _releaseBuffers
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _reportError(java.lang.String) -> _reportError
    void _cantHappen() -> _cantHappen
    void _writeSimpleObject(java.lang.Object) -> _writeSimpleObject
    void _throwInternal() -> _throwInternal
    void _reportUnsupportedOperation() -> _reportUnsupportedOperation
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
com.fasterxml.jackson.core.base.GeneratorBase$1 -> aH:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonParser$NumberType -> a
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> b
com.fasterxml.jackson.core.base.ParserBase -> com.fasterxml.jackson.core.base.ParserBase:
    com.fasterxml.jackson.core.io.IOContext _ioContext -> _ioContext
    boolean _closed -> _closed
    int _inputPtr -> _inputPtr
    int _inputEnd -> _inputEnd
    long _currInputProcessed -> _currInputProcessed
    int _currInputRow -> _currInputRow
    int _currInputRowStart -> _currInputRowStart
    long _tokenInputTotal -> _tokenInputTotal
    int _tokenInputRow -> _tokenInputRow
    int _tokenInputCol -> _tokenInputCol
    com.fasterxml.jackson.core.json.JsonReadContext _parsingContext -> _parsingContext
    com.fasterxml.jackson.core.JsonToken _nextToken -> _nextToken
    com.fasterxml.jackson.core.util.TextBuffer _textBuffer -> _textBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    boolean _nameCopied -> _nameCopied
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteArrayBuilder -> _byteArrayBuilder
    byte[] _binaryValue -> _binaryValue
    int NR_UNKNOWN -> NR_UNKNOWN
    int NR_INT -> NR_INT
    int NR_LONG -> NR_LONG
    int NR_BIGINT -> NR_BIGINT
    int NR_DOUBLE -> NR_DOUBLE
    int NR_BIGDECIMAL -> NR_BIGDECIMAL
    java.math.BigInteger BI_MIN_INT -> a
    java.math.BigInteger BI_MAX_INT -> b
    java.math.BigInteger BI_MIN_LONG -> c
    java.math.BigInteger BI_MAX_LONG -> d
    java.math.BigDecimal BD_MIN_LONG -> e
    java.math.BigDecimal BD_MAX_LONG -> f
    java.math.BigDecimal BD_MIN_INT -> g
    java.math.BigDecimal BD_MAX_INT -> h
    int INT_0 -> INT_0
    int INT_1 -> INT_1
    int INT_2 -> INT_2
    int INT_3 -> INT_3
    int INT_4 -> INT_4
    int INT_5 -> INT_5
    int INT_6 -> INT_6
    int INT_7 -> INT_7
    int INT_8 -> INT_8
    int INT_9 -> INT_9
    int INT_MINUS -> INT_MINUS
    int INT_PLUS -> INT_PLUS
    int INT_DECIMAL_POINT -> INT_DECIMAL_POINT
    int INT_e -> INT_e
    int INT_E -> INT_E
    char CHAR_NULL -> CHAR_NULL
    int _numTypesValid -> _numTypesValid
    int _numberInt -> _numberInt
    long _numberLong -> _numberLong
    double _numberDouble -> _numberDouble
    java.math.BigInteger _numberBigInt -> _numberBigInt
    java.math.BigDecimal _numberBigDecimal -> _numberBigDecimal
    boolean _numberNegative -> _numberNegative
    int _intLength -> _intLength
    int _fractLength -> _fractLength
    int _expLength -> _expLength
    java.lang.String getCurrentName() -> getCurrentName
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.json.JsonReadContext getParsingContext() -> getParsingContext
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    boolean hasTextCharacters() -> hasTextCharacters
    long getTokenCharacterOffset() -> getTokenCharacterOffset
    int getTokenLineNr() -> getTokenLineNr
    int getTokenColumnNr() -> getTokenColumnNr
    void loadMoreGuaranteed() -> loadMoreGuaranteed
    boolean loadMore() -> loadMore
    void _finishString() -> _finishString
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    void _handleEOF() -> _handleEOF
    void _reportMismatchedEndMarker(int,char) -> _reportMismatchedEndMarker
    com.fasterxml.jackson.core.util.ByteArrayBuilder _getByteArrayBuilder() -> _getByteArrayBuilder
    com.fasterxml.jackson.core.JsonToken reset(boolean,int,int,int) -> reset
    com.fasterxml.jackson.core.JsonToken resetInt(boolean,int) -> resetInt
    com.fasterxml.jackson.core.JsonToken resetFloat(boolean,int,int,int) -> resetFloat
    com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String,double) -> resetAsNaN
    java.lang.Number getNumberValue() -> getNumberValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    float getFloatValue() -> getFloatValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    void _parseNumericValue(int) -> _parseNumericValue
    void convertNumberToInt() -> convertNumberToInt
    void convertNumberToLong() -> convertNumberToLong
    void convertNumberToBigInteger() -> convertNumberToBigInteger
    void convertNumberToDouble() -> convertNumberToDouble
    void convertNumberToBigDecimal() -> convertNumberToBigDecimal
    void reportUnexpectedNumberChar(int,java.lang.String) -> reportUnexpectedNumberChar
    void reportInvalidNumber(java.lang.String) -> reportInvalidNumber
    void reportOverflowInt() -> reportOverflowInt
    void reportOverflowLong() -> reportOverflowLong
    char _decodeEscaped() -> _decodeEscaped
    int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,int,int) -> _decodeBase64Escape
    int _decodeBase64Escape(com.fasterxml.jackson.core.Base64Variant,char,int) -> _decodeBase64Escape
    java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int) -> reportInvalidBase64Char
    java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant,int,int,java.lang.String) -> reportInvalidBase64Char
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
com.fasterxml.jackson.core.base.ParserMinimalBase -> com.fasterxml.jackson.core.base.ParserMinimalBase:
    int INT_TAB -> INT_TAB
    int INT_LF -> INT_LF
    int INT_CR -> INT_CR
    int INT_SPACE -> INT_SPACE
    int INT_LBRACKET -> INT_LBRACKET
    int INT_RBRACKET -> INT_RBRACKET
    int INT_LCURLY -> INT_LCURLY
    int INT_RCURLY -> INT_RCURLY
    int INT_QUOTE -> INT_QUOTE
    int INT_BACKSLASH -> INT_BACKSLASH
    int INT_SLASH -> INT_SLASH
    int INT_COLON -> INT_COLON
    int INT_COMMA -> INT_COMMA
    int INT_ASTERISK -> INT_ASTERISK
    int INT_APOSTROPHE -> INT_APOSTROPHE
    int INT_b -> INT_b
    int INT_f -> INT_f
    int INT_n -> INT_n
    int INT_r -> INT_r
    int INT_t -> INT_t
    int INT_u -> INT_u
    com.fasterxml.jackson.core.JsonToken _currToken -> _currToken
    com.fasterxml.jackson.core.JsonToken _lastClearedToken -> _lastClearedToken
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
    void _handleEOF() -> _handleEOF
    java.lang.String getCurrentName() -> getCurrentName
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    char[] getTextCharacters() -> getTextCharacters
    boolean hasTextCharacters() -> hasTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble(double) -> getValueAsDouble
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    void _decodeBase64(java.lang.String,com.fasterxml.jackson.core.util.ByteArrayBuilder,com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    void _reportInvalidBase64(com.fasterxml.jackson.core.Base64Variant,char,int,java.lang.String) -> _reportInvalidBase64
    void _reportBase64EOF() -> _reportBase64EOF
    void _reportUnexpectedChar(int,java.lang.String) -> _reportUnexpectedChar
    void _reportInvalidEOF() -> _reportInvalidEOF
    void _reportInvalidEOF(java.lang.String) -> _reportInvalidEOF
    void _reportInvalidEOFInValue() -> _reportInvalidEOFInValue
    void _throwInvalidSpace(int) -> _throwInvalidSpace
    void _throwUnquotedSpace(int,java.lang.String) -> _throwUnquotedSpace
    char _handleUnrecognizedCharacterEscape(char) -> _handleUnrecognizedCharacterEscape
    java.lang.String _getCharDesc(int) -> _getCharDesc
    void _reportError(java.lang.String) -> _reportError
    void _wrapError(java.lang.String,java.lang.Throwable) -> _wrapError
    void _throwInternal() -> _throwInternal
    com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String,java.lang.Throwable) -> _constructError
com.fasterxml.jackson.core.base.ParserMinimalBase$1 -> aI:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.core.format.DataFormatDetector -> com.fasterxml.jackson.core.format.DataFormatDetector:
    int DEFAULT_MAX_INPUT_LOOKAHEAD -> DEFAULT_MAX_INPUT_LOOKAHEAD
    com.fasterxml.jackson.core.JsonFactory[] _detectors -> _detectors
    com.fasterxml.jackson.core.format.MatchStrength _optimalMatch -> _optimalMatch
    com.fasterxml.jackson.core.format.MatchStrength _minimalMatch -> _minimalMatch
    int _maxInputLookahead -> _maxInputLookahead
    com.fasterxml.jackson.core.format.DataFormatDetector withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withOptimalMatch
    com.fasterxml.jackson.core.format.DataFormatDetector withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength) -> withMinimalMatch
    com.fasterxml.jackson.core.format.DataFormatDetector withMaxInputLookahead(int) -> withMaxInputLookahead
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(java.io.InputStream) -> findFormat
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[]) -> findFormat
    com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[],int,int) -> findFormat
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.format.DataFormatMatcher _findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std) -> a
com.fasterxml.jackson.core.format.DataFormatMatcher -> com.fasterxml.jackson.core.format.DataFormatMatcher:
    java.io.InputStream _originalStream -> _originalStream
    byte[] _bufferedData -> _bufferedData
    int _bufferedStart -> _bufferedStart
    int _bufferedLength -> _bufferedLength
    com.fasterxml.jackson.core.JsonFactory _match -> _match
    com.fasterxml.jackson.core.format.MatchStrength _matchStrength -> _matchStrength
    boolean hasMatch() -> hasMatch
    com.fasterxml.jackson.core.format.MatchStrength getMatchStrength() -> getMatchStrength
    com.fasterxml.jackson.core.JsonFactory getMatch() -> getMatch
    java.lang.String getMatchedFormatName() -> getMatchedFormatName
    com.fasterxml.jackson.core.JsonParser createParserWithMatch() -> createParserWithMatch
    java.io.InputStream getDataStream() -> getDataStream
com.fasterxml.jackson.core.format.InputAccessor -> com.fasterxml.jackson.core.format.InputAccessor:
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
com.fasterxml.jackson.core.format.InputAccessor$Std -> com.fasterxml.jackson.core.format.InputAccessor$Std:
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _bufferedStart -> _bufferedStart
    int _bufferedEnd -> _bufferedEnd
    int _ptr -> _ptr
    boolean hasMoreBytes() -> hasMoreBytes
    byte nextByte() -> nextByte
    void reset() -> reset
    com.fasterxml.jackson.core.format.DataFormatMatcher createMatcher(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength) -> createMatcher
com.fasterxml.jackson.core.format.MatchStrength -> com.fasterxml.jackson.core.format.MatchStrength:
    com.fasterxml.jackson.core.format.MatchStrength NO_MATCH -> NO_MATCH
    com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE -> INCONCLUSIVE
    com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH -> WEAK_MATCH
    com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH -> SOLID_MATCH
    com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH -> FULL_MATCH
    com.fasterxml.jackson.core.format.MatchStrength[] $VALUES -> a
    com.fasterxml.jackson.core.format.MatchStrength[] values() -> values
    com.fasterxml.jackson.core.format.MatchStrength valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.io.BaseReader -> aJ:
    int LAST_VALID_UNICODE_CHAR -> LAST_VALID_UNICODE_CHAR
    char NULL_CHAR -> NULL_CHAR
    char NULL_BYTE -> NULL_BYTE
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _buffer -> _buffer
    int _ptr -> _ptr
    int _length -> _length
    char[] _tmpBuf -> _tmpBuf
    void close() -> close
    int read() -> read
    void freeBuffers() -> freeBuffers
    void reportBounds(char[],int,int) -> reportBounds
    void reportStrangeStream() -> reportStrangeStream
com.fasterxml.jackson.core.io.CharTypes -> com.fasterxml.jackson.core.io.CharTypes:
    char[] HEX_CHARS -> h
    byte[] HEX_BYTES -> i
    int[] sInputCodes -> a
    int[] sInputCodesUtf8 -> b
    int[] sInputCodesJsNames -> c
    int[] sInputCodesUtf8JsNames -> d
    int[] sInputCodesComment -> e
    int[] sOutputEscapes128 -> f
    int[] sHexValues -> g
    int[] getInputCodeLatin1() -> getInputCodeLatin1
    int[] getInputCodeUtf8() -> getInputCodeUtf8
    int[] getInputCodeLatin1JsNames() -> getInputCodeLatin1JsNames
    int[] getInputCodeUtf8JsNames() -> getInputCodeUtf8JsNames
    int[] getInputCodeComment() -> getInputCodeComment
    int[] get7BitOutputEscapes() -> get7BitOutputEscapes
    int charToHex(int) -> charToHex
    void appendQuoted(java.lang.StringBuilder,java.lang.String) -> appendQuoted
    char[] copyHexChars() -> copyHexChars
    byte[] copyHexBytes() -> copyHexBytes
com.fasterxml.jackson.core.io.CharacterEscapes -> com.fasterxml.jackson.core.io.CharacterEscapes:
    long serialVersionUID -> serialVersionUID
    int ESCAPE_NONE -> ESCAPE_NONE
    int ESCAPE_STANDARD -> ESCAPE_STANDARD
    int ESCAPE_CUSTOM -> ESCAPE_CUSTOM
    int[] getEscapeCodesForAscii() -> getEscapeCodesForAscii
    com.fasterxml.jackson.core.SerializableString getEscapeSequence(int) -> getEscapeSequence
    int[] standardAsciiEscapesForJSON() -> standardAsciiEscapesForJSON
com.fasterxml.jackson.core.io.IOContext -> com.fasterxml.jackson.core.io.IOContext:
    java.lang.Object _sourceRef -> _sourceRef
    com.fasterxml.jackson.core.JsonEncoding _encoding -> _encoding
    boolean _managedResource -> _managedResource
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> _bufferRecycler
    byte[] _readIOBuffer -> _readIOBuffer
    byte[] _writeEncodingBuffer -> _writeEncodingBuffer
    byte[] _base64Buffer -> _base64Buffer
    char[] _tokenCBuffer -> _tokenCBuffer
    char[] _concatCBuffer -> _concatCBuffer
    char[] _nameCopyBuffer -> _nameCopyBuffer
    void setEncoding(com.fasterxml.jackson.core.JsonEncoding) -> setEncoding
    java.lang.Object getSourceReference() -> getSourceReference
    com.fasterxml.jackson.core.JsonEncoding getEncoding() -> getEncoding
    boolean isResourceManaged() -> isResourceManaged
    com.fasterxml.jackson.core.util.TextBuffer constructTextBuffer() -> constructTextBuffer
    byte[] allocReadIOBuffer() -> allocReadIOBuffer
    byte[] allocWriteEncodingBuffer() -> allocWriteEncodingBuffer
    byte[] allocBase64Buffer() -> allocBase64Buffer
    char[] allocTokenBuffer() -> allocTokenBuffer
    char[] allocConcatBuffer() -> allocConcatBuffer
    char[] allocNameCopyBuffer(int) -> allocNameCopyBuffer
    void releaseReadIOBuffer(byte[]) -> releaseReadIOBuffer
    void releaseWriteEncodingBuffer(byte[]) -> releaseWriteEncodingBuffer
    void releaseBase64Buffer(byte[]) -> releaseBase64Buffer
    void releaseTokenBuffer(char[]) -> releaseTokenBuffer
    void releaseConcatBuffer(char[]) -> releaseConcatBuffer
    void releaseNameCopyBuffer(char[]) -> releaseNameCopyBuffer
com.fasterxml.jackson.core.io.InputDecorator -> com.fasterxml.jackson.core.io.InputDecorator:
    long serialVersionUID -> serialVersionUID
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream) -> decorate
    java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int) -> decorate
    java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader) -> decorate
com.fasterxml.jackson.core.io.JsonStringEncoder -> com.fasterxml.jackson.core.io.JsonStringEncoder:
    char[] HEX_CHARS -> a
    byte[] HEX_BYTES -> b
    java.lang.ThreadLocal _threadEncoder -> _threadEncoder
    com.fasterxml.jackson.core.util.TextBuffer _textBuffer -> _textBuffer
    com.fasterxml.jackson.core.util.ByteArrayBuilder _byteBuilder -> _byteBuilder
    char[] _quoteBuffer -> _quoteBuffer
    com.fasterxml.jackson.core.io.JsonStringEncoder getInstance() -> getInstance
    char[] quoteAsString(java.lang.String) -> quoteAsString
    byte[] quoteAsUTF8(java.lang.String) -> quoteAsUTF8
    byte[] encodeAsUTF8(java.lang.String) -> encodeAsUTF8
    int _convertSurrogate(int,int) -> a
    void _throwIllegalSurrogate(int) -> a
com.fasterxml.jackson.core.io.MergedStream -> com.fasterxml.jackson.core.io.MergedStream:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> a
    byte[] _buffer -> b
    int _ptr -> c
    int _end -> d
    int available() -> available
    void close() -> close
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
    void freeMergedBuffer() -> a
com.fasterxml.jackson.core.io.NumberInput -> com.fasterxml.jackson.core.io.NumberInput:
    java.lang.String NASTY_SMALL_DOUBLE -> NASTY_SMALL_DOUBLE
    java.lang.String MIN_LONG_STR_NO_SIGN -> a
    java.lang.String MAX_LONG_STR -> b
    int parseInt(char[],int,int) -> parseInt
    int parseInt(java.lang.String) -> parseInt
    long parseLong(char[],int,int) -> parseLong
    long parseLong(java.lang.String) -> parseLong
    boolean inLongRange(char[],int,int,boolean) -> inLongRange
    boolean inLongRange(java.lang.String,boolean) -> inLongRange
    int parseAsInt(java.lang.String,int) -> parseAsInt
    long parseAsLong(java.lang.String,long) -> parseAsLong
    double parseAsDouble(java.lang.String,double) -> parseAsDouble
    double parseDouble(java.lang.String) -> parseDouble
com.fasterxml.jackson.core.io.NumberOutput -> com.fasterxml.jackson.core.io.NumberOutput:
    int MILLION -> g
    int BILLION -> h
    long TEN_BILLION_L -> i
    long THOUSAND_L -> j
    long MIN_INT_AS_LONG -> k
    long MAX_INT_AS_LONG -> l
    java.lang.String SMALLEST_LONG -> a
    char[] LEADING_TRIPLETS -> b
    char[] FULL_TRIPLETS -> c
    byte[] FULL_TRIPLETS_B -> d
    java.lang.String[] sSmallIntStrs -> e
    java.lang.String[] sSmallIntStrs2 -> f
    int outputInt(int,char[],int) -> outputInt
    int outputInt(int,byte[],int) -> outputInt
    int outputLong(long,char[],int) -> outputLong
    int outputLong(long,byte[],int) -> outputLong
    java.lang.String toString(int) -> toString
    java.lang.String toString(long) -> toString
    java.lang.String toString(double) -> toString
    int outputLeadingTriplet(int,char[],int) -> a
    int outputLeadingTriplet(int,byte[],int) -> a
    int outputFullTriplet(int,char[],int) -> b
    int outputFullTriplet(int,byte[],int) -> b
    int calcLongStrLength(long) -> a
com.fasterxml.jackson.core.io.OutputDecorator -> com.fasterxml.jackson.core.io.OutputDecorator:
    long serialVersionUID -> serialVersionUID
    java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream) -> decorate
    java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer) -> decorate
com.fasterxml.jackson.core.io.SegmentedStringWriter -> com.fasterxml.jackson.core.io.SegmentedStringWriter:
    com.fasterxml.jackson.core.util.TextBuffer _buffer -> _buffer
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.lang.String getAndClear() -> getAndClear
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.fasterxml.jackson.core.io.SerializedString -> com.fasterxml.jackson.core.io.SerializedString:
    java.lang.String _value -> _value
    byte[] _quotedUTF8Ref -> _quotedUTF8Ref
    byte[] _unquotedUTF8Ref -> _unquotedUTF8Ref
    char[] _quotedChars -> _quotedChars
    java.lang.String _jdkSerializeValue -> _jdkSerializeValue
    void readObject(java.io.ObjectInputStream) -> readObject
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    java.lang.Object readResolve() -> readResolve
    java.lang.String getValue() -> getValue
    int charLength() -> charLength
    char[] asQuotedChars() -> asQuotedChars
    byte[] asUnquotedUTF8() -> asUnquotedUTF8
    byte[] asQuotedUTF8() -> asQuotedUTF8
    int appendQuotedUTF8(byte[],int) -> appendQuotedUTF8
    int appendQuoted(char[],int) -> appendQuoted
    int appendUnquotedUTF8(byte[],int) -> appendUnquotedUTF8
    int appendUnquoted(char[],int) -> appendUnquoted
    int writeQuotedUTF8(java.io.OutputStream) -> writeQuotedUTF8
    int writeUnquotedUTF8(java.io.OutputStream) -> writeUnquotedUTF8
    int putQuotedUTF8(java.nio.ByteBuffer) -> putQuotedUTF8
    int putUnquotedUTF8(java.nio.ByteBuffer) -> putUnquotedUTF8
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.io.UTF32Reader -> com.fasterxml.jackson.core.io.UTF32Reader:
    boolean _bigEndian -> _bigEndian
    char _surrogate -> _surrogate
    int _charCount -> _charCount
    int _byteCount -> _byteCount
    boolean _managedBuffers -> _managedBuffers
    int read(char[],int,int) -> read
    int read() -> read
    void close() -> close
com.fasterxml.jackson.core.io.UTF8Writer -> com.fasterxml.jackson.core.io.UTF8Writer:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.OutputStream _out -> a
    byte[] _outBuffer -> b
    int _outBufferEnd -> c
    int _outPtr -> d
    int _surrogate -> e
    java.io.Writer append(char) -> append
    void close() -> close
    void flush() -> flush
    void write(char[]) -> write
    void write(char[],int,int) -> write
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    int convertSurrogate(int) -> a
    void throwIllegal(int) -> b
    java.lang.Appendable append(char) -> append
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper -> com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper:
    com.fasterxml.jackson.core.io.IOContext _context -> _context
    java.io.InputStream _in -> _in
    byte[] _inputBuffer -> _inputBuffer
    int _inputPtr -> a
    int _inputEnd -> b
    boolean _bufferRecyclable -> c
    int _inputProcessed -> _inputProcessed
    boolean _bigEndian -> _bigEndian
    int _bytesPerChar -> _bytesPerChar
    com.fasterxml.jackson.core.JsonEncoding detectEncoding() -> detectEncoding
    java.io.Reader constructReader() -> constructReader
    com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,boolean,boolean) -> constructParser
    com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) -> hasJSONFormat
    com.fasterxml.jackson.core.format.MatchStrength tryMatch(com.fasterxml.jackson.core.format.InputAccessor,java.lang.String,com.fasterxml.jackson.core.format.MatchStrength) -> a
    int skipSpace(com.fasterxml.jackson.core.format.InputAccessor) -> a
    int skipSpace(com.fasterxml.jackson.core.format.InputAccessor,byte) -> a
    boolean checkUTF16(int) -> a
    void reportWeirdUCS4(java.lang.String) -> a
    boolean ensureLoaded(int) -> ensureLoaded
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper$1 -> aK:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonEncoding -> a
com.fasterxml.jackson.core.json.CoreVersion -> com.fasterxml.jackson.core.json.CoreVersion:
    com.fasterxml.jackson.core.json.CoreVersion instance -> instance
com.fasterxml.jackson.core.json.JsonGeneratorImpl -> com.fasterxml.jackson.core.json.JsonGeneratorImpl:
    int[] sOutputEscapes -> sOutputEscapes
    com.fasterxml.jackson.core.io.IOContext _ioContext -> _ioContext
    int[] _outputEscapes -> _outputEscapes
    int _maximumNonEscapedChar -> _maximumNonEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes -> _characterEscapes
    com.fasterxml.jackson.core.SerializableString _rootValueSeparator -> _rootValueSeparator
    com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    com.fasterxml.jackson.core.Version version() -> version
    void writeStringField(java.lang.String,java.lang.String) -> writeStringField
com.fasterxml.jackson.core.json.JsonReadContext -> com.fasterxml.jackson.core.json.JsonReadContext:
    com.fasterxml.jackson.core.json.JsonReadContext _parent -> _parent
    int _lineNr -> _lineNr
    int _columnNr -> _columnNr
    java.lang.String _currentName -> _currentName
    com.fasterxml.jackson.core.json.JsonReadContext _child -> _child
    void reset(int,int,int) -> reset
    com.fasterxml.jackson.core.json.JsonReadContext createRootContext(int,int) -> createRootContext
    com.fasterxml.jackson.core.json.JsonReadContext createRootContext() -> createRootContext
    com.fasterxml.jackson.core.json.JsonReadContext createChildArrayContext(int,int) -> createChildArrayContext
    com.fasterxml.jackson.core.json.JsonReadContext createChildObjectContext(int,int) -> createChildObjectContext
    java.lang.String getCurrentName() -> getCurrentName
    com.fasterxml.jackson.core.json.JsonReadContext getParent() -> getParent
    com.fasterxml.jackson.core.JsonLocation getStartLocation(java.lang.Object) -> getStartLocation
    boolean expectComma() -> expectComma
    void setCurrentName(java.lang.String) -> setCurrentName
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.JsonWriteContext -> com.fasterxml.jackson.core.json.JsonWriteContext:
    int STATUS_OK_AS_IS -> STATUS_OK_AS_IS
    int STATUS_OK_AFTER_COMMA -> STATUS_OK_AFTER_COMMA
    int STATUS_OK_AFTER_COLON -> STATUS_OK_AFTER_COLON
    int STATUS_OK_AFTER_SPACE -> STATUS_OK_AFTER_SPACE
    int STATUS_EXPECT_VALUE -> STATUS_EXPECT_VALUE
    int STATUS_EXPECT_NAME -> STATUS_EXPECT_NAME
    com.fasterxml.jackson.core.json.JsonWriteContext _parent -> _parent
    java.lang.String _currentName -> _currentName
    com.fasterxml.jackson.core.json.JsonWriteContext _child -> _child
    com.fasterxml.jackson.core.json.JsonWriteContext createRootContext() -> createRootContext
    com.fasterxml.jackson.core.json.JsonWriteContext reset(int) -> a
    com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext() -> createChildArrayContext
    com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext() -> createChildObjectContext
    com.fasterxml.jackson.core.json.JsonWriteContext getParent() -> getParent
    java.lang.String getCurrentName() -> getCurrentName
    int writeFieldName(java.lang.String) -> writeFieldName
    int writeValue() -> writeValue
    void appendDesc(java.lang.StringBuilder) -> appendDesc
    java.lang.String toString() -> toString
    com.fasterxml.jackson.core.JsonStreamContext getParent() -> getParent
com.fasterxml.jackson.core.json.ReaderBasedJsonParser -> com.fasterxml.jackson.core.json.ReaderBasedJsonParser:
    java.io.Reader _reader -> _reader
    char[] _inputBuffer -> _inputBuffer
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _symbols -> _symbols
    int _hashSeed -> _hashSeed
    boolean _tokenIncomplete -> _tokenIncomplete
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    int releaseBuffered(java.io.Writer) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    char getNextChar(java.lang.String) -> getNextChar
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    void close() -> close
    com.fasterxml.jackson.core.JsonToken parseNumberText(int) -> parseNumberText
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    java.lang.String _parseFieldName(int) -> _parseFieldName
    java.lang.String _parseFieldName2(int,int,int) -> a
    java.lang.String _handleUnusualFieldName(int) -> _handleUnusualFieldName
    java.lang.String _parseApostropheFieldName() -> _parseApostropheFieldName
    com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    com.fasterxml.jackson.core.JsonToken _handleApostropheValue() -> _handleApostropheValue
    void _finishString() -> _finishString
    void _finishString2() -> _finishString2
    void _skipString() -> _skipString
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int _skipWS() -> a
    void _skipComment() -> b
    char _decodeEscaped() -> _decodeEscaped
    void _matchToken(java.lang.String,int) -> _matchToken
    byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
com.fasterxml.jackson.core.json.ReaderBasedJsonParser$1 -> aL:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.core.json.UTF8JsonGenerator -> com.fasterxml.jackson.core.json.UTF8JsonGenerator:
    int SURR1_FIRST -> SURR1_FIRST
    int SURR1_LAST -> SURR1_LAST
    int SURR2_FIRST -> SURR2_FIRST
    int SURR2_LAST -> SURR2_LAST
    byte[] HEX_CHARS -> a
    byte[] NULL_BYTES -> b
    byte[] TRUE_BYTES -> c
    byte[] FALSE_BYTES -> d
    java.io.OutputStream _outputStream -> _outputStream
    byte[] _outputBuffer -> _outputBuffer
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    int _outputMaxContiguous -> _outputMaxContiguous
    char[] _charBuffer -> _charBuffer
    int _charBufferLength -> _charBufferLength
    byte[] _entityBuffer -> _entityBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String) -> _writeFieldName
    void _writeFieldName(com.fasterxml.jackson.core.SerializableString) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> a
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeBytes(byte[]) -> a
    void _writeStringSegments(java.lang.String) -> a
    void _writeStringSegments(char[],int,int) -> a
    void _writeStringSegment(char[],int,int) -> b
    void _writeStringSegment2(char[],int,int) -> c
    void _writeStringSegmentASCII2(char[],int,int) -> d
    int _writeCustomEscape(byte[],int,com.fasterxml.jackson.core.SerializableString,int) -> a
    void _writeUTF8Segment(byte[],int,int) -> a
    void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    int _readMore(java.io.InputStream,byte[],int,int,int) -> a
    int _outputRawMultiByteChar(int,char[],int,int) -> a
    void _outputSurrogates(int,int) -> _outputSurrogates
    int _outputMultiByteChar(int,int) -> a
    int _decodeSurrogate(int,int) -> _decodeSurrogate
    void _writeNull() -> a
    int _writeGenericEscape(int,int) -> b
    void _flushBuffer() -> _flushBuffer
com.fasterxml.jackson.core.json.UTF8StreamJsonParser -> com.fasterxml.jackson.core.json.UTF8StreamJsonParser:
    int[] sInputCodesUtf8 -> i
    int[] sInputCodesLatin1 -> j
    com.fasterxml.jackson.core.ObjectCodec _objectCodec -> _objectCodec
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _symbols -> _symbols
    int[] _quadBuffer -> _quadBuffer
    boolean _tokenIncomplete -> _tokenIncomplete
    int _quad1 -> k
    java.io.InputStream _inputStream -> _inputStream
    byte[] _inputBuffer -> _inputBuffer
    boolean _bufferRecyclable -> _bufferRecyclable
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.Version version() -> version
    int releaseBuffered(java.io.OutputStream) -> releaseBuffered
    java.lang.Object getInputSource() -> getInputSource
    boolean loadMore() -> loadMore
    boolean _loadToHaveAtLeast(int) -> _loadToHaveAtLeast
    void _closeInput() -> _closeInput
    void _releaseBuffers() -> _releaseBuffers
    java.lang.String getText() -> getText
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.String _getText2(com.fasterxml.jackson.core.JsonToken) -> _getText2
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    int _readBinary(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream,byte[]) -> _readBinary
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken _nextTokenNotInObject(int) -> a
    com.fasterxml.jackson.core.JsonToken _nextAfterName() -> a
    void close() -> close
    boolean nextFieldName(com.fasterxml.jackson.core.SerializableString) -> nextFieldName
    java.lang.String nextTextValue() -> nextTextValue
    int nextIntValue(int) -> nextIntValue
    long nextLongValue(long) -> nextLongValue
    java.lang.Boolean nextBooleanValue() -> nextBooleanValue
    com.fasterxml.jackson.core.JsonToken parseNumberText(int) -> parseNumberText
    com.fasterxml.jackson.core.JsonToken _parseFloatText(char[],int,int,boolean,int) -> a
    com.fasterxml.jackson.core.sym.Name _parseFieldName(int) -> _parseFieldName
    com.fasterxml.jackson.core.sym.Name parseMediumFieldName(int,int[]) -> parseMediumFieldName
    com.fasterxml.jackson.core.sym.Name parseLongFieldName(int) -> parseLongFieldName
    com.fasterxml.jackson.core.sym.Name slowParseFieldName() -> slowParseFieldName
    com.fasterxml.jackson.core.sym.Name parseFieldName(int,int,int) -> a
    com.fasterxml.jackson.core.sym.Name parseFieldName(int,int,int,int) -> a
    com.fasterxml.jackson.core.sym.Name parseEscapedFieldName(int[],int,int,int,int) -> parseEscapedFieldName
    com.fasterxml.jackson.core.sym.Name _handleUnusualFieldName(int) -> _handleUnusualFieldName
    com.fasterxml.jackson.core.sym.Name _parseApostropheFieldName() -> _parseApostropheFieldName
    com.fasterxml.jackson.core.sym.Name findName(int,int) -> a
    com.fasterxml.jackson.core.sym.Name findName(int,int,int) -> b
    com.fasterxml.jackson.core.sym.Name findName(int[],int,int,int) -> a
    com.fasterxml.jackson.core.sym.Name addName(int[],int,int) -> a
    void _finishString() -> _finishString
    void _skipString() -> _skipString
    com.fasterxml.jackson.core.JsonToken _handleUnexpectedValue(int) -> _handleUnexpectedValue
    com.fasterxml.jackson.core.JsonToken _handleApostropheValue() -> _handleApostropheValue
    com.fasterxml.jackson.core.JsonToken _handleInvalidNumberStart(int,boolean) -> _handleInvalidNumberStart
    void _matchToken(java.lang.String,int) -> _matchToken
    void _reportInvalidToken(java.lang.String,java.lang.String) -> _reportInvalidToken
    int _skipWS() -> b
    int _skipWSOrEnd() -> c
    int _skipColon() -> d
    void _skipComment() -> e
    char _decodeEscaped() -> _decodeEscaped
    int _decodeCharForError(int) -> _decodeCharForError
    int _decodeUtf8_2(int) -> b
    int _decodeUtf8_3(int) -> c
    int _decodeUtf8_3fast(int) -> d
    int _decodeUtf8_4(int) -> e
    void _skipUtf8_2$13462e() -> f
    void _skipUtf8_3$13462e() -> g
    void _skipUtf8_4$13462e() -> h
    void _skipCR() -> _skipCR
    void _skipLF() -> _skipLF
    int nextByte() -> i
    void _reportInvalidChar(int) -> _reportInvalidChar
    void _reportInvalidInitial(int) -> _reportInvalidInitial
    void _reportInvalidOther(int) -> _reportInvalidOther
    void _reportInvalidOther(int,int) -> _reportInvalidOther
    int[] growArrayBy(int[],int) -> growArrayBy
    byte[] _decodeBase64(com.fasterxml.jackson.core.Base64Variant) -> _decodeBase64
com.fasterxml.jackson.core.json.UTF8StreamJsonParser$1 -> aM:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator -> com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:
    int SHORT_WRITE -> SHORT_WRITE
    char[] HEX_CHARS -> HEX_CHARS
    java.io.Writer _writer -> _writer
    char[] _outputBuffer -> _outputBuffer
    int _outputHead -> _outputHead
    int _outputTail -> _outputTail
    int _outputEnd -> _outputEnd
    char[] _entityBuffer -> _entityBuffer
    com.fasterxml.jackson.core.SerializableString _currentEscape -> _currentEscape
    java.lang.Object getOutputTarget() -> getOutputTarget
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void _writeFieldName(java.lang.String,boolean) -> _writeFieldName
    void _writeFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writeFieldName
    void _writePPFieldName(java.lang.String,boolean) -> _writePPFieldName
    void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean) -> _writePPFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawLong(java.lang.String) -> a
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void _writeQuotedRaw(java.lang.Object) -> a
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void _verifyValueWrite(java.lang.String) -> _verifyValueWrite
    void _verifyPrettyValueWrite(java.lang.String,int) -> _verifyPrettyValueWrite
    void flush() -> flush
    void close() -> close
    void _releaseBuffers() -> _releaseBuffers
    void _writeString(java.lang.String) -> b
    void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int) -> _writeBinary
    int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[]) -> _writeBinary
    int _readMore(java.io.InputStream,byte[],int,int,int) -> a
    void _writeNull() -> a
    void _prependOrWriteCharacterEscape(char,int) -> a
    int _prependOrWriteCharacterEscape(char[],int,int,char,int) -> a
    void _appendCharacterEscape(char,int) -> b
    char[] _allocateEntityBuffer() -> b
    void _flushBuffer() -> _flushBuffer
com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer -> com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer _parent -> _parent
    java.util.concurrent.atomic.AtomicReference _tableInfo -> _tableInfo
    int _hashSeed -> a
    boolean _intern -> _intern
    int _count -> _count
    int _longestCollisionList -> _longestCollisionList
    int _mainHashMask -> _mainHashMask
    int[] _mainHash -> _mainHash
    com.fasterxml.jackson.core.sym.Name[] _mainNames -> _mainNames
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] _collList -> _collList
    int _collCount -> _collCount
    int _collEnd -> _collEnd
    boolean _needRehash -> b
    boolean _mainHashShared -> c
    boolean _mainNamesShared -> d
    boolean _collListShared -> e
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo initTableInfo(int) -> a
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot() -> createRoot
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer createRoot(int) -> createRoot
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    void release() -> release
    int size() -> size
    int bucketCount() -> bucketCount
    boolean maybeDirty() -> maybeDirty
    int hashSeed() -> hashSeed
    int collisionCount() -> collisionCount
    int maxCollisionLength() -> maxCollisionLength
    com.fasterxml.jackson.core.sym.Name getEmptyName() -> getEmptyName
    com.fasterxml.jackson.core.sym.Name findName(int) -> findName
    com.fasterxml.jackson.core.sym.Name findName(int,int) -> findName
    com.fasterxml.jackson.core.sym.Name findName(int[],int) -> findName
    com.fasterxml.jackson.core.sym.Name addName(java.lang.String,int,int) -> addName
    com.fasterxml.jackson.core.sym.Name addName(java.lang.String,int[],int) -> addName
    int calcHash(int) -> calcHash
    int calcHash(int,int) -> calcHash
    int calcHash(int[],int) -> calcHash
    int[] calcQuads(byte[]) -> calcQuads
    void _addSymbol(int,com.fasterxml.jackson.core.sym.Name) -> a
    int findBestBucket() -> a
    void expandCollision() -> b
    void reportTooManyCollisions(int) -> reportTooManyCollisions
com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket -> aN:
    com.fasterxml.jackson.core.sym.Name _name -> a
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket _next -> b
    int _length -> c
    com.fasterxml.jackson.core.sym.Name find(int,int,int) -> a
    com.fasterxml.jackson.core.sym.Name find(int,int[],int) -> a
com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo -> aO:
    int count -> a
    int mainHashMask -> b
    int[] mainHash -> c
    com.fasterxml.jackson.core.sym.Name[] mainNames -> d
    com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$Bucket[] collList -> e
    int collCount -> f
    int collEnd -> g
    int longestCollisionList -> h
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer -> com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:
    int HASH_MULT -> HASH_MULT
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer sBootstrapSymbolTable -> a
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _parent -> _parent
    int _hashSeed -> b
    boolean _intern -> _intern
    boolean _canonicalize -> _canonicalize
    java.lang.String[] _symbols -> _symbols
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets -> _buckets
    int _size -> _size
    int _sizeThreshold -> _sizeThreshold
    int _indexMask -> _indexMask
    int _longestCollisionList -> _longestCollisionList
    boolean _dirty -> _dirty
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot() -> createRoot
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot(int) -> createRoot
    void initTables(int) -> a
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(boolean,boolean) -> makeChild
    void release() -> release
    int size() -> size
    int bucketCount() -> bucketCount
    boolean maybeDirty() -> maybeDirty
    int hashSeed() -> hashSeed
    int collisionCount() -> collisionCount
    int maxCollisionLength() -> maxCollisionLength
    java.lang.String findSymbol(char[],int,int,int) -> findSymbol
    int _hashToIndex(int) -> _hashToIndex
    int calcHash(char[],int,int) -> calcHash
    int calcHash(java.lang.String) -> calcHash
    void rehash() -> a
    void reportTooManyCollisions(int) -> reportTooManyCollisions
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket -> aP:
    java.lang.String _symbol -> a
    com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket _next -> b
    int _length -> c
    java.lang.String find(char[],int,int) -> a
com.fasterxml.jackson.core.sym.Name -> com.fasterxml.jackson.core.sym.Name:
    java.lang.String _name -> _name
    int _hashCode -> _hashCode
    java.lang.String getName() -> getName
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.fasterxml.jackson.core.sym.Name1 -> com.fasterxml.jackson.core.sym.Name1:
    com.fasterxml.jackson.core.sym.Name1 sEmptyName -> a
    int mQuad -> b
    com.fasterxml.jackson.core.sym.Name1 getEmptyName() -> a
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.Name2 -> com.fasterxml.jackson.core.sym.Name2:
    int mQuad1 -> a
    int mQuad2 -> b
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.Name3 -> com.fasterxml.jackson.core.sym.Name3:
    int mQuad1 -> a
    int mQuad2 -> b
    int mQuad3 -> c
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.sym.NameN -> com.fasterxml.jackson.core.sym.NameN:
    int[] mQuads -> a
    int mQuadLen -> b
    boolean equals(int) -> equals
    boolean equals(int,int) -> equals
    boolean equals(int[],int) -> equals
com.fasterxml.jackson.core.type.ResolvedType -> com.fasterxml.jackson.core.type.ResolvedType:
    java.lang.Class getRawClass() -> getRawClass
    boolean hasRawClass(java.lang.Class) -> hasRawClass
    boolean isAbstract() -> isAbstract
    boolean isConcrete() -> isConcrete
    boolean isThrowable() -> isThrowable
    boolean isArrayType() -> isArrayType
    boolean isEnumType() -> isEnumType
    boolean isInterface() -> isInterface
    boolean isPrimitive() -> isPrimitive
    boolean isFinal() -> isFinal
    boolean isContainerType() -> isContainerType
    boolean isCollectionLikeType() -> isCollectionLikeType
    boolean isMapLikeType() -> isMapLikeType
    boolean hasGenericTypes() -> hasGenericTypes
    com.fasterxml.jackson.core.type.ResolvedType getKeyType() -> getKeyType
    com.fasterxml.jackson.core.type.ResolvedType getContentType() -> getContentType
    int containedTypeCount() -> containedTypeCount
    com.fasterxml.jackson.core.type.ResolvedType containedType(int) -> containedType
    java.lang.String containedTypeName(int) -> containedTypeName
    java.lang.String toCanonical() -> toCanonical
com.fasterxml.jackson.core.type.TypeReference -> com.fasterxml.jackson.core.type.TypeReference:
    java.lang.reflect.Type _type -> _type
    java.lang.reflect.Type getType() -> getType
    int compareTo(com.fasterxml.jackson.core.type.TypeReference) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.fasterxml.jackson.core.util.BufferRecycler -> com.fasterxml.jackson.core.util.BufferRecycler:
    int DEFAULT_WRITE_CONCAT_BUFFER_LEN -> DEFAULT_WRITE_CONCAT_BUFFER_LEN
    byte[][] _byteBuffers -> _byteBuffers
    char[][] _charBuffers -> _charBuffers
    byte[] allocByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType) -> allocByteBuffer
    void releaseByteBuffer(com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType,byte[]) -> releaseByteBuffer
    char[] allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType) -> allocCharBuffer
    char[] allocCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType,int) -> allocCharBuffer
    void releaseCharBuffer(com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType,char[]) -> releaseCharBuffer
com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType -> com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType:
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType READ_IO_BUFFER -> READ_IO_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_ENCODING_BUFFER -> WRITE_ENCODING_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType WRITE_CONCAT_BUFFER -> WRITE_CONCAT_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType BASE64_CODEC_BUFFER -> BASE64_CODEC_BUFFER
    int size -> size
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] $VALUES -> a
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType[] values() -> values
    com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType -> com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType:
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType TOKEN_BUFFER -> TOKEN_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType CONCAT_BUFFER -> CONCAT_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType TEXT_BUFFER -> TEXT_BUFFER
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType NAME_COPY_BUFFER -> NAME_COPY_BUFFER
    int size -> size
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[] $VALUES -> a
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType[] values() -> values
    com.fasterxml.jackson.core.util.BufferRecycler$CharBufferType valueOf(java.lang.String) -> valueOf
com.fasterxml.jackson.core.util.ByteArrayBuilder -> com.fasterxml.jackson.core.util.ByteArrayBuilder:
    byte[] NO_BYTES -> a
    com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler -> b
    java.util.LinkedList _pastBlocks -> c
    int _pastLen -> d
    byte[] _currBlock -> e
    int _currBlockPtr -> f
    void reset() -> reset
    void release() -> release
    void append(int) -> append
    void appendTwoBytes(int) -> appendTwoBytes
    void appendThreeBytes(int) -> appendThreeBytes
    byte[] toByteArray() -> toByteArray
    byte[] resetAndGetFirstSegment() -> resetAndGetFirstSegment
    byte[] finishCurrentSegment() -> finishCurrentSegment
    byte[] completeAndCoalesce(int) -> completeAndCoalesce
    byte[] getCurrentSegment() -> getCurrentSegment
    void setCurrentSegmentLength(int) -> setCurrentSegmentLength
    int getCurrentSegmentLength() -> getCurrentSegmentLength
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void write(int) -> write
    void close() -> close
    void flush() -> flush
    void _allocMore() -> a
com.fasterxml.jackson.core.util.DefaultPrettyPrinter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _arrayIndenter -> _arrayIndenter
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter _objectIndenter -> _objectIndenter
    com.fasterxml.jackson.core.SerializableString _rootSeparator -> _rootSeparator
    boolean _spacesInObjectEntries -> _spacesInObjectEntries
    int _nesting -> _nesting
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter withRootSeparator(com.fasterxml.jackson.core.SerializableString) -> withRootSeparator
    void indentArraysWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> indentArraysWith
    void indentObjectsWith(com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter) -> indentObjectsWith
    void spacesInObjectEntries(boolean) -> spacesInObjectEntries
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter createInstance() -> createInstance
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
    java.lang.Object createInstance() -> createInstance
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter instance -> instance
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter:
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Lf2SpacesIndenter instance -> instance
    java.lang.String SYSTEM_LINE_SEPARATOR -> a
    char[] SPACES -> b
    boolean isInline() -> isInline
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter -> com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter:
    long serialVersionUID -> serialVersionUID
    com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter instance -> instance
    void writeIndentation(com.fasterxml.jackson.core.JsonGenerator,int) -> writeIndentation
    boolean isInline() -> isInline
com.fasterxml.jackson.core.util.Instantiatable -> com.fasterxml.jackson.core.util.Instantiatable:
    java.lang.Object createInstance() -> createInstance
com.fasterxml.jackson.core.util.InternCache -> com.fasterxml.jackson.core.util.InternCache:
    com.fasterxml.jackson.core.util.InternCache instance -> instance
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.String intern(java.lang.String) -> intern
com.fasterxml.jackson.core.util.JsonGeneratorDelegate -> com.fasterxml.jackson.core.util.JsonGeneratorDelegate:
    com.fasterxml.jackson.core.JsonGenerator delegate -> delegate
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getOutputTarget() -> getOutputTarget
    com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString) -> setRootValueSeparator
    com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> enable
    com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature) -> isEnabled
    com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter) -> setPrettyPrinter
    com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter() -> getPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator useDefaultPrettyPrinter() -> useDefaultPrettyPrinter
    com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int) -> setHighestNonEscapedChar
    int getHighestEscapedChar() -> getHighestEscapedChar
    com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes() -> getCharacterEscapes
    com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes) -> setCharacterEscapes
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(com.fasterxml.jackson.core.SerializableString) -> writeFieldName
    void writeString(java.lang.String) -> writeString
    void writeString(char[],int,int) -> writeString
    void writeString(com.fasterxml.jackson.core.SerializableString) -> writeString
    void writeRawUTF8String(byte[],int,int) -> writeRawUTF8String
    void writeUTF8String(byte[],int,int) -> writeUTF8String
    void writeRaw(java.lang.String) -> writeRaw
    void writeRaw(java.lang.String,int,int) -> writeRaw
    void writeRaw(com.fasterxml.jackson.core.SerializableString) -> writeRaw
    void writeRaw(char[],int,int) -> writeRaw
    void writeRaw(char) -> writeRaw
    void writeRawValue(java.lang.String) -> writeRawValue
    void writeRawValue(java.lang.String,int,int) -> writeRawValue
    void writeRawValue(char[],int,int) -> writeRawValue
    void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int) -> writeBinary
    int writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,int) -> writeBinary
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeBoolean(boolean) -> writeBoolean
    void writeNull() -> writeNull
    void writeObject(java.lang.Object) -> writeObject
    void writeTree(com.fasterxml.jackson.core.TreeNode) -> writeTree
    void copyCurrentEvent(com.fasterxml.jackson.core.JsonParser) -> copyCurrentEvent
    void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser) -> copyCurrentStructure
    com.fasterxml.jackson.core.JsonStreamContext getOutputContext() -> getOutputContext
    void flush() -> flush
    void close() -> close
    boolean isClosed() -> isClosed
com.fasterxml.jackson.core.util.JsonParserDelegate -> com.fasterxml.jackson.core.util.JsonParserDelegate:
    com.fasterxml.jackson.core.JsonParser delegate -> delegate
    void setCodec(com.fasterxml.jackson.core.ObjectCodec) -> setCodec
    com.fasterxml.jackson.core.ObjectCodec getCodec() -> getCodec
    com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser$Feature) -> enable
    com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser$Feature) -> disable
    boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature) -> isEnabled
    com.fasterxml.jackson.core.FormatSchema getSchema() -> getSchema
    void setSchema(com.fasterxml.jackson.core.FormatSchema) -> setSchema
    boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema) -> canUseSchema
    boolean requiresCustomCodec() -> requiresCustomCodec
    com.fasterxml.jackson.core.Version version() -> version
    java.lang.Object getInputSource() -> getInputSource
    void close() -> close
    boolean isClosed() -> isClosed
    com.fasterxml.jackson.core.JsonToken getCurrentToken() -> getCurrentToken
    boolean hasCurrentToken() -> hasCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.fasterxml.jackson.core.JsonLocation getCurrentLocation() -> getCurrentLocation
    com.fasterxml.jackson.core.JsonStreamContext getParsingContext() -> getParsingContext
    void clearCurrentToken() -> clearCurrentToken
    com.fasterxml.jackson.core.JsonToken getLastClearedToken() -> getLastClearedToken
    void overrideCurrentName(java.lang.String) -> overrideCurrentName
    java.lang.String getText() -> getText
    boolean hasTextCharacters() -> hasTextCharacters
    char[] getTextCharacters() -> getTextCharacters
    int getTextLength() -> getTextLength
    int getTextOffset() -> getTextOffset
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    boolean getBooleanValue() -> getBooleanValue
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    long getLongValue() -> getLongValue
    com.fasterxml.jackson.core.JsonParser$NumberType getNumberType() -> getNumberType
    java.lang.Number getNumberValue() -> getNumberValue
    int getValueAsInt() -> getValueAsInt
    int getValueAsInt(int) -> getValueAsInt
    long getValueAsLong() -> getValueAsLong
    long getValueAsLong(long) -> getValueAsLong
    double getValueAsDouble() -> getValueAsDouble
    double getValueAsDouble(double) -> getValueAsDouble
    boolean getValueAsBoolean() -> getValueAsBoolean
    boolean getValueAsBoolean(boolean) -> getValueAsBoolean
    java.lang.String getValueAsString() -> getValueAsString
    java.lang.String getValueAsString(java.lang.String) -> getValueAsString
    java.lang.Object getEmbeddedObject() -> getEmbeddedObject
    byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant) -> getBinaryValue
    int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream) -> readBinaryValue
    com.fasterxml.jackson.core.JsonLocation getTokenLocation() -> getTokenLocation
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    com.fasterxml.jackson.core.JsonToken nextValue() -> nextValue
    com.fasterxml.jackson.core.JsonParser skipChildren() -> skipChildren
com.fasterxml.jackson.core.util.JsonParserSequence -> com.fasterxml.jackson.core.util.JsonParserSequence:
    com.fasterxml.jackson.core.JsonParser[] _parsers -> _parsers
    int _nextParser -> _nextParser
    com.fasterxml.jackson.core.util.JsonParserSequence createFlattened(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonParser) -> createFlattened
    void addFlattenedActiveParsers(java.util.List) -> addFlattenedActiveParsers
    void close() -> close
    com.fasterxml.jackson.core.JsonToken nextToken() -> nextToken
    int containedParsersCount() -> containedParsersCount
    boolean switchToNext() -> switchToNext
com.fasterxml.jackson.core.util.MinimalPrettyPrinter -> com.fasterxml.jackson.core.util.MinimalPrettyPrinter:
    long serialVersionUID -> serialVersionUID
    java.lang.String DEFAULT_ROOT_VALUE_SEPARATOR -> DEFAULT_ROOT_VALUE_SEPARATOR
    java.lang.String _rootValueSeparator -> _rootValueSeparator
    void setRootValueSeparator(java.lang.String) -> setRootValueSeparator
    void writeRootValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeRootValueSeparator
    void writeStartObject(com.fasterxml.jackson.core.JsonGenerator) -> writeStartObject
    void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator) -> beforeObjectEntries
    void writeObjectFieldValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectFieldValueSeparator
    void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeObjectEntrySeparator
    void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndObject
    void writeStartArray(com.fasterxml.jackson.core.JsonGenerator) -> writeStartArray
    void beforeArrayValues(com.fasterxml.jackson.core.JsonGenerator) -> beforeArrayValues
    void writeArrayValueSeparator(com.fasterxml.jackson.core.JsonGenerator) -> writeArrayValueSeparator
    void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int) -> writeEndArray
com.fasterxml.jackson.core.util.TextBuffer -> com.fasterxml.jackson.core.util.TextBuffer:
    char[] NO_CHARS -> a
    com.fasterxml.jackson.core.util.BufferRecycler _allocator -> b
    char[] _inputBuffer -> c
    int _inputStart -> d
    int _inputLen -> e
    java.util.ArrayList _segments -> f
    boolean _hasSegments -> g
    int _segmentSize -> h
    char[] _currentSegment -> i
    int _currentSize -> j
    java.lang.String _resultString -> k
    char[] _resultArray -> l
    void releaseBuffers() -> releaseBuffers
    void resetWithEmpty() -> resetWithEmpty
    void resetWithShared(char[],int,int) -> resetWithShared
    void resetWithCopy(char[],int,int) -> resetWithCopy
    void resetWithString(java.lang.String) -> resetWithString
    char[] findBuffer(int) -> a
    void clearSegments() -> a
    int size() -> size
    int getTextOffset() -> getTextOffset
    boolean hasTextAsCharacters() -> hasTextAsCharacters
    char[] getTextBuffer() -> getTextBuffer
    java.lang.String contentsAsString() -> contentsAsString
    char[] contentsAsArray() -> contentsAsArray
    java.math.BigDecimal contentsAsDecimal() -> contentsAsDecimal
    double contentsAsDouble() -> contentsAsDouble
    void ensureNotShared() -> ensureNotShared
    void append(char) -> append
    void append(char[],int,int) -> append
    void append(java.lang.String,int,int) -> append
    char[] getCurrentSegment() -> getCurrentSegment
    char[] emptyAndGetCurrentSegment() -> emptyAndGetCurrentSegment
    int getCurrentSegmentSize() -> getCurrentSegmentSize
    void setCurrentLength(int) -> setCurrentLength
    char[] finishCurrentSegment() -> finishCurrentSegment
    char[] expandCurrentSegment() -> expandCurrentSegment
    java.lang.String toString() -> toString
    void unshare(int) -> b
    void expand(int) -> c
com.fasterxml.jackson.core.util.VersionUtil -> com.fasterxml.jackson.core.util.VersionUtil:
    java.lang.String VERSION_FILE -> VERSION_FILE
    java.util.regex.Pattern VERSION_SEPARATOR -> a
    com.fasterxml.jackson.core.Version _version -> b
    com.fasterxml.jackson.core.Version version() -> version
    com.fasterxml.jackson.core.Version versionFor(java.lang.Class) -> versionFor
    com.fasterxml.jackson.core.Version mavenVersionFor(java.lang.ClassLoader,java.lang.String,java.lang.String) -> mavenVersionFor
    com.fasterxml.jackson.core.Version parseVersion(java.lang.String) -> parseVersion
    com.fasterxml.jackson.core.Version parseVersion(java.lang.String,java.lang.String,java.lang.String) -> parseVersion
    int parseVersionPart(java.lang.String) -> parseVersionPart
com.google.api.client.auth.jsontoken.JsonWebSignature -> com.google.api.client.auth.jsontoken.JsonWebSignature:
    byte[] signatureBytes -> a
    byte[] signedContentBytes -> b
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header getHeader() -> getHeader
    byte[] getSignatureBytes() -> getSignatureBytes
    byte[] getSignedContentBytes() -> getSignedContentBytes
    com.google.api.client.auth.jsontoken.JsonWebSignature parse(com.google.api.client.json.JsonFactory,java.lang.String) -> parse
    com.google.api.client.auth.jsontoken.JsonWebSignature$Parser parser(com.google.api.client.json.JsonFactory) -> parser
    com.google.api.client.auth.jsontoken.JsonWebToken$Header getHeader() -> getHeader
com.google.api.client.auth.jsontoken.JsonWebSignature$Header -> com.google.api.client.auth.jsontoken.JsonWebSignature$Header:
    java.lang.String algorithm -> algorithm
    java.lang.String jwkUrl -> jwkUrl
    java.lang.String keyId -> keyId
    java.lang.String x509Url -> x509Url
    java.lang.String x509Thumbprint -> x509Thumbprint
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header setType(java.lang.String) -> setType
    java.lang.String getAlgorithm() -> getAlgorithm
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header setAlgorithm(java.lang.String) -> setAlgorithm
    java.lang.String getJwkUrl() -> getJwkUrl
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header setJwkUrl(java.lang.String) -> setJwkUrl
    java.lang.String getKeyId() -> getKeyId
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header setKeyId(java.lang.String) -> setKeyId
    java.lang.String getX509Url() -> getX509Url
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header setX509Url(java.lang.String) -> setX509Url
    java.lang.String getX509Thumbprint() -> getX509Thumbprint
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header setX509Thumbprint(java.lang.String) -> setX509Thumbprint
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.jsontoken.JsonWebSignature$Header clone() -> clone
    com.google.api.client.auth.jsontoken.JsonWebToken$Header clone() -> clone
    com.google.api.client.auth.jsontoken.JsonWebToken$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.jsontoken.JsonWebToken$Header setType(java.lang.String) -> setType
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.jsontoken.JsonWebSignature$Parser -> com.google.api.client.auth.jsontoken.JsonWebSignature$Parser:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    java.lang.Class headerClass -> b
    java.lang.Class payloadClass -> c
    java.lang.Class getHeaderClass() -> getHeaderClass
    com.google.api.client.auth.jsontoken.JsonWebSignature$Parser setHeaderClass(java.lang.Class) -> setHeaderClass
    java.lang.Class getPayloadClass() -> getPayloadClass
    com.google.api.client.auth.jsontoken.JsonWebSignature$Parser setPayloadClass(java.lang.Class) -> setPayloadClass
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.auth.jsontoken.JsonWebSignature parse(java.lang.String) -> parse
com.google.api.client.auth.jsontoken.JsonWebToken -> com.google.api.client.auth.jsontoken.JsonWebToken:
    com.google.api.client.auth.jsontoken.JsonWebToken$Header header -> a
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload payload -> b
    com.google.api.client.auth.jsontoken.JsonWebToken$Header getHeader() -> getHeader
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload getPayload() -> getPayload
com.google.api.client.auth.jsontoken.JsonWebToken$Header -> com.google.api.client.auth.jsontoken.JsonWebToken$Header:
    java.lang.String type -> type
    java.lang.String getType() -> getType
    com.google.api.client.auth.jsontoken.JsonWebToken$Header setType(java.lang.String) -> setType
    com.google.api.client.auth.jsontoken.JsonWebToken$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.jsontoken.JsonWebToken$Header clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.jsontoken.JsonWebToken$Payload -> com.google.api.client.auth.jsontoken.JsonWebToken$Payload:
    com.google.api.client.util.Clock clock -> a
    java.lang.Long expirationTimeSeconds -> expirationTimeSeconds
    java.lang.Long notBeforeTimeSeconds -> notBeforeTimeSeconds
    java.lang.Long issuedAtTimeSeconds -> issuedAtTimeSeconds
    java.lang.String issuer -> issuer
    java.lang.String audience -> audience
    java.lang.String principal -> principal
    java.lang.String jwtId -> jwtId
    java.lang.String type -> type
    java.lang.Long getExpirationTimeSeconds() -> getExpirationTimeSeconds
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload setExpirationTimeSeconds(java.lang.Long) -> setExpirationTimeSeconds
    java.lang.Long getNotBeforeTimeSeconds() -> getNotBeforeTimeSeconds
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload setNotBeforeTimeSeconds(java.lang.Long) -> setNotBeforeTimeSeconds
    java.lang.Long getIssuedAtTimeSeconds() -> getIssuedAtTimeSeconds
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload setIssuedAtTimeSeconds(java.lang.Long) -> setIssuedAtTimeSeconds
    java.lang.String getIssuer() -> getIssuer
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload setIssuer(java.lang.String) -> setIssuer
    java.lang.String getAudience() -> getAudience
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload setAudience(java.lang.String) -> setAudience
    java.lang.String getPrincipal() -> getPrincipal
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload setPrincipal(java.lang.String) -> setPrincipal
    java.lang.String getJwtId() -> getJwtId
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload setJwtId(java.lang.String) -> setJwtId
    java.lang.String getType() -> getType
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload setType(java.lang.String) -> setType
    boolean isValidTime(long) -> isValidTime
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.jsontoken.JsonWebToken$Payload clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.jsontoken.RsaSHA256Signer -> com.google.api.client.auth.jsontoken.RsaSHA256Signer:
    java.lang.String sign(java.security.PrivateKey,com.google.api.client.json.JsonFactory,com.google.api.client.auth.jsontoken.JsonWebSignature$Header,com.google.api.client.auth.jsontoken.JsonWebToken$Payload) -> sign
com.google.api.client.auth.oauth.AbstractOAuthGetToken -> com.google.api.client.auth.oauth.AbstractOAuthGetToken:
    com.google.api.client.http.HttpTransport transport -> transport
    java.lang.String consumerKey -> consumerKey
    com.google.api.client.auth.oauth.OAuthSigner signer -> signer
    boolean usePost -> usePost
    com.google.api.client.auth.oauth.OAuthCredentialsResponse execute() -> execute
    com.google.api.client.auth.oauth.OAuthParameters createParameters() -> createParameters
com.google.api.client.auth.oauth.OAuthAuthorizeTemporaryTokenUrl -> com.google.api.client.auth.oauth.OAuthAuthorizeTemporaryTokenUrl:
    java.lang.String temporaryToken -> temporaryToken
com.google.api.client.auth.oauth.OAuthCallbackUrl -> com.google.api.client.auth.oauth.OAuthCallbackUrl:
    java.lang.String token -> token
    java.lang.String verifier -> verifier
com.google.api.client.auth.oauth.OAuthCredentialsResponse -> com.google.api.client.auth.oauth.OAuthCredentialsResponse:
    java.lang.String token -> token
    java.lang.String tokenSecret -> tokenSecret
    java.lang.Boolean callbackConfirmed -> callbackConfirmed
com.google.api.client.auth.oauth.OAuthGetAccessToken -> com.google.api.client.auth.oauth.OAuthGetAccessToken:
    java.lang.String temporaryToken -> temporaryToken
    java.lang.String verifier -> verifier
    com.google.api.client.auth.oauth.OAuthParameters createParameters() -> createParameters
com.google.api.client.auth.oauth.OAuthGetTemporaryToken -> com.google.api.client.auth.oauth.OAuthGetTemporaryToken:
    java.lang.String callback -> callback
    com.google.api.client.auth.oauth.OAuthParameters createParameters() -> createParameters
com.google.api.client.auth.oauth.OAuthHmacSigner -> com.google.api.client.auth.oauth.OAuthHmacSigner:
    java.lang.String clientSharedSecret -> clientSharedSecret
    java.lang.String tokenSharedSecret -> tokenSharedSecret
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String computeSignature(java.lang.String) -> computeSignature
com.google.api.client.auth.oauth.OAuthParameters -> com.google.api.client.auth.oauth.OAuthParameters:
    java.security.SecureRandom RANDOM -> a
    com.google.api.client.auth.oauth.OAuthSigner signer -> signer
    java.lang.String callback -> callback
    java.lang.String consumerKey -> consumerKey
    java.lang.String nonce -> nonce
    java.lang.String realm -> realm
    java.lang.String signature -> signature
    java.lang.String signatureMethod -> signatureMethod
    java.lang.String timestamp -> timestamp
    java.lang.String token -> token
    java.lang.String verifier -> verifier
    java.lang.String version -> version
    com.google.api.client.util.escape.PercentEscaper ESCAPER -> b
    void computeNonce() -> computeNonce
    void computeTimestamp() -> computeTimestamp
    void computeSignature(java.lang.String,com.google.api.client.http.GenericUrl) -> computeSignature
    java.lang.String getAuthorizationHeader() -> getAuthorizationHeader
    void appendParameter(java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    void putParameterIfValueNotNull(java.util.TreeMap,java.lang.String,java.lang.String) -> a
    void putParameter(java.util.TreeMap,java.lang.String,java.lang.Object) -> a
    java.lang.String escape(java.lang.String) -> escape
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.auth.oauth.OAuthRsaSigner -> com.google.api.client.auth.oauth.OAuthRsaSigner:
    java.security.PrivateKey privateKey -> privateKey
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String computeSignature(java.lang.String) -> computeSignature
com.google.api.client.auth.oauth.OAuthSigner -> com.google.api.client.auth.oauth.OAuthSigner:
    java.lang.String getSignatureMethod() -> getSignatureMethod
    java.lang.String computeSignature(java.lang.String) -> computeSignature
com.google.api.client.auth.oauth2.AuthorizationCodeFlow -> com.google.api.client.auth.oauth2.AuthorizationCodeFlow:
    com.google.api.client.auth.oauth2.Credential$AccessMethod method -> a
    com.google.api.client.http.HttpTransport transport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    java.lang.String tokenServerEncodedUrl -> d
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> e
    java.lang.String clientId -> f
    java.lang.String authorizationServerEncodedUrl -> g
    com.google.api.client.auth.oauth2.CredentialStore credentialStore -> h
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> i
    com.google.api.client.util.Clock clock -> j
    java.lang.String scopes -> k
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener credentialCreatedListener -> l
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl newAuthorizationUrl() -> newAuthorizationUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest newTokenRequest(java.lang.String) -> newTokenRequest
    com.google.api.client.auth.oauth2.Credential createAndStoreCredential(com.google.api.client.auth.oauth2.TokenResponse,java.lang.String) -> createAndStoreCredential
    com.google.api.client.auth.oauth2.Credential loadCredential(java.lang.String) -> loadCredential
    com.google.api.client.auth.oauth2.Credential newCredential(java.lang.String) -> a
    com.google.api.client.auth.oauth2.Credential$AccessMethod getMethod() -> getMethod
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getTokenServerEncodedUrl() -> getTokenServerEncodedUrl
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    java.lang.String getClientId() -> getClientId
    java.lang.String getAuthorizationServerEncodedUrl() -> getAuthorizationServerEncodedUrl
    com.google.api.client.auth.oauth2.CredentialStore getCredentialStore() -> getCredentialStore
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    java.lang.String getScopes() -> getScopes
    com.google.api.client.util.Clock getClock() -> getClock
com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder -> com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder:
    com.google.api.client.auth.oauth2.Credential$AccessMethod method -> a
    com.google.api.client.http.HttpTransport transport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    com.google.api.client.http.GenericUrl tokenServerUrl -> d
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> e
    java.lang.String clientId -> f
    java.lang.String authorizationServerEncodedUrl -> g
    com.google.api.client.auth.oauth2.CredentialStore credentialStore -> h
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> i
    java.lang.String scopes -> j
    com.google.api.client.util.Clock clock -> k
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener credentialCreatedListener -> l
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow build() -> build
    com.google.api.client.auth.oauth2.Credential$AccessMethod getMethod() -> getMethod
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setMethod(com.google.api.client.auth.oauth2.Credential$AccessMethod) -> setMethod
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.http.GenericUrl getTokenServerUrl() -> getTokenServerUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    java.lang.String getClientId() -> getClientId
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClientId(java.lang.String) -> setClientId
    java.lang.String getAuthorizationServerEncodedUrl() -> getAuthorizationServerEncodedUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setAuthorizationServerEncodedUrl(java.lang.String) -> setAuthorizationServerEncodedUrl
    com.google.api.client.auth.oauth2.CredentialStore getCredentialStore() -> getCredentialStore
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialStore(com.google.api.client.auth.oauth2.CredentialStore) -> setCredentialStore
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setScopes(java.lang.String[]) -> setScopes
    java.lang.String getScopes() -> getScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialCreatedListener(com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener) -> setCredentialCreatedListener
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener getCredentialCreatedListener() -> getCredentialCreatedListener
com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener -> com.google.api.client.auth.oauth2.AuthorizationCodeFlow$CredentialCreatedListener:
    void onCredentialCreated(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenResponse) -> onCredentialCreated
com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl -> com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl:
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl -> com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl:
    java.lang.String code -> code
    java.lang.String state -> state
    java.lang.String error -> error
    java.lang.String errorDescription -> errorDescription
    java.lang.String errorUri -> errorUri
    java.lang.String getCode() -> getCode
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setCode(java.lang.String) -> setCode
    java.lang.String getState() -> getState
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setState(java.lang.String) -> setState
    java.lang.String getError() -> getError
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setError(java.lang.String) -> setError
    java.lang.String getErrorDescription() -> getErrorDescription
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setErrorDescription(java.lang.String) -> setErrorDescription
    java.lang.String getErrorUri() -> getErrorUri
    com.google.api.client.auth.oauth2.AuthorizationCodeResponseUrl setErrorUri(java.lang.String) -> setErrorUri
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl clone() -> clone
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest -> com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest:
    java.lang.String code -> code
    java.lang.String redirectUri -> redirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    java.lang.String getCode() -> getCode
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setCode(java.lang.String) -> setCode
    java.lang.String getRedirectUri() -> getRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.AuthorizationRequestUrl -> com.google.api.client.auth.oauth2.AuthorizationRequestUrl:
    java.lang.String responseTypes -> responseTypes
    java.lang.String redirectUri -> redirectUri
    java.lang.String scopes -> scopes
    java.lang.String clientId -> clientId
    java.lang.String state -> state
    java.lang.String getResponseTypes() -> getResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    java.lang.String getRedirectUri() -> getRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    java.lang.String getScopes() -> getScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.Iterable) -> setScopes
    java.lang.String getClientId() -> getClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    java.lang.String getState() -> getState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.BearerToken -> com.google.api.client.auth.oauth2.BearerToken:
    com.google.api.client.auth.oauth2.Credential$AccessMethod authorizationHeaderAccessMethod() -> authorizationHeaderAccessMethod
    com.google.api.client.auth.oauth2.Credential$AccessMethod formEncodedBodyAccessMethod() -> formEncodedBodyAccessMethod
    com.google.api.client.auth.oauth2.Credential$AccessMethod queryParameterAccessMethod() -> queryParameterAccessMethod
com.google.api.client.auth.oauth2.BearerToken$AuthorizationHeaderAccessMethod -> aQ:
    void intercept(com.google.api.client.http.HttpRequest,java.lang.String) -> intercept
    java.lang.String getAccessTokenFromRequest(com.google.api.client.http.HttpRequest) -> getAccessTokenFromRequest
com.google.api.client.auth.oauth2.BearerToken$FormEncodedBodyAccessMethod -> aR:
    void intercept(com.google.api.client.http.HttpRequest,java.lang.String) -> intercept
    java.lang.String getAccessTokenFromRequest(com.google.api.client.http.HttpRequest) -> getAccessTokenFromRequest
    java.util.Map getData(com.google.api.client.http.HttpRequest) -> a
com.google.api.client.auth.oauth2.BearerToken$QueryParameterAccessMethod -> aS:
    void intercept(com.google.api.client.http.HttpRequest,java.lang.String) -> intercept
    java.lang.String getAccessTokenFromRequest(com.google.api.client.http.HttpRequest) -> getAccessTokenFromRequest
com.google.api.client.auth.oauth2.BrowserClientRequestUrl -> com.google.api.client.auth.oauth2.BrowserClientRequestUrl:
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest -> com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest:
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.ClientCredentialsTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.ClientParametersAuthentication -> com.google.api.client.auth.oauth2.ClientParametersAuthentication:
    java.lang.String clientId -> a
    java.lang.String clientSecret -> b
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
    java.lang.String getClientId() -> getClientId
    java.lang.String getClientSecret() -> getClientSecret
com.google.api.client.auth.oauth2.Credential -> com.google.api.client.auth.oauth2.Credential:
    java.util.logging.Logger LOGGER -> a
    java.util.concurrent.locks.Lock lock -> b
    com.google.api.client.auth.oauth2.Credential$AccessMethod method -> c
    com.google.api.client.util.Clock clock -> d
    java.lang.String accessToken -> e
    java.lang.Long expirationTimeMilliseconds -> f
    java.lang.String refreshToken -> g
    com.google.api.client.http.HttpTransport transport -> h
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> i
    com.google.api.client.json.JsonFactory jsonFactory -> j
    java.lang.String tokenServerEncodedUrl -> k
    java.util.List refreshListeners -> l
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> m
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    java.lang.String getAccessToken() -> getAccessToken
    com.google.api.client.auth.oauth2.Credential setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.auth.oauth2.Credential$AccessMethod getMethod() -> getMethod
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getTokenServerEncodedUrl() -> getTokenServerEncodedUrl
    java.lang.String getRefreshToken() -> getRefreshToken
    com.google.api.client.auth.oauth2.Credential setRefreshToken(java.lang.String) -> setRefreshToken
    java.lang.Long getExpirationTimeMilliseconds() -> getExpirationTimeMilliseconds
    com.google.api.client.auth.oauth2.Credential setExpirationTimeMilliseconds(java.lang.Long) -> setExpirationTimeMilliseconds
    java.lang.Long getExpiresInSeconds() -> getExpiresInSeconds
    com.google.api.client.auth.oauth2.Credential setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    boolean refreshToken() -> refreshToken
    com.google.api.client.auth.oauth2.Credential setFromTokenResponse(com.google.api.client.auth.oauth2.TokenResponse) -> setFromTokenResponse
    com.google.api.client.auth.oauth2.TokenResponse executeRefreshToken() -> executeRefreshToken
    java.util.List getRefreshListeners() -> getRefreshListeners
com.google.api.client.auth.oauth2.Credential$AccessMethod -> com.google.api.client.auth.oauth2.Credential$AccessMethod:
    void intercept(com.google.api.client.http.HttpRequest,java.lang.String) -> intercept
    java.lang.String getAccessTokenFromRequest(com.google.api.client.http.HttpRequest) -> getAccessTokenFromRequest
com.google.api.client.auth.oauth2.Credential$Builder -> com.google.api.client.auth.oauth2.Credential$Builder:
    com.google.api.client.auth.oauth2.Credential$AccessMethod method -> a
    com.google.api.client.http.HttpTransport transport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    com.google.api.client.http.GenericUrl tokenServerUrl -> d
    com.google.api.client.util.Clock clock -> e
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> f
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> g
    java.util.List refreshListeners -> h
    com.google.api.client.auth.oauth2.Credential build() -> build
    com.google.api.client.auth.oauth2.Credential$AccessMethod getMethod() -> getMethod
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.auth.oauth2.Credential$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.auth.oauth2.Credential$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.auth.oauth2.Credential$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.http.GenericUrl getTokenServerUrl() -> getTokenServerUrl
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerEncodedUrl(java.lang.String) -> setTokenServerEncodedUrl
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    com.google.api.client.auth.oauth2.Credential$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    com.google.api.client.auth.oauth2.Credential$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.Credential$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    java.util.List getRefreshListeners() -> getRefreshListeners
    com.google.api.client.auth.oauth2.Credential$Builder setRefreshListeners(java.util.List) -> setRefreshListeners
com.google.api.client.auth.oauth2.CredentialRefreshListener -> com.google.api.client.auth.oauth2.CredentialRefreshListener:
    void onTokenResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenResponse) -> onTokenResponse
    void onTokenErrorResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenErrorResponse) -> onTokenErrorResponse
com.google.api.client.auth.oauth2.CredentialStore -> com.google.api.client.auth.oauth2.CredentialStore:
    boolean load(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> load
    void store(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> store
    void delete(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> delete
com.google.api.client.auth.oauth2.CredentialStoreRefreshListener -> com.google.api.client.auth.oauth2.CredentialStoreRefreshListener:
    com.google.api.client.auth.oauth2.CredentialStore credentialStore -> a
    java.lang.String userId -> b
    void onTokenResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenResponse) -> onTokenResponse
    void onTokenErrorResponse(com.google.api.client.auth.oauth2.Credential,com.google.api.client.auth.oauth2.TokenErrorResponse) -> onTokenErrorResponse
    com.google.api.client.auth.oauth2.CredentialStore getCredentialStore() -> getCredentialStore
    void makePersistent(com.google.api.client.auth.oauth2.Credential) -> makePersistent
com.google.api.client.auth.oauth2.MemoryCredentialStore -> com.google.api.client.auth.oauth2.MemoryCredentialStore:
    java.util.concurrent.locks.Lock lock -> a
    java.util.Map store -> b
    void store(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> store
    void delete(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> delete
    boolean load(java.lang.String,com.google.api.client.auth.oauth2.Credential) -> load
com.google.api.client.auth.oauth2.MemoryPersistedCredential -> aT:
    java.lang.String accessToken -> a
    java.lang.String refreshToken -> b
    java.lang.Long expirationTimeMillis -> c
com.google.api.client.auth.oauth2.PasswordTokenRequest -> com.google.api.client.auth.oauth2.PasswordTokenRequest:
    java.lang.String username -> username
    java.lang.String password -> password
    com.google.api.client.auth.oauth2.PasswordTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.PasswordTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.PasswordTokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.PasswordTokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.PasswordTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.PasswordTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    java.lang.String getUsername() -> getUsername
    com.google.api.client.auth.oauth2.PasswordTokenRequest setUsername(java.lang.String) -> setUsername
    java.lang.String getPassword() -> getPassword
    com.google.api.client.auth.oauth2.PasswordTokenRequest setPassword(java.lang.String) -> setPassword
    com.google.api.client.auth.oauth2.PasswordTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.RefreshTokenRequest -> com.google.api.client.auth.oauth2.RefreshTokenRequest:
    java.lang.String refreshToken -> refreshToken
    com.google.api.client.auth.oauth2.RefreshTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.RefreshTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.RefreshTokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.RefreshTokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.RefreshTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.RefreshTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    java.lang.String getRefreshToken() -> getRefreshToken
    com.google.api.client.auth.oauth2.RefreshTokenRequest setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.RefreshTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.TokenErrorResponse -> com.google.api.client.auth.oauth2.TokenErrorResponse:
    java.lang.String error -> error
    java.lang.String errorDescription -> errorDescription
    java.lang.String errorUri -> errorUri
    java.lang.String getError() -> getError
    com.google.api.client.auth.oauth2.TokenErrorResponse setError(java.lang.String) -> setError
    java.lang.String getErrorDescription() -> getErrorDescription
    com.google.api.client.auth.oauth2.TokenErrorResponse setErrorDescription(java.lang.String) -> setErrorDescription
    java.lang.String getErrorUri() -> getErrorUri
    com.google.api.client.auth.oauth2.TokenErrorResponse setErrorUri(java.lang.String) -> setErrorUri
    com.google.api.client.auth.oauth2.TokenErrorResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenErrorResponse clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.TokenRequest -> com.google.api.client.auth.oauth2.TokenRequest:
    com.google.api.client.http.HttpRequestInitializer requestInitializer -> a
    com.google.api.client.http.HttpExecuteInterceptor clientAuthentication -> b
    com.google.api.client.http.HttpTransport transport -> e
    com.google.api.client.json.JsonFactory jsonFactory -> f
    com.google.api.client.http.GenericUrl tokenServerUrl -> g
    java.lang.String scopes -> scopes
    java.lang.String grantType -> grantType
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.http.HttpRequestInitializer getRequestInitializer() -> getRequestInitializer
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.http.HttpExecuteInterceptor getClientAuthentication() -> getClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.http.GenericUrl getTokenServerUrl() -> getTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    java.lang.String getScopes() -> getScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.Iterable) -> setScopes
    java.lang.String getGrantType() -> getGrantType
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.http.HttpResponse executeUnparsed() -> executeUnparsed
    com.google.api.client.auth.oauth2.TokenResponse execute() -> execute
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.auth.oauth2.TokenRequest$1 -> aU:
    com.google.api.client.auth.oauth2.TokenRequest this$0 -> a
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
com.google.api.client.auth.oauth2.TokenRequest$1$1 -> aV:
    com.google.api.client.http.HttpExecuteInterceptor val$interceptor -> a
    com.google.api.client.auth.oauth2.TokenRequest$1 this$1 -> b
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.auth.oauth2.TokenResponse -> com.google.api.client.auth.oauth2.TokenResponse:
    java.lang.String accessToken -> accessToken
    java.lang.String tokenType -> tokenType
    java.lang.Long expiresInSeconds -> expiresInSeconds
    java.lang.String refreshToken -> refreshToken
    java.lang.String scope -> scope
    java.lang.String getAccessToken() -> getAccessToken
    com.google.api.client.auth.oauth2.TokenResponse setAccessToken(java.lang.String) -> setAccessToken
    java.lang.String getTokenType() -> getTokenType
    com.google.api.client.auth.oauth2.TokenResponse setTokenType(java.lang.String) -> setTokenType
    java.lang.Long getExpiresInSeconds() -> getExpiresInSeconds
    com.google.api.client.auth.oauth2.TokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    java.lang.String getRefreshToken() -> getRefreshToken
    com.google.api.client.auth.oauth2.TokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    java.lang.String getScope() -> getScope
    com.google.api.client.auth.oauth2.TokenResponse setScope(java.lang.String) -> setScope
    com.google.api.client.auth.oauth2.TokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.oauth2.TokenResponseException -> com.google.api.client.auth.oauth2.TokenResponseException:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.auth.oauth2.TokenErrorResponse details -> a
    com.google.api.client.auth.oauth2.TokenErrorResponse getDetails() -> getDetails
    com.google.api.client.auth.oauth2.TokenResponseException from(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse) -> from
com.google.api.client.auth.openidconnect.IdToken -> com.google.api.client.auth.openidconnect.IdToken:
    com.google.api.client.auth.openidconnect.IdToken$Payload getPayload() -> getPayload
    boolean verifyIssuer(java.lang.String) -> verifyIssuer
    boolean verifyAudience(java.util.Collection) -> verifyAudience
    boolean verifyTime(long,long) -> verifyTime
    boolean verifyExpirationTime(long,long) -> verifyExpirationTime
    boolean verifyIssuedAtTime(long,long) -> verifyIssuedAtTime
    com.google.api.client.auth.openidconnect.IdToken parse(com.google.api.client.json.JsonFactory,java.lang.String) -> parse
    com.google.api.client.json.webtoken.JsonWebToken$Payload getPayload() -> getPayload
com.google.api.client.auth.openidconnect.IdToken$Payload -> com.google.api.client.auth.openidconnect.IdToken$Payload:
    java.lang.Long authorizationTimeSeconds -> authorizationTimeSeconds
    java.lang.Object authorizedParty -> authorizedParty
    java.lang.Long getAuthorizationTimeSeconds() -> getAuthorizationTimeSeconds
    com.google.api.client.auth.openidconnect.IdToken$Payload setAuthorizationTimeSeconds(java.lang.Long) -> setAuthorizationTimeSeconds
    java.lang.Object getAuthorizedParty() -> getAuthorizedParty
    com.google.api.client.auth.openidconnect.IdToken$Payload setAuthorizedParty(java.lang.Object) -> setAuthorizedParty
com.google.api.client.auth.openidconnect.IdTokenResponse -> com.google.api.client.auth.openidconnect.IdTokenResponse:
    java.lang.String idToken -> idToken
    java.lang.String getIdToken() -> getIdToken
    com.google.api.client.auth.openidconnect.IdTokenResponse setIdToken(java.lang.String) -> setIdToken
    com.google.api.client.auth.openidconnect.IdTokenResponse setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.auth.openidconnect.IdTokenResponse setTokenType(java.lang.String) -> setTokenType
    com.google.api.client.auth.openidconnect.IdTokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.auth.openidconnect.IdTokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.openidconnect.IdTokenResponse setScope(java.lang.String) -> setScope
    com.google.api.client.auth.openidconnect.IdToken parseIdToken() -> parseIdToken
    com.google.api.client.auth.openidconnect.IdTokenResponse execute(com.google.api.client.auth.oauth2.TokenRequest) -> execute
    com.google.api.client.auth.openidconnect.IdTokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.openidconnect.IdTokenResponse clone() -> clone
    com.google.api.client.auth.oauth2.TokenResponse clone() -> clone
    com.google.api.client.auth.oauth2.TokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse setScope(java.lang.String) -> setScope
    com.google.api.client.auth.oauth2.TokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.TokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.auth.oauth2.TokenResponse setTokenType(java.lang.String) -> setTokenType
    com.google.api.client.auth.oauth2.TokenResponse setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.auth.security.PrivateKeys -> com.google.api.client.auth.security.PrivateKeys:
    java.security.PrivateKey loadFromKeyStore(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String) -> loadFromKeyStore
    java.security.PrivateKey loadFromKeyStore(java.security.KeyStore,java.io.InputStream,java.lang.String,java.lang.String,java.lang.String) -> loadFromKeyStore
    byte[] readFromPemFormattedFile(java.io.File) -> readFromPemFormattedFile
    java.security.PrivateKey loadFromPkcs8PemFile(java.io.File) -> loadFromPkcs8PemFile
    java.security.PrivateKey loadFromP12File(java.io.File,java.lang.String,java.lang.String,java.lang.String) -> loadFromP12File
com.google.api.client.googleapis.GoogleUtils -> com.google.api.client.googleapis.GoogleUtils:
    java.lang.Integer MAJOR_VERSION -> MAJOR_VERSION
    java.lang.Integer MINOR_VERSION -> MINOR_VERSION
    java.lang.Integer BUGFIX_VERSION -> BUGFIX_VERSION
    java.lang.String VERSION -> VERSION
    java.security.KeyStore certTrustStore -> a
    java.security.KeyStore getCertificateTrustStore() -> getCertificateTrustStore
com.google.api.client.googleapis.MethodOverride -> com.google.api.client.googleapis.MethodOverride:
    java.lang.String HEADER -> HEADER
    boolean overrideAllMethods -> a
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.googleapis.MethodOverride$Builder -> com.google.api.client.googleapis.MethodOverride$Builder:
    boolean overrideAllMethods -> a
    com.google.api.client.googleapis.MethodOverride build() -> build
    boolean getOverrideAllMethods() -> getOverrideAllMethods
    com.google.api.client.googleapis.MethodOverride$Builder setOverrideAllMethods(boolean) -> setOverrideAllMethods
com.google.api.client.googleapis.apache.GoogleApacheHttpTransport -> com.google.api.client.googleapis.apache.GoogleApacheHttpTransport:
    com.google.api.client.http.apache.ApacheHttpTransport newTrustedTransport() -> newTrustedTransport
com.google.api.client.googleapis.auth.clientlogin.AuthKeyValueParser -> aW:
    com.google.api.client.googleapis.auth.clientlogin.AuthKeyValueParser INSTANCE -> a
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
com.google.api.client.googleapis.auth.clientlogin.ClientLogin -> com.google.api.client.googleapis.auth.clientlogin.ClientLogin:
    com.google.api.client.http.HttpTransport transport -> transport
    com.google.api.client.http.GenericUrl serverUrl -> serverUrl
    java.lang.String applicationName -> applicationName
    java.lang.String authTokenType -> authTokenType
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String accountType -> accountType
    java.lang.String captchaToken -> captchaToken
    java.lang.String captchaAnswer -> captchaAnswer
    com.google.api.client.googleapis.auth.clientlogin.ClientLogin$Response authenticate() -> authenticate
    java.lang.String getAuthorizationHeaderValue(java.lang.String) -> getAuthorizationHeaderValue
com.google.api.client.googleapis.auth.clientlogin.ClientLogin$ErrorInfo -> com.google.api.client.googleapis.auth.clientlogin.ClientLogin$ErrorInfo:
    java.lang.String error -> error
    java.lang.String url -> url
    java.lang.String captchaToken -> captchaToken
    java.lang.String captchaUrl -> captchaUrl
com.google.api.client.googleapis.auth.clientlogin.ClientLogin$Response -> com.google.api.client.googleapis.auth.clientlogin.ClientLogin$Response:
    java.lang.String auth -> auth
    java.lang.String getAuthorizationHeaderValue() -> getAuthorizationHeaderValue
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.googleapis.auth.clientlogin.ClientLoginResponseException -> com.google.api.client.googleapis.auth.clientlogin.ClientLoginResponseException:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.googleapis.auth.clientlogin.ClientLogin$ErrorInfo details -> a
    com.google.api.client.googleapis.auth.clientlogin.ClientLogin$ErrorInfo getDetails() -> getDetails
com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow -> com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow:
    java.lang.String approvalPrompt -> a
    java.lang.String accessType -> b
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest newTokenRequest(java.lang.String) -> newTokenRequest
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl newAuthorizationUrl() -> newAuthorizationUrl
    java.lang.String getApprovalPrompt() -> getApprovalPrompt
    java.lang.String getAccessType() -> getAccessType
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest newTokenRequest(java.lang.String) -> newTokenRequest
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl newAuthorizationUrl() -> newAuthorizationUrl
com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder -> com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder:
    java.lang.String approvalPrompt -> m
    java.lang.String accessType -> n
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow build() -> build
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setCredentialStore(com.google.api.client.auth.oauth2.CredentialStore) -> setCredentialStore
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setMethod(com.google.api.client.auth.oauth2.Credential$AccessMethod) -> setMethod
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setClientId(java.lang.String) -> setClientId
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setAuthorizationServerEncodedUrl(java.lang.String) -> setAuthorizationServerEncodedUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setApprovalPrompt(java.lang.String) -> setApprovalPrompt
    java.lang.String getApprovalPrompt() -> getApprovalPrompt
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeFlow$Builder setAccessType(java.lang.String) -> setAccessType
    java.lang.String getAccessType() -> getAccessType
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setCredentialStore(com.google.api.client.auth.oauth2.CredentialStore) -> setCredentialStore
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setAuthorizationServerEncodedUrl(java.lang.String) -> setAuthorizationServerEncodedUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow$Builder setMethod(com.google.api.client.auth.oauth2.Credential$AccessMethod) -> setMethod
    com.google.api.client.auth.oauth2.AuthorizationCodeFlow build() -> build
com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl -> com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl:
    java.lang.String approvalPrompt -> approvalPrompt
    java.lang.String accessType -> accessType
    java.lang.String getApprovalPrompt() -> getApprovalPrompt
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setApprovalPrompt(java.lang.String) -> setApprovalPrompt
    java.lang.String getAccessType() -> getAccessType
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setAccessType(java.lang.String) -> setAccessType
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationCodeRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest -> com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest:
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setCode(java.lang.String) -> setCode
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse execute() -> execute
    com.google.api.client.googleapis.auth.oauth2.GoogleAuthorizationCodeTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setCode(java.lang.String) -> setCode
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.AuthorizationCodeTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse execute() -> execute
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl -> com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl:
    java.lang.String approvalPrompt -> approvalPrompt
    java.lang.String getApprovalPrompt() -> getApprovalPrompt
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setApprovalPrompt(java.lang.String) -> setApprovalPrompt
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleBrowserClientRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.auth.oauth2.BrowserClientRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl clone() -> clone
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setState(java.lang.String) -> setState
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setClientId(java.lang.String) -> setClientId
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setRedirectUri(java.lang.String) -> setRedirectUri
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.Iterable) -> setResponseTypes
    com.google.api.client.auth.oauth2.AuthorizationRequestUrl setResponseTypes(java.lang.String[]) -> setResponseTypes
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets -> com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets:
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details installed -> installed
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details web -> web
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details getInstalled() -> getInstalled
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets setInstalled(com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details) -> setInstalled
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details getWeb() -> getWeb
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets setWeb(com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details) -> setWeb
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details getDetails() -> getDetails
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets clone() -> clone
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets load(com.google.api.client.json.JsonFactory,java.io.InputStream) -> load
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details -> com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details:
    java.lang.String clientId -> clientId
    java.lang.String clientSecret -> clientSecret
    java.util.List redirectUris -> redirectUris
    java.lang.String authUri -> authUri
    java.lang.String tokenUri -> tokenUri
    java.lang.String getClientId() -> getClientId
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setClientId(java.lang.String) -> setClientId
    java.lang.String getClientSecret() -> getClientSecret
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setClientSecret(java.lang.String) -> setClientSecret
    java.util.List getRedirectUris() -> getRedirectUris
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setRedirectUris(java.util.List) -> setRedirectUris
    java.lang.String getAuthUri() -> getAuthUri
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setAuthUri(java.lang.String) -> setAuthUri
    java.lang.String getTokenUri() -> getTokenUri
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details setTokenUri(java.lang.String) -> setTokenUri
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets$Details clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleCredential -> com.google.api.client.googleapis.auth.oauth2.GoogleCredential:
    java.lang.String serviceAccountId -> b
    java.lang.String serviceAccountScopes -> c
    java.security.PrivateKey serviceAccountPrivateKey -> d
    java.lang.String serviceAccountUser -> e
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setExpirationTimeMilliseconds(java.lang.Long) -> setExpirationTimeMilliseconds
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential setFromTokenResponse(com.google.api.client.auth.oauth2.TokenResponse) -> setFromTokenResponse
    com.google.api.client.auth.oauth2.TokenResponse executeRefreshToken() -> executeRefreshToken
    java.lang.String getServiceAccountId() -> getServiceAccountId
    java.lang.String getServiceAccountScopes() -> getServiceAccountScopes
    java.security.PrivateKey getServiceAccountPrivateKey() -> getServiceAccountPrivateKey
    java.lang.String getServiceAccountUser() -> getServiceAccountUser
    com.google.api.client.auth.oauth2.Credential setFromTokenResponse(com.google.api.client.auth.oauth2.TokenResponse) -> setFromTokenResponse
    com.google.api.client.auth.oauth2.Credential setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.auth.oauth2.Credential setExpirationTimeMilliseconds(java.lang.Long) -> setExpirationTimeMilliseconds
    com.google.api.client.auth.oauth2.Credential setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.Credential setAccessToken(java.lang.String) -> setAccessToken
com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder -> com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder:
    java.lang.String serviceAccountId -> i
    java.lang.String serviceAccountScopes -> j
    java.security.PrivateKey serviceAccountPrivateKey -> k
    java.lang.String serviceAccountUser -> l
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential build() -> build
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setClientSecrets(java.lang.String,java.lang.String) -> setClientSecrets
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setClientSecrets(com.google.api.client.googleapis.auth.oauth2.GoogleClientSecrets) -> setClientSecrets
    java.lang.String getServiceAccountId() -> getServiceAccountId
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountId(java.lang.String) -> setServiceAccountId
    java.lang.String getServiceAccountScopes() -> getServiceAccountScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountScopes(java.lang.String[]) -> setServiceAccountScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountScopes(java.lang.Iterable) -> setServiceAccountScopes
    java.security.PrivateKey getServiceAccountPrivateKey() -> getServiceAccountPrivateKey
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountPrivateKey(java.security.PrivateKey) -> setServiceAccountPrivateKey
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountPrivateKeyFromP12File(java.io.File) -> setServiceAccountPrivateKeyFromP12File
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountPrivateKeyFromPemFile(java.io.File) -> setServiceAccountPrivateKeyFromPemFile
    java.lang.String getServiceAccountUser() -> getServiceAccountUser
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setServiceAccountUser(java.lang.String) -> setServiceAccountUser
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setRefreshListeners(java.util.List) -> setRefreshListeners
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setTokenServerEncodedUrl(java.lang.String) -> setTokenServerEncodedUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleCredential$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.Credential$Builder setRefreshListeners(java.util.List) -> setRefreshListeners
    com.google.api.client.auth.oauth2.Credential$Builder addRefreshListener(com.google.api.client.auth.oauth2.CredentialRefreshListener) -> addRefreshListener
    com.google.api.client.auth.oauth2.Credential$Builder setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.Credential$Builder setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerEncodedUrl(java.lang.String) -> setTokenServerEncodedUrl
    com.google.api.client.auth.oauth2.Credential$Builder setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.Credential$Builder setJsonFactory(com.google.api.client.json.JsonFactory) -> setJsonFactory
    com.google.api.client.auth.oauth2.Credential$Builder setClock(com.google.api.client.util.Clock) -> setClock
    com.google.api.client.auth.oauth2.Credential$Builder setTransport(com.google.api.client.http.HttpTransport) -> setTransport
    com.google.api.client.auth.oauth2.Credential build() -> build
com.google.api.client.googleapis.auth.oauth2.GoogleIdToken -> com.google.api.client.googleapis.auth.oauth2.GoogleIdToken:
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken parse(com.google.api.client.json.JsonFactory,java.lang.String) -> parse
    boolean verify(com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier) -> verify
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload getPayload() -> getPayload
    com.google.api.client.auth.openidconnect.IdToken$Payload getPayload() -> getPayload
    com.google.api.client.json.webtoken.JsonWebToken$Payload getPayload() -> getPayload
com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload -> com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload:
    java.lang.String userId -> userId
    java.lang.String issuee -> issuee
    java.lang.String accessTokenHash -> accessTokenHash
    java.lang.String hostedDomain -> hostedDomain
    java.lang.String email -> email
    boolean emailVerified -> emailVerified
    java.lang.String getUserId() -> getUserId
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setUserId(java.lang.String) -> setUserId
    java.lang.String getIssuee() -> getIssuee
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setIssuee(java.lang.String) -> setIssuee
    java.lang.String getAccessTokenHash() -> getAccessTokenHash
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setAccessTokenHash(java.lang.String) -> setAccessTokenHash
    java.lang.String getHostedDomain() -> getHostedDomain
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setHostedDomain(java.lang.String) -> setHostedDomain
    java.lang.String getEmail() -> getEmail
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setEmail(java.lang.String) -> setEmail
    boolean getEmailVerified() -> getEmailVerified
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload setEmailVerified(boolean) -> setEmailVerified
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken$Payload clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Payload clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier -> com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier:
    java.util.regex.Pattern MAX_AGE_PATTERN -> a
    com.google.api.client.json.JsonFactory jsonFactory -> b
    java.util.List publicKeys -> c
    long expirationTimeMilliseconds -> d
    java.util.Set clientIds -> e
    com.google.api.client.http.HttpTransport transport -> f
    java.util.concurrent.locks.Lock lock -> g
    com.google.api.client.util.Clock clock -> h
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.util.Set getClientIds() -> getClientIds
    java.util.List getPublicKeys() -> getPublicKeys
    long getExpirationTimeMilliseconds() -> getExpirationTimeMilliseconds
    boolean verify(com.google.api.client.googleapis.auth.oauth2.GoogleIdToken) -> verify
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken verify(java.lang.String) -> verify
    boolean verify(com.google.api.client.googleapis.auth.oauth2.GoogleIdToken,java.lang.String) -> verify
    boolean verify(java.util.Set,com.google.api.client.googleapis.auth.oauth2.GoogleIdToken) -> verify
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier loadPublicCerts() -> loadPublicCerts
    long getCacheTimeInSec(com.google.api.client.http.HttpHeaders) -> a
com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder -> com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder:
    com.google.api.client.http.HttpTransport transport -> a
    com.google.api.client.json.JsonFactory jsonFactory -> b
    java.util.Set clientIds -> c
    com.google.api.client.util.Clock clock -> d
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier build() -> build
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.util.Set getClientIds() -> getClientIds
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder setClientIds(java.lang.Iterable) -> setClientIds
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder setClientIds(java.lang.String[]) -> setClientIds
    com.google.api.client.util.Clock getClock() -> getClock
    com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier$Builder setClock(com.google.api.client.util.Clock) -> setClock
com.google.api.client.googleapis.auth.oauth2.GoogleOAuthConstants -> com.google.api.client.googleapis.auth.oauth2.GoogleOAuthConstants:
    java.lang.String AUTHORIZATION_SERVER_URL -> AUTHORIZATION_SERVER_URL
    java.lang.String TOKEN_SERVER_URL -> TOKEN_SERVER_URL
    java.lang.String OOB_REDIRECT_URI -> OOB_REDIRECT_URI
com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest -> com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest:
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse execute() -> execute
    com.google.api.client.googleapis.auth.oauth2.GoogleRefreshTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.RefreshTokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.RefreshTokenRequest setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.RefreshTokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.RefreshTokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.RefreshTokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.RefreshTokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.RefreshTokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.RefreshTokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.auth.oauth2.TokenRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse execute() -> execute
    com.google.api.client.auth.oauth2.TokenRequest setGrantType(java.lang.String) -> setGrantType
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.Iterable) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setScopes(java.lang.String[]) -> setScopes
    com.google.api.client.auth.oauth2.TokenRequest setTokenServerUrl(com.google.api.client.http.GenericUrl) -> setTokenServerUrl
    com.google.api.client.auth.oauth2.TokenRequest setClientAuthentication(com.google.api.client.http.HttpExecuteInterceptor) -> setClientAuthentication
    com.google.api.client.auth.oauth2.TokenRequest setRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setRequestInitializer
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse -> com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse:
    java.lang.String idToken -> idToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setTokenType(java.lang.String) -> setTokenType
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setScope(java.lang.String) -> setScope
    java.lang.String getIdToken() -> getIdToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse setIdToken(java.lang.String) -> setIdToken
    com.google.api.client.googleapis.auth.oauth2.GoogleIdToken parseIdToken() -> parseIdToken
    boolean verifyIdToken(com.google.api.client.googleapis.auth.oauth2.GoogleIdTokenVerifier) -> verifyIdToken
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.auth.oauth2.GoogleTokenResponse clone() -> clone
    com.google.api.client.auth.oauth2.TokenResponse clone() -> clone
    com.google.api.client.auth.oauth2.TokenResponse set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.auth.oauth2.TokenResponse setScope(java.lang.String) -> setScope
    com.google.api.client.auth.oauth2.TokenResponse setRefreshToken(java.lang.String) -> setRefreshToken
    com.google.api.client.auth.oauth2.TokenResponse setExpiresInSeconds(java.lang.Long) -> setExpiresInSeconds
    com.google.api.client.auth.oauth2.TokenResponse setTokenType(java.lang.String) -> setTokenType
    com.google.api.client.auth.oauth2.TokenResponse setAccessToken(java.lang.String) -> setAccessToken
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.batch.BatchCallback -> com.google.api.client.googleapis.batch.BatchCallback:
    void onSuccess(java.lang.Object,com.google.api.client.http.HttpHeaders) -> onSuccess
    void onFailure(java.lang.Object,com.google.api.client.http.HttpHeaders) -> onFailure
com.google.api.client.googleapis.batch.BatchRequest -> com.google.api.client.googleapis.batch.BatchRequest:
    com.google.api.client.http.GenericUrl batchUrl -> b
    com.google.api.client.http.HttpRequestFactory requestFactory -> c
    java.util.List requestInfos -> a
    com.google.api.client.googleapis.batch.BatchRequest setBatchUrl(com.google.api.client.http.GenericUrl) -> setBatchUrl
    com.google.api.client.http.GenericUrl getBatchUrl() -> getBatchUrl
    com.google.api.client.googleapis.batch.BatchRequest queue(com.google.api.client.http.HttpRequest,java.lang.Class,java.lang.Class,com.google.api.client.googleapis.batch.BatchCallback) -> queue
    int size() -> size
    void execute() -> execute
com.google.api.client.googleapis.batch.BatchRequest$BatchInterceptor -> aX:
    com.google.api.client.http.HttpExecuteInterceptor originalInterceptor -> b
    com.google.api.client.googleapis.batch.BatchRequest this$0 -> a
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.googleapis.batch.BatchRequest$RequestInfo -> aY:
    com.google.api.client.googleapis.batch.BatchCallback callback -> a
    java.lang.Class dataClass -> b
    java.lang.Class errorClass -> c
    com.google.api.client.http.HttpRequest request -> d
com.google.api.client.googleapis.batch.BatchUnparsedResponse -> aZ:
    java.lang.String boundary -> d
    java.util.List requestInfos -> e
    java.io.BufferedReader bufferedReader -> f
    boolean hasNext -> a
    java.util.List unsuccessfulRequestInfos -> b
    boolean backOffRequired -> c
    int contentId -> g
    boolean retryAllowed -> h
    void parseNextResponse() -> a
    java.lang.Object getParsedDataClass$6c94ac50(java.lang.Class,com.google.api.client.http.HttpResponse,com.google.api.client.googleapis.batch.BatchRequest$RequestInfo) -> a
    void checkForFinalBoundary(java.lang.String) -> a
com.google.api.client.googleapis.batch.BatchUnparsedResponse$FakeLowLevelHttpRequest -> ba:
    java.lang.String partContent -> a
    int statusCode -> b
    java.util.List headerNames -> c
    java.util.List headerValues -> d
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setContent(com.google.api.client.http.HttpContent) -> setContent
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.googleapis.batch.BatchUnparsedResponse$FakeLowLevelHttpResponse -> bb:
    java.io.InputStream partContent -> a
    int statusCode -> b
    java.util.List headerNames -> c
    java.util.List headerValues -> d
    java.io.InputStream getContent() -> getContent
    int getStatusCode() -> getStatusCode
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getStatusLine() -> getStatusLine
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
com.google.api.client.googleapis.batch.BatchUnparsedResponse$FakeResponseHttpTransport -> bc:
    int statusCode -> b
    java.lang.String partContent -> c
    java.util.List headerNames -> d
    java.util.List headerValues -> e
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
com.google.api.client.googleapis.batch.HttpRequestContent -> bd:
    com.google.api.client.http.HttpRequest request -> a
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.googleapis.batch.json.JsonBatchCallback -> com.google.api.client.googleapis.batch.json.JsonBatchCallback:
    void onFailure(com.google.api.client.googleapis.json.GoogleJsonErrorContainer,com.google.api.client.http.HttpHeaders) -> onFailure
    void onFailure(com.google.api.client.googleapis.json.GoogleJsonError,com.google.api.client.http.HttpHeaders) -> onFailure
    void onFailure(java.lang.Object,com.google.api.client.http.HttpHeaders) -> onFailure
com.google.api.client.googleapis.javanet.GoogleNetHttpTransport -> com.google.api.client.googleapis.javanet.GoogleNetHttpTransport:
    com.google.api.client.http.javanet.NetHttpTransport newTrustedTransport() -> newTrustedTransport
com.google.api.client.googleapis.json.GoogleJsonError -> com.google.api.client.googleapis.json.GoogleJsonError:
    java.util.List errors -> errors
    int code -> code
    java.lang.String message -> message
    com.google.api.client.googleapis.json.GoogleJsonError parse(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse) -> parse
    java.util.List getErrors() -> getErrors
    void setErrors(java.util.List) -> setErrors
    int getCode() -> getCode
    void setCode(int) -> setCode
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    com.google.api.client.googleapis.json.GoogleJsonError set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.json.GoogleJsonError clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.json.GoogleJsonError$ErrorInfo -> com.google.api.client.googleapis.json.GoogleJsonError$ErrorInfo:
    java.lang.String domain -> domain
    java.lang.String reason -> reason
    java.lang.String message -> message
    java.lang.String location -> location
    java.lang.String locationType -> locationType
    java.lang.String getDomain() -> getDomain
    void setDomain(java.lang.String) -> setDomain
    java.lang.String getReason() -> getReason
    void setReason(java.lang.String) -> setReason
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getLocation() -> getLocation
    void setLocation(java.lang.String) -> setLocation
    java.lang.String getLocationType() -> getLocationType
    void setLocationType(java.lang.String) -> setLocationType
    com.google.api.client.googleapis.json.GoogleJsonError$ErrorInfo set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.json.GoogleJsonError$ErrorInfo clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.json.GoogleJsonErrorContainer -> com.google.api.client.googleapis.json.GoogleJsonErrorContainer:
    com.google.api.client.googleapis.json.GoogleJsonError error -> error
    com.google.api.client.googleapis.json.GoogleJsonError getError() -> getError
    void setError(com.google.api.client.googleapis.json.GoogleJsonError) -> setError
    com.google.api.client.googleapis.json.GoogleJsonErrorContainer set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.json.GoogleJsonErrorContainer clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.googleapis.json.GoogleJsonResponseException -> com.google.api.client.googleapis.json.GoogleJsonResponseException:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.googleapis.json.GoogleJsonError details -> a
    com.google.api.client.googleapis.json.GoogleJsonError getDetails() -> getDetails
    com.google.api.client.googleapis.json.GoogleJsonResponseException from(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpResponse) -> from
    com.google.api.client.http.HttpResponse execute(com.google.api.client.json.JsonFactory,com.google.api.client.http.HttpRequest) -> execute
com.google.api.client.googleapis.json.GoogleJsonRpcHttpTransport -> com.google.api.client.googleapis.json.GoogleJsonRpcHttpTransport:
    java.lang.String rpcServerUrl -> a
    com.google.api.client.http.HttpTransport transport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    java.lang.String mimeType -> d
    java.lang.String accept -> e
    com.google.api.client.http.HttpTransport getHttpTransport() -> getHttpTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getRpcServerUrl() -> getRpcServerUrl
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getAccept() -> getAccept
    com.google.api.client.http.HttpRequest buildPostRequest(com.google.api.client.json.rpc2.JsonRpcRequest) -> buildPostRequest
    com.google.api.client.http.HttpRequest buildPostRequest(java.util.List) -> buildPostRequest
    com.google.api.client.http.HttpRequest internalExecute(java.lang.Object) -> a
com.google.api.client.googleapis.json.GoogleJsonRpcHttpTransport$Builder -> com.google.api.client.googleapis.json.GoogleJsonRpcHttpTransport$Builder:
    com.google.api.client.http.GenericUrl DEFAULT_SERVER_URL -> a
    com.google.api.client.http.HttpTransport httpTransport -> b
    com.google.api.client.json.JsonFactory jsonFactory -> c
    com.google.api.client.http.GenericUrl rpcServerUrl -> d
    java.lang.String mimeType -> e
    java.lang.String accept -> f
    com.google.api.client.googleapis.json.GoogleJsonRpcHttpTransport$Builder setRpcServerUrl(com.google.api.client.http.GenericUrl) -> setRpcServerUrl
    com.google.api.client.googleapis.json.GoogleJsonRpcHttpTransport$Builder setMimeType(java.lang.String) -> setMimeType
    com.google.api.client.googleapis.json.GoogleJsonRpcHttpTransport$Builder setAccept(java.lang.String) -> setAccept
    com.google.api.client.googleapis.json.GoogleJsonRpcHttpTransport build() -> build
    com.google.api.client.http.HttpTransport getHttpTransport() -> getHttpTransport
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.http.GenericUrl getRpcServerUrl() -> getRpcServerUrl
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getAccept() -> getAccept
com.google.api.client.googleapis.json.JsonCContent -> com.google.api.client.googleapis.json.JsonCContent:
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.googleapis.json.JsonCContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.http.json.JsonHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.googleapis.json.JsonCParser -> com.google.api.client.googleapis.json.JsonCParser:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    com.google.api.client.json.JsonParser initializeParser(com.google.api.client.json.JsonParser) -> initializeParser
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
com.google.api.client.googleapis.media.MediaHttpDownloader -> com.google.api.client.googleapis.media.MediaHttpDownloader:
    int MAXIMUM_CHUNK_SIZE -> MAXIMUM_CHUNK_SIZE
    com.google.api.client.http.HttpRequestFactory requestFactory -> a
    com.google.api.client.http.HttpTransport transport -> b
    boolean backOffPolicyEnabled -> c
    boolean directDownloadEnabled -> d
    com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener progressListener -> e
    int chunkSize -> f
    long mediaContentLength -> g
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState downloadState -> h
    long bytesDownloaded -> i
    long lastBytePos -> j
    void download(com.google.api.client.http.GenericUrl,java.io.OutputStream) -> download
    void download(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpHeaders,java.io.OutputStream) -> download
    com.google.api.client.http.HttpResponse executeCurrentRequest(long,com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpHeaders,java.io.OutputStream) -> a
    com.google.api.client.googleapis.media.MediaHttpDownloader setBytesDownloaded(long) -> setBytesDownloaded
    com.google.api.client.googleapis.media.MediaHttpDownloader setContentRange(long,int) -> setContentRange
    boolean isDirectDownloadEnabled() -> isDirectDownloadEnabled
    com.google.api.client.googleapis.media.MediaHttpDownloader setDirectDownloadEnabled(boolean) -> setDirectDownloadEnabled
    com.google.api.client.googleapis.media.MediaHttpDownloader setProgressListener(com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener) -> setProgressListener
    com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener getProgressListener() -> getProgressListener
    com.google.api.client.googleapis.media.MediaHttpDownloader setBackOffPolicyEnabled(boolean) -> setBackOffPolicyEnabled
    boolean isBackOffPolicyEnabled() -> isBackOffPolicyEnabled
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.googleapis.media.MediaHttpDownloader setChunkSize(int) -> setChunkSize
    int getChunkSize() -> getChunkSize
    long getNumBytesDownloaded() -> getNumBytesDownloaded
    long getLastBytePosition() -> getLastBytePosition
    void updateStateAndNotifyListener(com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState) -> a
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState getDownloadState() -> getDownloadState
    double getProgress() -> getProgress
com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState -> com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState:
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState NOT_STARTED -> NOT_STARTED
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState MEDIA_IN_PROGRESS -> MEDIA_IN_PROGRESS
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState MEDIA_COMPLETE -> MEDIA_COMPLETE
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState[] $VALUES -> a
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState[] values() -> values
    com.google.api.client.googleapis.media.MediaHttpDownloader$DownloadState valueOf(java.lang.String) -> valueOf
com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener -> com.google.api.client.googleapis.media.MediaHttpDownloaderProgressListener:
    void progressChanged(com.google.api.client.googleapis.media.MediaHttpDownloader) -> progressChanged
com.google.api.client.googleapis.media.MediaHttpUploader -> com.google.api.client.googleapis.media.MediaHttpUploader:
    java.lang.String CONTENT_LENGTH_HEADER -> CONTENT_LENGTH_HEADER
    java.lang.String CONTENT_TYPE_HEADER -> CONTENT_TYPE_HEADER
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState uploadState -> a
    int MINIMUM_CHUNK_SIZE -> MINIMUM_CHUNK_SIZE
    int DEFAULT_CHUNK_SIZE -> DEFAULT_CHUNK_SIZE
    com.google.api.client.http.AbstractInputStreamContent mediaContent -> b
    com.google.api.client.http.HttpRequestFactory requestFactory -> c
    com.google.api.client.http.HttpTransport transport -> d
    com.google.api.client.http.HttpContent metadata -> e
    long mediaContentLength -> f
    boolean isMediaContentLengthCalculated -> g
    java.lang.String initiationRequestMethod -> h
    com.google.api.client.http.HttpHeaders initiationHeaders -> i
    com.google.api.client.http.HttpRequest currentRequest -> j
    java.io.InputStream contentInputStream -> k
    boolean backOffPolicyEnabled -> l
    boolean directUploadEnabled -> m
    com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener progressListener -> n
    long bytesUploaded -> o
    int chunkSize -> p
    java.lang.Byte cachedByte -> q
    byte[] currentRequestContentBuffer -> r
    boolean disableGZipContent -> s
    com.google.api.client.http.HttpResponse upload(com.google.api.client.http.GenericUrl) -> upload
    long getMediaContentLength() -> a
    com.google.api.client.http.HttpResponse executeUploadInitiation(com.google.api.client.http.GenericUrl) -> a
    com.google.api.client.http.HttpResponse executeCurrentRequest(com.google.api.client.http.HttpRequest) -> a
    com.google.api.client.http.HttpResponse executeCurrentRequestWithBackOffAndGZip(com.google.api.client.http.HttpRequest) -> b
    void setContentAndHeadersOnCurrentRequest(long) -> a
    void serverErrorCallback() -> serverErrorCallback
    long getNextByteIndex(java.lang.String) -> a
    com.google.api.client.http.HttpContent getMetadata() -> getMetadata
    com.google.api.client.googleapis.media.MediaHttpUploader setMetadata(com.google.api.client.http.HttpContent) -> setMetadata
    com.google.api.client.http.HttpContent getMediaContent() -> getMediaContent
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.googleapis.media.MediaHttpUploader setBackOffPolicyEnabled(boolean) -> setBackOffPolicyEnabled
    boolean isBackOffPolicyEnabled() -> isBackOffPolicyEnabled
    com.google.api.client.googleapis.media.MediaHttpUploader setDirectUploadEnabled(boolean) -> setDirectUploadEnabled
    boolean isDirectUploadEnabled() -> isDirectUploadEnabled
    com.google.api.client.googleapis.media.MediaHttpUploader setProgressListener(com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener) -> setProgressListener
    com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener getProgressListener() -> getProgressListener
    com.google.api.client.googleapis.media.MediaHttpUploader setChunkSize(int) -> setChunkSize
    int getChunkSize() -> getChunkSize
    boolean getDisableGZipContent() -> getDisableGZipContent
    com.google.api.client.googleapis.media.MediaHttpUploader setDisableGZipContent(boolean) -> setDisableGZipContent
    java.lang.String getInitiationRequestMethod() -> getInitiationRequestMethod
    com.google.api.client.googleapis.media.MediaHttpUploader setInitiationRequestMethod(java.lang.String) -> setInitiationRequestMethod
    com.google.api.client.googleapis.media.MediaHttpUploader setInitiationHeaders(com.google.api.client.http.HttpHeaders) -> setInitiationHeaders
    com.google.api.client.http.HttpHeaders getInitiationHeaders() -> getInitiationHeaders
    long getNumBytesUploaded() -> getNumBytesUploaded
    void updateStateAndNotifyListener(com.google.api.client.googleapis.media.MediaHttpUploader$UploadState) -> a
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState getUploadState() -> getUploadState
    double getProgress() -> getProgress
com.google.api.client.googleapis.media.MediaHttpUploader$UploadState -> com.google.api.client.googleapis.media.MediaHttpUploader$UploadState:
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState NOT_STARTED -> NOT_STARTED
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState INITIATION_STARTED -> INITIATION_STARTED
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState INITIATION_COMPLETE -> INITIATION_COMPLETE
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState MEDIA_IN_PROGRESS -> MEDIA_IN_PROGRESS
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState MEDIA_COMPLETE -> MEDIA_COMPLETE
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState[] $VALUES -> a
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState[] values() -> values
    com.google.api.client.googleapis.media.MediaHttpUploader$UploadState valueOf(java.lang.String) -> valueOf
com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener -> com.google.api.client.googleapis.media.MediaHttpUploaderProgressListener:
    void progressChanged(com.google.api.client.googleapis.media.MediaHttpUploader) -> progressChanged
com.google.api.client.googleapis.media.MediaUploadExponentialBackOffPolicy -> be:
    com.google.api.client.googleapis.media.MediaHttpUploader uploader -> b
    long getNextBackOffMillis() -> getNextBackOffMillis
com.google.api.client.googleapis.services.AbstractGoogleClient -> com.google.api.client.googleapis.services.AbstractGoogleClient:
    java.util.logging.Logger LOGGER -> a
    com.google.api.client.http.HttpRequestFactory requestFactory -> b
    com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer -> c
    java.lang.String rootUrl -> d
    java.lang.String servicePath -> e
    java.lang.String applicationName -> f
    com.google.api.client.util.ObjectParser objectParser -> g
    boolean suppressPatternChecks -> h
    boolean suppressRequiredParameterChecks -> i
    java.lang.String getRootUrl() -> getRootUrl
    java.lang.String getServicePath() -> getServicePath
    java.lang.String getBaseUrl() -> getBaseUrl
    java.lang.String getApplicationName() -> getApplicationName
    com.google.api.client.http.HttpRequestFactory getRequestFactory() -> getRequestFactory
    com.google.api.client.googleapis.services.GoogleClientRequestInitializer getGoogleClientRequestInitializer() -> getGoogleClientRequestInitializer
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
    com.google.api.client.googleapis.batch.BatchRequest batch() -> batch
    com.google.api.client.googleapis.batch.BatchRequest batch(com.google.api.client.http.HttpRequestInitializer) -> batch
    boolean getSuppressPatternChecks() -> getSuppressPatternChecks
    boolean getSuppressRequiredParameterChecks() -> getSuppressRequiredParameterChecks
    java.lang.String normalizeRootUrl(java.lang.String) -> a
    java.lang.String normalizeServicePath(java.lang.String) -> b
com.google.api.client.googleapis.services.AbstractGoogleClient$Builder -> com.google.api.client.googleapis.services.AbstractGoogleClient$Builder:
    com.google.api.client.http.HttpTransport transport -> a
    com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer -> b
    com.google.api.client.http.HttpRequestInitializer httpRequestInitializer -> c
    com.google.api.client.util.ObjectParser objectParser -> d
    java.lang.String rootUrl -> e
    java.lang.String servicePath -> f
    java.lang.String applicationName -> g
    boolean suppressPatternChecks -> h
    boolean suppressRequiredParameterChecks -> i
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
    java.lang.String getRootUrl() -> getRootUrl
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    java.lang.String getServicePath() -> getServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.GoogleClientRequestInitializer getGoogleClientRequestInitializer() -> getGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.http.HttpRequestInitializer getHttpRequestInitializer() -> getHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    java.lang.String getApplicationName() -> getApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    boolean getSuppressPatternChecks() -> getSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    boolean getSuppressRequiredParameterChecks() -> getSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
com.google.api.client.googleapis.services.AbstractGoogleClientRequest -> com.google.api.client.googleapis.services.AbstractGoogleClientRequest:
    com.google.api.client.googleapis.services.AbstractGoogleClient abstractGoogleClient -> a
    java.lang.String requestMethod -> b
    java.lang.String uriTemplate -> e
    com.google.api.client.http.HttpContent httpContent -> f
    com.google.api.client.http.HttpHeaders requestHeaders -> g
    com.google.api.client.http.HttpHeaders lastResponseHeaders -> h
    int lastStatusCode -> i
    java.lang.String lastStatusMessage -> j
    boolean disableGZipContent -> k
    java.lang.Class responseClass -> l
    com.google.api.client.googleapis.media.MediaHttpUploader uploader -> m
    com.google.api.client.googleapis.media.MediaHttpDownloader downloader -> n
    boolean getDisableGZipContent() -> getDisableGZipContent
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    java.lang.String getRequestMethod() -> getRequestMethod
    java.lang.String getUriTemplate() -> getUriTemplate
    com.google.api.client.http.HttpContent getHttpContent() -> getHttpContent
    com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.http.HttpHeaders getRequestHeaders() -> getRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.http.HttpHeaders getLastResponseHeaders() -> getLastResponseHeaders
    int getLastStatusCode() -> getLastStatusCode
    java.lang.String getLastStatusMessage() -> getLastStatusMessage
    java.lang.Class getResponseClass() -> getResponseClass
    com.google.api.client.googleapis.media.MediaHttpUploader getMediaHttpUploader() -> getMediaHttpUploader
    void initializeMediaUpload(com.google.api.client.http.AbstractInputStreamContent) -> initializeMediaUpload
    com.google.api.client.googleapis.media.MediaHttpDownloader getMediaHttpDownloader() -> getMediaHttpDownloader
    void initializeMediaDownload() -> initializeMediaDownload
    com.google.api.client.http.GenericUrl buildHttpRequestUrl() -> buildHttpRequestUrl
    com.google.api.client.http.HttpRequest buildHttpRequest() -> buildHttpRequest
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequest(boolean) -> a
    com.google.api.client.http.HttpResponse executeUnparsed() -> executeUnparsed
    com.google.api.client.http.HttpResponse executeMedia() -> executeMedia
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpResponse executeUnparsed(boolean) -> b
    java.io.IOException newExceptionOnError(com.google.api.client.http.HttpResponse) -> newExceptionOnError
    java.lang.Object execute() -> execute
    java.io.InputStream executeAsInputStream() -> executeAsInputStream
    java.io.InputStream executeMediaAsInputStream() -> executeMediaAsInputStream
    void executeAndDownloadTo(java.io.OutputStream) -> executeAndDownloadTo
    void executeMediaAndDownloadTo(java.io.OutputStream) -> executeMediaAndDownloadTo
    void queue(com.google.api.client.googleapis.batch.BatchRequest,java.lang.Class,com.google.api.client.googleapis.batch.BatchCallback) -> queue
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    void checkRequiredParameter(java.lang.Object,java.lang.String) -> checkRequiredParameter
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.services.AbstractGoogleClientRequest$1 -> bf:
    com.google.api.client.http.HttpResponseInterceptor val$responseInterceptor -> a
    com.google.api.client.http.HttpRequest val$httpRequest -> b
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest this$0 -> c
    void interceptResponse(com.google.api.client.http.HttpResponse) -> interceptResponse
com.google.api.client.googleapis.services.CommonGoogleClientRequestInitializer -> com.google.api.client.googleapis.services.CommonGoogleClientRequestInitializer:
    java.lang.String key -> a
    java.lang.String userIp -> b
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
    java.lang.String getKey() -> getKey
    java.lang.String getUserIp() -> getUserIp
com.google.api.client.googleapis.services.GoogleClientRequestInitializer -> com.google.api.client.googleapis.services.GoogleClientRequestInitializer:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient -> com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient:
    com.google.api.client.json.JsonObjectParser getObjectParser() -> getObjectParser
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder -> com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder:
    com.google.api.client.json.JsonObjectParser getObjectParser() -> getObjectParser
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient build() -> build
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.util.ObjectParser getObjectParser() -> getObjectParser
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest -> com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest:
    java.lang.Object jsonContent -> a
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    void queue(com.google.api.client.googleapis.batch.BatchRequest,com.google.api.client.googleapis.batch.json.JsonBatchCallback) -> queue
    com.google.api.client.googleapis.json.GoogleJsonResponseException newExceptionOnError(com.google.api.client.http.HttpResponse) -> newExceptionOnError
    java.lang.Object getJsonContent() -> getJsonContent
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    java.io.IOException newExceptionOnError(com.google.api.client.http.HttpResponse) -> newExceptionOnError
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.services.json.CommonGoogleJsonClientRequestInitializer -> com.google.api.client.googleapis.services.json.CommonGoogleJsonClientRequestInitializer:
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
    void initializeJsonRequest(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest) -> initializeJsonRequest
com.google.api.client.googleapis.subscriptions.EventTypes -> com.google.api.client.googleapis.subscriptions.EventTypes:
    java.lang.String SYNC -> SYNC
    java.lang.String UPDATED -> UPDATED
    java.lang.String DELETED -> DELETED
com.google.api.client.googleapis.subscriptions.MemorySubscriptionStore -> com.google.api.client.googleapis.subscriptions.MemorySubscriptionStore:
    java.util.concurrent.locks.Lock lock -> a
    java.util.SortedMap storedSubscriptions -> b
    void storeSubscription(com.google.api.client.googleapis.subscriptions.StoredSubscription) -> storeSubscription
    void removeSubscription(com.google.api.client.googleapis.subscriptions.StoredSubscription) -> removeSubscription
    java.util.Collection listSubscriptions() -> listSubscriptions
    com.google.api.client.googleapis.subscriptions.StoredSubscription getSubscription(java.lang.String) -> getSubscription
com.google.api.client.googleapis.subscriptions.Notification -> com.google.api.client.googleapis.subscriptions.Notification:
    java.lang.String subscriptionId -> a
    java.lang.String topicId -> b
    java.lang.String topicURI -> c
    java.lang.String clientToken -> d
    long messageNumber -> e
    java.lang.String eventType -> f
    java.lang.String changeType -> g
    java.lang.String getSubscriptionId() -> getSubscriptionId
    java.lang.String getTopicId() -> getTopicId
    java.lang.String getClientToken() -> getClientToken
    java.lang.String getEventType() -> getEventType
    java.lang.String getTopicURI() -> getTopicURI
    long getMessageNumber() -> getMessageNumber
    java.lang.String getChangeType() -> getChangeType
com.google.api.client.googleapis.subscriptions.NotificationCallback -> com.google.api.client.googleapis.subscriptions.NotificationCallback:
    void handleNotification(com.google.api.client.googleapis.subscriptions.StoredSubscription,com.google.api.client.googleapis.subscriptions.UnparsedNotification) -> handleNotification
com.google.api.client.googleapis.subscriptions.NotificationHeaders -> com.google.api.client.googleapis.subscriptions.NotificationHeaders:
    java.lang.String CLIENT_TOKEN -> CLIENT_TOKEN
    java.lang.String SUBSCRIPTION_ID -> SUBSCRIPTION_ID
    java.lang.String TOPIC_ID -> TOPIC_ID
    java.lang.String TOPIC_URI -> TOPIC_URI
    java.lang.String EVENT_TYPE_HEADER -> EVENT_TYPE_HEADER
    java.lang.String CHANGED_HEADER -> CHANGED_HEADER
    java.lang.String MESSAGE_NUMBER_HEADER -> MESSAGE_NUMBER_HEADER
com.google.api.client.googleapis.subscriptions.StoredSubscription -> com.google.api.client.googleapis.subscriptions.StoredSubscription:
    long serialVersionUID -> serialVersionUID
    com.google.api.client.googleapis.subscriptions.NotificationCallback notificationCallback -> a
    java.lang.String clientToken -> b
    java.lang.String expiration -> c
    java.lang.String id -> d
    java.lang.String topicId -> e
    com.google.api.client.googleapis.subscriptions.NotificationCallback getNotificationCallback() -> getNotificationCallback
    java.lang.String getClientToken() -> getClientToken
    com.google.api.client.googleapis.subscriptions.StoredSubscription setClientToken(java.lang.String) -> setClientToken
    java.lang.String getExpiration() -> getExpiration
    com.google.api.client.googleapis.subscriptions.StoredSubscription setExpiration(java.lang.String) -> setExpiration
    java.lang.String getId() -> getId
    java.lang.String getTopicId() -> getTopicId
    com.google.api.client.googleapis.subscriptions.StoredSubscription setTopicId(java.lang.String) -> setTopicId
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String randomId() -> randomId
com.google.api.client.googleapis.subscriptions.SubscriptionStore -> com.google.api.client.googleapis.subscriptions.SubscriptionStore:
    java.util.Collection listSubscriptions() -> listSubscriptions
    com.google.api.client.googleapis.subscriptions.StoredSubscription getSubscription(java.lang.String) -> getSubscription
    void storeSubscription(com.google.api.client.googleapis.subscriptions.StoredSubscription) -> storeSubscription
    void removeSubscription(com.google.api.client.googleapis.subscriptions.StoredSubscription) -> removeSubscription
com.google.api.client.googleapis.subscriptions.TypedNotification -> com.google.api.client.googleapis.subscriptions.TypedNotification:
    java.lang.Object content -> a
    java.lang.Object getContent() -> getContent
com.google.api.client.googleapis.subscriptions.TypedNotificationCallback -> com.google.api.client.googleapis.subscriptions.TypedNotificationCallback:
    java.lang.Class dataClass -> a
    java.lang.Class getDataClass() -> getDataClass
    com.google.api.client.googleapis.subscriptions.TypedNotificationCallback setDataType(java.lang.Class) -> setDataType
    void handleNotification(com.google.api.client.googleapis.subscriptions.StoredSubscription,com.google.api.client.googleapis.subscriptions.TypedNotification) -> handleNotification
    com.google.api.client.util.ObjectParser getParser(com.google.api.client.googleapis.subscriptions.UnparsedNotification) -> getParser
    void handleNotification(com.google.api.client.googleapis.subscriptions.StoredSubscription,com.google.api.client.googleapis.subscriptions.UnparsedNotification) -> handleNotification
com.google.api.client.googleapis.subscriptions.UnparsedNotification -> com.google.api.client.googleapis.subscriptions.UnparsedNotification:
    java.io.InputStream content -> a
    java.lang.String contentType -> b
    java.lang.String getContentType() -> getContentType
    java.io.InputStream getContent() -> getContent
    boolean deliverNotification(com.google.api.client.googleapis.subscriptions.SubscriptionStore) -> deliverNotification
com.google.api.client.googleapis.subscriptions.json.JsonNotificationCallback -> com.google.api.client.googleapis.subscriptions.json.JsonNotificationCallback:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.json.JsonFactory createJsonFactory() -> createJsonFactory
    com.google.api.client.util.ObjectParser getParser(com.google.api.client.googleapis.subscriptions.UnparsedNotification) -> getParser
    com.google.api.client.googleapis.subscriptions.json.JsonNotificationCallback setDataType(java.lang.Class) -> setDataType
    com.google.api.client.googleapis.subscriptions.TypedNotificationCallback setDataType(java.lang.Class) -> setDataType
com.google.api.client.googleapis.testing.services.MockGoogleClient -> com.google.api.client.googleapis.testing.services.MockGoogleClient:
com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder -> com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder:
    com.google.api.client.googleapis.testing.services.MockGoogleClient build() -> build
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.testing.services.MockGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
com.google.api.client.googleapis.testing.services.MockGoogleClientRequest -> com.google.api.client.googleapis.testing.services.MockGoogleClientRequest:
    com.google.api.client.googleapis.testing.services.MockGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.testing.services.MockGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.testing.services.MockGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient -> com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient:
com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder -> com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder:
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient build() -> build
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient build() -> build
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClientRequest -> com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClientRequest:
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.testing.services.json.MockGoogleJsonClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
com.google.api.client.googleapis.testing.subscriptions.MockNotificationCallback -> com.google.api.client.googleapis.testing.subscriptions.MockNotificationCallback:
    long serialVersionUID -> serialVersionUID
    boolean wasCalled -> a
    boolean wasCalled() -> wasCalled
    void handleNotification(com.google.api.client.googleapis.subscriptions.StoredSubscription,com.google.api.client.googleapis.subscriptions.UnparsedNotification) -> handleNotification
com.google.api.client.googleapis.xml.atom.AtomPatchContent -> com.google.api.client.googleapis.xml.atom.AtomPatchContent:
    com.google.api.client.googleapis.xml.atom.AtomPatchContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.http.xml.atom.AtomContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.http.xml.AbstractXmlHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.googleapis.xml.atom.AtomPatchRelativeToOriginalContent -> com.google.api.client.googleapis.xml.atom.AtomPatchRelativeToOriginalContent:
    java.lang.Object patchedEntry -> a
    java.lang.Object originalEntry -> b
    void writeTo(org.xmlpull.v1.XmlSerializer) -> writeTo
    com.google.api.client.googleapis.xml.atom.AtomPatchRelativeToOriginalContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.lang.Object getPatchedEntry() -> getPatchedEntry
    java.lang.Object getOriginalEntry() -> getOriginalEntry
    com.google.api.client.http.xml.AbstractXmlHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.googleapis.xml.atom.GoogleAtom -> com.google.api.client.googleapis.xml.atom.GoogleAtom:
    java.lang.String GD_NAMESPACE -> GD_NAMESPACE
    java.lang.String ERROR_CONTENT_TYPE -> ERROR_CONTENT_TYPE
    java.lang.String getFieldsFor(java.lang.Class) -> getFieldsFor
    java.lang.String getFeedFields(java.lang.Class,java.lang.Class) -> getFeedFields
    void appendFieldsFor(java.lang.StringBuilder,java.lang.Class,int[]) -> a
    void updateFieldsBasedOnNumFields(java.lang.StringBuilder,int,int) -> a
    java.util.Map computePatch(java.lang.Object,java.lang.Object) -> computePatch
    com.google.api.client.util.ArrayMap computePatchInternal(com.google.api.client.googleapis.xml.atom.GoogleAtom$FieldsMask,java.lang.Object,java.lang.Object) -> a
com.google.api.client.googleapis.xml.atom.GoogleAtom$FieldsMask -> bg:
    int numDifferences -> a
    java.lang.StringBuilder buf -> b
    void append(java.lang.String) -> a
com.google.api.client.googleapis.xml.atom.MultiKindFeedParser -> com.google.api.client.googleapis.xml.atom.MultiKindFeedParser:
    java.util.HashMap kindToEntryClassMap -> a
    void setEntryClasses(java.lang.Class[]) -> setEntryClasses
    java.lang.Object parseEntryInternal() -> parseEntryInternal
    com.google.api.client.googleapis.xml.atom.MultiKindFeedParser create(com.google.api.client.http.HttpResponse,com.google.api.client.xml.XmlNamespaceDictionary,java.lang.Class,java.lang.Class[]) -> create
com.google.api.client.http.AbstractHttpContent -> com.google.api.client.http.AbstractHttpContent:
    com.google.api.client.http.HttpMediaType mediaType -> a
    long computedLength -> b
    java.lang.String getEncoding() -> getEncoding
    long getLength() -> getLength
    com.google.api.client.http.HttpMediaType getMediaType() -> getMediaType
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.nio.charset.Charset getCharset() -> getCharset
    java.lang.String getType() -> getType
    long computeLength() -> computeLength
    boolean retrySupported() -> retrySupported
    long computeLength(com.google.api.client.http.HttpContent) -> computeLength
com.google.api.client.http.AbstractInputStreamContent -> com.google.api.client.http.AbstractInputStreamContent:
    java.lang.String type -> a
    java.lang.String encoding -> b
    boolean closeInputStream -> c
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getType() -> getType
    boolean getCloseInputStream() -> getCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    void copy(java.io.InputStream,java.io.OutputStream,boolean) -> copy
com.google.api.client.http.BackOffPolicy -> com.google.api.client.http.BackOffPolicy:
    long STOP -> STOP
    boolean isBackOffRequired(int) -> isBackOffRequired
    void reset() -> reset
    long getNextBackOffMillis() -> getNextBackOffMillis
com.google.api.client.http.BasicAuthentication -> com.google.api.client.http.BasicAuthentication:
    java.lang.String username -> a
    java.lang.String password -> b
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
    java.lang.String getUsername() -> getUsername
    java.lang.String getPassword() -> getPassword
com.google.api.client.http.ByteArrayContent -> com.google.api.client.http.ByteArrayContent:
    byte[] byteArray -> a
    int offset -> b
    int length -> c
    com.google.api.client.http.ByteArrayContent fromString(java.lang.String,java.lang.String) -> fromString
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    java.io.InputStream getInputStream() -> getInputStream
    com.google.api.client.http.ByteArrayContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.http.ByteArrayContent setType(java.lang.String) -> setType
    com.google.api.client.http.ByteArrayContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setEncoding(java.lang.String) -> setEncoding
com.google.api.client.http.EmptyContent -> com.google.api.client.http.EmptyContent:
    long getLength() -> getLength
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    boolean retrySupported() -> retrySupported
com.google.api.client.http.ExponentialBackOffPolicy -> com.google.api.client.http.ExponentialBackOffPolicy:
    int DEFAULT_INITIAL_INTERVAL_MILLIS -> DEFAULT_INITIAL_INTERVAL_MILLIS
    double DEFAULT_RANDOMIZATION_FACTOR -> DEFAULT_RANDOMIZATION_FACTOR
    double DEFAULT_MULTIPLIER -> DEFAULT_MULTIPLIER
    int DEFAULT_MAX_INTERVAL_MILLIS -> DEFAULT_MAX_INTERVAL_MILLIS
    int DEFAULT_MAX_ELAPSED_TIME_MILLIS -> DEFAULT_MAX_ELAPSED_TIME_MILLIS
    int currentIntervalMillis -> b
    int initialIntervalMillis -> c
    double randomizationFactor -> d
    double multiplier -> e
    int maxIntervalMillis -> f
    long startTimeNanos -> a
    int maxElapsedTimeMillis -> g
    com.google.api.client.util.NanoClock nanoClock -> h
    boolean isBackOffRequired(int) -> isBackOffRequired
    void reset() -> reset
    long getNextBackOffMillis() -> getNextBackOffMillis
    int getInitialIntervalMillis() -> getInitialIntervalMillis
    double getRandomizationFactor() -> getRandomizationFactor
    int getCurrentIntervalMillis() -> getCurrentIntervalMillis
    double getMultiplier() -> getMultiplier
    int getMaxIntervalMillis() -> getMaxIntervalMillis
    int getMaxElapsedTimeMillis() -> getMaxElapsedTimeMillis
    long getElapsedTimeMillis() -> getElapsedTimeMillis
    com.google.api.client.http.ExponentialBackOffPolicy$Builder builder() -> builder
com.google.api.client.http.ExponentialBackOffPolicy$Builder -> com.google.api.client.http.ExponentialBackOffPolicy$Builder:
    int initialIntervalMillis -> a
    double randomizationFactor -> b
    double multiplier -> c
    int maxIntervalMillis -> d
    int maxElapsedTimeMillis -> e
    com.google.api.client.util.NanoClock nanoClock -> f
    com.google.api.client.http.ExponentialBackOffPolicy build() -> build
    int getInitialIntervalMillis() -> getInitialIntervalMillis
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setInitialIntervalMillis(int) -> setInitialIntervalMillis
    double getRandomizationFactor() -> getRandomizationFactor
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setRandomizationFactor(double) -> setRandomizationFactor
    double getMultiplier() -> getMultiplier
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setMultiplier(double) -> setMultiplier
    int getMaxIntervalMillis() -> getMaxIntervalMillis
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setMaxIntervalMillis(int) -> setMaxIntervalMillis
    int getMaxElapsedTimeMillis() -> getMaxElapsedTimeMillis
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setMaxElapsedTimeMillis(int) -> setMaxElapsedTimeMillis
    com.google.api.client.util.NanoClock getNanoClock() -> getNanoClock
    com.google.api.client.http.ExponentialBackOffPolicy$Builder setNanoClock(com.google.api.client.util.NanoClock) -> setNanoClock
com.google.api.client.http.FileContent -> com.google.api.client.http.FileContent:
    java.io.File file -> a
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    java.io.InputStream getInputStream() -> getInputStream
    java.io.File getFile() -> getFile
    com.google.api.client.http.FileContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.http.FileContent setType(java.lang.String) -> setType
    com.google.api.client.http.FileContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setEncoding(java.lang.String) -> setEncoding
com.google.api.client.http.GZipEncoding -> com.google.api.client.http.GZipEncoding:
    java.lang.String getName() -> getName
    void encode(com.google.api.client.util.StreamingContent,java.io.OutputStream) -> encode
com.google.api.client.http.GZipEncoding$1 -> bh:
    com.google.api.client.http.GZipEncoding this$0 -> a
    void close() -> close
com.google.api.client.http.GenericUrl -> com.google.api.client.http.GenericUrl:
    com.google.api.client.util.escape.Escaper URI_FRAGMENT_ESCAPER -> a
    java.lang.String scheme -> b
    java.lang.String host -> e
    int port -> f
    java.util.List pathParts -> g
    java.lang.String fragment -> h
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.api.client.http.GenericUrl clone() -> clone
    com.google.api.client.http.GenericUrl set(java.lang.String,java.lang.Object) -> set
    java.lang.String getScheme() -> getScheme
    void setScheme(java.lang.String) -> setScheme
    java.lang.String getHost() -> getHost
    void setHost(java.lang.String) -> setHost
    int getPort() -> getPort
    void setPort(int) -> setPort
    java.util.List getPathParts() -> getPathParts
    void setPathParts(java.util.List) -> setPathParts
    java.lang.String getFragment() -> getFragment
    void setFragment(java.lang.String) -> setFragment
    java.lang.String build() -> build
    java.lang.String buildAuthority() -> buildAuthority
    java.lang.String buildRelativeUrl() -> buildRelativeUrl
    java.net.URI toURI() -> toURI
    java.net.URL toURL() -> toURL
    java.net.URL toURL(java.lang.String) -> toURL
    java.lang.Object getFirst(java.lang.String) -> getFirst
    java.util.Collection getAll(java.lang.String) -> getAll
    java.lang.String getRawPath() -> getRawPath
    void setRawPath(java.lang.String) -> setRawPath
    void appendRawPath(java.lang.String) -> appendRawPath
    java.util.List toPathParts(java.lang.String) -> toPathParts
    void appendRawPathFromParts(java.lang.StringBuilder) -> a
    void addQueryParams(java.util.Set,java.lang.StringBuilder) -> a
    boolean appendParam(boolean,java.lang.StringBuilder,java.lang.String,java.lang.Object) -> a
    java.net.URI toURI(java.lang.String) -> a
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.http.HttpContent -> com.google.api.client.http.HttpContent:
    long getLength() -> getLength
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getType() -> getType
    boolean retrySupported() -> retrySupported
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.http.HttpEncoding -> com.google.api.client.http.HttpEncoding:
    java.lang.String getName() -> getName
    void encode(com.google.api.client.util.StreamingContent,java.io.OutputStream) -> encode
com.google.api.client.http.HttpEncodingStreamingContent -> com.google.api.client.http.HttpEncodingStreamingContent:
    com.google.api.client.util.StreamingContent content -> a
    com.google.api.client.http.HttpEncoding encoding -> b
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.util.StreamingContent getContent() -> getContent
    com.google.api.client.http.HttpEncoding getEncoding() -> getEncoding
com.google.api.client.http.HttpExecuteInterceptor -> com.google.api.client.http.HttpExecuteInterceptor:
    void intercept(com.google.api.client.http.HttpRequest) -> intercept
com.google.api.client.http.HttpHeaders -> com.google.api.client.http.HttpHeaders:
    java.util.List accept -> accept
    java.util.List acceptEncoding -> acceptEncoding
    java.util.List authorization -> authorization
    java.util.List cacheControl -> cacheControl
    java.util.List contentEncoding -> contentEncoding
    java.util.List contentLength -> contentLength
    java.util.List contentMD5 -> contentMD5
    java.util.List contentRange -> contentRange
    java.util.List contentType -> contentType
    java.util.List cookie -> cookie
    java.util.List date -> date
    java.util.List etag -> etag
    java.util.List expires -> expires
    java.util.List ifModifiedSince -> ifModifiedSince
    java.util.List ifMatch -> ifMatch
    java.util.List ifNoneMatch -> ifNoneMatch
    java.util.List ifUnmodifiedSince -> ifUnmodifiedSince
    java.util.List ifRange -> ifRange
    java.util.List lastModified -> lastModified
    java.util.List location -> location
    java.util.List mimeVersion -> mimeVersion
    java.util.List range -> range
    java.util.List retryAfter -> retryAfter
    java.util.List userAgent -> userAgent
    java.util.List authenticate -> authenticate
    java.util.List age -> age
    com.google.api.client.http.HttpHeaders clone() -> clone
    com.google.api.client.http.HttpHeaders set(java.lang.String,java.lang.Object) -> set
    java.lang.String getAccept() -> getAccept
    com.google.api.client.http.HttpHeaders setAccept(java.lang.String) -> setAccept
    java.lang.String getAcceptEncoding() -> getAcceptEncoding
    com.google.api.client.http.HttpHeaders setAcceptEncoding(java.lang.String) -> setAcceptEncoding
    java.lang.String getAuthorization() -> getAuthorization
    java.util.List getAuthorizationAsList() -> getAuthorizationAsList
    com.google.api.client.http.HttpHeaders setAuthorization(java.lang.String) -> setAuthorization
    com.google.api.client.http.HttpHeaders setAuthorization(java.util.List) -> setAuthorization
    java.lang.String getCacheControl() -> getCacheControl
    com.google.api.client.http.HttpHeaders setCacheControl(java.lang.String) -> setCacheControl
    java.lang.String getContentEncoding() -> getContentEncoding
    com.google.api.client.http.HttpHeaders setContentEncoding(java.lang.String) -> setContentEncoding
    java.lang.Long getContentLength() -> getContentLength
    com.google.api.client.http.HttpHeaders setContentLength(java.lang.Long) -> setContentLength
    java.lang.String getContentMD5() -> getContentMD5
    com.google.api.client.http.HttpHeaders setContentMD5(java.lang.String) -> setContentMD5
    java.lang.String getContentRange() -> getContentRange
    com.google.api.client.http.HttpHeaders setContentRange(java.lang.String) -> setContentRange
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.HttpHeaders setContentType(java.lang.String) -> setContentType
    java.lang.String getCookie() -> getCookie
    com.google.api.client.http.HttpHeaders setCookie(java.lang.String) -> setCookie
    java.lang.String getDate() -> getDate
    com.google.api.client.http.HttpHeaders setDate(java.lang.String) -> setDate
    java.lang.String getETag() -> getETag
    com.google.api.client.http.HttpHeaders setETag(java.lang.String) -> setETag
    java.lang.String getExpires() -> getExpires
    com.google.api.client.http.HttpHeaders setExpires(java.lang.String) -> setExpires
    java.lang.String getIfModifiedSince() -> getIfModifiedSince
    com.google.api.client.http.HttpHeaders setIfModifiedSince(java.lang.String) -> setIfModifiedSince
    java.lang.String getIfMatch() -> getIfMatch
    com.google.api.client.http.HttpHeaders setIfMatch(java.lang.String) -> setIfMatch
    java.lang.String getIfNoneMatch() -> getIfNoneMatch
    com.google.api.client.http.HttpHeaders setIfNoneMatch(java.lang.String) -> setIfNoneMatch
    java.lang.String getIfUnmodifiedSince() -> getIfUnmodifiedSince
    com.google.api.client.http.HttpHeaders setIfUnmodifiedSince(java.lang.String) -> setIfUnmodifiedSince
    java.lang.String getIfRange() -> getIfRange
    com.google.api.client.http.HttpHeaders setIfRange(java.lang.String) -> setIfRange
    java.lang.String getLastModified() -> getLastModified
    com.google.api.client.http.HttpHeaders setLastModified(java.lang.String) -> setLastModified
    java.lang.String getLocation() -> getLocation
    com.google.api.client.http.HttpHeaders setLocation(java.lang.String) -> setLocation
    java.lang.String getMimeVersion() -> getMimeVersion
    com.google.api.client.http.HttpHeaders setMimeVersion(java.lang.String) -> setMimeVersion
    java.lang.String getRange() -> getRange
    com.google.api.client.http.HttpHeaders setRange(java.lang.String) -> setRange
    java.lang.String getRetryAfter() -> getRetryAfter
    com.google.api.client.http.HttpHeaders setRetryAfter(java.lang.String) -> setRetryAfter
    java.lang.String getUserAgent() -> getUserAgent
    com.google.api.client.http.HttpHeaders setUserAgent(java.lang.String) -> setUserAgent
    java.lang.String getAuthenticate() -> getAuthenticate
    com.google.api.client.http.HttpHeaders setAuthenticate(java.lang.String) -> setAuthenticate
    java.lang.Long getAge() -> getAge
    com.google.api.client.http.HttpHeaders setAge(java.lang.Long) -> setAge
    com.google.api.client.http.HttpHeaders setBasicAuthentication(java.lang.String,java.lang.String) -> setBasicAuthentication
    void addHeader(java.util.logging.Logger,java.lang.StringBuilder,java.lang.StringBuilder,com.google.api.client.http.LowLevelHttpRequest,java.lang.String,java.lang.Object,java.io.Writer) -> a
    java.lang.String toStringValue(java.lang.Object) -> a
    void serializeHeaders(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.lang.StringBuilder,java.util.logging.Logger,com.google.api.client.http.LowLevelHttpRequest) -> a
    void serializeHeadersForMultipartRequests(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.util.logging.Logger,java.io.Writer) -> serializeHeadersForMultipartRequests
    void serializeHeaders(com.google.api.client.http.HttpHeaders,java.lang.StringBuilder,java.lang.StringBuilder,java.util.logging.Logger,com.google.api.client.http.LowLevelHttpRequest,java.io.Writer) -> a
    void fromHttpResponse(com.google.api.client.http.LowLevelHttpResponse,java.lang.StringBuilder) -> fromHttpResponse
    java.lang.Object getFirstHeaderValue(java.util.List) -> a
    java.util.List getAsList(java.lang.Object) -> b
    java.lang.String getFirstHeaderStringValue(java.lang.String) -> getFirstHeaderStringValue
    java.util.List getHeaderStringValues(java.lang.String) -> getHeaderStringValues
    void fromHttpHeaders(com.google.api.client.http.HttpHeaders) -> fromHttpHeaders
    void parseHeader(java.lang.String,java.lang.String,com.google.api.client.http.HttpHeaders$ParseHeaderState) -> a
    java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String) -> a
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.http.HttpHeaders$HeaderParsingFakeLevelHttpRequest -> bi:
    com.google.api.client.http.HttpHeaders target -> a
    com.google.api.client.http.HttpHeaders$ParseHeaderState state -> b
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.HttpHeaders$ParseHeaderState -> bj:
    com.google.api.client.util.ArrayValueMap arrayValueMap -> a
    java.lang.StringBuilder logger -> b
    com.google.api.client.util.ClassInfo classInfo -> c
    java.util.List context -> d
com.google.api.client.http.HttpMediaType -> com.google.api.client.http.HttpMediaType:
    java.util.regex.Pattern TYPE_REGEX -> a
    java.util.regex.Pattern TOKEN_REGEX -> b
    java.util.regex.Pattern FULL_MEDIA_TYPE_REGEX -> c
    java.util.regex.Pattern PARAMETER_REGEX -> d
    java.lang.String type -> e
    java.lang.String subType -> f
    java.util.SortedMap parameters -> g
    java.lang.String cachedBuildResult -> h
    com.google.api.client.http.HttpMediaType setType(java.lang.String) -> setType
    java.lang.String getType() -> getType
    com.google.api.client.http.HttpMediaType setSubType(java.lang.String) -> setSubType
    java.lang.String getSubType() -> getSubType
    com.google.api.client.http.HttpMediaType fromString(java.lang.String) -> b
    com.google.api.client.http.HttpMediaType setParameter(java.lang.String,java.lang.String) -> setParameter
    java.lang.String getParameter(java.lang.String) -> getParameter
    com.google.api.client.http.HttpMediaType removeParameter(java.lang.String) -> removeParameter
    void clearParameters() -> clearParameters
    java.util.Map getParameters() -> getParameters
    boolean matchesToken(java.lang.String) -> a
    java.lang.String build() -> build
    java.lang.String toString() -> toString
    boolean equalsIgnoreParameters(com.google.api.client.http.HttpMediaType) -> equalsIgnoreParameters
    boolean equalsIgnoreParameters(java.lang.String,java.lang.String) -> equalsIgnoreParameters
    com.google.api.client.http.HttpMediaType setCharsetParameter(java.nio.charset.Charset) -> setCharsetParameter
    java.nio.charset.Charset getCharsetParameter() -> getCharsetParameter
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.api.client.http.HttpMethods -> com.google.api.client.http.HttpMethods:
    java.lang.String CONNECT -> CONNECT
    java.lang.String DELETE -> DELETE
    java.lang.String GET -> GET
    java.lang.String HEAD -> HEAD
    java.lang.String OPTIONS -> OPTIONS
    java.lang.String PATCH -> PATCH
    java.lang.String POST -> POST
    java.lang.String PUT -> PUT
    java.lang.String TRACE -> TRACE
com.google.api.client.http.HttpRequest -> com.google.api.client.http.HttpRequest:
    java.lang.String VERSION -> VERSION
    java.lang.String USER_AGENT_SUFFIX -> USER_AGENT_SUFFIX
    com.google.api.client.http.HttpExecuteInterceptor executeInterceptor -> a
    com.google.api.client.http.HttpHeaders headers -> b
    com.google.api.client.http.HttpHeaders responseHeaders -> c
    int numRetries -> d
    int contentLoggingLimit -> e
    boolean loggingEnabled -> f
    boolean curlLoggingEnabled -> g
    com.google.api.client.http.HttpContent content -> h
    com.google.api.client.http.HttpTransport transport -> i
    java.lang.String requestMethod -> j
    com.google.api.client.http.GenericUrl url -> k
    int connectTimeout -> l
    int readTimeout -> m
    com.google.api.client.http.HttpUnsuccessfulResponseHandler unsuccessfulResponseHandler -> n
    com.google.api.client.http.HttpResponseInterceptor responseInterceptor -> o
    com.google.api.client.util.ObjectParser objectParser -> p
    com.google.api.client.http.HttpEncoding encoding -> q
    boolean enableGZipContent -> r
    com.google.api.client.http.BackOffPolicy backOffPolicy -> s
    boolean followRedirects -> t
    boolean throwExceptionOnExecuteError -> u
    boolean retryOnExecuteIOException -> v
    boolean suppressUserAgentSuffix -> w
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    java.lang.String getRequestMethod() -> getRequestMethod
    com.google.api.client.http.HttpRequest setRequestMethod(java.lang.String) -> setRequestMethod
    com.google.api.client.http.GenericUrl getUrl() -> getUrl
    com.google.api.client.http.HttpRequest setUrl(com.google.api.client.http.GenericUrl) -> setUrl
    com.google.api.client.http.HttpContent getContent() -> getContent
    com.google.api.client.http.HttpRequest setContent(com.google.api.client.http.HttpContent) -> setContent
    com.google.api.client.http.HttpEncoding getEncoding() -> getEncoding
    com.google.api.client.http.HttpRequest setEncoding(com.google.api.client.http.HttpEncoding) -> setEncoding
    boolean getEnableGZipContent() -> getEnableGZipContent
    com.google.api.client.http.HttpRequest setEnableGZipContent(boolean) -> setEnableGZipContent
    com.google.api.client.http.BackOffPolicy getBackOffPolicy() -> getBackOffPolicy
    com.google.api.client.http.HttpRequest setBackOffPolicy(com.google.api.client.http.BackOffPolicy) -> setBackOffPolicy
    int getContentLoggingLimit() -> getContentLoggingLimit
    com.google.api.client.http.HttpRequest setContentLoggingLimit(int) -> setContentLoggingLimit
    boolean isLoggingEnabled() -> isLoggingEnabled
    com.google.api.client.http.HttpRequest setLoggingEnabled(boolean) -> setLoggingEnabled
    boolean isCurlLoggingEnabled() -> isCurlLoggingEnabled
    com.google.api.client.http.HttpRequest setCurlLoggingEnabled(boolean) -> setCurlLoggingEnabled
    int getConnectTimeout() -> getConnectTimeout
    com.google.api.client.http.HttpRequest setConnectTimeout(int) -> setConnectTimeout
    int getReadTimeout() -> getReadTimeout
    com.google.api.client.http.HttpRequest setReadTimeout(int) -> setReadTimeout
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    com.google.api.client.http.HttpRequest setHeaders(com.google.api.client.http.HttpHeaders) -> setHeaders
    com.google.api.client.http.HttpHeaders getResponseHeaders() -> getResponseHeaders
    com.google.api.client.http.HttpRequest setResponseHeaders(com.google.api.client.http.HttpHeaders) -> setResponseHeaders
    com.google.api.client.http.HttpExecuteInterceptor getInterceptor() -> getInterceptor
    com.google.api.client.http.HttpRequest setInterceptor(com.google.api.client.http.HttpExecuteInterceptor) -> setInterceptor
    com.google.api.client.http.HttpUnsuccessfulResponseHandler getUnsuccessfulResponseHandler() -> getUnsuccessfulResponseHandler
    com.google.api.client.http.HttpRequest setUnsuccessfulResponseHandler(com.google.api.client.http.HttpUnsuccessfulResponseHandler) -> setUnsuccessfulResponseHandler
    com.google.api.client.http.HttpResponseInterceptor getResponseInterceptor() -> getResponseInterceptor
    com.google.api.client.http.HttpRequest setResponseInterceptor(com.google.api.client.http.HttpResponseInterceptor) -> setResponseInterceptor
    int getNumberOfRetries() -> getNumberOfRetries
    com.google.api.client.http.HttpRequest setNumberOfRetries(int) -> setNumberOfRetries
    com.google.api.client.http.HttpRequest setParser(com.google.api.client.util.ObjectParser) -> setParser
    com.google.api.client.util.ObjectParser getParser() -> getParser
    boolean getFollowRedirects() -> getFollowRedirects
    com.google.api.client.http.HttpRequest setFollowRedirects(boolean) -> setFollowRedirects
    boolean getThrowExceptionOnExecuteError() -> getThrowExceptionOnExecuteError
    com.google.api.client.http.HttpRequest setThrowExceptionOnExecuteError(boolean) -> setThrowExceptionOnExecuteError
    boolean getRetryOnExecuteIOException() -> getRetryOnExecuteIOException
    com.google.api.client.http.HttpRequest setRetryOnExecuteIOException(boolean) -> setRetryOnExecuteIOException
    boolean getSuppressUserAgentSuffix() -> getSuppressUserAgentSuffix
    com.google.api.client.http.HttpRequest setSuppressUserAgentSuffix(boolean) -> setSuppressUserAgentSuffix
    com.google.api.client.http.HttpResponse execute() -> execute
    java.util.concurrent.Future executeAsync(java.util.concurrent.Executor) -> executeAsync
    java.util.concurrent.Future executeAsync() -> executeAsync
    boolean handleRedirect(int,com.google.api.client.http.HttpHeaders) -> handleRedirect
com.google.api.client.http.HttpRequest$1 -> bk:
    com.google.api.client.util.StreamingContent val$streamingContent2 -> a
    java.lang.String val$contentEncoding -> b
    long val$contentLength -> c
    java.lang.String val$contentType -> d
    boolean val$contentRetrySupported -> e
    com.google.api.client.http.HttpRequest this$0 -> f
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getEncoding() -> getEncoding
    long getLength() -> getLength
    java.lang.String getType() -> getType
    boolean retrySupported() -> retrySupported
com.google.api.client.http.HttpRequest$2 -> bl:
    com.google.api.client.http.HttpRequest this$0 -> a
    java.lang.Object call() -> call
com.google.api.client.http.HttpRequestFactory -> com.google.api.client.http.HttpRequestFactory:
    com.google.api.client.http.HttpTransport transport -> a
    com.google.api.client.http.HttpRequestInitializer initializer -> b
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.http.HttpRequestInitializer getInitializer() -> getInitializer
    com.google.api.client.http.HttpRequest buildRequest(java.lang.String,com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildRequest
    com.google.api.client.http.HttpRequest buildDeleteRequest(com.google.api.client.http.GenericUrl) -> buildDeleteRequest
    com.google.api.client.http.HttpRequest buildGetRequest(com.google.api.client.http.GenericUrl) -> buildGetRequest
    com.google.api.client.http.HttpRequest buildPostRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPostRequest
    com.google.api.client.http.HttpRequest buildPutRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPutRequest
    com.google.api.client.http.HttpRequest buildPatchRequest(com.google.api.client.http.GenericUrl,com.google.api.client.http.HttpContent) -> buildPatchRequest
    com.google.api.client.http.HttpRequest buildHeadRequest(com.google.api.client.http.GenericUrl) -> buildHeadRequest
com.google.api.client.http.HttpRequestInitializer -> com.google.api.client.http.HttpRequestInitializer:
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
com.google.api.client.http.HttpResponse -> com.google.api.client.http.HttpResponse:
    java.io.InputStream content -> b
    java.lang.String contentEncoding -> c
    java.lang.String contentType -> d
    com.google.api.client.http.HttpMediaType mediaType -> e
    com.google.api.client.http.LowLevelHttpResponse response -> a
    int statusCode -> f
    java.lang.String statusMessage -> g
    com.google.api.client.http.HttpRequest request -> h
    int contentLoggingLimit -> i
    boolean loggingEnabled -> j
    boolean contentRead -> k
    int getContentLoggingLimit() -> getContentLoggingLimit
    com.google.api.client.http.HttpResponse setContentLoggingLimit(int) -> setContentLoggingLimit
    boolean isLoggingEnabled() -> isLoggingEnabled
    com.google.api.client.http.HttpResponse setLoggingEnabled(boolean) -> setLoggingEnabled
    java.lang.String getContentEncoding() -> getContentEncoding
    java.lang.String getContentType() -> getContentType
    com.google.api.client.http.HttpMediaType getMediaType() -> getMediaType
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    boolean isSuccessStatusCode() -> isSuccessStatusCode
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    com.google.api.client.http.HttpTransport getTransport() -> getTransport
    com.google.api.client.http.HttpRequest getRequest() -> getRequest
    java.io.InputStream getContent() -> getContent
    void download(java.io.OutputStream) -> download
    void ignore() -> ignore
    void disconnect() -> disconnect
    java.lang.Object parseAs(java.lang.Class) -> parseAs
    boolean hasMessageBody() -> a
    java.lang.Object parseAs(java.lang.reflect.Type) -> parseAs
    java.lang.String parseAsString() -> parseAsString
    java.nio.charset.Charset getContentCharset() -> getContentCharset
com.google.api.client.http.HttpResponseException -> com.google.api.client.http.HttpResponseException:
    long serialVersionUID -> serialVersionUID
    int statusCode -> a
    java.lang.String statusMessage -> b
    com.google.api.client.http.HttpHeaders headers -> c
    java.lang.String content -> d
    boolean isSuccessStatusCode() -> isSuccessStatusCode
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    java.lang.String getContent() -> getContent
    java.lang.StringBuilder computeMessageBuffer(com.google.api.client.http.HttpResponse) -> computeMessageBuffer
com.google.api.client.http.HttpResponseException$Builder -> com.google.api.client.http.HttpResponseException$Builder:
    int statusCode -> a
    java.lang.String statusMessage -> b
    com.google.api.client.http.HttpHeaders headers -> c
    java.lang.String content -> d
    java.lang.String message -> e
    java.lang.String getMessage() -> getMessage
    com.google.api.client.http.HttpResponseException$Builder setMessage(java.lang.String) -> setMessage
    int getStatusCode() -> getStatusCode
    com.google.api.client.http.HttpResponseException$Builder setStatusCode(int) -> setStatusCode
    java.lang.String getStatusMessage() -> getStatusMessage
    com.google.api.client.http.HttpResponseException$Builder setStatusMessage(java.lang.String) -> setStatusMessage
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    com.google.api.client.http.HttpResponseException$Builder setHeaders(com.google.api.client.http.HttpHeaders) -> setHeaders
    java.lang.String getContent() -> getContent
    com.google.api.client.http.HttpResponseException$Builder setContent(java.lang.String) -> setContent
    com.google.api.client.http.HttpResponseException build() -> build
com.google.api.client.http.HttpResponseInterceptor -> com.google.api.client.http.HttpResponseInterceptor:
    void interceptResponse(com.google.api.client.http.HttpResponse) -> interceptResponse
com.google.api.client.http.HttpStatusCodes -> com.google.api.client.http.HttpStatusCodes:
    int STATUS_CODE_OK -> STATUS_CODE_OK
    int STATUS_CODE_NO_CONTENT -> STATUS_CODE_NO_CONTENT
    int STATUS_CODE_MULTIPLE_CHOICES -> STATUS_CODE_MULTIPLE_CHOICES
    int STATUS_CODE_MOVED_PERMANENTLY -> STATUS_CODE_MOVED_PERMANENTLY
    int STATUS_CODE_FOUND -> STATUS_CODE_FOUND
    int STATUS_CODE_SEE_OTHER -> STATUS_CODE_SEE_OTHER
    int STATUS_CODE_NOT_MODIFIED -> STATUS_CODE_NOT_MODIFIED
    int STATUS_CODE_TEMPORARY_REDIRECT -> STATUS_CODE_TEMPORARY_REDIRECT
    int STATUS_CODE_UNAUTHORIZED -> STATUS_CODE_UNAUTHORIZED
    int STATUS_CODE_FORBIDDEN -> STATUS_CODE_FORBIDDEN
    int STATUS_CODE_NOT_FOUND -> STATUS_CODE_NOT_FOUND
    int STATUS_CODE_SERVER_ERROR -> STATUS_CODE_SERVER_ERROR
    int STATUS_CODE_SERVICE_UNAVAILABLE -> STATUS_CODE_SERVICE_UNAVAILABLE
    boolean isSuccess(int) -> isSuccess
    boolean isRedirect(int) -> isRedirect
com.google.api.client.http.HttpTransport -> com.google.api.client.http.HttpTransport:
    java.util.logging.Logger LOGGER -> a
    java.lang.String[] SUPPORTED_METHODS -> b
    com.google.api.client.http.HttpRequestFactory createRequestFactory() -> createRequestFactory
    com.google.api.client.http.HttpRequestFactory createRequestFactory(com.google.api.client.http.HttpRequestInitializer) -> createRequestFactory
    com.google.api.client.http.HttpRequest buildRequest() -> a
    boolean supportsMethod(java.lang.String) -> supportsMethod
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    void shutdown() -> shutdown
com.google.api.client.http.HttpUnsuccessfulResponseHandler -> com.google.api.client.http.HttpUnsuccessfulResponseHandler:
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
com.google.api.client.http.InputStreamContent -> com.google.api.client.http.InputStreamContent:
    long length -> a
    boolean retrySupported -> b
    java.io.InputStream inputStream -> c
    long getLength() -> getLength
    boolean retrySupported() -> retrySupported
    com.google.api.client.http.InputStreamContent setRetrySupported(boolean) -> setRetrySupported
    java.io.InputStream getInputStream() -> getInputStream
    com.google.api.client.http.InputStreamContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.http.InputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.InputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.InputStreamContent setLength(long) -> setLength
    com.google.api.client.http.AbstractInputStreamContent setCloseInputStream(boolean) -> setCloseInputStream
    com.google.api.client.http.AbstractInputStreamContent setType(java.lang.String) -> setType
    com.google.api.client.http.AbstractInputStreamContent setEncoding(java.lang.String) -> setEncoding
com.google.api.client.http.LowLevelHttpRequest -> com.google.api.client.http.LowLevelHttpRequest:
    long contentLength -> a
    java.lang.String contentEncoding -> b
    java.lang.String contentType -> c
    com.google.api.client.util.StreamingContent streamingContent -> d
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setContent(com.google.api.client.http.HttpContent) -> setContent
    void setContentLength(long) -> setContentLength
    long getContentLength() -> getContentLength
    void setContentEncoding(java.lang.String) -> setContentEncoding
    java.lang.String getContentEncoding() -> getContentEncoding
    void setContentType(java.lang.String) -> setContentType
    java.lang.String getContentType() -> getContentType
    void setStreamingContent(com.google.api.client.util.StreamingContent) -> setStreamingContent
    com.google.api.client.util.StreamingContent getStreamingContent() -> getStreamingContent
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.LowLevelHttpResponse -> com.google.api.client.http.LowLevelHttpResponse:
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getStatusLine() -> getStatusLine
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.MultipartContent -> com.google.api.client.http.MultipartContent:
    java.util.ArrayList parts -> a
    void writeTo(java.io.OutputStream) -> writeTo
    boolean retrySupported() -> retrySupported
    com.google.api.client.http.MultipartContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.util.Collection getParts() -> getParts
    com.google.api.client.http.MultipartContent addPart(com.google.api.client.http.MultipartContent$Part) -> addPart
    com.google.api.client.http.MultipartContent setParts(java.util.Collection) -> setParts
    com.google.api.client.http.MultipartContent setContentParts(java.util.Collection) -> setContentParts
    java.lang.String getBoundary() -> getBoundary
    com.google.api.client.http.MultipartContent setBoundary(java.lang.String) -> setBoundary
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.MultipartContent$Part -> com.google.api.client.http.MultipartContent$Part:
    com.google.api.client.http.HttpContent content -> a
    com.google.api.client.http.HttpHeaders headers -> b
    com.google.api.client.http.HttpEncoding encoding -> c
    com.google.api.client.http.MultipartContent$Part setContent(com.google.api.client.http.HttpContent) -> setContent
    com.google.api.client.http.HttpContent getContent() -> getContent
    com.google.api.client.http.MultipartContent$Part setHeaders(com.google.api.client.http.HttpHeaders) -> setHeaders
    com.google.api.client.http.HttpHeaders getHeaders() -> getHeaders
    com.google.api.client.http.MultipartContent$Part setEncoding(com.google.api.client.http.HttpEncoding) -> setEncoding
    com.google.api.client.http.HttpEncoding getEncoding() -> getEncoding
com.google.api.client.http.MultipartRelatedContent -> com.google.api.client.http.MultipartRelatedContent:
    java.util.Collection parts -> a
    byte[] CR_LF -> b
    byte[] CONTENT_TYPE -> c
    byte[] CONTENT_TRANSFER_ENCODING -> d
    byte[] TWO_DASHES -> e
    void forRequest(com.google.api.client.http.HttpRequest) -> forRequest
    void writeTo(java.io.OutputStream) -> writeTo
    long computeLength() -> computeLength
    boolean retrySupported() -> retrySupported
    com.google.api.client.http.MultipartRelatedContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.lang.String getBoundary() -> getBoundary
    com.google.api.client.http.MultipartRelatedContent setBoundary(java.lang.String) -> setBoundary
    java.util.Collection getParts() -> getParts
    boolean isTextBasedContentType(java.lang.String) -> a
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.UriTemplate -> com.google.api.client.http.UriTemplate:
    java.util.Map COMPOSITE_PREFIXES -> a
    java.util.Map getMap(java.lang.Object) -> a
    java.lang.String expand(java.lang.String,java.lang.String,java.lang.Object,boolean) -> expand
    java.lang.String expand(java.lang.String,java.lang.Object,boolean) -> expand
    java.lang.String getListPropertyValue(java.lang.String,java.util.Iterator,boolean,com.google.api.client.http.UriTemplate$CompositeOutput) -> a
    java.lang.String getMapPropertyValue(java.lang.String,java.util.Map,boolean,com.google.api.client.http.UriTemplate$CompositeOutput) -> a
com.google.api.client.http.UriTemplate$CompositeOutput -> bm:
    com.google.api.client.http.UriTemplate$CompositeOutput PLUS -> a
    com.google.api.client.http.UriTemplate$CompositeOutput HASH -> b
    com.google.api.client.http.UriTemplate$CompositeOutput DOT -> c
    com.google.api.client.http.UriTemplate$CompositeOutput FORWARD_SLASH -> d
    com.google.api.client.http.UriTemplate$CompositeOutput SEMI_COLON -> e
    com.google.api.client.http.UriTemplate$CompositeOutput QUERY -> f
    com.google.api.client.http.UriTemplate$CompositeOutput AMP -> g
    com.google.api.client.http.UriTemplate$CompositeOutput SIMPLE -> h
    java.lang.Character propertyPrefix -> i
    java.lang.String outputPrefix -> j
    java.lang.String explodeJoiner -> k
    boolean requiresVarAssignment -> l
    boolean reservedExpansion -> m
    com.google.api.client.http.UriTemplate$CompositeOutput[] $VALUES -> n
    com.google.api.client.http.UriTemplate$CompositeOutput[] values() -> values
    com.google.api.client.http.UriTemplate$CompositeOutput valueOf(java.lang.String) -> valueOf
    java.lang.String getOutputPrefix() -> a
    java.lang.String getExplodeJoiner() -> b
    boolean requiresVarAssignment() -> c
    int getVarNameStartIndex() -> d
    java.lang.String getEncodedValue(java.lang.String) -> a
com.google.api.client.http.UrlEncodedContent -> com.google.api.client.http.UrlEncodedContent:
    java.lang.Object data -> a
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.UrlEncodedContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.lang.Object getData() -> getData
    com.google.api.client.http.UrlEncodedContent setData(java.lang.Object) -> setData
    com.google.api.client.http.UrlEncodedContent getContent(com.google.api.client.http.HttpRequest) -> getContent
    boolean appendParam(boolean,java.io.Writer,java.lang.String,java.lang.Object) -> a
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.UrlEncodedParser -> com.google.api.client.http.UrlEncodedParser:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String MEDIA_TYPE -> MEDIA_TYPE
    void parse(java.lang.String,java.lang.Object) -> parse
    void parse(java.io.Reader,java.lang.Object) -> parse
    java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String) -> a
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
com.google.api.client.http.apache.ApacheHttpRequest -> bn:
    org.apache.http.client.HttpClient httpClient -> a
    org.apache.http.client.methods.HttpRequestBase request -> b
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.apache.ApacheHttpResponse -> bo:
    org.apache.http.client.methods.HttpRequestBase request -> a
    org.apache.http.HttpResponse response -> b
    org.apache.http.Header[] allHeaders -> c
    int getStatusCode() -> getStatusCode
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String getStatusLine() -> getStatusLine
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.apache.ApacheHttpTransport -> com.google.api.client.http.apache.ApacheHttpTransport:
    org.apache.http.client.HttpClient httpClient -> b
    org.apache.http.impl.client.DefaultHttpClient newDefaultHttpClient() -> newDefaultHttpClient
    org.apache.http.params.HttpParams newDefaultHttpParams() -> b
    org.apache.http.impl.client.DefaultHttpClient newDefaultHttpClient(org.apache.http.conn.ssl.SSLSocketFactory,org.apache.http.params.HttpParams,java.net.ProxySelector) -> a
    boolean supportsMethod(java.lang.String) -> supportsMethod
    com.google.api.client.http.apache.ApacheHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    void shutdown() -> shutdown
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
com.google.api.client.http.apache.ApacheHttpTransport$Builder -> com.google.api.client.http.apache.ApacheHttpTransport$Builder:
    org.apache.http.conn.ssl.SSLSocketFactory socketFactory -> a
    org.apache.http.params.HttpParams params -> b
    java.net.ProxySelector proxySelector -> c
    com.google.api.client.http.apache.ApacheHttpTransport$Builder setProxy(org.apache.http.HttpHost) -> setProxy
    com.google.api.client.http.apache.ApacheHttpTransport$Builder setProxySelector(java.net.ProxySelector) -> setProxySelector
    com.google.api.client.http.apache.ApacheHttpTransport$Builder trustCertificatesFromJavaKeyStore(java.io.InputStream,java.lang.String) -> trustCertificatesFromJavaKeyStore
    com.google.api.client.http.apache.ApacheHttpTransport$Builder trustCertificatesFromStream(java.io.InputStream) -> trustCertificatesFromStream
    com.google.api.client.http.apache.ApacheHttpTransport$Builder trustCertificates(java.security.KeyStore) -> trustCertificates
    com.google.api.client.http.apache.ApacheHttpTransport$Builder doNotValidateCertificate() -> doNotValidateCertificate
    com.google.api.client.http.apache.ApacheHttpTransport$Builder setSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSocketFactory
    org.apache.http.conn.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
    org.apache.http.params.HttpParams getHttpParams() -> getHttpParams
    com.google.api.client.http.apache.ApacheHttpTransport build() -> build
com.google.api.client.http.apache.ContentEntity -> bp:
    long contentLength -> a
    com.google.api.client.util.StreamingContent streamingContent -> b
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.http.apache.HttpExtensionMethod -> bq:
    java.lang.String methodName -> a
    java.lang.String getMethod() -> getMethod
com.google.api.client.http.apache.SSLSocketFactoryExtension -> br:
    javax.net.ssl.SSLSocketFactory socketFactory -> a
    java.net.Socket createSocket() -> createSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
com.google.api.client.http.javanet.NetHttpRequest -> bs:
    java.net.HttpURLConnection connection -> a
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void setTimeout(int,int) -> setTimeout
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
com.google.api.client.http.javanet.NetHttpResponse -> bt:
    java.net.HttpURLConnection connection -> a
    int responseCode -> b
    java.lang.String responseMessage -> c
    java.util.ArrayList headerNames -> d
    java.util.ArrayList headerValues -> e
    int getStatusCode() -> getStatusCode
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String getStatusLine() -> getStatusLine
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    void disconnect() -> disconnect
com.google.api.client.http.javanet.NetHttpTransport -> com.google.api.client.http.javanet.NetHttpTransport:
    java.lang.String[] SUPPORTED_METHODS -> b
    java.net.Proxy proxy -> c
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> d
    javax.net.ssl.HostnameVerifier hostnameVerifier -> e
    boolean supportsMethod(java.lang.String) -> supportsMethod
    com.google.api.client.http.javanet.NetHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
com.google.api.client.http.javanet.NetHttpTransport$Builder -> com.google.api.client.http.javanet.NetHttpTransport$Builder:
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> a
    javax.net.ssl.HostnameVerifier hostnameVerifier -> b
    java.net.Proxy proxy -> c
    com.google.api.client.http.javanet.NetHttpTransport$Builder setProxy(java.net.Proxy) -> setProxy
    com.google.api.client.http.javanet.NetHttpTransport$Builder trustCertificatesFromJavaKeyStore(java.io.InputStream,java.lang.String) -> trustCertificatesFromJavaKeyStore
    com.google.api.client.http.javanet.NetHttpTransport$Builder trustCertificatesFromStream(java.io.InputStream) -> trustCertificatesFromStream
    com.google.api.client.http.javanet.NetHttpTransport$Builder trustCertificates(java.security.KeyStore) -> trustCertificates
    com.google.api.client.http.javanet.NetHttpTransport$Builder doNotValidateCertificate() -> doNotValidateCertificate
    javax.net.ssl.SSLSocketFactory getSslSocketFactory() -> getSslSocketFactory
    com.google.api.client.http.javanet.NetHttpTransport$Builder setSslSocketFactory(javax.net.ssl.SSLSocketFactory) -> setSslSocketFactory
    javax.net.ssl.HostnameVerifier getHostnameVerifier() -> getHostnameVerifier
    com.google.api.client.http.javanet.NetHttpTransport$Builder setHostnameVerifier(javax.net.ssl.HostnameVerifier) -> setHostnameVerifier
    com.google.api.client.http.javanet.NetHttpTransport build() -> build
com.google.api.client.http.json.JsonHttpContent -> com.google.api.client.http.json.JsonHttpContent:
    java.lang.Object data -> a
    com.google.api.client.json.JsonFactory jsonFactory -> b
    java.lang.String wrapperKey -> c
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.json.JsonHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.lang.Object getData() -> getData
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.lang.String getWrapperKey() -> getWrapperKey
    com.google.api.client.http.json.JsonHttpContent setWrapperKey(java.lang.String) -> setWrapperKey
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.xml.AbstractXmlHttpContent -> com.google.api.client.http.xml.AbstractXmlHttpContent:
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> a
    void writeTo(java.io.OutputStream) -> writeTo
    com.google.api.client.http.xml.AbstractXmlHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.xml.XmlNamespaceDictionary getNamespaceDictionary() -> getNamespaceDictionary
    void writeTo(org.xmlpull.v1.XmlSerializer) -> writeTo
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.xml.XmlHttpContent -> com.google.api.client.http.xml.XmlHttpContent:
    java.lang.String elementName -> a
    java.lang.Object data -> b
    void writeTo(org.xmlpull.v1.XmlSerializer) -> writeTo
    com.google.api.client.http.xml.XmlHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    java.lang.String getElementName() -> getElementName
    java.lang.Object getData() -> getData
    com.google.api.client.http.xml.AbstractXmlHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.xml.atom.AtomContent -> com.google.api.client.http.xml.atom.AtomContent:
    boolean isEntry -> a
    java.lang.Object entry -> b
    com.google.api.client.http.xml.atom.AtomContent forEntry(com.google.api.client.xml.XmlNamespaceDictionary,java.lang.Object) -> forEntry
    com.google.api.client.http.xml.atom.AtomContent forFeed(com.google.api.client.xml.XmlNamespaceDictionary,java.lang.Object) -> forFeed
    com.google.api.client.http.xml.atom.AtomContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    void writeTo(org.xmlpull.v1.XmlSerializer) -> writeTo
    boolean isEntry() -> isEntry
    java.lang.Object getData() -> getData
    com.google.api.client.http.xml.AbstractXmlHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
    com.google.api.client.http.AbstractHttpContent setMediaType(com.google.api.client.http.HttpMediaType) -> setMediaType
com.google.api.client.http.xml.atom.AtomFeedParser -> com.google.api.client.http.xml.atom.AtomFeedParser:
    java.lang.Class entryClass -> a
    java.lang.Object parseNextEntry() -> parseNextEntry
    java.lang.Object parseEntryInternal() -> parseEntryInternal
    java.lang.Class getEntryClass() -> getEntryClass
    com.google.api.client.http.xml.atom.AtomFeedParser create(com.google.api.client.http.HttpResponse,com.google.api.client.xml.XmlNamespaceDictionary,java.lang.Class,java.lang.Class) -> create
com.google.api.client.json.CustomizeJsonParser -> com.google.api.client.json.CustomizeJsonParser:
    boolean stopAt(java.lang.Object,java.lang.String) -> stopAt
    void handleUnrecognizedKey(java.lang.Object,java.lang.String) -> handleUnrecognizedKey
    java.util.Collection newInstanceForArray(java.lang.Object,java.lang.reflect.Field) -> newInstanceForArray
    java.lang.Object newInstanceForObject(java.lang.Object,java.lang.Class) -> newInstanceForObject
com.google.api.client.json.GenericJson -> com.google.api.client.json.GenericJson:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void setFactory(com.google.api.client.json.JsonFactory) -> setFactory
    java.lang.String toString() -> toString
    java.lang.String toPrettyString() -> toPrettyString
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.json.Json -> com.google.api.client.json.Json:
    java.lang.String MEDIA_TYPE -> MEDIA_TYPE
com.google.api.client.json.JsonFactory -> com.google.api.client.json.JsonFactory:
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream,java.nio.charset.Charset) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,java.nio.charset.Charset) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    com.google.api.client.json.JsonObjectParser createJsonObjectParser() -> createJsonObjectParser
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.String toPrettyString(java.lang.Object) -> toPrettyString
    byte[] toByteArray(java.lang.Object) -> toByteArray
    java.lang.String toString(java.lang.Object,boolean) -> a
    java.io.ByteArrayOutputStream toByteStream(java.lang.Object,boolean) -> b
    java.lang.Object fromString(java.lang.String,java.lang.Class) -> fromString
    java.lang.Object fromInputStream(java.io.InputStream,java.lang.Class) -> fromInputStream
    java.lang.Object fromInputStream(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> fromInputStream
    java.lang.Object fromReader(java.io.Reader,java.lang.Class) -> fromReader
com.google.api.client.json.JsonGenerator -> com.google.api.client.json.JsonGenerator:
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void flush() -> flush
    void close() -> close
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeString(java.lang.String) -> writeString
    void writeBoolean(boolean) -> writeBoolean
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void serialize(java.lang.Object) -> serialize
    void serialize(boolean,java.lang.Object) -> a
    void enablePrettyPrint() -> enablePrettyPrint
com.google.api.client.json.JsonObjectParser -> com.google.api.client.json.JsonObjectParser:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    java.util.Set wrapperKeys -> b
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.util.Set getWrapperKeys() -> getWrapperKeys
    void initializeParser(com.google.api.client.json.JsonParser) -> a
com.google.api.client.json.JsonObjectParser$Builder -> com.google.api.client.json.JsonObjectParser$Builder:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    java.util.Collection wrapperKeys -> b
    com.google.api.client.json.JsonObjectParser build() -> build
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    java.util.Collection getWrapperKeys() -> getWrapperKeys
    com.google.api.client.json.JsonObjectParser$Builder setWrapperKeys(java.util.Collection) -> setWrapperKeys
com.google.api.client.json.JsonParser -> com.google.api.client.json.JsonParser:
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void close() -> close
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    java.lang.Object parseAndClose(java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseAndClose
    void skipToKey(java.lang.String) -> skipToKey
    java.lang.String skipToKey(java.util.Set) -> skipToKey
    com.google.api.client.json.JsonToken startParsing() -> a
    com.google.api.client.json.JsonToken startParsingObjectOrArray() -> b
    void parseAndClose(java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> parseAndClose
    java.lang.Object parse(java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parse
    java.lang.Object parse(java.lang.reflect.Type,boolean,com.google.api.client.json.CustomizeJsonParser) -> parse
    void parse(java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> parse
    void parse(java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> a
    java.util.Collection parseArrayAndClose(java.lang.Class,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArrayAndClose
    void parseArrayAndClose(java.util.Collection,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArrayAndClose
    java.util.Collection parseArray(java.lang.Class,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArray
    void parseArray(java.util.Collection,java.lang.Class,com.google.api.client.json.CustomizeJsonParser) -> parseArray
    void parseArray(java.lang.reflect.Field,java.util.Collection,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser) -> a
    void parseMap(java.lang.reflect.Field,java.util.Map,java.lang.reflect.Type,java.util.ArrayList,com.google.api.client.json.CustomizeJsonParser) -> a
    java.lang.Object parseValue(java.lang.reflect.Field,java.lang.reflect.Type,java.util.ArrayList,java.lang.Object,com.google.api.client.json.CustomizeJsonParser) -> a
com.google.api.client.json.JsonParser$1 -> bu:
    int[] $SwitchMap$com$google$api$client$json$JsonToken -> a
com.google.api.client.json.JsonString -> com.google.api.client.json.JsonString:
com.google.api.client.json.JsonToken -> com.google.api.client.json.JsonToken:
    com.google.api.client.json.JsonToken START_ARRAY -> START_ARRAY
    com.google.api.client.json.JsonToken END_ARRAY -> END_ARRAY
    com.google.api.client.json.JsonToken START_OBJECT -> START_OBJECT
    com.google.api.client.json.JsonToken END_OBJECT -> END_OBJECT
    com.google.api.client.json.JsonToken FIELD_NAME -> FIELD_NAME
    com.google.api.client.json.JsonToken VALUE_STRING -> VALUE_STRING
    com.google.api.client.json.JsonToken VALUE_NUMBER_INT -> VALUE_NUMBER_INT
    com.google.api.client.json.JsonToken VALUE_NUMBER_FLOAT -> VALUE_NUMBER_FLOAT
    com.google.api.client.json.JsonToken VALUE_TRUE -> VALUE_TRUE
    com.google.api.client.json.JsonToken VALUE_FALSE -> VALUE_FALSE
    com.google.api.client.json.JsonToken VALUE_NULL -> VALUE_NULL
    com.google.api.client.json.JsonToken NOT_AVAILABLE -> NOT_AVAILABLE
    com.google.api.client.json.JsonToken[] $VALUES -> a
    com.google.api.client.json.JsonToken[] values() -> values
    com.google.api.client.json.JsonToken valueOf(java.lang.String) -> valueOf
com.google.api.client.json.jackson2.JacksonFactory -> com.google.api.client.json.jackson2.JacksonFactory:
    com.fasterxml.jackson.core.JsonFactory factory -> a
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,java.nio.charset.Charset) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream,java.nio.charset.Charset) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonToken convert(com.fasterxml.jackson.core.JsonToken) -> a
com.google.api.client.json.jackson2.JacksonFactory$1 -> bv:
    int[] $SwitchMap$com$fasterxml$jackson$core$JsonToken -> a
com.google.api.client.json.jackson2.JacksonGenerator -> bw:
    com.fasterxml.jackson.core.JsonGenerator generator -> a
    com.google.api.client.json.jackson2.JacksonFactory factory -> b
    void flush() -> flush
    void close() -> close
    void writeBoolean(boolean) -> writeBoolean
    void writeEndArray() -> writeEndArray
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
    void writeStartArray() -> writeStartArray
    void writeStartObject() -> writeStartObject
    void writeString(java.lang.String) -> writeString
    void enablePrettyPrint() -> enablePrettyPrint
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
com.google.api.client.json.jackson2.JacksonParser -> bx:
    com.fasterxml.jackson.core.JsonParser parser -> a
    com.google.api.client.json.jackson2.JacksonFactory factory -> b
    void close() -> close
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    byte getByteValue() -> getByteValue
    float getFloatValue() -> getFloatValue
    int getIntValue() -> getIntValue
    short getShortValue() -> getShortValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
    double getDoubleValue() -> getDoubleValue
    long getLongValue() -> getLongValue
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
com.google.api.client.json.rpc2.JsonRpcRequest -> com.google.api.client.json.rpc2.JsonRpcRequest:
    java.lang.String jsonrpc -> jsonrpc
    java.lang.Object id -> id
    java.lang.String method -> method
    java.lang.Object params -> params
    java.lang.String getVersion() -> getVersion
    java.lang.Object getId() -> getId
    void setId(java.lang.Object) -> setId
    java.lang.String getMethod() -> getMethod
    void setMethod(java.lang.String) -> setMethod
    java.lang.Object getParameters() -> getParameters
    void setParameters(java.lang.Object) -> setParameters
    com.google.api.client.json.rpc2.JsonRpcRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.rpc2.JsonRpcRequest clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.json.webtoken.JsonWebSignature -> com.google.api.client.json.webtoken.JsonWebSignature:
    byte[] signatureBytes -> a
    byte[] signedContentBytes -> b
    com.google.api.client.json.webtoken.JsonWebSignature$Header getHeader() -> getHeader
    boolean verifySignature(java.security.PublicKey) -> verifySignature
    byte[] getSignatureBytes() -> getSignatureBytes
    byte[] getSignedContentBytes() -> getSignedContentBytes
    com.google.api.client.json.webtoken.JsonWebSignature parse(com.google.api.client.json.JsonFactory,java.lang.String) -> parse
    com.google.api.client.json.webtoken.JsonWebSignature$Parser parser(com.google.api.client.json.JsonFactory) -> parser
    java.lang.String signUsingRsaSha256(java.security.PrivateKey,com.google.api.client.json.JsonFactory,com.google.api.client.json.webtoken.JsonWebSignature$Header,com.google.api.client.json.webtoken.JsonWebToken$Payload) -> signUsingRsaSha256
    com.google.api.client.json.webtoken.JsonWebToken$Header getHeader() -> getHeader
com.google.api.client.json.webtoken.JsonWebSignature$Header -> com.google.api.client.json.webtoken.JsonWebSignature$Header:
    java.lang.String algorithm -> algorithm
    java.lang.String jwkUrl -> jwkUrl
    java.lang.String jwk -> jwk
    java.lang.String keyId -> keyId
    java.lang.String x509Url -> x509Url
    java.lang.String x509Thumbprint -> x509Thumbprint
    java.lang.String x509Certificate -> x509Certificate
    com.google.api.client.json.webtoken.JsonWebSignature$Header setType(java.lang.String) -> setType
    java.lang.String getAlgorithm() -> getAlgorithm
    com.google.api.client.json.webtoken.JsonWebSignature$Header setAlgorithm(java.lang.String) -> setAlgorithm
    java.lang.String getJwkUrl() -> getJwkUrl
    com.google.api.client.json.webtoken.JsonWebSignature$Header setJwkUrl(java.lang.String) -> setJwkUrl
    java.lang.String getJwk() -> getJwk
    com.google.api.client.json.webtoken.JsonWebSignature$Header setJwk(java.lang.String) -> setJwk
    java.lang.String getKeyId() -> getKeyId
    com.google.api.client.json.webtoken.JsonWebSignature$Header setKeyId(java.lang.String) -> setKeyId
    java.lang.String getX509Url() -> getX509Url
    com.google.api.client.json.webtoken.JsonWebSignature$Header setX509Url(java.lang.String) -> setX509Url
    java.lang.String getX509Thumbprint() -> getX509Thumbprint
    com.google.api.client.json.webtoken.JsonWebSignature$Header setX509Thumbprint(java.lang.String) -> setX509Thumbprint
    java.lang.String getX509Certificate() -> getX509Certificate
    com.google.api.client.json.webtoken.JsonWebSignature$Header setX509Certificate(java.lang.String) -> setX509Certificate
    com.google.api.client.json.webtoken.JsonWebSignature$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebSignature$Header clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Header clone() -> clone
    com.google.api.client.json.webtoken.JsonWebToken$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebToken$Header setType(java.lang.String) -> setType
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.json.webtoken.JsonWebSignature$Parser -> com.google.api.client.json.webtoken.JsonWebSignature$Parser:
    com.google.api.client.json.JsonFactory jsonFactory -> a
    java.lang.Class headerClass -> b
    java.lang.Class payloadClass -> c
    java.lang.Class getHeaderClass() -> getHeaderClass
    com.google.api.client.json.webtoken.JsonWebSignature$Parser setHeaderClass(java.lang.Class) -> setHeaderClass
    java.lang.Class getPayloadClass() -> getPayloadClass
    com.google.api.client.json.webtoken.JsonWebSignature$Parser setPayloadClass(java.lang.Class) -> setPayloadClass
    com.google.api.client.json.JsonFactory getJsonFactory() -> getJsonFactory
    com.google.api.client.json.webtoken.JsonWebSignature parse(java.lang.String) -> parse
com.google.api.client.json.webtoken.JsonWebToken -> com.google.api.client.json.webtoken.JsonWebToken:
    com.google.api.client.json.webtoken.JsonWebToken$Header header -> a
    com.google.api.client.json.webtoken.JsonWebToken$Payload payload -> b
    java.lang.String toString() -> toString
    com.google.api.client.json.webtoken.JsonWebToken$Header getHeader() -> getHeader
    com.google.api.client.json.webtoken.JsonWebToken$Payload getPayload() -> getPayload
com.google.api.client.json.webtoken.JsonWebToken$Header -> com.google.api.client.json.webtoken.JsonWebToken$Header:
    java.lang.String type -> type
    java.lang.String contentType -> contentType
    java.lang.String getType() -> getType
    com.google.api.client.json.webtoken.JsonWebToken$Header setType(java.lang.String) -> setType
    java.lang.String getContentType() -> getContentType
    com.google.api.client.json.webtoken.JsonWebToken$Header setContentType(java.lang.String) -> setContentType
    com.google.api.client.json.webtoken.JsonWebToken$Header set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebToken$Header clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.json.webtoken.JsonWebToken$Payload -> com.google.api.client.json.webtoken.JsonWebToken$Payload:
    java.lang.Long expirationTimeSeconds -> expirationTimeSeconds
    java.lang.Long notBeforeTimeSeconds -> notBeforeTimeSeconds
    java.lang.Long issuedAtTimeSeconds -> issuedAtTimeSeconds
    java.lang.String issuer -> issuer
    java.lang.Object audience -> audience
    java.lang.String jwtId -> jwtId
    java.lang.String type -> type
    java.lang.String subject -> subject
    java.lang.Long getExpirationTimeSeconds() -> getExpirationTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setExpirationTimeSeconds(java.lang.Long) -> setExpirationTimeSeconds
    java.lang.Long getNotBeforeTimeSeconds() -> getNotBeforeTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setNotBeforeTimeSeconds(java.lang.Long) -> setNotBeforeTimeSeconds
    java.lang.Long getIssuedAtTimeSeconds() -> getIssuedAtTimeSeconds
    com.google.api.client.json.webtoken.JsonWebToken$Payload setIssuedAtTimeSeconds(java.lang.Long) -> setIssuedAtTimeSeconds
    java.lang.String getIssuer() -> getIssuer
    com.google.api.client.json.webtoken.JsonWebToken$Payload setIssuer(java.lang.String) -> setIssuer
    java.lang.Object getAudience() -> getAudience
    java.util.List getAudienceAsList() -> getAudienceAsList
    com.google.api.client.json.webtoken.JsonWebToken$Payload setAudience(java.lang.Object) -> setAudience
    java.lang.String getJwtId() -> getJwtId
    com.google.api.client.json.webtoken.JsonWebToken$Payload setJwtId(java.lang.String) -> setJwtId
    java.lang.String getType() -> getType
    com.google.api.client.json.webtoken.JsonWebToken$Payload setType(java.lang.String) -> setType
    java.lang.String getSubject() -> getSubject
    com.google.api.client.json.webtoken.JsonWebToken$Payload setSubject(java.lang.String) -> setSubject
    com.google.api.client.json.webtoken.JsonWebToken$Payload set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.webtoken.JsonWebToken$Payload clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.repackaged.com.google.common.annotations.Beta -> com.google.api.client.repackaged.com.google.common.annotations.Beta:
com.google.api.client.repackaged.com.google.common.annotations.GwtCompatible -> com.google.api.client.repackaged.com.google.common.annotations.GwtCompatible:
    boolean serializable() -> serializable
    boolean emulated() -> emulated
com.google.api.client.repackaged.com.google.common.annotations.VisibleForTesting -> com.google.api.client.repackaged.com.google.common.annotations.VisibleForTesting:
com.google.api.client.repackaged.com.google.common.base.Joiner -> com.google.api.client.repackaged.com.google.common.base.Joiner:
    java.lang.String separator -> a
    com.google.api.client.repackaged.com.google.common.base.Joiner on(java.lang.String) -> on
    com.google.api.client.repackaged.com.google.common.base.Joiner on(char) -> on
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object[]) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.String join(java.lang.Object) -> join
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.util.Iterator) -> join
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[]) -> join
    com.google.api.client.repackaged.com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.api.client.repackaged.com.google.common.base.Joiner skipNulls() -> skipNulls
    com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    java.lang.CharSequence toString(java.lang.Object) -> a
    java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[]) -> a
    java.lang.String access$100(com.google.api.client.repackaged.com.google.common.base.Joiner) -> a
com.google.api.client.repackaged.com.google.common.base.Joiner$1 -> by:
    java.lang.String val$nullText -> b
    com.google.api.client.repackaged.com.google.common.base.Joiner this$0 -> c
    java.lang.CharSequence toString(java.lang.Object) -> a
    com.google.api.client.repackaged.com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.api.client.repackaged.com.google.common.base.Joiner skipNulls() -> skipNulls
com.google.api.client.repackaged.com.google.common.base.Joiner$2 -> bz:
    com.google.api.client.repackaged.com.google.common.base.Joiner this$0 -> b
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    com.google.api.client.repackaged.com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
com.google.api.client.repackaged.com.google.common.base.Joiner$3 -> bA:
    java.lang.Object[] val$rest -> a
    java.lang.Object val$first -> b
    java.lang.Object val$second -> c
    int size() -> size
    java.lang.Object get(int) -> get
com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner -> com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner:
    com.google.api.client.repackaged.com.google.common.base.Joiner joiner -> a
    java.lang.String keyValueSeparator -> b
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Map) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map) -> appendTo
    java.lang.String join(java.util.Map) -> join
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    java.lang.String join(java.lang.Object) -> join
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.util.Iterator) -> join
    com.google.api.client.repackaged.com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String) -> useForNull
com.google.api.client.repackaged.com.google.common.base.Objects -> com.google.api.client.repackaged.com.google.common.base.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hashCode(java.lang.Object[]) -> hashCode
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
    java.lang.String simpleName(java.lang.Class) -> a
    java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper -> com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper:
    java.lang.String className -> a
    java.util.List valueHolders -> b
    boolean omitNullValues -> c
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper omitNullValues() -> omitNullValues
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,boolean) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,char) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,double) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,float) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,int) -> add
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper add(java.lang.String,long) -> add
    java.lang.StringBuilder checkNameAndAppend(java.lang.String) -> a
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(java.lang.Object) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(boolean) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(char) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(double) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(float) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(int) -> addValue
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper addValue(long) -> addValue
    java.lang.String toString() -> toString
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper$ValueHolder addHolder() -> a
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper$ValueHolder addHolder(java.lang.Object) -> a
com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper$ValueHolder -> bB:
    java.lang.StringBuilder builder -> a
    boolean isNull -> b
com.google.api.client.repackaged.com.google.common.base.Preconditions -> com.google.api.client.repackaged.com.google.common.base.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    int checkElementIndex(int,int) -> checkElementIndex
    int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    int checkPositionIndex(int,int) -> checkPositionIndex
    int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    java.lang.String badPositionIndex(int,int,java.lang.String) -> a
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> a
com.google.api.client.repackaged.com.google.common.base.Strings -> com.google.api.client.repackaged.com.google.common.base.Strings:
    java.lang.String nullToEmpty(java.lang.String) -> nullToEmpty
    java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    java.lang.String padStart(java.lang.String,int,char) -> padStart
    java.lang.String padEnd(java.lang.String,int,char) -> padEnd
    java.lang.String repeat(java.lang.String,int) -> repeat
    java.lang.String commonPrefix(java.lang.CharSequence,java.lang.CharSequence) -> commonPrefix
    java.lang.String commonSuffix(java.lang.CharSequence,java.lang.CharSequence) -> commonSuffix
    boolean validSurrogatePairAt(java.lang.CharSequence,int) -> a
com.google.api.client.repackaged.com.google.common.base.Throwables -> com.google.api.client.repackaged.com.google.common.base.Throwables:
    void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> propagateIfInstanceOf
    void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class) -> propagateIfPossible
    java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.util.List getCausalChain(java.lang.Throwable) -> getCausalChain
    java.lang.String getStackTraceAsString(java.lang.Throwable) -> getStackTraceAsString
com.google.api.client.repackaged.org.apache.commons.codec.BinaryDecoder -> com.google.api.client.repackaged.org.apache.commons.codec.BinaryDecoder:
    byte[] decode(byte[]) -> decode
com.google.api.client.repackaged.org.apache.commons.codec.BinaryEncoder -> com.google.api.client.repackaged.org.apache.commons.codec.BinaryEncoder:
    byte[] encode(byte[]) -> encode
com.google.api.client.repackaged.org.apache.commons.codec.Decoder -> com.google.api.client.repackaged.org.apache.commons.codec.Decoder:
    java.lang.Object decode(java.lang.Object) -> decode
com.google.api.client.repackaged.org.apache.commons.codec.DecoderException -> com.google.api.client.repackaged.org.apache.commons.codec.DecoderException:
    long serialVersionUID -> serialVersionUID
com.google.api.client.repackaged.org.apache.commons.codec.Encoder -> com.google.api.client.repackaged.org.apache.commons.codec.Encoder:
    java.lang.Object encode(java.lang.Object) -> encode
com.google.api.client.repackaged.org.apache.commons.codec.EncoderException -> com.google.api.client.repackaged.org.apache.commons.codec.EncoderException:
    long serialVersionUID -> serialVersionUID
com.google.api.client.repackaged.org.apache.commons.codec.binary.Base64 -> com.google.api.client.repackaged.org.apache.commons.codec.binary.Base64:
    byte[] CHUNK_SEPARATOR -> a
    byte[] STANDARD_ENCODE_TABLE -> b
    byte[] URL_SAFE_ENCODE_TABLE -> c
    byte[] DECODE_TABLE -> d
    byte[] encodeTable -> e
    byte[] decodeTable -> f
    byte[] lineSeparator -> g
    int decodeSize -> h
    int encodeSize -> i
    int bitWorkArea -> j
    boolean isUrlSafe() -> isUrlSafe
    void encode(byte[],int,int) -> a
    void decode(byte[],int,int) -> b
    boolean isArrayByteBase64(byte[]) -> isArrayByteBase64
    boolean isBase64(byte) -> isBase64
    boolean isBase64(java.lang.String) -> isBase64
    boolean isBase64(byte[]) -> isBase64
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] encodeBase64Chunked(byte[]) -> encodeBase64Chunked
    byte[] encodeBase64(byte[],boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean) -> encodeBase64
    byte[] encodeBase64(byte[],boolean,boolean,int) -> encodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
    byte[] decodeBase64(byte[]) -> decodeBase64
    java.math.BigInteger decodeInteger(byte[]) -> decodeInteger
    byte[] encodeInteger(java.math.BigInteger) -> encodeInteger
    boolean isInAlphabet(byte) -> isInAlphabet
com.google.api.client.repackaged.org.apache.commons.codec.binary.BaseNCodec -> com.google.api.client.repackaged.org.apache.commons.codec.binary.BaseNCodec:
    int MIME_CHUNK_SIZE -> MIME_CHUNK_SIZE
    int PEM_CHUNK_SIZE -> PEM_CHUNK_SIZE
    int MASK_8BITS -> MASK_8BITS
    byte PAD_DEFAULT -> PAD_DEFAULT
    byte PAD -> PAD
    int unencodedBlockSize -> a
    int encodedBlockSize -> b
    int lineLength -> lineLength
    int chunkSeparatorLength -> c
    byte[] buffer -> buffer
    int pos -> pos
    int readPos -> d
    boolean eof -> eof
    int currentLinePos -> currentLinePos
    int modulus -> modulus
    int getDefaultBufferSize() -> getDefaultBufferSize
    void ensureBufferSize(int) -> ensureBufferSize
    int readResults(byte[],int,int) -> c
    boolean isWhiteSpace(byte) -> isWhiteSpace
    void reset() -> a
    java.lang.Object encode(java.lang.Object) -> encode
    java.lang.String encodeToString(byte[]) -> encodeToString
    java.lang.Object decode(java.lang.Object) -> decode
    byte[] decode(java.lang.String) -> decode
    byte[] decode(byte[]) -> decode
    byte[] encode(byte[]) -> encode
    java.lang.String encodeAsString(byte[]) -> encodeAsString
    void encode(byte[],int,int) -> a
    void decode(byte[],int,int) -> b
    boolean isInAlphabet(byte) -> isInAlphabet
    boolean isInAlphabet(byte[],boolean) -> isInAlphabet
    boolean isInAlphabet(java.lang.String) -> isInAlphabet
    boolean containsAlphabetOrPad(byte[]) -> containsAlphabetOrPad
    long getEncodedLength(byte[]) -> getEncodedLength
com.google.api.client.repackaged.org.apache.commons.codec.binary.StringUtils -> com.google.api.client.repackaged.org.apache.commons.codec.binary.StringUtils:
    byte[] getBytesIso8859_1(java.lang.String) -> getBytesIso8859_1
    byte[] getBytesUsAscii(java.lang.String) -> getBytesUsAscii
    byte[] getBytesUtf16(java.lang.String) -> getBytesUtf16
    byte[] getBytesUtf16Be(java.lang.String) -> getBytesUtf16Be
    byte[] getBytesUtf16Le(java.lang.String) -> getBytesUtf16Le
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    byte[] getBytesUnchecked(java.lang.String,java.lang.String) -> getBytesUnchecked
    java.lang.IllegalStateException newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException) -> a
    java.lang.String newString(byte[],java.lang.String) -> newString
    java.lang.String newStringIso8859_1(byte[]) -> newStringIso8859_1
    java.lang.String newStringUsAscii(byte[]) -> newStringUsAscii
    java.lang.String newStringUtf16(byte[]) -> newStringUtf16
    java.lang.String newStringUtf16Be(byte[]) -> newStringUtf16Be
    java.lang.String newStringUtf16Le(byte[]) -> newStringUtf16Le
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
com.google.api.client.testing.http.FixedClock -> com.google.api.client.testing.http.FixedClock:
    java.util.concurrent.atomic.AtomicLong currentTime -> a
    com.google.api.client.testing.http.FixedClock setTime(long) -> setTime
    long currentTimeMillis() -> currentTimeMillis
com.google.api.client.testing.http.HttpTesting -> com.google.api.client.testing.http.HttpTesting:
    java.lang.String SIMPLE_URL -> SIMPLE_URL
    com.google.api.client.http.GenericUrl SIMPLE_GENERIC_URL -> SIMPLE_GENERIC_URL
com.google.api.client.testing.http.MockHttpContent -> com.google.api.client.testing.http.MockHttpContent:
    java.lang.String encoding -> a
    long length -> b
    java.lang.String type -> c
    byte[] content -> d
    java.lang.String getEncoding() -> getEncoding
    long getLength() -> getLength
    java.lang.String getType() -> getType
    void writeTo(java.io.OutputStream) -> writeTo
    boolean retrySupported() -> retrySupported
    byte[] getContent() -> getContent
    com.google.api.client.testing.http.MockHttpContent setContent(byte[]) -> setContent
    com.google.api.client.testing.http.MockHttpContent setEncoding(java.lang.String) -> setEncoding
    com.google.api.client.testing.http.MockHttpContent setLength(long) -> setLength
    com.google.api.client.testing.http.MockHttpContent setType(java.lang.String) -> setType
com.google.api.client.testing.http.MockHttpTransport -> com.google.api.client.testing.http.MockHttpTransport:
    java.util.Set supportedMethods -> b
    boolean supportsMethod(java.lang.String) -> supportsMethod
    com.google.api.client.http.LowLevelHttpRequest buildRequest(java.lang.String,java.lang.String) -> buildRequest
    java.util.Set getSupportedMethods() -> getSupportedMethods
    com.google.api.client.testing.http.MockHttpTransport$Builder builder() -> builder
com.google.api.client.testing.http.MockHttpTransport$Builder -> com.google.api.client.testing.http.MockHttpTransport$Builder:
    java.util.Set supportedMethods -> a
    com.google.api.client.testing.http.MockHttpTransport build() -> build
    java.util.Set getSupportedMethods() -> getSupportedMethods
    com.google.api.client.testing.http.MockHttpTransport$Builder setSupportedMethods(java.util.Set) -> setSupportedMethods
com.google.api.client.testing.http.MockHttpUnsuccessfulResponseHandler -> com.google.api.client.testing.http.MockHttpUnsuccessfulResponseHandler:
    boolean isCalled -> a
    boolean successfullyHandleResponse -> b
    boolean isCalled() -> isCalled
    boolean handleResponse(com.google.api.client.http.HttpRequest,com.google.api.client.http.HttpResponse,boolean) -> handleResponse
com.google.api.client.testing.http.MockLowLevelHttpRequest -> com.google.api.client.testing.http.MockLowLevelHttpRequest:
    java.lang.String url -> a
    com.google.api.client.http.HttpContent content -> b
    java.util.Map headersMap -> c
    com.google.api.client.testing.http.MockLowLevelHttpResponse response -> d
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.http.LowLevelHttpResponse execute() -> execute
    void setContent(com.google.api.client.http.HttpContent) -> setContent
    java.lang.String getUrl() -> getUrl
    java.util.Map getHeaders() -> getHeaders
    java.lang.String getFirstHeaderValue(java.lang.String) -> getFirstHeaderValue
    java.util.List getHeaderValues(java.lang.String) -> getHeaderValues
    com.google.api.client.testing.http.MockLowLevelHttpRequest setUrl(java.lang.String) -> setUrl
    com.google.api.client.http.HttpContent getContent() -> getContent
    java.lang.String getContentAsString() -> getContentAsString
    com.google.api.client.testing.http.MockLowLevelHttpResponse getResponse() -> getResponse
    com.google.api.client.testing.http.MockLowLevelHttpRequest setResponse(com.google.api.client.testing.http.MockLowLevelHttpResponse) -> setResponse
com.google.api.client.testing.http.MockLowLevelHttpResponse -> com.google.api.client.testing.http.MockLowLevelHttpResponse:
    java.io.InputStream content -> a
    java.lang.String contentType -> b
    int statusCode -> c
    java.lang.String reasonPhrase -> d
    java.util.List headerNames -> e
    java.util.List headerValues -> f
    java.lang.String contentEncoding -> g
    long contentLength -> h
    boolean isDisconnected -> i
    com.google.api.client.testing.http.MockLowLevelHttpResponse addHeader(java.lang.String,java.lang.String) -> addHeader
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContent(java.lang.String) -> setContent
    java.io.InputStream getContent() -> getContent
    java.lang.String getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.lang.String getContentType() -> getContentType
    int getHeaderCount() -> getHeaderCount
    java.lang.String getHeaderName(int) -> getHeaderName
    java.lang.String getHeaderValue(int) -> getHeaderValue
    java.lang.String getReasonPhrase() -> getReasonPhrase
    int getStatusCode() -> getStatusCode
    java.lang.String getStatusLine() -> getStatusLine
    java.util.List getHeaderNames() -> getHeaderNames
    com.google.api.client.testing.http.MockLowLevelHttpResponse setHeaderNames(java.util.List) -> setHeaderNames
    java.util.List getHeaderValues() -> getHeaderValues
    com.google.api.client.testing.http.MockLowLevelHttpResponse setHeaderValues(java.util.List) -> setHeaderValues
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContent(java.io.InputStream) -> setContent
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentType(java.lang.String) -> setContentType
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentEncoding(java.lang.String) -> setContentEncoding
    com.google.api.client.testing.http.MockLowLevelHttpResponse setContentLength(long) -> setContentLength
    com.google.api.client.testing.http.MockLowLevelHttpResponse setStatusCode(int) -> setStatusCode
    com.google.api.client.testing.http.MockLowLevelHttpResponse setReasonPhrase(java.lang.String) -> setReasonPhrase
    void disconnect() -> disconnect
    boolean isDisconnected() -> isDisconnected
com.google.api.client.testing.http.apache.MockHttpClient -> com.google.api.client.testing.http.apache.MockHttpClient:
    int responseCode -> a
    org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams) -> createClientRequestDirector
    int getResponseCode() -> getResponseCode
    com.google.api.client.testing.http.apache.MockHttpClient setResponseCode(int) -> setResponseCode
com.google.api.client.testing.http.apache.MockHttpClient$1 -> bC:
    com.google.api.client.testing.http.apache.MockHttpClient this$0 -> a
    org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> execute
com.google.api.client.testing.http.javanet.MockHttpURLConnection -> com.google.api.client.testing.http.javanet.MockHttpURLConnection:
    boolean doOutputCalled -> a
    java.io.OutputStream outputStream -> b
    void disconnect() -> disconnect
    boolean usingProxy() -> usingProxy
    void connect() -> connect
    int getResponseCode() -> getResponseCode
    void setDoOutput(boolean) -> setDoOutput
    java.io.OutputStream getOutputStream() -> getOutputStream
    boolean doOutputCalled() -> doOutputCalled
    com.google.api.client.testing.http.javanet.MockHttpURLConnection setOutputStream(java.io.OutputStream) -> setOutputStream
    com.google.api.client.testing.http.javanet.MockHttpURLConnection setResponseCode(int) -> setResponseCode
com.google.api.client.testing.http.json.MockJsonFactory -> com.google.api.client.testing.http.json.MockJsonFactory:
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.InputStream,java.nio.charset.Charset) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.lang.String) -> createJsonParser
    com.google.api.client.json.JsonParser createJsonParser(java.io.Reader) -> createJsonParser
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.OutputStream,java.nio.charset.Charset) -> createJsonGenerator
    com.google.api.client.json.JsonGenerator createJsonGenerator(java.io.Writer) -> createJsonGenerator
com.google.api.client.testing.http.json.MockJsonGenerator -> com.google.api.client.testing.http.json.MockJsonGenerator:
    com.google.api.client.json.JsonFactory factory -> a
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void flush() -> flush
    void close() -> close
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeNull() -> writeNull
    void writeString(java.lang.String) -> writeString
    void writeBoolean(boolean) -> writeBoolean
    void writeNumber(int) -> writeNumber
    void writeNumber(long) -> writeNumber
    void writeNumber(java.math.BigInteger) -> writeNumber
    void writeNumber(float) -> writeNumber
    void writeNumber(double) -> writeNumber
    void writeNumber(java.math.BigDecimal) -> writeNumber
    void writeNumber(java.lang.String) -> writeNumber
com.google.api.client.testing.http.json.MockJsonParser -> com.google.api.client.testing.http.json.MockJsonParser:
    com.google.api.client.json.JsonFactory factory -> a
    com.google.api.client.json.JsonFactory getFactory() -> getFactory
    void close() -> close
    com.google.api.client.json.JsonToken nextToken() -> nextToken
    com.google.api.client.json.JsonToken getCurrentToken() -> getCurrentToken
    java.lang.String getCurrentName() -> getCurrentName
    com.google.api.client.json.JsonParser skipChildren() -> skipChildren
    java.lang.String getText() -> getText
    byte getByteValue() -> getByteValue
    short getShortValue() -> getShortValue
    int getIntValue() -> getIntValue
    float getFloatValue() -> getFloatValue
    long getLongValue() -> getLongValue
    double getDoubleValue() -> getDoubleValue
    java.math.BigInteger getBigIntegerValue() -> getBigIntegerValue
    java.math.BigDecimal getDecimalValue() -> getDecimalValue
com.google.api.client.testing.util.LogRecordingHandler -> com.google.api.client.testing.util.LogRecordingHandler:
    java.util.List records -> a
    void publish(java.util.logging.LogRecord) -> publish
    void flush() -> flush
    void close() -> close
    java.util.List messages() -> messages
com.google.api.client.testing.util.SecurityTestUtils -> com.google.api.client.testing.util.SecurityTestUtils:
    byte[] ENCODED_PRIVATE_KEY -> a
    byte[] ENCODED_PUBLIC_KEY -> b
    byte[] newEncodedRsaPrivateKeyBytes() -> newEncodedRsaPrivateKeyBytes
    byte[] newEncodedRsaPublicKeyBytes() -> newEncodedRsaPublicKeyBytes
    java.security.interfaces.RSAPrivateKey newRsaPrivateKey() -> newRsaPrivateKey
    java.security.interfaces.RSAPublicKey newRsaPublicKey() -> newRsaPublicKey
com.google.api.client.testing.util.TestableByteArrayInputStream -> com.google.api.client.testing.util.TestableByteArrayInputStream:
    boolean closed -> a
    void close() -> close
    byte[] getBuffer() -> getBuffer
    boolean isClosed() -> isClosed
com.google.api.client.testing.util.TestableByteArrayOutputStream -> com.google.api.client.testing.util.TestableByteArrayOutputStream:
    boolean closed -> a
    void close() -> close
    byte[] getBuffer() -> getBuffer
    boolean isClosed() -> isClosed
com.google.api.client.util.ArrayMap -> com.google.api.client.util.ArrayMap:
    int size -> a
    java.lang.Object[] data -> b
    com.google.api.client.util.ArrayMap create() -> create
    com.google.api.client.util.ArrayMap create(int) -> create
    com.google.api.client.util.ArrayMap of(java.lang.Object[]) -> of
    int size() -> size
    java.lang.Object getKey(int) -> getKey
    java.lang.Object getValue(int) -> getValue
    java.lang.Object set(int,java.lang.Object,java.lang.Object) -> set
    java.lang.Object set(int,java.lang.Object) -> set
    void add(java.lang.Object,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    boolean containsKey(java.lang.Object) -> containsKey
    int getIndexOfKey(java.lang.Object) -> getIndexOfKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void trim() -> trim
    void ensureCapacity(int) -> ensureCapacity
    void setDataCapacity(int) -> a
    void setData(int,java.lang.Object,java.lang.Object) -> a
    java.lang.Object valueAtDataIndex(int) -> b
    int getDataIndexOfKey(java.lang.Object) -> a
    java.lang.Object removeFromDataIndexOfKey(int) -> c
    void clear() -> clear
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    com.google.api.client.util.ArrayMap clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.client.util.ArrayMap$Entry -> bD:
    int index -> b
    com.google.api.client.util.ArrayMap this$0 -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.api.client.util.ArrayMap$EntryIterator -> bE:
    boolean removed -> b
    int nextIndex -> c
    com.google.api.client.util.ArrayMap this$0 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.ArrayMap$EntrySet -> bF:
    com.google.api.client.util.ArrayMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.api.client.util.ArrayValueMap -> com.google.api.client.util.ArrayValueMap:
    java.util.Map keyMap -> a
    java.util.Map fieldMap -> b
    java.lang.Object destination -> c
    void setValues() -> setValues
    void put(java.lang.reflect.Field,java.lang.Class,java.lang.Object) -> put
    void put(java.lang.String,java.lang.Class,java.lang.Object) -> put
com.google.api.client.util.ArrayValueMap$ArrayValue -> bG:
    java.lang.Class componentType -> a
    java.util.ArrayList values -> b
    java.lang.Object toArray() -> a
    void addValue(java.lang.Class,java.lang.Object) -> a
com.google.api.client.util.Base64 -> com.google.api.client.util.Base64:
    byte[] encodeBase64(byte[]) -> encodeBase64
    java.lang.String encodeBase64String(byte[]) -> encodeBase64String
    byte[] encodeBase64URLSafe(byte[]) -> encodeBase64URLSafe
    java.lang.String encodeBase64URLSafeString(byte[]) -> encodeBase64URLSafeString
    byte[] decodeBase64(byte[]) -> decodeBase64
    byte[] decodeBase64(java.lang.String) -> decodeBase64
com.google.api.client.util.ByteArrayStreamingContent -> com.google.api.client.util.ByteArrayStreamingContent:
    byte[] byteArray -> a
    int offset -> b
    int length -> c
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.util.ByteCountingOutputStream -> bH:
    long count -> a
    void write(byte[],int,int) -> write
    void write(int) -> write
com.google.api.client.util.ByteStreams -> com.google.api.client.util.ByteStreams:
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    java.io.InputStream limit(java.io.InputStream,long) -> limit
    int read(java.io.InputStream,byte[],int,int) -> read
com.google.api.client.util.ByteStreams$LimitedInputStream -> bI:
    long left -> a
    long mark -> b
    int available() -> available
    void mark(int) -> mark
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.google.api.client.util.Charsets -> com.google.api.client.util.Charsets:
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
com.google.api.client.util.ClassInfo -> com.google.api.client.util.ClassInfo:
    java.util.Map CACHE -> b
    java.util.Map CACHE_IGNORE_CASE -> c
    java.lang.Class clazz -> d
    boolean ignoreCase -> e
    java.util.IdentityHashMap nameToFieldInfoMap -> f
    java.util.List names -> a
    com.google.api.client.util.ClassInfo of(java.lang.Class) -> of
    com.google.api.client.util.ClassInfo of(java.lang.Class,boolean) -> of
    java.lang.Class getUnderlyingClass() -> getUnderlyingClass
    boolean getIgnoreCase() -> getIgnoreCase
    com.google.api.client.util.FieldInfo getFieldInfo(java.lang.String) -> getFieldInfo
    java.lang.reflect.Field getField(java.lang.String) -> getField
    boolean isEnum() -> isEnum
    java.util.Collection getNames() -> getNames
com.google.api.client.util.ClassInfo$1 -> bJ:
    com.google.api.client.util.ClassInfo this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.api.client.util.Clock -> com.google.api.client.util.Clock:
    com.google.api.client.util.Clock SYSTEM -> SYSTEM
    long currentTimeMillis() -> currentTimeMillis
com.google.api.client.util.Clock$1 -> bK:
    long currentTimeMillis() -> currentTimeMillis
com.google.api.client.util.Collections2 -> com.google.api.client.util.Collections2:
    java.util.Collection cast(java.lang.Iterable) -> a
com.google.api.client.util.Data -> com.google.api.client.util.Data:
    java.lang.Boolean NULL_BOOLEAN -> NULL_BOOLEAN
    java.lang.String NULL_STRING -> NULL_STRING
    java.lang.Character NULL_CHARACTER -> NULL_CHARACTER
    java.lang.Byte NULL_BYTE -> NULL_BYTE
    java.lang.Short NULL_SHORT -> NULL_SHORT
    java.lang.Integer NULL_INTEGER -> NULL_INTEGER
    java.lang.Float NULL_FLOAT -> NULL_FLOAT
    java.lang.Long NULL_LONG -> NULL_LONG
    java.lang.Double NULL_DOUBLE -> NULL_DOUBLE
    java.math.BigInteger NULL_BIG_INTEGER -> NULL_BIG_INTEGER
    java.math.BigDecimal NULL_BIG_DECIMAL -> NULL_BIG_DECIMAL
    com.google.api.client.util.DateTime NULL_DATE_TIME -> NULL_DATE_TIME
    java.util.concurrent.ConcurrentHashMap NULL_CACHE -> a
    java.lang.Object nullOf(java.lang.Class) -> nullOf
    boolean isNull(java.lang.Object) -> isNull
    java.util.Map mapOf(java.lang.Object) -> mapOf
    java.lang.Object clone(java.lang.Object) -> clone
    void deepCopy(java.lang.Object,java.lang.Object) -> deepCopy
    boolean isPrimitive(java.lang.reflect.Type) -> isPrimitive
    boolean isValueOfPrimitiveType(java.lang.Object) -> isValueOfPrimitiveType
    java.lang.Object parsePrimitiveValue(java.lang.reflect.Type,java.lang.String) -> parsePrimitiveValue
    java.util.Collection newCollectionInstance(java.lang.reflect.Type) -> newCollectionInstance
    java.util.Map newMapInstance(java.lang.Class) -> newMapInstance
    java.lang.reflect.Type resolveWildcardTypeOrTypeVariable(java.util.List,java.lang.reflect.Type) -> resolveWildcardTypeOrTypeVariable
com.google.api.client.util.DataMap -> bL:
    java.lang.Object object -> a
    com.google.api.client.util.ClassInfo classInfo -> b
    com.google.api.client.util.DataMap$EntrySet entrySet() -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.google.api.client.util.DataMap$Entry -> bM:
    java.lang.Object fieldValue -> b
    com.google.api.client.util.FieldInfo fieldInfo -> c
    com.google.api.client.util.DataMap this$0 -> a
    java.lang.String getKey() -> a
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object getKey() -> getKey
com.google.api.client.util.DataMap$EntryIterator -> bN:
    int nextKeyIndex -> b
    com.google.api.client.util.FieldInfo nextFieldInfo -> c
    java.lang.Object nextFieldValue -> d
    boolean isRemoved -> e
    boolean isComputed -> f
    com.google.api.client.util.FieldInfo currentFieldInfo -> g
    com.google.api.client.util.DataMap this$0 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.DataMap$EntrySet -> bO:
    com.google.api.client.util.DataMap this$0 -> a
    com.google.api.client.util.DataMap$EntryIterator iterator() -> a
    int size() -> size
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.google.api.client.util.DateTime -> com.google.api.client.util.DateTime:
    long serialVersionUID -> serialVersionUID
    java.util.TimeZone GMT -> a
    long value -> b
    boolean dateOnly -> c
    int tzShift -> d
    long getValue() -> getValue
    boolean isDateOnly() -> isDateOnly
    int getTimeZoneShift() -> getTimeZoneShift
    java.lang.String toStringRfc3339() -> toStringRfc3339
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.api.client.util.DateTime parseRfc3339(java.lang.String) -> parseRfc3339
    void appendInt(java.lang.StringBuilder,int,int) -> a
com.google.api.client.util.FieldInfo -> com.google.api.client.util.FieldInfo:
    java.util.Map CACHE -> a
    boolean isPrimitive -> b
    java.lang.reflect.Field field -> c
    java.lang.String name -> d
    com.google.api.client.util.FieldInfo of(java.lang.Enum) -> of
    com.google.api.client.util.FieldInfo of(java.lang.reflect.Field) -> of
    java.lang.reflect.Field getField() -> getField
    java.lang.String getName() -> getName
    java.lang.Class getType() -> getType
    java.lang.reflect.Type getGenericType() -> getGenericType
    boolean isFinal() -> isFinal
    boolean isPrimitive() -> isPrimitive
    java.lang.Object getValue(java.lang.Object) -> getValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    com.google.api.client.util.ClassInfo getClassInfo() -> getClassInfo
    java.lang.Enum enumValue() -> enumValue
    java.lang.Object getFieldValue(java.lang.reflect.Field,java.lang.Object) -> getFieldValue
    void setFieldValue(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> setFieldValue
com.google.api.client.util.GenericData -> com.google.api.client.util.GenericData:
    java.util.Map unknownFields -> c
    com.google.api.client.util.ClassInfo classInfo -> d
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set entrySet() -> entrySet
    com.google.api.client.util.GenericData clone() -> clone
    java.util.Map getUnknownKeys() -> getUnknownKeys
    void setUnknownKeys(java.util.Map) -> setUnknownKeys
    com.google.api.client.util.ClassInfo getClassInfo() -> getClassInfo
    java.lang.Object clone() -> clone
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.google.api.client.util.GenericData$EntryIterator -> bP:
    boolean startedUnknown -> b
    java.util.Iterator fieldIterator -> c
    java.util.Iterator unknownIterator -> d
    com.google.api.client.util.GenericData this$0 -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.api.client.util.GenericData$EntrySet -> bQ:
    com.google.api.client.util.DataMap$EntrySet dataEntrySet -> b
    com.google.api.client.util.GenericData this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
com.google.api.client.util.GenericData$Flags -> com.google.api.client.util.GenericData$Flags:
    com.google.api.client.util.GenericData$Flags IGNORE_CASE -> IGNORE_CASE
    com.google.api.client.util.GenericData$Flags[] $VALUES -> a
    com.google.api.client.util.GenericData$Flags[] values() -> values
    com.google.api.client.util.GenericData$Flags valueOf(java.lang.String) -> valueOf
com.google.api.client.util.IOUtils -> com.google.api.client.util.IOUtils:
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    void copy(java.io.InputStream,java.io.OutputStream,boolean) -> copy
    long computeLength(com.google.api.client.util.StreamingContent) -> computeLength
com.google.api.client.util.Joiner -> com.google.api.client.util.Joiner:
    com.google.api.client.repackaged.com.google.common.base.Joiner wrapped -> a
    com.google.api.client.util.Joiner on(char) -> on
    java.lang.String join(java.lang.Iterable) -> join
com.google.api.client.util.Key -> com.google.api.client.util.Key:
    java.lang.String value() -> value
com.google.api.client.util.Lists -> com.google.api.client.util.Lists:
    java.util.ArrayList newArrayList() -> newArrayList
    java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
com.google.api.client.util.LoggingByteArrayOutputStream -> com.google.api.client.util.LoggingByteArrayOutputStream:
    int bytesWritten -> a
    int maximumBytesToLog -> b
    boolean closed -> c
    java.util.logging.Level loggingLevel -> d
    java.util.logging.Logger logger -> e
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    int getMaximumBytesToLog() -> getMaximumBytesToLog
    int getBytesWritten() -> getBytesWritten
    void appendBytes(java.lang.StringBuilder,int) -> a
com.google.api.client.util.LoggingInputStream -> com.google.api.client.util.LoggingInputStream:
    com.google.api.client.util.LoggingByteArrayOutputStream logStream -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
    com.google.api.client.util.LoggingByteArrayOutputStream getLogStream() -> getLogStream
com.google.api.client.util.LoggingOutputStream -> com.google.api.client.util.LoggingOutputStream:
    com.google.api.client.util.LoggingByteArrayOutputStream logStream -> a
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    com.google.api.client.util.LoggingByteArrayOutputStream getLogStream() -> getLogStream
com.google.api.client.util.LoggingStreamingContent -> com.google.api.client.util.LoggingStreamingContent:
    com.google.api.client.util.StreamingContent content -> a
    int contentLoggingLimit -> b
    java.util.logging.Level loggingLevel -> c
    java.util.logging.Logger logger -> d
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.util.Maps -> com.google.api.client.util.Maps:
    java.util.HashMap newHashMap() -> newHashMap
    java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    java.util.TreeMap newTreeMap() -> newTreeMap
com.google.api.client.util.NanoClock -> com.google.api.client.util.NanoClock:
    com.google.api.client.util.NanoClock SYSTEM -> SYSTEM
    long nanoTime() -> nanoTime
com.google.api.client.util.NanoClock$1 -> bR:
    long nanoTime() -> nanoTime
com.google.api.client.util.NullValue -> com.google.api.client.util.NullValue:
com.google.api.client.util.ObjectParser -> com.google.api.client.util.ObjectParser:
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
com.google.api.client.util.Objects -> com.google.api.client.util.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    com.google.api.client.util.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
com.google.api.client.util.Objects$ToStringHelper -> com.google.api.client.util.Objects$ToStringHelper:
    com.google.api.client.repackaged.com.google.common.base.Objects$ToStringHelper wrapped -> a
    com.google.api.client.util.Objects$ToStringHelper omitNullValues() -> omitNullValues
    com.google.api.client.util.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
com.google.api.client.util.PemReader -> com.google.api.client.util.PemReader:
    java.util.regex.Pattern BEGIN_PATTERN -> a
    java.util.regex.Pattern END_PATTERN -> b
    java.io.BufferedReader reader -> c
    com.google.api.client.util.PemReader$Section readNextSection() -> readNextSection
    com.google.api.client.util.PemReader$Section readNextSection(java.lang.String) -> readNextSection
    com.google.api.client.util.PemReader$Section readFirstSectionAndClose(java.io.Reader) -> readFirstSectionAndClose
    com.google.api.client.util.PemReader$Section readFirstSectionAndClose(java.io.Reader,java.lang.String) -> readFirstSectionAndClose
    void close() -> close
com.google.api.client.util.PemReader$Section -> com.google.api.client.util.PemReader$Section:
    java.lang.String title -> a
    byte[] base64decodedBytes -> b
    java.lang.String getTitle() -> getTitle
    byte[] getBase64DecodedBytes() -> getBase64DecodedBytes
com.google.api.client.util.Preconditions -> com.google.api.client.util.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
com.google.api.client.util.SecurityUtils -> com.google.api.client.util.SecurityUtils:
    java.security.KeyStore getDefaultKeyStore() -> getDefaultKeyStore
    java.security.KeyStore getJavaKeyStore() -> getJavaKeyStore
    java.security.KeyStore getPkcs12KeyStore() -> getPkcs12KeyStore
    void loadKeyStore(java.security.KeyStore,java.io.InputStream,java.lang.String) -> loadKeyStore
    java.security.PrivateKey getPrivateKey(java.security.KeyStore,java.lang.String,java.lang.String) -> getPrivateKey
    java.security.PrivateKey loadPrivateKeyFromKeyStore(java.security.KeyStore,java.io.InputStream,java.lang.String,java.lang.String,java.lang.String) -> loadPrivateKeyFromKeyStore
    java.security.KeyFactory getRsaKeyFactory() -> getRsaKeyFactory
    java.security.Signature getSha1WithRsaSignatureAlgorithm() -> getSha1WithRsaSignatureAlgorithm
    java.security.Signature getSha256WithRsaSignatureAlgorithm() -> getSha256WithRsaSignatureAlgorithm
    byte[] sign(java.security.Signature,java.security.PrivateKey,byte[]) -> sign
    boolean verify(java.security.Signature,java.security.PublicKey,byte[],byte[]) -> verify
    java.security.cert.CertificateFactory getX509CertificateFactory() -> getX509CertificateFactory
    void loadKeyStoreFromCertificates(java.security.KeyStore,java.security.cert.CertificateFactory,java.io.InputStream) -> loadKeyStoreFromCertificates
com.google.api.client.util.Sets -> com.google.api.client.util.Sets:
    java.util.HashSet newHashSet() -> newHashSet
    java.util.TreeSet newTreeSet() -> newTreeSet
com.google.api.client.util.SslUtils -> com.google.api.client.util.SslUtils:
    javax.net.ssl.SSLContext getSslContext() -> getSslContext
    javax.net.ssl.SSLContext getTlsSslContext() -> getTlsSslContext
    javax.net.ssl.TrustManagerFactory getDefaultTrustManagerFactory() -> getDefaultTrustManagerFactory
    javax.net.ssl.TrustManagerFactory getPkixTrustManagerFactory() -> getPkixTrustManagerFactory
    javax.net.ssl.KeyManagerFactory getDefaultKeyManagerFactory() -> getDefaultKeyManagerFactory
    javax.net.ssl.KeyManagerFactory getPkixKeyManagerFactory() -> getPkixKeyManagerFactory
    javax.net.ssl.SSLContext initSslContext(javax.net.ssl.SSLContext,java.security.KeyStore,javax.net.ssl.TrustManagerFactory) -> initSslContext
    javax.net.ssl.SSLContext trustAllSSLContext() -> trustAllSSLContext
    javax.net.ssl.HostnameVerifier trustAllHostnameVerifier() -> trustAllHostnameVerifier
com.google.api.client.util.SslUtils$1 -> bS:
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.google.api.client.util.SslUtils$2 -> bT:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.google.api.client.util.StreamingContent -> com.google.api.client.util.StreamingContent:
    void writeTo(java.io.OutputStream) -> writeTo
com.google.api.client.util.StringUtils -> com.google.api.client.util.StringUtils:
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    byte[] getBytesUtf8(java.lang.String) -> getBytesUtf8
    java.lang.String newStringUtf8(byte[]) -> newStringUtf8
com.google.api.client.util.Strings -> com.google.api.client.util.Strings:
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
com.google.api.client.util.Throwables -> com.google.api.client.util.Throwables:
    java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
com.google.api.client.util.Types -> com.google.api.client.util.Types:
    java.lang.reflect.ParameterizedType getSuperParameterizedType(java.lang.reflect.Type,java.lang.Class) -> getSuperParameterizedType
    boolean isAssignableToOrFrom(java.lang.Class,java.lang.Class) -> isAssignableToOrFrom
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.IllegalArgumentException handleExceptionForNewInstance(java.lang.Exception,java.lang.Class) -> a
    boolean isArray(java.lang.reflect.Type) -> isArray
    java.lang.reflect.Type getArrayComponentType(java.lang.reflect.Type) -> getArrayComponentType
    java.lang.Class getRawClass(java.lang.reflect.ParameterizedType) -> getRawClass
    java.lang.reflect.Type getBound(java.lang.reflect.WildcardType) -> getBound
    java.lang.reflect.Type resolveTypeVariable(java.util.List,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    java.lang.Class getRawArrayComponentType(java.util.List,java.lang.reflect.Type) -> getRawArrayComponentType
    java.lang.reflect.Type getIterableParameter(java.lang.reflect.Type) -> getIterableParameter
    java.lang.reflect.Type getMapValueParameter(java.lang.reflect.Type) -> getMapValueParameter
    java.lang.reflect.Type getActualParameterAtPosition(java.lang.reflect.Type,java.lang.Class,int) -> a
    java.lang.Iterable iterableOf(java.lang.Object) -> iterableOf
    java.lang.Object toArray(java.util.Collection,java.lang.Class) -> toArray
com.google.api.client.util.Types$1 -> bU:
    java.lang.Object val$value -> a
    java.util.Iterator iterator() -> iterator
com.google.api.client.util.Types$1$1 -> bV:
    int length -> a
    int index -> b
    com.google.api.client.util.Types$1 this$0 -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.api.client.util.Value -> com.google.api.client.util.Value:
    java.lang.String value() -> value
com.google.api.client.util.escape.CharEscapers -> com.google.api.client.util.escape.CharEscapers:
    com.google.api.client.util.escape.Escaper URI_ESCAPER -> a
    com.google.api.client.util.escape.Escaper URI_PATH_ESCAPER -> b
    com.google.api.client.util.escape.Escaper URI_QUERY_STRING_ESCAPER -> c
    java.lang.String escapeUri(java.lang.String) -> escapeUri
    java.lang.String decodeUri(java.lang.String) -> decodeUri
    java.lang.String escapeUriPath(java.lang.String) -> escapeUriPath
    java.lang.String escapeUriQuery(java.lang.String) -> escapeUriQuery
com.google.api.client.util.escape.Escaper -> com.google.api.client.util.escape.Escaper:
    java.lang.String escape(java.lang.String) -> escape
com.google.api.client.util.escape.PercentEscaper -> com.google.api.client.util.escape.PercentEscaper:
    java.lang.String SAFECHARS_URLENCODER -> SAFECHARS_URLENCODER
    java.lang.String SAFEPATHCHARS_URLENCODER -> SAFEPATHCHARS_URLENCODER
    java.lang.String SAFEQUERYSTRINGCHARS_URLENCODER -> SAFEQUERYSTRINGCHARS_URLENCODER
    char[] URI_ESCAPED_SPACE -> a
    char[] UPPER_HEX_DIGITS -> b
    boolean plusForSpace -> c
    boolean[] safeOctets -> d
    boolean[] createSafeOctets(java.lang.String) -> a
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    char[] escape(int) -> escape
com.google.api.client.util.escape.Platform -> bW:
    java.lang.ThreadLocal DEST_TL -> a
    char[] charBufferFromThreadLocal() -> a
com.google.api.client.util.escape.Platform$1 -> bX:
    java.lang.Object initialValue() -> initialValue
com.google.api.client.util.escape.UnicodeEscaper -> com.google.api.client.util.escape.UnicodeEscaper:
    char[] escape(int) -> escape
    int nextEscapeIndex(java.lang.CharSequence,int,int) -> nextEscapeIndex
    java.lang.String escape(java.lang.String) -> escape
    java.lang.String escapeSlow(java.lang.String,int) -> escapeSlow
    int codePointAt(java.lang.CharSequence,int,int) -> codePointAt
    char[] growBuffer(char[],int,int) -> a
com.google.api.client.xml.GenericXml -> com.google.api.client.xml.GenericXml:
    java.lang.String name -> name
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> namespaceDictionary
    com.google.api.client.xml.GenericXml clone() -> clone
    java.lang.String toString() -> toString
    com.google.api.client.xml.GenericXml set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.client.xml.Xml -> com.google.api.client.xml.Xml:
    java.lang.String MEDIA_TYPE -> MEDIA_TYPE
    org.xmlpull.v1.XmlPullParserFactory factory -> a
    org.xmlpull.v1.XmlPullParserFactory getParserFactory() -> a
    org.xmlpull.v1.XmlSerializer createSerializer() -> createSerializer
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
    java.lang.String toStringOf(java.lang.Object) -> toStringOf
    void parseAttributeOrTextContent(java.lang.String,java.lang.reflect.Field,java.lang.reflect.Type,java.util.List,java.lang.Object,com.google.api.client.xml.GenericXml,java.util.Map,java.lang.String) -> a
    void setValue(java.lang.Object,java.lang.reflect.Field,java.lang.Object,com.google.api.client.xml.GenericXml,java.util.Map,java.lang.String) -> a
    void parseElement(org.xmlpull.v1.XmlPullParser,java.lang.Object,com.google.api.client.xml.XmlNamespaceDictionary,com.google.api.client.xml.Xml$CustomizeParser) -> parseElement
    boolean parseElementInternal(org.xmlpull.v1.XmlPullParser,java.util.ArrayList,java.lang.Object,java.lang.reflect.Type,com.google.api.client.xml.XmlNamespaceDictionary,com.google.api.client.xml.Xml$CustomizeParser) -> a
    java.lang.String getFieldName$2eb06fa3(boolean,java.lang.String,java.lang.String) -> a
    java.lang.Object parseTextContentForElement(org.xmlpull.v1.XmlPullParser,java.util.List,boolean,java.lang.reflect.Type) -> a
    java.lang.Object parseValue(java.lang.reflect.Type,java.util.List,java.lang.String) -> a
    void parseNamespacesForElement(org.xmlpull.v1.XmlPullParser,com.google.api.client.xml.XmlNamespaceDictionary) -> a
com.google.api.client.xml.Xml$CustomizeParser -> com.google.api.client.xml.Xml$CustomizeParser:
    boolean stopBeforeStartTag(java.lang.String,java.lang.String) -> stopBeforeStartTag
    boolean stopAfterEndTag(java.lang.String,java.lang.String) -> stopAfterEndTag
com.google.api.client.xml.XmlNamespaceDictionary -> com.google.api.client.xml.XmlNamespaceDictionary:
    java.util.HashMap namespaceAliasToUriMap -> a
    java.util.HashMap namespaceUriToAliasMap -> b
    java.lang.String getAliasForUri(java.lang.String) -> getAliasForUri
    java.lang.String getUriForAlias(java.lang.String) -> getUriForAlias
    java.util.Map getAliasToUriMap() -> getAliasToUriMap
    java.util.Map getUriToAliasMap() -> getUriToAliasMap
    com.google.api.client.xml.XmlNamespaceDictionary set(java.lang.String,java.lang.String) -> set
    java.lang.String toStringOf(java.lang.String,java.lang.Object) -> toStringOf
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.lang.Object) -> serialize
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.Object) -> serialize
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.Object,boolean) -> a
    com.google.api.client.xml.XmlNamespaceDictionary$ElementSerializer startDoc(org.xmlpull.v1.XmlSerializer,java.lang.Object,boolean,java.lang.String) -> a
    void computeAliases(java.lang.Object,java.util.SortedSet) -> a
    java.lang.String getNamespaceUriForAliasHandlingUnknown(boolean,java.lang.String) -> a
    java.lang.String getNamespaceAliasForUriErrorOnUnknown(java.lang.String) -> a
    java.lang.String toSerializedValue(java.lang.Object) -> a
com.google.api.client.xml.XmlNamespaceDictionary$ElementSerializer -> bY:
    boolean errorOnUnknown -> g
    java.lang.Object textValue -> a
    java.util.List attributeNames -> b
    java.util.List attributeValues -> c
    java.util.List subElementNames -> d
    java.util.List subElementValues -> e
    com.google.api.client.xml.XmlNamespaceDictionary this$0 -> f
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String) -> a
    void serialize(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String) -> a
com.google.api.client.xml.XmlObjectParser -> com.google.api.client.xml.XmlObjectParser:
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> a
    com.google.api.client.xml.XmlNamespaceDictionary getNamespaceDictionary() -> getNamespaceDictionary
    java.lang.Object readObject(org.xmlpull.v1.XmlPullParser,java.lang.reflect.Type) -> a
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.InputStream,java.nio.charset.Charset,java.lang.reflect.Type) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.Class) -> parseAndClose
    java.lang.Object parseAndClose(java.io.Reader,java.lang.reflect.Type) -> parseAndClose
com.google.api.client.xml.atom.AbstractAtomFeedParser -> com.google.api.client.xml.atom.AbstractAtomFeedParser:
    boolean feedParsed -> a
    org.xmlpull.v1.XmlPullParser parser -> b
    java.io.InputStream inputStream -> c
    java.lang.Class feedClass -> d
    com.google.api.client.xml.XmlNamespaceDictionary namespaceDictionary -> e
    org.xmlpull.v1.XmlPullParser getParser() -> getParser
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.Class getFeedClass() -> getFeedClass
    com.google.api.client.xml.XmlNamespaceDictionary getNamespaceDictionary() -> getNamespaceDictionary
    java.lang.Object parseFeed() -> parseFeed
    java.lang.Object parseNextEntry() -> parseNextEntry
    void close() -> close
    java.lang.Object parseEntryInternal() -> parseEntryInternal
com.google.api.client.xml.atom.Atom -> com.google.api.client.xml.atom.Atom:
    java.lang.String ATOM_NAMESPACE -> ATOM_NAMESPACE
    java.lang.String MEDIA_TYPE -> MEDIA_TYPE
    com.google.api.client.util.escape.PercentEscaper SLUG_ESCAPER -> a
    void checkContentType(java.lang.String) -> checkContentType
    void setSlugHeader(com.google.api.client.http.HttpHeaders,java.lang.String) -> setSlugHeader
com.google.api.client.xml.atom.Atom$StopAtAtomEntry -> bZ:
    com.google.api.client.xml.atom.Atom$StopAtAtomEntry INSTANCE -> a
    boolean stopBeforeStartTag(java.lang.String,java.lang.String) -> stopBeforeStartTag
com.google.api.services.freebase.Freebase -> com.google.api.services.freebase.Freebase:
    java.lang.String DEFAULT_ROOT_URL -> DEFAULT_ROOT_URL
    java.lang.String DEFAULT_SERVICE_PATH -> DEFAULT_SERVICE_PATH
    java.lang.String DEFAULT_BASE_URL -> DEFAULT_BASE_URL
    void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest) -> initialize
    com.google.api.services.freebase.Freebase$Text text() -> text
    com.google.api.services.freebase.Freebase$Topic topic() -> topic
    com.google.api.services.freebase.Freebase$Image image(java.util.List) -> image
    com.google.api.services.freebase.Freebase$Mqlread mqlread(java.lang.String,java.lang.Class) -> mqlread
    com.google.api.services.freebase.Freebase$Mqlread mqlread(java.lang.String,java.lang.Class,java.lang.reflect.Type) -> mqlread
    com.google.api.services.freebase.Freebase$Mqlwrite mqlwrite(java.lang.String) -> mqlwrite
com.google.api.services.freebase.Freebase$Builder -> com.google.api.services.freebase.Freebase$Builder:
    com.google.api.services.freebase.Freebase build() -> build
    com.google.api.services.freebase.Freebase$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.services.freebase.Freebase$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.services.freebase.Freebase$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.services.freebase.Freebase$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.services.freebase.Freebase$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.services.freebase.Freebase$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.services.freebase.Freebase$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.services.freebase.Freebase$Builder setFreebaseRequestInitializer(com.google.api.services.freebase.FreebaseRequestInitializer) -> setFreebaseRequestInitializer
    com.google.api.services.freebase.Freebase$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient build() -> build
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressAllChecks(boolean) -> setSuppressAllChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressRequiredParameterChecks(boolean) -> setSuppressRequiredParameterChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setSuppressPatternChecks(boolean) -> setSuppressPatternChecks
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setApplicationName(java.lang.String) -> setApplicationName
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer) -> setHttpRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setGoogleClientRequestInitializer(com.google.api.client.googleapis.services.GoogleClientRequestInitializer) -> setGoogleClientRequestInitializer
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setServicePath(java.lang.String) -> setServicePath
    com.google.api.client.googleapis.services.AbstractGoogleClient$Builder setRootUrl(java.lang.String) -> setRootUrl
    com.google.api.client.googleapis.services.AbstractGoogleClient build() -> build
com.google.api.services.freebase.Freebase$Image -> com.google.api.services.freebase.Freebase$Image:
    java.util.regex.Pattern FALLBACKID_PATTERN -> b
    java.util.List id -> id
    java.lang.Long maxwidth -> maxwidth
    java.lang.Long maxheight -> maxheight
    java.lang.String fallbackid -> fallbackid
    java.lang.Boolean pad -> pad
    java.lang.String mode -> mode
    com.google.api.services.freebase.Freebase this$0 -> a
    void executeMediaAndDownloadTo(java.io.OutputStream) -> executeMediaAndDownloadTo
    java.io.InputStream executeMediaAsInputStream() -> executeMediaAsInputStream
    com.google.api.client.http.HttpResponse executeMedia() -> executeMedia
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Image setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Image setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Image setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Image setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Image setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Image setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Image setUserIp(java.lang.String) -> setUserIp
    java.util.List getId() -> getId
    com.google.api.services.freebase.Freebase$Image setId(java.util.List) -> setId
    java.lang.Long getMaxwidth() -> getMaxwidth
    com.google.api.services.freebase.Freebase$Image setMaxwidth(java.lang.Long) -> setMaxwidth
    java.lang.Long getMaxheight() -> getMaxheight
    com.google.api.services.freebase.Freebase$Image setMaxheight(java.lang.Long) -> setMaxheight
    java.lang.String getFallbackid() -> getFallbackid
    com.google.api.services.freebase.Freebase$Image setFallbackid(java.lang.String) -> setFallbackid
    java.lang.Boolean getPad() -> getPad
    com.google.api.services.freebase.Freebase$Image setPad(java.lang.Boolean) -> setPad
    boolean isPad() -> isPad
    java.lang.String getMode() -> getMode
    com.google.api.services.freebase.Freebase$Image setMode(java.lang.String) -> setMode
    com.google.api.services.freebase.Freebase$Image set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.Freebase$Mqlread -> com.google.api.services.freebase.Freebase$Mqlread:
    java.util.regex.Pattern CALLBACK_PATTERN -> b
    java.lang.reflect.Type responseType -> e
    java.lang.String query -> query
    java.lang.String lang -> lang
    java.lang.Boolean htmlEscape -> htmlEscape
    java.lang.Long indent -> indent
    java.lang.String uniquenessFailure -> uniquenessFailure
    java.lang.String dateline -> dateline
    java.lang.String cursor -> cursor
    java.lang.String callback -> callback
    java.lang.Boolean cost -> cost
    java.lang.String asOfTime -> asOfTime
    com.google.api.services.freebase.Freebase this$0 -> a
    java.lang.reflect.Type getResponseType() -> getResponseType
    void setResponseType(java.lang.reflect.Type) -> setResponseType
    java.lang.Object execute() -> execute
    void executeMediaAndDownloadTo(java.io.OutputStream) -> executeMediaAndDownloadTo
    java.io.InputStream executeMediaAsInputStream() -> executeMediaAsInputStream
    com.google.api.client.http.HttpResponse executeMedia() -> executeMedia
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Mqlread setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Mqlread setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Mqlread setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Mqlread setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Mqlread setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Mqlread setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Mqlread setUserIp(java.lang.String) -> setUserIp
    java.lang.String getQuery() -> getQuery
    com.google.api.services.freebase.Freebase$Mqlread setQuery(java.lang.String) -> setQuery
    java.lang.String getLang() -> getLang
    com.google.api.services.freebase.Freebase$Mqlread setLang(java.lang.String) -> setLang
    java.lang.Boolean getHtmlEscape() -> getHtmlEscape
    com.google.api.services.freebase.Freebase$Mqlread setHtmlEscape(java.lang.Boolean) -> setHtmlEscape
    boolean isHtmlEscape() -> isHtmlEscape
    java.lang.Long getIndent() -> getIndent
    com.google.api.services.freebase.Freebase$Mqlread setIndent(java.lang.Long) -> setIndent
    java.lang.String getUniquenessFailure() -> getUniquenessFailure
    com.google.api.services.freebase.Freebase$Mqlread setUniquenessFailure(java.lang.String) -> setUniquenessFailure
    java.lang.String getDateline() -> getDateline
    com.google.api.services.freebase.Freebase$Mqlread setDateline(java.lang.String) -> setDateline
    java.lang.String getCursor() -> getCursor
    com.google.api.services.freebase.Freebase$Mqlread setCursor(java.lang.String) -> setCursor
    java.lang.String getCallback() -> getCallback
    com.google.api.services.freebase.Freebase$Mqlread setCallback(java.lang.String) -> setCallback
    java.lang.Boolean getCost() -> getCost
    com.google.api.services.freebase.Freebase$Mqlread setCost(java.lang.Boolean) -> setCost
    boolean isCost() -> isCost
    java.lang.String getAsOfTime() -> getAsOfTime
    com.google.api.services.freebase.Freebase$Mqlread setAsOfTime(java.lang.String) -> setAsOfTime
    com.google.api.services.freebase.Freebase$Mqlread set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.Freebase$Mqlwrite -> com.google.api.services.freebase.Freebase$Mqlwrite:
    java.util.regex.Pattern CALLBACK_PATTERN -> b
    java.lang.String query -> query
    java.lang.String callback -> callback
    java.lang.String dateline -> dateline
    java.lang.Long indent -> indent
    java.lang.String usePermissionOf -> usePermissionOf
    com.google.api.services.freebase.Freebase this$0 -> a
    void executeMediaAndDownloadTo(java.io.OutputStream) -> executeMediaAndDownloadTo
    java.io.InputStream executeMediaAsInputStream() -> executeMediaAsInputStream
    com.google.api.client.http.HttpResponse executeMedia() -> executeMedia
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Mqlwrite setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Mqlwrite setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Mqlwrite setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Mqlwrite setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Mqlwrite setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Mqlwrite setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Mqlwrite setUserIp(java.lang.String) -> setUserIp
    java.lang.String getQuery() -> getQuery
    com.google.api.services.freebase.Freebase$Mqlwrite setQuery(java.lang.String) -> setQuery
    java.lang.String getCallback() -> getCallback
    com.google.api.services.freebase.Freebase$Mqlwrite setCallback(java.lang.String) -> setCallback
    java.lang.String getDateline() -> getDateline
    com.google.api.services.freebase.Freebase$Mqlwrite setDateline(java.lang.String) -> setDateline
    java.lang.Long getIndent() -> getIndent
    com.google.api.services.freebase.Freebase$Mqlwrite setIndent(java.lang.Long) -> setIndent
    java.lang.String getUsePermissionOf() -> getUsePermissionOf
    com.google.api.services.freebase.Freebase$Mqlwrite setUsePermissionOf(java.lang.String) -> setUsePermissionOf
    com.google.api.services.freebase.Freebase$Mqlwrite set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.Freebase$Text -> com.google.api.services.freebase.Freebase$Text:
    com.google.api.services.freebase.Freebase this$0 -> a
    com.google.api.services.freebase.Freebase$Text$Get get(java.util.List) -> get
com.google.api.services.freebase.Freebase$Text$Get -> com.google.api.services.freebase.Freebase$Text$Get:
    java.util.List id -> id
    java.lang.Long maxlength -> maxlength
    java.lang.String format -> format
    com.google.api.services.freebase.Freebase$Text this$1 -> a
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Text$Get setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Text$Get setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Text$Get setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Text$Get setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Text$Get setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Text$Get setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Text$Get setUserIp(java.lang.String) -> setUserIp
    java.util.List getId() -> getId
    com.google.api.services.freebase.Freebase$Text$Get setId(java.util.List) -> setId
    java.lang.Long getMaxlength() -> getMaxlength
    com.google.api.services.freebase.Freebase$Text$Get setMaxlength(java.lang.Long) -> setMaxlength
    java.lang.String getFormat() -> getFormat
    com.google.api.services.freebase.Freebase$Text$Get setFormat(java.lang.String) -> setFormat
    com.google.api.services.freebase.Freebase$Text$Get set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.Freebase$Topic -> com.google.api.services.freebase.Freebase$Topic:
    com.google.api.services.freebase.Freebase this$0 -> a
    com.google.api.services.freebase.Freebase$Topic$Lookup lookup(java.util.List) -> lookup
com.google.api.services.freebase.Freebase$Topic$Lookup -> com.google.api.services.freebase.Freebase$Topic$Lookup:
    java.util.List id -> id
    java.lang.String lang -> lang
    java.lang.String dateline -> dateline
    java.util.List filter -> filter
    java.lang.Boolean raw -> raw
    java.lang.Long limit -> limit
    com.google.api.services.freebase.Freebase$Topic this$1 -> a
    com.google.api.client.http.HttpResponse executeUsingHead() -> executeUsingHead
    com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() -> buildHttpRequestUsingHead
    com.google.api.services.freebase.Freebase$Topic$Lookup setAlt(java.lang.String) -> setAlt
    com.google.api.services.freebase.Freebase$Topic$Lookup setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.Freebase$Topic$Lookup setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.Freebase$Topic$Lookup setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.Freebase$Topic$Lookup setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.Freebase$Topic$Lookup setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.Freebase$Topic$Lookup setUserIp(java.lang.String) -> setUserIp
    java.util.List getId() -> getId
    com.google.api.services.freebase.Freebase$Topic$Lookup setId(java.util.List) -> setId
    java.lang.String getLang() -> getLang
    com.google.api.services.freebase.Freebase$Topic$Lookup setLang(java.lang.String) -> setLang
    java.lang.String getDateline() -> getDateline
    com.google.api.services.freebase.Freebase$Topic$Lookup setDateline(java.lang.String) -> setDateline
    java.util.List getFilter() -> getFilter
    com.google.api.services.freebase.Freebase$Topic$Lookup setFilter(java.util.List) -> setFilter
    java.lang.Boolean getRaw() -> getRaw
    com.google.api.services.freebase.Freebase$Topic$Lookup setRaw(java.lang.Boolean) -> setRaw
    boolean isRaw() -> isRaw
    java.lang.Long getLimit() -> getLimit
    com.google.api.services.freebase.Freebase$Topic$Lookup setLimit(java.lang.Long) -> setLimit
    com.google.api.services.freebase.Freebase$Topic$Lookup set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.FreebaseRequest -> com.google.api.services.freebase.FreebaseRequest:
    java.lang.String alt -> alt
    java.lang.String fields -> fields
    java.lang.String key -> key
    java.lang.String oauthToken -> oauthToken
    java.lang.Boolean prettyPrint -> prettyPrint
    java.lang.String quotaUser -> quotaUser
    java.lang.String userIp -> userIp
    java.lang.String getAlt() -> getAlt
    com.google.api.services.freebase.FreebaseRequest setAlt(java.lang.String) -> setAlt
    java.lang.String getFields() -> getFields
    com.google.api.services.freebase.FreebaseRequest setFields(java.lang.String) -> setFields
    java.lang.String getKey() -> getKey
    com.google.api.services.freebase.FreebaseRequest setKey(java.lang.String) -> setKey
    java.lang.String getOauthToken() -> getOauthToken
    com.google.api.services.freebase.FreebaseRequest setOauthToken(java.lang.String) -> setOauthToken
    java.lang.Boolean getPrettyPrint() -> getPrettyPrint
    com.google.api.services.freebase.FreebaseRequest setPrettyPrint(java.lang.Boolean) -> setPrettyPrint
    java.lang.String getQuotaUser() -> getQuotaUser
    com.google.api.services.freebase.FreebaseRequest setQuotaUser(java.lang.String) -> setQuotaUser
    java.lang.String getUserIp() -> getUserIp
    com.google.api.services.freebase.FreebaseRequest setUserIp(java.lang.String) -> setUserIp
    com.google.api.services.freebase.Freebase getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.services.freebase.FreebaseRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.services.freebase.FreebaseRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.services.freebase.FreebaseRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setRequestHeaders(com.google.api.client.http.HttpHeaders) -> setRequestHeaders
    com.google.api.client.googleapis.services.AbstractGoogleClient getAbstractGoogleClient() -> getAbstractGoogleClient
    com.google.api.client.googleapis.services.AbstractGoogleClientRequest setDisableGZipContent(boolean) -> setDisableGZipContent
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
com.google.api.services.freebase.FreebaseRequestInitializer -> com.google.api.services.freebase.FreebaseRequestInitializer:
    void initializeJsonRequest(com.google.api.client.googleapis.services.json.AbstractGoogleJsonClientRequest) -> initializeJsonRequest
    void initializeFreebaseRequest(com.google.api.services.freebase.FreebaseRequest) -> initializeFreebaseRequest
com.google.api.services.freebase.FreebaseScopes -> com.google.api.services.freebase.FreebaseScopes:
    java.lang.String FREEBASE -> FREEBASE
com.google.api.services.freebase.model.ContentserviceGet -> com.google.api.services.freebase.model.ContentserviceGet:
    java.lang.String result -> result
    java.lang.String getResult() -> getResult
    com.google.api.services.freebase.model.ContentserviceGet setResult(java.lang.String) -> setResult
    com.google.api.services.freebase.model.ContentserviceGet set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.ContentserviceGet clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicLookup -> com.google.api.services.freebase.model.TopicLookup:
    java.lang.String id -> id
    com.google.api.services.freebase.model.TopicLookup$Property property -> property
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicLookup setId(java.lang.String) -> setId
    com.google.api.services.freebase.model.TopicLookup$Property getProperty() -> getProperty
    com.google.api.services.freebase.model.TopicLookup setProperty(com.google.api.services.freebase.model.TopicLookup$Property) -> setProperty
    com.google.api.services.freebase.model.TopicLookup set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicLookup clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicLookup$Property -> com.google.api.services.freebase.model.TopicLookup$Property:
    com.google.api.services.freebase.model.TopicStatslinkcount freebaseObjectProfileLinkcount -> freebaseObjectProfileLinkcount
    com.google.api.services.freebase.model.TopicStatslinkcount getFreebaseObjectProfileLinkcount() -> getFreebaseObjectProfileLinkcount
    com.google.api.services.freebase.model.TopicLookup$Property setFreebaseObjectProfileLinkcount(com.google.api.services.freebase.model.TopicStatslinkcount) -> setFreebaseObjectProfileLinkcount
    com.google.api.services.freebase.model.TopicLookup$Property clone() -> clone
    com.google.api.client.util.ArrayMap clone() -> clone
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicPropertyvalue -> com.google.api.services.freebase.model.TopicPropertyvalue:
    java.lang.Double count -> count
    java.lang.String status -> status
    java.util.List values -> values
    java.lang.String valuetype -> valuetype
    java.lang.Double getCount() -> getCount
    com.google.api.services.freebase.model.TopicPropertyvalue setCount(java.lang.Double) -> setCount
    java.lang.String getStatus() -> getStatus
    com.google.api.services.freebase.model.TopicPropertyvalue setStatus(java.lang.String) -> setStatus
    java.util.List getValues() -> getValues
    com.google.api.services.freebase.model.TopicPropertyvalue setValues(java.util.List) -> setValues
    java.lang.String getValuetype() -> getValuetype
    com.google.api.services.freebase.model.TopicPropertyvalue setValuetype(java.lang.String) -> setValuetype
    com.google.api.services.freebase.model.TopicPropertyvalue set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicPropertyvalue clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicStatslinkcount -> com.google.api.services.freebase.model.TopicStatslinkcount:
    java.lang.String type -> type
    java.util.List values -> values
    java.lang.String getType() -> getType
    com.google.api.services.freebase.model.TopicStatslinkcount setType(java.lang.String) -> setType
    java.util.List getValues() -> getValues
    com.google.api.services.freebase.model.TopicStatslinkcount setValues(java.util.List) -> setValues
    com.google.api.services.freebase.model.TopicStatslinkcount set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicStatslinkcount clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicStatslinkcount$Values -> com.google.api.services.freebase.model.TopicStatslinkcount$Values:
    java.lang.Integer count -> count
    java.lang.String id -> id
    java.util.List values -> values
    java.lang.Integer getCount() -> getCount
    com.google.api.services.freebase.model.TopicStatslinkcount$Values setCount(java.lang.Integer) -> setCount
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicStatslinkcount$Values setId(java.lang.String) -> setId
    java.util.List getValues() -> getValues
    com.google.api.services.freebase.model.TopicStatslinkcount$Values setValues(java.util.List) -> setValues
    com.google.api.services.freebase.model.TopicStatslinkcount$Values set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicStatslinkcount$Values clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues -> com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues:
    java.lang.Integer count -> count
    java.lang.String id -> id
    java.util.List values -> values
    java.lang.Integer getCount() -> getCount
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues setCount(java.lang.Integer) -> setCount
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues setId(java.lang.String) -> setId
    java.util.List getValues() -> getValues
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues setValues(java.util.List) -> setValues
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues -> com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues:
    java.lang.Integer count -> count
    java.lang.String id -> id
    java.lang.Integer getCount() -> getCount
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues setCount(java.lang.Integer) -> setCount
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues setId(java.lang.String) -> setId
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicStatslinkcount$Values$TopicStatslinkcountValuesValues$TopicStatslinkcountValuesValuesValues clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicValue -> com.google.api.services.freebase.model.TopicValue:
    com.google.api.services.freebase.model.TopicValue$Citation citation -> citation
    java.lang.String creator -> creator
    java.lang.String dataset -> dataset
    java.lang.String id -> id
    java.lang.String lang -> lang
    java.lang.String project -> project
    java.util.Map property -> property
    java.lang.String text -> text
    java.lang.String timestamp -> timestamp
    java.lang.Object value -> value
    com.google.api.services.freebase.model.TopicValue$Citation getCitation() -> getCitation
    com.google.api.services.freebase.model.TopicValue setCitation(com.google.api.services.freebase.model.TopicValue$Citation) -> setCitation
    java.lang.String getCreator() -> getCreator
    com.google.api.services.freebase.model.TopicValue setCreator(java.lang.String) -> setCreator
    java.lang.String getDataset() -> getDataset
    com.google.api.services.freebase.model.TopicValue setDataset(java.lang.String) -> setDataset
    java.lang.String getId() -> getId
    com.google.api.services.freebase.model.TopicValue setId(java.lang.String) -> setId
    java.lang.String getLang() -> getLang
    com.google.api.services.freebase.model.TopicValue setLang(java.lang.String) -> setLang
    java.lang.String getProject() -> getProject
    com.google.api.services.freebase.model.TopicValue setProject(java.lang.String) -> setProject
    java.util.Map getProperty() -> getProperty
    com.google.api.services.freebase.model.TopicValue setProperty(java.util.Map) -> setProperty
    java.lang.String getText() -> getText
    com.google.api.services.freebase.model.TopicValue setText(java.lang.String) -> setText
    java.lang.String getTimestamp() -> getTimestamp
    com.google.api.services.freebase.model.TopicValue setTimestamp(java.lang.String) -> setTimestamp
    java.lang.Object getValue() -> getValue
    com.google.api.services.freebase.model.TopicValue setValue(java.lang.Object) -> setValue
    com.google.api.services.freebase.model.TopicValue set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicValue clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.api.services.freebase.model.TopicValue$Citation -> com.google.api.services.freebase.model.TopicValue$Citation:
    java.lang.String provider -> provider
    java.lang.String statement -> statement
    java.lang.String uri -> uri
    java.lang.String getProvider() -> getProvider
    com.google.api.services.freebase.model.TopicValue$Citation setProvider(java.lang.String) -> setProvider
    java.lang.String getStatement() -> getStatement
    com.google.api.services.freebase.model.TopicValue$Citation setStatement(java.lang.String) -> setStatement
    java.lang.String getUri() -> getUri
    com.google.api.services.freebase.model.TopicValue$Citation setUri(java.lang.String) -> setUri
    com.google.api.services.freebase.model.TopicValue$Citation set(java.lang.String,java.lang.Object) -> set
    com.google.api.services.freebase.model.TopicValue$Citation clone() -> clone
    com.google.api.client.json.GenericJson set(java.lang.String,java.lang.Object) -> set
    com.google.api.client.json.GenericJson clone() -> clone
    com.google.api.client.util.GenericData clone() -> clone
    com.google.api.client.util.GenericData set(java.lang.String,java.lang.Object) -> set
    java.lang.Object clone() -> clone
com.google.common.annotations.Beta -> com.google.common.annotations.Beta:
com.google.common.annotations.GwtCompatible -> com.google.common.annotations.GwtCompatible:
    boolean serializable() -> serializable
    boolean emulated() -> emulated
com.google.common.annotations.GwtIncompatible -> com.google.common.annotations.GwtIncompatible:
    java.lang.String value() -> value
com.google.common.annotations.VisibleForTesting -> com.google.common.annotations.VisibleForTesting:
com.google.common.base.Absent -> ca:
    com.google.common.base.Absent INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    boolean isPresent() -> isPresent
    java.lang.Object get() -> get
    java.lang.Object or(java.lang.Object) -> or
    com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    java.lang.Object or(com.google.common.base.Supplier) -> or
    java.lang.Object orNull() -> orNull
    java.util.Set asSet() -> asSet
    com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
com.google.common.base.AbstractIterator -> cb:
    com.google.common.base.AbstractIterator$State state -> a
    java.lang.Object next -> b
    java.lang.Object computeNext() -> a
    java.lang.Object endOfData() -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.base.AbstractIterator$1 -> cc:
    int[] $SwitchMap$com$google$common$base$AbstractIterator$State -> a
com.google.common.base.AbstractIterator$State -> cd:
    com.google.common.base.AbstractIterator$State READY -> a
    com.google.common.base.AbstractIterator$State NOT_READY -> b
    com.google.common.base.AbstractIterator$State DONE -> c
    com.google.common.base.AbstractIterator$State FAILED -> d
    com.google.common.base.AbstractIterator$State[] $VALUES -> e
    com.google.common.base.AbstractIterator$State[] values() -> values
    com.google.common.base.AbstractIterator$State valueOf(java.lang.String) -> valueOf
com.google.common.base.Ascii -> com.google.common.base.Ascii:
    byte NUL -> NUL
    byte SOH -> SOH
    byte STX -> STX
    byte ETX -> ETX
    byte EOT -> EOT
    byte ENQ -> ENQ
    byte ACK -> ACK
    byte BEL -> BEL
    byte BS -> BS
    byte HT -> HT
    byte LF -> LF
    byte NL -> NL
    byte VT -> VT
    byte FF -> FF
    byte CR -> CR
    byte SO -> SO
    byte SI -> SI
    byte DLE -> DLE
    byte DC1 -> DC1
    byte XON -> XON
    byte DC2 -> DC2
    byte DC3 -> DC3
    byte XOFF -> XOFF
    byte DC4 -> DC4
    byte NAK -> NAK
    byte SYN -> SYN
    byte ETB -> ETB
    byte CAN -> CAN
    byte EM -> EM
    byte SUB -> SUB
    byte ESC -> ESC
    byte FS -> FS
    byte GS -> GS
    byte RS -> RS
    byte US -> US
    byte SP -> SP
    byte SPACE -> SPACE
    byte DEL -> DEL
    char MIN -> MIN
    char MAX -> MAX
    java.lang.String toLowerCase(java.lang.String) -> toLowerCase
    java.lang.String toLowerCase(java.lang.CharSequence) -> toLowerCase
    char toLowerCase(char) -> toLowerCase
    java.lang.String toUpperCase(java.lang.String) -> toUpperCase
    java.lang.String toUpperCase(java.lang.CharSequence) -> toUpperCase
    char toUpperCase(char) -> toUpperCase
    boolean isLowerCase(char) -> isLowerCase
    boolean isUpperCase(char) -> isUpperCase
com.google.common.base.CaseFormat -> com.google.common.base.CaseFormat:
    com.google.common.base.CaseFormat LOWER_HYPHEN -> LOWER_HYPHEN
    com.google.common.base.CaseFormat LOWER_UNDERSCORE -> LOWER_UNDERSCORE
    com.google.common.base.CaseFormat LOWER_CAMEL -> LOWER_CAMEL
    com.google.common.base.CaseFormat UPPER_CAMEL -> UPPER_CAMEL
    com.google.common.base.CaseFormat UPPER_UNDERSCORE -> UPPER_UNDERSCORE
    com.google.common.base.CharMatcher wordBoundary -> a
    java.lang.String wordSeparator -> b
    com.google.common.base.CaseFormat[] $VALUES -> c
    com.google.common.base.CaseFormat[] values() -> values
    com.google.common.base.CaseFormat valueOf(java.lang.String) -> valueOf
    java.lang.String to(com.google.common.base.CaseFormat,java.lang.String) -> to
    java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> a
    java.lang.String normalizeWord(java.lang.String) -> a
    java.lang.String normalizeFirstWord(java.lang.String) -> c
    java.lang.String access$100(java.lang.String) -> b
com.google.common.base.CaseFormat$1 -> ce:
    java.lang.String normalizeWord(java.lang.String) -> a
    java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> a
com.google.common.base.CaseFormat$2 -> cf:
    java.lang.String normalizeWord(java.lang.String) -> a
    java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> a
com.google.common.base.CaseFormat$3 -> cg:
    java.lang.String normalizeWord(java.lang.String) -> a
com.google.common.base.CaseFormat$4 -> ch:
    java.lang.String normalizeWord(java.lang.String) -> a
com.google.common.base.CaseFormat$5 -> ci:
    java.lang.String normalizeWord(java.lang.String) -> a
    java.lang.String convert(com.google.common.base.CaseFormat,java.lang.String) -> a
com.google.common.base.CharMatcher -> com.google.common.base.CharMatcher:
    com.google.common.base.CharMatcher BREAKING_WHITESPACE -> BREAKING_WHITESPACE
    com.google.common.base.CharMatcher ASCII -> ASCII
    java.lang.String NINES -> b
    com.google.common.base.CharMatcher DIGIT -> DIGIT
    com.google.common.base.CharMatcher JAVA_DIGIT -> JAVA_DIGIT
    com.google.common.base.CharMatcher JAVA_LETTER -> JAVA_LETTER
    com.google.common.base.CharMatcher JAVA_LETTER_OR_DIGIT -> JAVA_LETTER_OR_DIGIT
    com.google.common.base.CharMatcher JAVA_UPPER_CASE -> JAVA_UPPER_CASE
    com.google.common.base.CharMatcher JAVA_LOWER_CASE -> JAVA_LOWER_CASE
    com.google.common.base.CharMatcher JAVA_ISO_CONTROL -> JAVA_ISO_CONTROL
    com.google.common.base.CharMatcher INVISIBLE -> INVISIBLE
    com.google.common.base.CharMatcher SINGLE_WIDTH -> SINGLE_WIDTH
    com.google.common.base.CharMatcher ANY -> ANY
    com.google.common.base.CharMatcher NONE -> NONE
    java.lang.String description -> a
    com.google.common.base.CharMatcher WHITESPACE -> WHITESPACE
    java.lang.String showCharacter(char) -> a
    com.google.common.base.CharMatcher is(char) -> is
    com.google.common.base.CharMatcher isNot(char) -> isNot
    com.google.common.base.CharMatcher anyOf(java.lang.CharSequence) -> anyOf
    com.google.common.base.CharMatcher isEither(char,char) -> a
    com.google.common.base.CharMatcher noneOf(java.lang.CharSequence) -> noneOf
    com.google.common.base.CharMatcher inRange(char,char) -> inRange
    com.google.common.base.CharMatcher inRange(char,char,java.lang.String) -> a
    com.google.common.base.CharMatcher forPredicate(com.google.common.base.Predicate) -> forPredicate
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher negate() -> negate
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher precomputed() -> precomputed
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
    com.google.common.base.CharMatcher precomputedInternal() -> a
    com.google.common.base.CharMatcher precomputedPositive(int,java.util.BitSet,java.lang.String) -> a
    void setBits(java.util.BitSet) -> a
    boolean matchesAnyOf(java.lang.CharSequence) -> matchesAnyOf
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    int countIn(java.lang.CharSequence) -> countIn
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String retainFrom(java.lang.CharSequence) -> retainFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    java.lang.String trimLeadingFrom(java.lang.CharSequence) -> trimLeadingFrom
    java.lang.String trimTrailingFrom(java.lang.CharSequence) -> trimTrailingFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimAndCollapseFrom(java.lang.CharSequence,char) -> trimAndCollapseFrom
    java.lang.String finishCollapseFrom(java.lang.CharSequence,int,int,char,java.lang.StringBuilder,boolean) -> a
    boolean apply(java.lang.Character) -> apply
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$1 -> cj:
    boolean matches(char) -> matches
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$10 -> ck:
    char val$match -> b
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    void setBits(java.util.BitSet) -> a
    com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$11 -> cl:
    char[] val$chars -> b
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$12 -> cm:
    char val$match1 -> b
    char val$match2 -> c
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
com.google.common.base.CharMatcher$13 -> cn:
    char val$startInclusive -> b
    char val$endInclusive -> c
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
com.google.common.base.CharMatcher$14 -> co:
    com.google.common.base.Predicate val$predicate -> b
    boolean matches(char) -> matches
    boolean apply(java.lang.Character) -> apply
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$15 -> cp:
    boolean matches(char) -> matches
com.google.common.base.CharMatcher$2 -> cq:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$3 -> cr:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$4 -> cs:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$5 -> ct:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$6 -> cu:
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$7 -> cv:
    boolean matches(char) -> matches
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    int countIn(java.lang.CharSequence) -> countIn
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$8 -> cw:
    boolean matches(char) -> matches
    int indexIn(java.lang.CharSequence) -> indexIn
    int indexIn(java.lang.CharSequence,int) -> indexIn
    int lastIndexIn(java.lang.CharSequence) -> lastIndexIn
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    java.lang.String removeFrom(java.lang.CharSequence) -> removeFrom
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    java.lang.String replaceFrom(java.lang.CharSequence,java.lang.CharSequence) -> replaceFrom
    java.lang.String collapseFrom(java.lang.CharSequence,char) -> collapseFrom
    java.lang.String trimFrom(java.lang.CharSequence) -> trimFrom
    java.lang.String trimLeadingFrom(java.lang.CharSequence) -> trimLeadingFrom
    java.lang.String trimTrailingFrom(java.lang.CharSequence) -> trimTrailingFrom
    int countIn(java.lang.CharSequence) -> countIn
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
com.google.common.base.CharMatcher$9 -> cx:
    char val$match -> b
    boolean matches(char) -> matches
    java.lang.String replaceFrom(java.lang.CharSequence,char) -> replaceFrom
    com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) -> and
    com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) -> or
    com.google.common.base.CharMatcher negate() -> negate
    void setBits(java.util.BitSet) -> a
com.google.common.base.CharMatcher$And -> cy:
    com.google.common.base.CharMatcher first -> b
    com.google.common.base.CharMatcher second -> c
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$BitSetMatcher -> cz:
    java.util.BitSet table -> b
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
com.google.common.base.CharMatcher$FastMatcher -> cA:
    com.google.common.base.CharMatcher precomputed() -> precomputed
    com.google.common.base.CharMatcher negate() -> negate
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$NegatedFastMatcher -> cB:
    com.google.common.base.CharMatcher precomputed() -> precomputed
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
com.google.common.base.CharMatcher$NegatedMatcher -> cC:
    com.google.common.base.CharMatcher original -> b
    boolean matches(char) -> matches
    boolean matchesAllOf(java.lang.CharSequence) -> matchesAllOf
    boolean matchesNoneOf(java.lang.CharSequence) -> matchesNoneOf
    int countIn(java.lang.CharSequence) -> countIn
    void setBits(java.util.BitSet) -> a
    com.google.common.base.CharMatcher negate() -> negate
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$Or -> cD:
    com.google.common.base.CharMatcher first -> b
    com.google.common.base.CharMatcher second -> c
    void setBits(java.util.BitSet) -> a
    boolean matches(char) -> matches
    com.google.common.base.CharMatcher withToString(java.lang.String) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.base.CharMatcher$RangesMatcher -> cE:
    char[] rangeStarts -> b
    char[] rangeEnds -> c
    boolean matches(char) -> matches
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Charsets -> com.google.common.base.Charsets:
    java.nio.charset.Charset US_ASCII -> US_ASCII
    java.nio.charset.Charset ISO_8859_1 -> ISO_8859_1
    java.nio.charset.Charset UTF_8 -> UTF_8
    java.nio.charset.Charset UTF_16BE -> UTF_16BE
    java.nio.charset.Charset UTF_16LE -> UTF_16LE
    java.nio.charset.Charset UTF_16 -> UTF_16
com.google.common.base.Defaults -> com.google.common.base.Defaults:
    java.util.Map DEFAULTS -> a
    void put(java.util.Map,java.lang.Class,java.lang.Object) -> a
    java.lang.Object defaultValue(java.lang.Class) -> defaultValue
com.google.common.base.Enums -> com.google.common.base.Enums:
    java.lang.reflect.Field getField(java.lang.Enum) -> getField
    com.google.common.base.Function valueOfFunction(java.lang.Class) -> valueOfFunction
    com.google.common.base.Optional getIfPresent(java.lang.Class,java.lang.String) -> getIfPresent
com.google.common.base.Enums$ValueOfFunction -> cF:
    java.lang.Class enumClass -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Enum apply(java.lang.String) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Equivalence -> com.google.common.base.Equivalence:
    boolean equivalent(java.lang.Object,java.lang.Object) -> equivalent
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    int hash(java.lang.Object) -> hash
    int doHash(java.lang.Object) -> doHash
    com.google.common.base.Equivalence onResultOf(com.google.common.base.Function) -> onResultOf
    com.google.common.base.Equivalence$Wrapper wrap(java.lang.Object) -> wrap
    com.google.common.base.Equivalence pairwise() -> pairwise
    com.google.common.base.Predicate equivalentTo(java.lang.Object) -> equivalentTo
    com.google.common.base.Equivalence equals() -> equals
    com.google.common.base.Equivalence identity() -> identity
com.google.common.base.Equivalence$Equals -> cG:
    com.google.common.base.Equivalence$Equals INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    int doHash(java.lang.Object) -> doHash
    java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$EquivalentToPredicate -> cH:
    com.google.common.base.Equivalence equivalence -> a
    java.lang.Object target -> b
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Equivalence$Identity -> cI:
    com.google.common.base.Equivalence$Identity INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    int doHash(java.lang.Object) -> doHash
    java.lang.Object readResolve() -> readResolve
com.google.common.base.Equivalence$Wrapper -> com.google.common.base.Equivalence$Wrapper:
    com.google.common.base.Equivalence equivalence -> a
    java.lang.Object reference -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.FinalizablePhantomReference -> com.google.common.base.FinalizablePhantomReference:
com.google.common.base.FinalizableReference -> com.google.common.base.FinalizableReference:
    void finalizeReferent() -> finalizeReferent
com.google.common.base.FinalizableReferenceQueue -> com.google.common.base.FinalizableReferenceQueue:
    java.util.logging.Logger logger -> d
    java.lang.reflect.Method startFinalizer -> e
    java.lang.ref.ReferenceQueue queue -> a
    java.lang.ref.PhantomReference frqRef -> b
    boolean threadStarted -> c
    void close() -> close
    void cleanUp() -> a
    java.lang.reflect.Method getStartFinalizer(java.lang.Class) -> a
    java.util.logging.Logger access$000() -> b
com.google.common.base.FinalizableReferenceQueue$DecoupledLoader -> cJ:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$DirectLoader -> cK:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$FinalizerLoader -> cL:
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableReferenceQueue$SystemLoader -> cM:
    boolean disabled -> a
    java.lang.Class loadFinalizer() -> a
com.google.common.base.FinalizableSoftReference -> com.google.common.base.FinalizableSoftReference:
com.google.common.base.FinalizableWeakReference -> com.google.common.base.FinalizableWeakReference:
com.google.common.base.Function -> com.google.common.base.Function:
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.FunctionalEquivalence -> cN:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function function -> a
    com.google.common.base.Equivalence resultEquivalence -> b
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
    int doHash(java.lang.Object) -> doHash
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions -> com.google.common.base.Functions:
    com.google.common.base.Function toStringFunction() -> toStringFunction
    com.google.common.base.Function identity() -> identity
    com.google.common.base.Function forMap(java.util.Map) -> forMap
    com.google.common.base.Function forMap(java.util.Map,java.lang.Object) -> forMap
    com.google.common.base.Function compose(com.google.common.base.Function,com.google.common.base.Function) -> compose
    com.google.common.base.Function forPredicate(com.google.common.base.Predicate) -> forPredicate
    com.google.common.base.Function constant(java.lang.Object) -> constant
    com.google.common.base.Function forSupplier(com.google.common.base.Supplier) -> forSupplier
com.google.common.base.Functions$ConstantFunction -> cO:
    java.lang.Object value -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$ForMapWithDefault -> cP:
    java.util.Map map -> a
    java.lang.Object defaultValue -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionComposition -> cQ:
    com.google.common.base.Function g -> a
    com.google.common.base.Function f -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$FunctionForMapNoDefault -> cR:
    java.util.Map map -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$IdentityFunction -> cS:
    com.google.common.base.Functions$IdentityFunction INSTANCE -> a
    com.google.common.base.Functions$IdentityFunction[] $VALUES -> b
    com.google.common.base.Functions$IdentityFunction[] values() -> values
    com.google.common.base.Functions$IdentityFunction valueOf(java.lang.String) -> valueOf
    java.lang.Object apply(java.lang.Object) -> apply
    java.lang.String toString() -> toString
com.google.common.base.Functions$PredicateFunction -> cT:
    com.google.common.base.Predicate predicate -> a
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Functions$SupplierFunction -> cU:
    com.google.common.base.Supplier supplier -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Functions$ToStringFunction -> cV:
    com.google.common.base.Functions$ToStringFunction INSTANCE -> a
    com.google.common.base.Functions$ToStringFunction[] $VALUES -> b
    com.google.common.base.Functions$ToStringFunction[] values() -> values
    com.google.common.base.Functions$ToStringFunction valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Joiner -> com.google.common.base.Joiner:
    java.lang.String separator -> a
    com.google.common.base.Joiner on(java.lang.String) -> on
    com.google.common.base.Joiner on(char) -> on
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object[]) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object[]) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object,java.lang.Object,java.lang.Object[]) -> appendTo
    java.lang.String join(java.lang.Object) -> join
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.util.Iterator) -> join
    java.lang.String join(java.lang.Object[]) -> join
    java.lang.String join(java.lang.Object,java.lang.Object,java.lang.Object[]) -> join
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner skipNulls() -> skipNulls
    com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    java.lang.CharSequence toString(java.lang.Object) -> a
    java.lang.Iterable iterable(java.lang.Object,java.lang.Object,java.lang.Object[]) -> a
    java.lang.String access$100(com.google.common.base.Joiner) -> a
com.google.common.base.Joiner$1 -> cW:
    java.lang.String val$nullText -> b
    com.google.common.base.Joiner this$0 -> c
    java.lang.CharSequence toString(java.lang.Object) -> a
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner skipNulls() -> skipNulls
com.google.common.base.Joiner$2 -> cX:
    com.google.common.base.Joiner this$0 -> b
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    com.google.common.base.Joiner useForNull(java.lang.String) -> useForNull
    com.google.common.base.Joiner$MapJoiner withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
com.google.common.base.Joiner$3 -> cY:
    java.lang.Object[] val$rest -> a
    java.lang.Object val$first -> b
    java.lang.Object val$second -> c
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.base.Joiner$MapJoiner -> com.google.common.base.Joiner$MapJoiner:
    com.google.common.base.Joiner joiner -> a
    java.lang.String keyValueSeparator -> b
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Map) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Map) -> appendTo
    java.lang.String join(java.util.Map) -> join
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Object) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.lang.Iterable) -> appendTo
    java.lang.Appendable appendTo(java.lang.Appendable,java.util.Iterator) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Object) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.lang.Iterable) -> appendTo
    java.lang.StringBuilder appendTo(java.lang.StringBuilder,java.util.Iterator) -> appendTo
    java.lang.String join(java.lang.Object) -> join
    java.lang.String join(java.lang.Iterable) -> join
    java.lang.String join(java.util.Iterator) -> join
    com.google.common.base.Joiner$MapJoiner useForNull(java.lang.String) -> useForNull
com.google.common.base.Objects -> com.google.common.base.Objects:
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hashCode(java.lang.Object[]) -> hashCode
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
    com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
    java.lang.String simpleName(java.lang.Class) -> a
    java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
com.google.common.base.Objects$ToStringHelper -> com.google.common.base.Objects$ToStringHelper:
    java.lang.String className -> a
    com.google.common.base.Objects$ToStringHelper$ValueHolder holderHead -> b
    com.google.common.base.Objects$ToStringHelper$ValueHolder holderTail -> c
    boolean omitNullValues -> d
    com.google.common.base.Objects$ToStringHelper omitNullValues() -> omitNullValues
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,boolean) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,char) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,double) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,float) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,int) -> add
    com.google.common.base.Objects$ToStringHelper add(java.lang.String,long) -> add
    com.google.common.base.Objects$ToStringHelper addValue(java.lang.Object) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(boolean) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(char) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(double) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(float) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(int) -> addValue
    com.google.common.base.Objects$ToStringHelper addValue(long) -> addValue
    java.lang.String toString() -> toString
    com.google.common.base.Objects$ToStringHelper$ValueHolder addHolder() -> a
    com.google.common.base.Objects$ToStringHelper addHolder(java.lang.Object) -> a
    com.google.common.base.Objects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> a
com.google.common.base.Objects$ToStringHelper$ValueHolder -> cZ:
    java.lang.String name -> a
    java.lang.Object value -> b
    com.google.common.base.Objects$ToStringHelper$ValueHolder next -> c
com.google.common.base.Optional -> com.google.common.base.Optional:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Optional absent() -> absent
    com.google.common.base.Optional of(java.lang.Object) -> of
    com.google.common.base.Optional fromNullable(java.lang.Object) -> fromNullable
    boolean isPresent() -> isPresent
    java.lang.Object get() -> get
    java.lang.Object or(java.lang.Object) -> or
    com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    java.lang.Object or(com.google.common.base.Supplier) -> or
    java.lang.Object orNull() -> orNull
    java.util.Set asSet() -> asSet
    com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Iterable presentInstances(java.lang.Iterable) -> presentInstances
com.google.common.base.Optional$1 -> da:
    java.lang.Iterable val$optionals -> a
    java.util.Iterator iterator() -> iterator
com.google.common.base.Optional$1$1 -> db:
    java.util.Iterator iterator -> b
    com.google.common.base.Optional$1 this$0 -> a
    java.lang.Object computeNext() -> a
com.google.common.base.PairwiseEquivalence -> dc:
    com.google.common.base.Equivalence elementEquivalence -> a
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int doHash(java.lang.Object) -> doHash
    boolean doEquivalent(java.lang.Object,java.lang.Object) -> doEquivalent
com.google.common.base.Platform -> dd:
    java.lang.ThreadLocal DEST_TL -> a
    long systemNanoTime() -> a
    com.google.common.base.CharMatcher precomputeCharMatcher(com.google.common.base.CharMatcher) -> a
com.google.common.base.Platform$1 -> de:
    java.lang.Object initialValue() -> initialValue
com.google.common.base.Preconditions -> com.google.common.base.Preconditions:
    void checkArgument(boolean) -> checkArgument
    void checkArgument(boolean,java.lang.Object) -> checkArgument
    void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    void checkState(boolean) -> checkState
    void checkState(boolean,java.lang.Object) -> checkState
    void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    int checkElementIndex(int,int) -> checkElementIndex
    int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    int checkPositionIndex(int,int) -> checkPositionIndex
    int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    java.lang.String badPositionIndex(int,int,java.lang.String) -> a
    void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    java.lang.String format(java.lang.String,java.lang.Object[]) -> a
com.google.common.base.Predicate -> com.google.common.base.Predicate:
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.common.base.Predicates -> com.google.common.base.Predicates:
    com.google.common.base.Joiner COMMA_JOINER -> a
    com.google.common.base.Predicate alwaysTrue() -> alwaysTrue
    com.google.common.base.Predicate alwaysFalse() -> alwaysFalse
    com.google.common.base.Predicate isNull() -> isNull
    com.google.common.base.Predicate notNull() -> notNull
    com.google.common.base.Predicate not(com.google.common.base.Predicate) -> not
    com.google.common.base.Predicate and(java.lang.Iterable) -> and
    com.google.common.base.Predicate and(com.google.common.base.Predicate[]) -> and
    com.google.common.base.Predicate and(com.google.common.base.Predicate,com.google.common.base.Predicate) -> and
    com.google.common.base.Predicate or(java.lang.Iterable) -> or
    com.google.common.base.Predicate or(com.google.common.base.Predicate[]) -> or
    com.google.common.base.Predicate or(com.google.common.base.Predicate,com.google.common.base.Predicate) -> or
    com.google.common.base.Predicate equalTo(java.lang.Object) -> equalTo
    com.google.common.base.Predicate instanceOf(java.lang.Class) -> instanceOf
    com.google.common.base.Predicate assignableFrom(java.lang.Class) -> assignableFrom
    com.google.common.base.Predicate in(java.util.Collection) -> in
    com.google.common.base.Predicate compose(com.google.common.base.Predicate,com.google.common.base.Function) -> compose
    com.google.common.base.Predicate containsPattern(java.lang.String) -> containsPattern
    com.google.common.base.Predicate contains(java.util.regex.Pattern) -> contains
    java.util.List asList(com.google.common.base.Predicate,com.google.common.base.Predicate) -> a
    java.util.List defensiveCopy(java.lang.Object[]) -> a
    java.util.List defensiveCopy(java.lang.Iterable) -> a
    com.google.common.base.Joiner access$800() -> a
com.google.common.base.Predicates$AndPredicate -> df:
    java.util.List components -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$AssignableFromPredicate -> dg:
    java.lang.Class clazz -> a
    long serialVersionUID -> serialVersionUID
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$CompositionPredicate -> dh:
    com.google.common.base.Predicate p -> a
    com.google.common.base.Function f -> b
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Predicates$ContainsPatternPredicate -> di:
    java.util.regex.Pattern pattern -> a
    long serialVersionUID -> serialVersionUID
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$InPredicate -> dj:
    java.util.Collection target -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Predicates$InstanceOfPredicate -> dk:
    java.lang.Class clazz -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$IsEqualToPredicate -> dl:
    java.lang.Object target -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$NotPredicate -> dm:
    com.google.common.base.Predicate predicate -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Predicates$ObjectPredicate -> dn:
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_TRUE -> a
    com.google.common.base.Predicates$ObjectPredicate ALWAYS_FALSE -> b
    com.google.common.base.Predicates$ObjectPredicate IS_NULL -> c
    com.google.common.base.Predicates$ObjectPredicate NOT_NULL -> d
    com.google.common.base.Predicates$ObjectPredicate[] $VALUES -> e
    com.google.common.base.Predicates$ObjectPredicate[] values() -> values
    com.google.common.base.Predicates$ObjectPredicate valueOf(java.lang.String) -> valueOf
    com.google.common.base.Predicate withNarrowedType() -> a
com.google.common.base.Predicates$ObjectPredicate$1 -> do:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$2 -> dp:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$3 -> dq:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$ObjectPredicate$4 -> dr:
    boolean apply(java.lang.Object) -> apply
com.google.common.base.Predicates$OrPredicate -> ds:
    java.util.List components -> a
    long serialVersionUID -> serialVersionUID
    boolean apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.base.Present -> dt:
    java.lang.Object reference -> a
    long serialVersionUID -> serialVersionUID
    boolean isPresent() -> isPresent
    java.lang.Object get() -> get
    java.lang.Object or(java.lang.Object) -> or
    com.google.common.base.Optional or(com.google.common.base.Optional) -> or
    java.lang.Object or(com.google.common.base.Supplier) -> or
    java.lang.Object orNull() -> orNull
    java.util.Set asSet() -> asSet
    com.google.common.base.Optional transform(com.google.common.base.Function) -> transform
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.SmallCharMatcher -> du:
    char[] table -> b
    boolean containsZero -> c
    long filter -> d
    int smear(int) -> a
    boolean matches(char) -> matches
    void setBits(java.util.BitSet) -> a
com.google.common.base.Splitter -> com.google.common.base.Splitter:
    com.google.common.base.CharMatcher trimmer -> a
    boolean omitEmptyStrings -> b
    com.google.common.base.Splitter$Strategy strategy -> c
    int limit -> d
    com.google.common.base.Splitter on(char) -> on
    com.google.common.base.Splitter on(com.google.common.base.CharMatcher) -> on
    com.google.common.base.Splitter on(java.lang.String) -> on
    com.google.common.base.Splitter on(java.util.regex.Pattern) -> on
    com.google.common.base.Splitter onPattern(java.lang.String) -> onPattern
    com.google.common.base.Splitter fixedLength(int) -> fixedLength
    com.google.common.base.Splitter omitEmptyStrings() -> omitEmptyStrings
    com.google.common.base.Splitter limit(int) -> limit
    com.google.common.base.Splitter trimResults() -> trimResults
    com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher) -> trimResults
    java.lang.Iterable split(java.lang.CharSequence) -> split
    com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(java.lang.String) -> withKeyValueSeparator
    com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(char) -> withKeyValueSeparator
    com.google.common.base.Splitter$MapSplitter withKeyValueSeparator(com.google.common.base.Splitter) -> withKeyValueSeparator
    java.util.Iterator access$000(com.google.common.base.Splitter,java.lang.CharSequence) -> a
    com.google.common.base.CharMatcher access$200(com.google.common.base.Splitter) -> a
    boolean access$300(com.google.common.base.Splitter) -> b
    int access$400(com.google.common.base.Splitter) -> c
com.google.common.base.Splitter$1 -> dv:
    com.google.common.base.CharMatcher val$separatorMatcher -> a
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Splitter$1$1 -> dw:
    com.google.common.base.Splitter$1 this$0 -> a
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
com.google.common.base.Splitter$2 -> dx:
    java.lang.String val$separator -> a
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Splitter$2$1 -> dy:
    com.google.common.base.Splitter$2 this$0 -> a
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
com.google.common.base.Splitter$3 -> dz:
    java.util.regex.Pattern val$separatorPattern -> a
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Splitter$3$1 -> dA:
    java.util.regex.Matcher val$matcher -> a
    com.google.common.base.Splitter$3 this$0 -> b
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
com.google.common.base.Splitter$4 -> dB:
    int val$length -> a
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Splitter$4$1 -> dC:
    com.google.common.base.Splitter$4 this$0 -> a
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
com.google.common.base.Splitter$5 -> dD:
    java.lang.CharSequence val$sequence -> a
    com.google.common.base.Splitter this$0 -> b
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.google.common.base.Splitter$MapSplitter -> com.google.common.base.Splitter$MapSplitter:
    com.google.common.base.Splitter outerSplitter -> a
    com.google.common.base.Splitter entrySplitter -> b
    java.util.Map split(java.lang.CharSequence) -> split
com.google.common.base.Splitter$SplittingIterator -> dE:
    java.lang.CharSequence toSplit -> c
    com.google.common.base.CharMatcher trimmer -> d
    boolean omitEmptyStrings -> e
    int offset -> f
    int limit -> g
    int separatorStart(int) -> a
    int separatorEnd(int) -> b
    java.lang.Object computeNext() -> a
com.google.common.base.Splitter$Strategy -> dF:
    java.util.Iterator iterator(com.google.common.base.Splitter,java.lang.CharSequence) -> a
com.google.common.base.Stopwatch -> com.google.common.base.Stopwatch:
    com.google.common.base.Ticker ticker -> a
    boolean isRunning -> b
    long elapsedNanos -> c
    long startTick -> d
    boolean isRunning() -> isRunning
    com.google.common.base.Stopwatch start() -> start
    com.google.common.base.Stopwatch stop() -> stop
    com.google.common.base.Stopwatch reset() -> reset
    long elapsedNanos() -> a
    long elapsed(java.util.concurrent.TimeUnit) -> elapsed
    long elapsedTime(java.util.concurrent.TimeUnit) -> elapsedTime
    long elapsedMillis() -> elapsedMillis
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
com.google.common.base.Stopwatch$1 -> dG:
    int[] $SwitchMap$java$util$concurrent$TimeUnit -> a
com.google.common.base.Strings -> com.google.common.base.Strings:
    java.lang.String nullToEmpty(java.lang.String) -> nullToEmpty
    java.lang.String emptyToNull(java.lang.String) -> emptyToNull
    boolean isNullOrEmpty(java.lang.String) -> isNullOrEmpty
    java.lang.String padStart(java.lang.String,int,char) -> padStart
    java.lang.String padEnd(java.lang.String,int,char) -> padEnd
    java.lang.String repeat(java.lang.String,int) -> repeat
    java.lang.String commonPrefix(java.lang.CharSequence,java.lang.CharSequence) -> commonPrefix
    java.lang.String commonSuffix(java.lang.CharSequence,java.lang.CharSequence) -> commonSuffix
    boolean validSurrogatePairAt(java.lang.CharSequence,int) -> a
com.google.common.base.Supplier -> com.google.common.base.Supplier:
    java.lang.Object get() -> get
com.google.common.base.Suppliers -> com.google.common.base.Suppliers:
    com.google.common.base.Supplier compose(com.google.common.base.Function,com.google.common.base.Supplier) -> compose
    com.google.common.base.Supplier memoize(com.google.common.base.Supplier) -> memoize
    com.google.common.base.Supplier memoizeWithExpiration(com.google.common.base.Supplier,long,java.util.concurrent.TimeUnit) -> memoizeWithExpiration
    com.google.common.base.Supplier ofInstance(java.lang.Object) -> ofInstance
    com.google.common.base.Supplier synchronizedSupplier(com.google.common.base.Supplier) -> synchronizedSupplier
    com.google.common.base.Function supplierFunction() -> supplierFunction
com.google.common.base.Suppliers$ExpiringMemoizingSupplier -> dH:
    com.google.common.base.Supplier delegate -> a
    long durationNanos -> b
    java.lang.Object value -> c
    long expirationNanos -> d
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.common.base.Suppliers$MemoizingSupplier -> dI:
    com.google.common.base.Supplier delegate -> a
    boolean initialized -> b
    java.lang.Object value -> c
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.common.base.Suppliers$SupplierComposition -> dJ:
    com.google.common.base.Function function -> a
    com.google.common.base.Supplier supplier -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Suppliers$SupplierFunction -> dK:
    com.google.common.base.Suppliers$SupplierFunction INSTANCE -> a
    com.google.common.base.Suppliers$SupplierFunction[] $VALUES -> b
    com.google.common.base.Suppliers$SupplierFunction[] values() -> values
    com.google.common.base.Suppliers$SupplierFunction valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.base.Suppliers$SupplierOfInstance -> dL:
    java.lang.Object instance -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.base.Suppliers$ThreadSafeSupplier -> dM:
    com.google.common.base.Supplier delegate -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
    java.lang.String toString() -> toString
com.google.common.base.Throwables -> com.google.common.base.Throwables:
    void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> propagateIfInstanceOf
    void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
    void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class) -> propagateIfPossible
    java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    java.util.List getCausalChain(java.lang.Throwable) -> getCausalChain
    java.lang.String getStackTraceAsString(java.lang.Throwable) -> getStackTraceAsString
com.google.common.base.Ticker -> com.google.common.base.Ticker:
    com.google.common.base.Ticker SYSTEM_TICKER -> a
    long read() -> read
    com.google.common.base.Ticker systemTicker() -> systemTicker
com.google.common.base.Ticker$1 -> dN:
    long read() -> read
com.google.common.base.internal.Finalizer -> com.google.common.base.internal.Finalizer:
    java.util.logging.Logger logger -> a
    java.lang.ref.WeakReference finalizableReferenceClassReference -> b
    java.lang.ref.PhantomReference frqReference -> c
    java.lang.ref.ReferenceQueue queue -> d
    java.lang.reflect.Field inheritableThreadLocals -> e
    void startFinalizer(java.lang.Class,java.lang.ref.ReferenceQueue,java.lang.ref.PhantomReference) -> startFinalizer
    void run() -> run
    java.lang.reflect.Method getFinalizeReferentMethod() -> a
    java.lang.reflect.Field getInheritableThreadLocalsField() -> getInheritableThreadLocalsField
com.google.common.base.internal.Finalizer$ShutDown -> dO:
com.google.common.cache.AbstractCache -> com.google.common.cache.AbstractCache:
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void cleanUp() -> cleanUp
    long size() -> size
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    com.google.common.cache.CacheStats stats() -> stats
    java.util.concurrent.ConcurrentMap asMap() -> asMap
com.google.common.cache.AbstractCache$SimpleStatsCounter -> com.google.common.cache.AbstractCache$SimpleStatsCounter:
    com.google.common.cache.LongAddable hitCount -> a
    com.google.common.cache.LongAddable missCount -> b
    com.google.common.cache.LongAddable loadSuccessCount -> c
    com.google.common.cache.LongAddable loadExceptionCount -> d
    com.google.common.cache.LongAddable totalLoadTime -> e
    com.google.common.cache.LongAddable evictionCount -> f
    void recordHits(int) -> recordHits
    void recordMisses(int) -> recordMisses
    void recordLoadSuccess(long) -> recordLoadSuccess
    void recordLoadException(long) -> recordLoadException
    void recordEviction() -> recordEviction
    com.google.common.cache.CacheStats snapshot() -> snapshot
    void incrementBy(com.google.common.cache.AbstractCache$StatsCounter) -> incrementBy
com.google.common.cache.AbstractCache$StatsCounter -> com.google.common.cache.AbstractCache$StatsCounter:
    void recordHits(int) -> recordHits
    void recordMisses(int) -> recordMisses
    void recordLoadSuccess(long) -> recordLoadSuccess
    void recordLoadException(long) -> recordLoadException
    void recordEviction() -> recordEviction
    com.google.common.cache.CacheStats snapshot() -> snapshot
com.google.common.cache.AbstractLoadingCache -> com.google.common.cache.AbstractLoadingCache:
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
com.google.common.cache.Cache -> com.google.common.cache.Cache:
    java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    long size() -> size
    com.google.common.cache.CacheStats stats() -> stats
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    void cleanUp() -> cleanUp
com.google.common.cache.CacheBuilder -> com.google.common.cache.CacheBuilder:
    com.google.common.base.Supplier NULL_STATS_COUNTER -> a
    com.google.common.cache.CacheStats EMPTY_STATS -> b
    com.google.common.base.Supplier CACHE_STATS_COUNTER -> c
    com.google.common.base.Ticker NULL_TICKER -> d
    java.util.logging.Logger logger -> u
    boolean strictParsing -> e
    int initialCapacity -> f
    int concurrencyLevel -> g
    long maximumSize -> h
    long maximumWeight -> i
    com.google.common.cache.Weigher weigher -> j
    com.google.common.cache.LocalCache$Strength keyStrength -> k
    com.google.common.cache.LocalCache$Strength valueStrength -> l
    long expireAfterWriteNanos -> m
    long expireAfterAccessNanos -> n
    long refreshNanos -> o
    com.google.common.base.Equivalence keyEquivalence -> p
    com.google.common.base.Equivalence valueEquivalence -> q
    com.google.common.cache.RemovalListener removalListener -> r
    com.google.common.base.Ticker ticker -> s
    com.google.common.base.Supplier statsCounterSupplier -> t
    com.google.common.cache.CacheBuilder newBuilder() -> newBuilder
    com.google.common.cache.CacheBuilder from(com.google.common.cache.CacheBuilderSpec) -> from
    com.google.common.cache.CacheBuilder from(java.lang.String) -> from
    com.google.common.cache.CacheBuilder keyEquivalence(com.google.common.base.Equivalence) -> a
    com.google.common.base.Equivalence getKeyEquivalence() -> a
    com.google.common.cache.CacheBuilder valueEquivalence(com.google.common.base.Equivalence) -> b
    com.google.common.base.Equivalence getValueEquivalence() -> b
    com.google.common.cache.CacheBuilder initialCapacity(int) -> initialCapacity
    int getInitialCapacity() -> c
    com.google.common.cache.CacheBuilder concurrencyLevel(int) -> concurrencyLevel
    int getConcurrencyLevel() -> d
    com.google.common.cache.CacheBuilder maximumSize(long) -> maximumSize
    com.google.common.cache.CacheBuilder maximumWeight(long) -> maximumWeight
    com.google.common.cache.CacheBuilder weigher(com.google.common.cache.Weigher) -> weigher
    long getMaximumWeight() -> e
    com.google.common.cache.Weigher getWeigher() -> f
    com.google.common.cache.CacheBuilder weakKeys() -> weakKeys
    com.google.common.cache.CacheBuilder setKeyStrength(com.google.common.cache.LocalCache$Strength) -> a
    com.google.common.cache.LocalCache$Strength getKeyStrength() -> g
    com.google.common.cache.CacheBuilder weakValues() -> weakValues
    com.google.common.cache.CacheBuilder softValues() -> softValues
    com.google.common.cache.CacheBuilder setValueStrength(com.google.common.cache.LocalCache$Strength) -> b
    com.google.common.cache.LocalCache$Strength getValueStrength() -> h
    com.google.common.cache.CacheBuilder expireAfterWrite(long,java.util.concurrent.TimeUnit) -> expireAfterWrite
    long getExpireAfterWriteNanos() -> i
    com.google.common.cache.CacheBuilder expireAfterAccess(long,java.util.concurrent.TimeUnit) -> expireAfterAccess
    long getExpireAfterAccessNanos() -> j
    com.google.common.cache.CacheBuilder refreshAfterWrite(long,java.util.concurrent.TimeUnit) -> refreshAfterWrite
    long getRefreshNanos() -> k
    com.google.common.cache.CacheBuilder ticker(com.google.common.base.Ticker) -> ticker
    com.google.common.base.Ticker getTicker(boolean) -> a
    com.google.common.cache.CacheBuilder removalListener(com.google.common.cache.RemovalListener) -> removalListener
    com.google.common.cache.RemovalListener getRemovalListener() -> l
    com.google.common.cache.CacheBuilder recordStats() -> recordStats
    com.google.common.base.Supplier getStatsCounterSupplier() -> m
    com.google.common.cache.LoadingCache build(com.google.common.cache.CacheLoader) -> build
    com.google.common.cache.Cache build() -> build
    void checkWeightWithWeigher() -> n
    java.lang.String toString() -> toString
com.google.common.cache.CacheBuilder$1 -> dP:
    void recordHits(int) -> recordHits
    void recordMisses(int) -> recordMisses
    void recordLoadSuccess(long) -> recordLoadSuccess
    void recordLoadException(long) -> recordLoadException
    void recordEviction() -> recordEviction
    com.google.common.cache.CacheStats snapshot() -> snapshot
com.google.common.cache.CacheBuilder$2 -> dQ:
    java.lang.Object get() -> get
com.google.common.cache.CacheBuilder$3 -> dR:
    long read() -> read
com.google.common.cache.CacheBuilder$NullListener -> dS:
    com.google.common.cache.CacheBuilder$NullListener INSTANCE -> a
    com.google.common.cache.CacheBuilder$NullListener[] $VALUES -> b
    com.google.common.cache.CacheBuilder$NullListener[] values() -> values
    com.google.common.cache.CacheBuilder$NullListener valueOf(java.lang.String) -> valueOf
    void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
com.google.common.cache.CacheBuilder$OneWeigher -> dT:
    com.google.common.cache.CacheBuilder$OneWeigher INSTANCE -> a
    com.google.common.cache.CacheBuilder$OneWeigher[] $VALUES -> b
    com.google.common.cache.CacheBuilder$OneWeigher[] values() -> values
    com.google.common.cache.CacheBuilder$OneWeigher valueOf(java.lang.String) -> valueOf
    int weigh(java.lang.Object,java.lang.Object) -> weigh
com.google.common.cache.CacheBuilderSpec -> com.google.common.cache.CacheBuilderSpec:
    com.google.common.base.Splitter KEYS_SPLITTER -> m
    com.google.common.base.Splitter KEY_VALUE_SPLITTER -> n
    com.google.common.collect.ImmutableMap VALUE_PARSERS -> o
    java.lang.Integer initialCapacity -> a
    java.lang.Long maximumSize -> b
    java.lang.Long maximumWeight -> c
    java.lang.Integer concurrencyLevel -> d
    com.google.common.cache.LocalCache$Strength keyStrength -> e
    com.google.common.cache.LocalCache$Strength valueStrength -> f
    long writeExpirationDuration -> g
    java.util.concurrent.TimeUnit writeExpirationTimeUnit -> h
    long accessExpirationDuration -> i
    java.util.concurrent.TimeUnit accessExpirationTimeUnit -> j
    long refreshDuration -> k
    java.util.concurrent.TimeUnit refreshTimeUnit -> l
    java.lang.String specification -> p
    com.google.common.cache.CacheBuilderSpec parse(java.lang.String) -> parse
    com.google.common.cache.CacheBuilderSpec disableCaching() -> disableCaching
    com.google.common.cache.CacheBuilder toCacheBuilder() -> a
    java.lang.String toParsableString() -> toParsableString
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Long durationInNanos(long,java.util.concurrent.TimeUnit) -> a
com.google.common.cache.CacheBuilderSpec$1 -> dU:
    int[] $SwitchMap$com$google$common$cache$LocalCache$Strength -> a
com.google.common.cache.CacheBuilderSpec$AccessDurationParser -> dV:
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> a
com.google.common.cache.CacheBuilderSpec$ConcurrencyLevelParser -> dW:
    void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> a
com.google.common.cache.CacheBuilderSpec$DurationParser -> dX:
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$InitialCapacityParser -> dY:
    void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> a
com.google.common.cache.CacheBuilderSpec$IntegerParser -> dZ:
    void parseInteger(com.google.common.cache.CacheBuilderSpec,int) -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$KeyStrengthParser -> ea:
    com.google.common.cache.LocalCache$Strength strength -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$LongParser -> eb:
    void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$MaximumSizeParser -> ec:
    void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> a
com.google.common.cache.CacheBuilderSpec$MaximumWeightParser -> ed:
    void parseLong(com.google.common.cache.CacheBuilderSpec,long) -> a
com.google.common.cache.CacheBuilderSpec$RefreshDurationParser -> ee:
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> a
com.google.common.cache.CacheBuilderSpec$ValueParser -> ef:
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$ValueStrengthParser -> eg:
    com.google.common.cache.LocalCache$Strength strength -> a
    void parse(com.google.common.cache.CacheBuilderSpec,java.lang.String,java.lang.String) -> a
com.google.common.cache.CacheBuilderSpec$WriteDurationParser -> eh:
    void parseDuration(com.google.common.cache.CacheBuilderSpec,long,java.util.concurrent.TimeUnit) -> a
com.google.common.cache.CacheLoader -> com.google.common.cache.CacheLoader:
    java.lang.Object load(java.lang.Object) -> load
    com.google.common.util.concurrent.ListenableFuture reload(java.lang.Object,java.lang.Object) -> reload
    java.util.Map loadAll(java.lang.Iterable) -> loadAll
    com.google.common.cache.CacheLoader from(com.google.common.base.Function) -> from
    com.google.common.cache.CacheLoader from(com.google.common.base.Supplier) -> from
com.google.common.cache.CacheLoader$FunctionToCacheLoader -> ei:
    com.google.common.base.Function computingFunction -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.CacheLoader$InvalidCacheLoadException -> com.google.common.cache.CacheLoader$InvalidCacheLoadException:
com.google.common.cache.CacheLoader$SupplierToCacheLoader -> ej:
    com.google.common.base.Supplier computingSupplier -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.CacheLoader$UnsupportedLoadingOperationException -> ek:
com.google.common.cache.CacheStats -> com.google.common.cache.CacheStats:
    long hitCount -> a
    long missCount -> b
    long loadSuccessCount -> c
    long loadExceptionCount -> d
    long totalLoadTime -> e
    long evictionCount -> f
    long requestCount() -> requestCount
    long hitCount() -> hitCount
    double hitRate() -> hitRate
    long missCount() -> missCount
    double missRate() -> missRate
    long loadCount() -> loadCount
    long loadSuccessCount() -> loadSuccessCount
    long loadExceptionCount() -> loadExceptionCount
    double loadExceptionRate() -> loadExceptionRate
    long totalLoadTime() -> totalLoadTime
    double averageLoadPenalty() -> averageLoadPenalty
    long evictionCount() -> evictionCount
    com.google.common.cache.CacheStats minus(com.google.common.cache.CacheStats) -> minus
    com.google.common.cache.CacheStats plus(com.google.common.cache.CacheStats) -> plus
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.cache.ForwardingCache -> com.google.common.cache.ForwardingCache:
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    long size() -> size
    com.google.common.cache.CacheStats stats() -> stats
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    void cleanUp() -> cleanUp
    java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingCache$SimpleForwardingCache -> com.google.common.cache.ForwardingCache$SimpleForwardingCache:
    com.google.common.cache.Cache delegate -> a
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingLoadingCache -> com.google.common.cache.ForwardingLoadingCache:
    com.google.common.cache.LoadingCache delegate() -> delegate
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache -> com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache:
    com.google.common.cache.LoadingCache delegate -> a
    com.google.common.cache.LoadingCache delegate() -> delegate
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.cache.LoadingCache -> com.google.common.cache.LoadingCache:
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
    java.util.concurrent.ConcurrentMap asMap() -> asMap
com.google.common.cache.LocalCache -> el:
    java.util.logging.Logger logger -> a
    com.google.common.util.concurrent.ListeningExecutorService sameThreadExecutor -> b
    int segmentMask -> c
    int segmentShift -> d
    com.google.common.cache.LocalCache$Segment[] segments -> e
    int concurrencyLevel -> f
    com.google.common.base.Equivalence keyEquivalence -> g
    com.google.common.base.Equivalence valueEquivalence -> h
    com.google.common.cache.LocalCache$Strength keyStrength -> i
    com.google.common.cache.LocalCache$Strength valueStrength -> j
    long maxWeight -> k
    com.google.common.cache.Weigher weigher -> l
    long expireAfterAccessNanos -> m
    long expireAfterWriteNanos -> n
    long refreshNanos -> o
    java.util.Queue removalNotificationQueue -> p
    com.google.common.cache.RemovalListener removalListener -> q
    com.google.common.base.Ticker ticker -> r
    com.google.common.cache.LocalCache$EntryFactory entryFactory -> s
    com.google.common.cache.AbstractCache$StatsCounter globalStatsCounter -> t
    com.google.common.cache.CacheLoader defaultLoader -> u
    com.google.common.cache.LocalCache$ValueReference UNSET -> v
    java.util.Queue DISCARDING_QUEUE -> w
    java.util.Set keySet -> x
    java.util.Collection values -> y
    java.util.Set entrySet -> z
    boolean evictsBySize() -> a
    boolean customWeigher() -> b
    boolean expiresAfterWrite() -> p
    boolean expiresAfterAccess() -> q
    boolean refreshes() -> c
    boolean usesAccessQueue() -> d
    boolean usesWriteQueue() -> e
    boolean recordsWrite() -> f
    boolean recordsAccess() -> g
    boolean usesKeyReferences() -> h
    boolean usesValueReferences() -> i
    com.google.common.cache.LocalCache$ValueReference unset() -> j
    com.google.common.cache.LocalCache$ReferenceEntry nullEntry() -> k
    java.util.Queue discardingQueue() -> l
    int hash(java.lang.Object) -> d
    void reclaimValue(com.google.common.cache.LocalCache$ValueReference) -> a
    void reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$Segment segmentFor(int) -> a
    com.google.common.cache.LocalCache$Segment createSegment(int,long,com.google.common.cache.AbstractCache$StatsCounter) -> a
    java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long) -> a
    boolean isExpired(com.google.common.cache.LocalCache$ReferenceEntry,long) -> b
    void connectAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void nullifyAccessOrder(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    void connectWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> b
    void nullifyWriteOrder(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    void processPendingNotifications() -> m
    void cleanUp() -> n
    boolean isEmpty() -> isEmpty
    long longSize() -> o
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getIfPresent(java.lang.Object) -> a
    java.lang.Object get(java.lang.Object,com.google.common.cache.CacheLoader) -> a
    java.lang.Object getOrLoad(java.lang.Object) -> b
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> a
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> b
    java.util.Map loadAll(java.util.Set,com.google.common.cache.CacheLoader) -> a
    void refresh(java.lang.Object) -> c
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    void clear() -> clear
    void invalidateAll(java.lang.Iterable) -> c
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
com.google.common.cache.LocalCache$1 -> em:
    java.lang.Object get() -> get
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
    java.lang.Object waitForValue() -> e
    void notifyNewValue(java.lang.Object) -> a
com.google.common.cache.LocalCache$2 -> en:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.cache.LocalCache$AbstractCacheSet -> eo:
    java.util.concurrent.ConcurrentMap map -> a
    com.google.common.cache.LocalCache this$0 -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.cache.LocalCache$AbstractReferenceEntry -> ep:
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$AccessQueue -> eq:
    com.google.common.cache.LocalCache$ReferenceEntry head -> a
    com.google.common.cache.LocalCache$ReferenceEntry peek() -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.cache.LocalCache$AccessQueue$1 -> er:
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> a
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> b
    com.google.common.cache.LocalCache$AccessQueue this$0 -> c
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
com.google.common.cache.LocalCache$AccessQueue$2 -> es:
    com.google.common.cache.LocalCache$AccessQueue this$0 -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.cache.LocalCache$EntryFactory -> et:
    com.google.common.cache.LocalCache$EntryFactory STRONG -> a
    com.google.common.cache.LocalCache$EntryFactory STRONG_ACCESS -> b
    com.google.common.cache.LocalCache$EntryFactory STRONG_WRITE -> c
    com.google.common.cache.LocalCache$EntryFactory STRONG_ACCESS_WRITE -> d
    com.google.common.cache.LocalCache$EntryFactory WEAK -> e
    com.google.common.cache.LocalCache$EntryFactory WEAK_ACCESS -> f
    com.google.common.cache.LocalCache$EntryFactory WEAK_WRITE -> g
    com.google.common.cache.LocalCache$EntryFactory WEAK_ACCESS_WRITE -> h
    com.google.common.cache.LocalCache$EntryFactory[] factories -> i
    com.google.common.cache.LocalCache$EntryFactory[] $VALUES -> j
    com.google.common.cache.LocalCache$EntryFactory[] values() -> values
    com.google.common.cache.LocalCache$EntryFactory valueOf(java.lang.String) -> valueOf
    com.google.common.cache.LocalCache$EntryFactory getFactory(com.google.common.cache.LocalCache$Strength,boolean,boolean) -> a
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void copyAccessEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void copyWriteEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> b
com.google.common.cache.LocalCache$EntryFactory$1 -> eu:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$2 -> ev:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$3 -> ew:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$4 -> ex:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$5 -> ey:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$6 -> ez:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$7 -> eA:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryFactory$8 -> eB:
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(com.google.common.cache.LocalCache$Segment,java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$EntryIterator -> eC:
    com.google.common.cache.LocalCache this$0 -> a
    java.lang.Object next() -> next
com.google.common.cache.LocalCache$EntrySet -> eD:
    com.google.common.cache.LocalCache this$0 -> c
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.cache.LocalCache$HashIterator -> eE:
    int nextSegmentIndex -> b
    int nextTableIndex -> c
    com.google.common.cache.LocalCache$Segment currentSegment -> d
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> e
    com.google.common.cache.LocalCache$ReferenceEntry nextEntry -> f
    com.google.common.cache.LocalCache$WriteThroughEntry nextExternal -> g
    com.google.common.cache.LocalCache$WriteThroughEntry lastReturned -> h
    com.google.common.cache.LocalCache this$0 -> i
    void advance() -> b
    boolean nextInChain() -> c
    boolean nextInTable() -> d
    boolean advanceTo(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean hasNext() -> hasNext
    com.google.common.cache.LocalCache$WriteThroughEntry nextEntry() -> a
    void remove() -> remove
com.google.common.cache.LocalCache$KeyIterator -> eF:
    com.google.common.cache.LocalCache this$0 -> a
    java.lang.Object next() -> next
com.google.common.cache.LocalCache$KeySet -> eG:
    com.google.common.cache.LocalCache this$0 -> c
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.cache.LocalCache$LoadingSerializationProxy -> eH:
    long serialVersionUID -> serialVersionUID
    com.google.common.cache.LoadingCache autoDelegate -> a
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    java.lang.Object apply(java.lang.Object) -> apply
    void refresh(java.lang.Object) -> refresh
    java.lang.Object readResolve() -> readResolve
com.google.common.cache.LocalCache$LoadingValueReference -> eI:
    com.google.common.cache.LocalCache$ValueReference oldValue -> a
    com.google.common.util.concurrent.SettableFuture futureValue -> b
    com.google.common.base.Stopwatch stopwatch -> c
    boolean isLoading() -> c
    boolean isActive() -> d
    int getWeight() -> a
    boolean set(java.lang.Object) -> b
    boolean setException(java.lang.Throwable) -> a
    boolean setException(com.google.common.util.concurrent.SettableFuture,java.lang.Throwable) -> a
    void notifyNewValue(java.lang.Object) -> a
    com.google.common.util.concurrent.ListenableFuture loadFuture(java.lang.Object,com.google.common.cache.CacheLoader) -> a
    long elapsedNanos() -> f
    java.lang.Object waitForValue() -> e
    java.lang.Object get() -> get
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$LocalLoadingCache -> eJ:
    long serialVersionUID -> serialVersionUID
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getUnchecked(java.lang.Object) -> getUnchecked
    com.google.common.collect.ImmutableMap getAll(java.lang.Iterable) -> getAll
    void refresh(java.lang.Object) -> refresh
    java.lang.Object apply(java.lang.Object) -> apply
    java.lang.Object writeReplace() -> writeReplace
com.google.common.cache.LocalCache$LocalManualCache -> eK:
    com.google.common.cache.LocalCache localCache -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object getIfPresent(java.lang.Object) -> getIfPresent
    java.lang.Object get(java.lang.Object,java.util.concurrent.Callable) -> get
    com.google.common.collect.ImmutableMap getAllPresent(java.lang.Iterable) -> getAllPresent
    void put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void invalidate(java.lang.Object) -> invalidate
    void invalidateAll(java.lang.Iterable) -> invalidateAll
    void invalidateAll() -> invalidateAll
    long size() -> size
    java.util.concurrent.ConcurrentMap asMap() -> asMap
    com.google.common.cache.CacheStats stats() -> stats
    void cleanUp() -> cleanUp
    java.lang.Object writeReplace() -> writeReplace
com.google.common.cache.LocalCache$LocalManualCache$1 -> eL:
    java.util.concurrent.Callable val$valueLoader -> a
    com.google.common.cache.LocalCache$LocalManualCache this$0 -> b
    java.lang.Object load(java.lang.Object) -> load
com.google.common.cache.LocalCache$ManualSerializationProxy -> eM:
    long serialVersionUID -> serialVersionUID
    com.google.common.cache.LocalCache$Strength keyStrength -> b
    com.google.common.cache.LocalCache$Strength valueStrength -> c
    com.google.common.base.Equivalence keyEquivalence -> d
    com.google.common.base.Equivalence valueEquivalence -> e
    long expireAfterWriteNanos -> f
    long expireAfterAccessNanos -> g
    long maxWeight -> h
    com.google.common.cache.Weigher weigher -> i
    int concurrencyLevel -> j
    com.google.common.cache.RemovalListener removalListener -> k
    com.google.common.base.Ticker ticker -> l
    com.google.common.cache.CacheLoader loader -> m
    com.google.common.cache.Cache delegate -> n
    com.google.common.cache.CacheBuilder recreateCacheBuilder() -> a
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
    com.google.common.cache.Cache delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.cache.LocalCache$NullEntry -> eN:
    com.google.common.cache.LocalCache$NullEntry INSTANCE -> a
    com.google.common.cache.LocalCache$NullEntry[] $VALUES -> b
    com.google.common.cache.LocalCache$NullEntry[] values() -> values
    com.google.common.cache.LocalCache$NullEntry valueOf(java.lang.String) -> valueOf
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$ReferenceEntry -> eO:
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$Segment -> eP:
    com.google.common.cache.LocalCache map -> a
    int count -> b
    int totalWeight -> c
    int modCount -> d
    int threshold -> e
    java.util.concurrent.atomic.AtomicReferenceArray table -> f
    long maxSegmentWeight -> g
    java.lang.ref.ReferenceQueue keyReferenceQueue -> h
    java.lang.ref.ReferenceQueue valueReferenceQueue -> i
    java.util.Queue recencyQueue -> j
    java.util.concurrent.atomic.AtomicInteger readCount -> k
    java.util.Queue writeQueue -> l
    java.util.Queue accessQueue -> m
    com.google.common.cache.AbstractCache$StatsCounter statsCounter -> n
    java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> a
    com.google.common.cache.LocalCache$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry copyEntry(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void setValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,java.lang.Object,long) -> a
    java.lang.Object get(java.lang.Object,int,com.google.common.cache.CacheLoader) -> a
    java.lang.Object lockedGetOrLoad(java.lang.Object,int,com.google.common.cache.CacheLoader) -> b
    java.lang.Object waitForLoadingValue(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,com.google.common.cache.LocalCache$ValueReference) -> a
    java.lang.Object getAndRecordStats(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,com.google.common.util.concurrent.ListenableFuture) -> a
    java.lang.Object scheduleRefresh(com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,java.lang.Object,long,com.google.common.cache.CacheLoader) -> a
    java.lang.Object refresh(java.lang.Object,int,com.google.common.cache.CacheLoader,boolean) -> a
    com.google.common.cache.LocalCache$LoadingValueReference insertLoadingValueReference(java.lang.Object,int,boolean) -> a
    void tryDrainReferenceQueues() -> d
    void drainReferenceQueues() -> e
    void recordRead(com.google.common.cache.LocalCache$ReferenceEntry,long) -> b
    void recordLockedRead(com.google.common.cache.LocalCache$ReferenceEntry,long) -> c
    void drainRecencyQueue() -> f
    void tryExpireEntries(long) -> a
    void expireEntries(long) -> b
    void enqueueNotification(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.RemovalCause) -> a
    void enqueueNotification$1dd09a7a(java.lang.Object,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause) -> a
    void evictEntries() -> g
    com.google.common.cache.LocalCache$ReferenceEntry getEntry(java.lang.Object,int) -> d
    com.google.common.cache.LocalCache$ReferenceEntry getLiveEntry(java.lang.Object,int,long) -> a
    java.lang.Object getLiveValue(com.google.common.cache.LocalCache$ReferenceEntry,long) -> a
    java.lang.Object get(java.lang.Object,int) -> a
    boolean containsKey(java.lang.Object,int) -> b
    java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> a
    void expand() -> h
    boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> a
    java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object,int) -> c
    boolean storeLoadedValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference,java.lang.Object) -> a
    boolean remove(java.lang.Object,int,java.lang.Object) -> b
    void clear() -> a
    com.google.common.cache.LocalCache$ReferenceEntry removeValueFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference,com.google.common.cache.RemovalCause) -> a
    com.google.common.cache.LocalCache$ReferenceEntry removeEntryFromChain(com.google.common.cache.LocalCache$ReferenceEntry,com.google.common.cache.LocalCache$ReferenceEntry) -> b
    void removeCollectedEntry(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean reclaimKey(com.google.common.cache.LocalCache$ReferenceEntry,int) -> a
    boolean reclaimValue(java.lang.Object,int,com.google.common.cache.LocalCache$ValueReference) -> a
    boolean removeLoadingValue(java.lang.Object,int,com.google.common.cache.LocalCache$LoadingValueReference) -> a
    boolean removeEntry(com.google.common.cache.LocalCache$ReferenceEntry,int,com.google.common.cache.RemovalCause) -> a
    void postReadCleanup() -> b
    void cleanUp() -> c
    void runLockedCleanup(long) -> c
    void runUnlockedCleanup() -> i
com.google.common.cache.LocalCache$Segment$1 -> eQ:
    java.lang.Object val$key -> a
    int val$hash -> b
    com.google.common.cache.LocalCache$LoadingValueReference val$loadingValueReference -> c
    com.google.common.util.concurrent.ListenableFuture val$loadingFuture -> d
    com.google.common.cache.LocalCache$Segment this$0 -> e
    void run() -> run
com.google.common.cache.LocalCache$SoftValueReference -> eR:
    com.google.common.cache.LocalCache$ReferenceEntry entry -> a
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    void notifyNewValue(java.lang.Object) -> a
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
    java.lang.Object waitForValue() -> e
com.google.common.cache.LocalCache$Strength -> eS:
    com.google.common.cache.LocalCache$Strength STRONG -> a
    com.google.common.cache.LocalCache$Strength SOFT -> b
    com.google.common.cache.LocalCache$Strength WEAK -> c
    com.google.common.cache.LocalCache$Strength[] $VALUES -> d
    com.google.common.cache.LocalCache$Strength[] values() -> values
    com.google.common.cache.LocalCache$Strength valueOf(java.lang.String) -> valueOf
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.cache.LocalCache$Strength$1 -> eT:
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.cache.LocalCache$Strength$2 -> eU:
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.cache.LocalCache$Strength$3 -> eV:
    com.google.common.cache.LocalCache$ValueReference referenceValue(com.google.common.cache.LocalCache$Segment,com.google.common.cache.LocalCache$ReferenceEntry,java.lang.Object,int) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.cache.LocalCache$StrongAccessEntry -> eW:
    long accessTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> c
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
com.google.common.cache.LocalCache$StrongAccessWriteEntry -> eX:
    long accessTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> c
    long writeTime -> d
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> e
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> f
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$StrongEntry -> eY:
    java.lang.Object key -> g
    int hash -> h
    com.google.common.cache.LocalCache$ReferenceEntry next -> i
    com.google.common.cache.LocalCache$ValueReference valueReference -> j
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    int getHash() -> c
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
com.google.common.cache.LocalCache$StrongValueReference -> eZ:
    java.lang.Object referent -> a
    java.lang.Object get() -> get
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
    java.lang.Object waitForValue() -> e
    void notifyNewValue(java.lang.Object) -> a
com.google.common.cache.LocalCache$StrongWriteEntry -> fa:
    long writeTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> c
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$ValueIterator -> fb:
    com.google.common.cache.LocalCache this$0 -> a
    java.lang.Object next() -> next
com.google.common.cache.LocalCache$ValueReference -> fc:
    java.lang.Object get() -> get
    java.lang.Object waitForValue() -> e
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    void notifyNewValue(java.lang.Object) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
com.google.common.cache.LocalCache$Values -> fd:
    com.google.common.cache.LocalCache this$0 -> c
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
com.google.common.cache.LocalCache$WeakAccessEntry -> fe:
    long accessTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> c
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
com.google.common.cache.LocalCache$WeakAccessWriteEntry -> ff:
    long accessTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextAccess -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousAccess -> c
    long writeTime -> d
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> e
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> f
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$WeakEntry -> fg:
    int hash -> g
    com.google.common.cache.LocalCache$ReferenceEntry next -> h
    com.google.common.cache.LocalCache$ValueReference valueReference -> i
    java.lang.Object getKey() -> d
    long getAccessTime() -> e
    void setAccessTime(long) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getNextInAccessQueue() -> f
    void setNextInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> a
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInAccessQueue() -> g
    void setPreviousInAccessQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> b
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
    com.google.common.cache.LocalCache$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.cache.LocalCache$ValueReference) -> a
    int getHash() -> c
    com.google.common.cache.LocalCache$ReferenceEntry getNext() -> b
com.google.common.cache.LocalCache$WeakValueReference -> fh:
    com.google.common.cache.LocalCache$ReferenceEntry entry -> a
    int getWeight() -> a
    com.google.common.cache.LocalCache$ReferenceEntry getEntry() -> b
    void notifyNewValue(java.lang.Object) -> a
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
    boolean isLoading() -> c
    boolean isActive() -> d
    java.lang.Object waitForValue() -> e
com.google.common.cache.LocalCache$WeakWriteEntry -> fi:
    long writeTime -> a
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> b
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> c
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$WeightedSoftValueReference -> fj:
    int weight -> b
    int getWeight() -> a
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$WeightedStrongValueReference -> fk:
    int weight -> b
    int getWeight() -> a
com.google.common.cache.LocalCache$WeightedWeakValueReference -> fl:
    int weight -> b
    int getWeight() -> a
    com.google.common.cache.LocalCache$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.cache.LocalCache$ReferenceEntry) -> a
com.google.common.cache.LocalCache$WriteQueue -> fm:
    com.google.common.cache.LocalCache$ReferenceEntry head -> a
    com.google.common.cache.LocalCache$ReferenceEntry peek() -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.cache.LocalCache$WriteQueue$1 -> fn:
    com.google.common.cache.LocalCache$ReferenceEntry nextWrite -> a
    com.google.common.cache.LocalCache$ReferenceEntry previousWrite -> b
    com.google.common.cache.LocalCache$WriteQueue this$0 -> c
    long getWriteTime() -> h
    void setWriteTime(long) -> b
    com.google.common.cache.LocalCache$ReferenceEntry getNextInWriteQueue() -> i
    void setNextInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> c
    com.google.common.cache.LocalCache$ReferenceEntry getPreviousInWriteQueue() -> j
    void setPreviousInWriteQueue(com.google.common.cache.LocalCache$ReferenceEntry) -> d
com.google.common.cache.LocalCache$WriteQueue$2 -> fo:
    com.google.common.cache.LocalCache$WriteQueue this$0 -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.cache.LocalCache$WriteThroughEntry -> fp:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.cache.LocalCache this$0 -> c
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.String toString() -> toString
com.google.common.cache.LongAddable -> fq:
    void increment() -> a
    void add(long) -> a
    long sum() -> b
com.google.common.cache.LongAddables -> fr:
    com.google.common.base.Supplier SUPPLIER -> a
    com.google.common.cache.LongAddable create() -> a
com.google.common.cache.LongAddables$1 -> fs:
    java.lang.Object get() -> get
com.google.common.cache.LongAddables$2 -> ft:
    java.lang.Object get() -> get
com.google.common.cache.LongAddables$PureJavaLongAddable -> fu:
    void increment() -> a
    void add(long) -> a
    long sum() -> b
com.google.common.cache.LongAdder -> fv:
    long serialVersionUID -> serialVersionUID
    long fn(long,long) -> a
    void add(long) -> a
    void increment() -> a
    long sum() -> b
    java.lang.String toString() -> toString
    long longValue() -> longValue
    int intValue() -> intValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.cache.RemovalCause -> com.google.common.cache.RemovalCause:
    com.google.common.cache.RemovalCause EXPLICIT -> EXPLICIT
    com.google.common.cache.RemovalCause REPLACED -> REPLACED
    com.google.common.cache.RemovalCause COLLECTED -> COLLECTED
    com.google.common.cache.RemovalCause EXPIRED -> EXPIRED
    com.google.common.cache.RemovalCause SIZE -> SIZE
    com.google.common.cache.RemovalCause[] $VALUES -> a
    com.google.common.cache.RemovalCause[] values() -> values
    com.google.common.cache.RemovalCause valueOf(java.lang.String) -> valueOf
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$1 -> fw:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$2 -> fx:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$3 -> fy:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$4 -> fz:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalCause$5 -> fA:
    boolean wasEvicted() -> a
com.google.common.cache.RemovalListener -> com.google.common.cache.RemovalListener:
    void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
com.google.common.cache.RemovalListeners -> com.google.common.cache.RemovalListeners:
    com.google.common.cache.RemovalListener asynchronous(com.google.common.cache.RemovalListener,java.util.concurrent.Executor) -> asynchronous
com.google.common.cache.RemovalListeners$1 -> fB:
    java.util.concurrent.Executor val$executor -> a
    com.google.common.cache.RemovalListener val$listener -> b
    void onRemoval(com.google.common.cache.RemovalNotification) -> onRemoval
com.google.common.cache.RemovalListeners$1$1 -> fC:
    com.google.common.cache.RemovalNotification val$notification -> a
    com.google.common.cache.RemovalListeners$1 this$0 -> b
    void run() -> run
com.google.common.cache.RemovalNotification -> com.google.common.cache.RemovalNotification:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.cache.RemovalCause cause -> c
    com.google.common.cache.RemovalCause getCause() -> getCause
    boolean wasEvicted() -> wasEvicted
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.cache.Striped64 -> fD:
    com.google.common.cache.Striped64$ThreadHashCode threadHashCode -> a
    int NCPU -> b
    com.google.common.cache.Striped64$Cell[] cells -> c
    long base -> d
    int busy -> e
    sun.misc.Unsafe UNSAFE -> f
    long baseOffset -> g
    long busyOffset -> h
    boolean casBase(long,long) -> b
    boolean casBusy() -> c
    long fn(long,long) -> a
    sun.misc.Unsafe getUnsafe() -> a
    sun.misc.Unsafe access$000() -> d
com.google.common.cache.Striped64$1 -> fE:
    java.lang.Object run() -> run
com.google.common.cache.Striped64$Cell -> fF:
    long value -> a
    sun.misc.Unsafe UNSAFE -> b
    long valueOffset -> c
    boolean cas(long,long) -> a
com.google.common.cache.Striped64$HashCode -> fG:
    java.util.Random rng -> a
    int code -> b
com.google.common.cache.Striped64$ThreadHashCode -> fH:
    java.lang.Object initialValue() -> initialValue
com.google.common.cache.Weigher -> com.google.common.cache.Weigher:
    int weigh(java.lang.Object,java.lang.Object) -> weigh
com.google.common.collect.AbstractBiMap -> fI:
    java.util.Map delegate -> b
    com.google.common.collect.AbstractBiMap inverse -> a
    java.util.Set keySet -> c
    java.util.Set valueSet -> d
    java.util.Set entrySet -> e
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> delegate
    java.lang.Object checkKey(java.lang.Object) -> a
    java.lang.Object checkValue(java.lang.Object) -> b
    void setDelegates(java.util.Map,java.util.Map) -> a
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object putInBothMaps(java.lang.Object,java.lang.Object,boolean) -> a
    void updateInverseMap(java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object removeFromBothMaps(java.lang.Object) -> c
    void removeFromInverseMap(java.lang.Object) -> d
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set keySet() -> keySet
    java.util.Set values() -> values
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
    java.util.Map access$200(com.google.common.collect.AbstractBiMap) -> a
    java.lang.Object access$300(com.google.common.collect.AbstractBiMap,java.lang.Object) -> a
    void access$600(com.google.common.collect.AbstractBiMap,java.lang.Object,boolean,java.lang.Object,java.lang.Object) -> a
    void access$700(com.google.common.collect.AbstractBiMap,java.lang.Object) -> b
com.google.common.collect.AbstractBiMap$EntrySet -> fJ:
    java.util.Set esDelegate -> a
    com.google.common.collect.AbstractBiMap this$0 -> b
    java.util.Set delegate() -> delegate
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$EntrySet$1 -> fK:
    java.util.Map$Entry entry -> a
    java.util.Iterator val$iterator -> b
    com.google.common.collect.AbstractBiMap$EntrySet this$1 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractBiMap$EntrySet$1$1 -> fL:
    java.util.Map$Entry val$finalEntry -> a
    com.google.common.collect.AbstractBiMap$EntrySet$1 this$2 -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$Inverse -> fM:
    long serialVersionUID -> serialVersionUID
    java.lang.Object checkKey(java.lang.Object) -> a
    java.lang.Object checkValue(java.lang.Object) -> b
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$KeySet -> fN:
    com.google.common.collect.AbstractBiMap this$0 -> a
    java.util.Set delegate() -> delegate
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Iterator iterator() -> iterator
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractBiMap$ValueSet -> fO:
    java.util.Set valuesDelegate -> a
    com.google.common.collect.AbstractBiMap this$0 -> b
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.AbstractIndexedListIterator -> fP:
    int size -> a
    int position -> b
    java.lang.Object get(int) -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
com.google.common.collect.AbstractIterator -> com.google.common.collect.AbstractIterator:
    com.google.common.collect.AbstractIterator$State state -> a
    java.lang.Object next -> b
    java.lang.Object computeNext() -> computeNext
    java.lang.Object endOfData() -> endOfData
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    java.lang.Object peek() -> peek
com.google.common.collect.AbstractIterator$1 -> fQ:
    int[] $SwitchMap$com$google$common$collect$AbstractIterator$State -> a
com.google.common.collect.AbstractIterator$State -> fR:
    com.google.common.collect.AbstractIterator$State READY -> a
    com.google.common.collect.AbstractIterator$State NOT_READY -> b
    com.google.common.collect.AbstractIterator$State DONE -> c
    com.google.common.collect.AbstractIterator$State FAILED -> d
    com.google.common.collect.AbstractIterator$State[] $VALUES -> e
    com.google.common.collect.AbstractIterator$State[] values() -> values
    com.google.common.collect.AbstractIterator$State valueOf(java.lang.String) -> valueOf
com.google.common.collect.AbstractListMultimap -> fS:
    long serialVersionUID -> serialVersionUID
    java.util.List createCollection() -> a
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> b
    java.util.Collection createUnmodifiableEmptyCollection() -> c
com.google.common.collect.AbstractMapBasedMultimap -> fT:
    java.util.Map map -> a
    int totalSize -> b
    long serialVersionUID -> serialVersionUID
    void setMap(java.util.Map) -> a
    java.util.Collection createUnmodifiableEmptyCollection() -> c
    java.util.Collection createCollection() -> b
    java.util.Collection createCollection(java.lang.Object) -> a
    java.util.Map backingMap() -> d
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> a
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> a
    java.util.List wrapList(java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> a
    java.util.Set createKeySet() -> e
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Iterator entryIterator() -> f
    java.util.Map createAsMap() -> g
    java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultimap) -> a
    java.util.Iterator access$100(com.google.common.collect.AbstractMapBasedMultimap,java.util.Collection) -> a
    int access$210(com.google.common.collect.AbstractMapBasedMultimap) -> b
    int access$208(com.google.common.collect.AbstractMapBasedMultimap) -> c
    int access$212(com.google.common.collect.AbstractMapBasedMultimap,int) -> a
    int access$220(com.google.common.collect.AbstractMapBasedMultimap,int) -> b
    java.util.List access$300(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object,java.util.List,com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection) -> a
    int access$400(com.google.common.collect.AbstractMapBasedMultimap,java.lang.Object) -> a
com.google.common.collect.AbstractMapBasedMultimap$AsMap -> fU:
    java.util.Map submap -> a
    java.util.Set entrySet -> b
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> c
    java.util.Set entrySet() -> entrySet
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Set keySet() -> keySet
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Map$Entry wrapEntry(java.util.Map$Entry) -> a
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapEntries -> fV:
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.AbstractMapBasedMultimap$AsMap$AsMapIterator -> fW:
    java.util.Iterator delegateIterator -> a
    java.util.Collection collection -> b
    com.google.common.collect.AbstractMapBasedMultimap$AsMap this$1 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultimap$EntryIterator -> fX:
    java.util.Iterator keyIterator -> a
    java.lang.Object key -> b
    java.util.Collection collection -> c
    java.util.Iterator valueIterator -> d
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> e
    void findValueIteratorAndKey() -> a
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultimap$KeySet -> fY:
    java.util.Map subMap -> a
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> b
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.AbstractMapBasedMultimap$KeySet$1 -> fZ:
    java.util.Map$Entry entry -> a
    java.util.Iterator val$entryIterator -> b
    com.google.common.collect.AbstractMapBasedMultimap$KeySet this$1 -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$NavigableAsMap -> ga:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> d
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.Map$Entry pollAsMapEntry(java.util.Iterator) -> a
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedSet createKeySet() -> a
    java.util.SortedSet keySet() -> b
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap sortedMap() -> c
    java.util.Set keySet() -> keySet
com.google.common.collect.AbstractMapBasedMultimap$NavigableKeySet -> gb:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> c
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedMap sortedMap() -> b
com.google.common.collect.AbstractMapBasedMultimap$RandomAccessWrappedList -> gc:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
com.google.common.collect.AbstractMapBasedMultimap$SortedAsMap -> gd:
    java.util.SortedSet sortedKeySet -> e
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> f
    java.util.SortedMap sortedMap() -> c
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedSet keySet() -> b
    java.util.SortedSet createKeySet() -> a
    java.util.Set keySet() -> keySet
com.google.common.collect.AbstractMapBasedMultimap$SortedKeySet -> ge:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> d
    java.util.SortedMap sortedMap() -> b
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection -> gf:
    java.lang.Object key -> b
    java.util.Collection delegate -> c
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection ancestor -> d
    java.util.Collection ancestorDelegate -> e
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> f
    void refreshIfEmpty() -> a
    void removeIfEmpty() -> b
    void addToMap() -> c
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator -> gg:
    java.util.Iterator delegateIterator -> a
    java.util.Collection originalDelegate -> b
    com.google.common.collect.AbstractMapBasedMultimap$WrappedCollection this$1 -> c
    void validateIterator() -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapBasedMultimap$WrappedList -> gh:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> g
    java.util.List getListDelegate() -> d
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
com.google.common.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator -> gi:
    com.google.common.collect.AbstractMapBasedMultimap$WrappedList this$1 -> d
    java.util.ListIterator getDelegateListIterator() -> b
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
com.google.common.collect.AbstractMapBasedMultimap$WrappedNavigableSet -> gj:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet wrap(java.util.NavigableSet) -> a
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet getSortedSetDelegate() -> d
com.google.common.collect.AbstractMapBasedMultimap$WrappedSet -> gk:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> a
    boolean removeAll(java.util.Collection) -> removeAll
com.google.common.collect.AbstractMapBasedMultimap$WrappedSortedSet -> gl:
    com.google.common.collect.AbstractMapBasedMultimap this$0 -> g
    java.util.SortedSet getSortedSetDelegate() -> d
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.AbstractMapBasedMultiset -> gm:
    java.util.Map backingMap -> a
    long size -> b
    long serialVersionUID -> serialVersionUID
    java.util.Set entrySet() -> entrySet
    java.util.Iterator entryIterator() -> a
    void clear() -> clear
    int distinctElements() -> b
    int size() -> size
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    int getAndSet(com.google.common.collect.Count,int) -> a
    java.util.Map access$000(com.google.common.collect.AbstractMapBasedMultiset) -> a
    long access$122(com.google.common.collect.AbstractMapBasedMultiset,long) -> a
    long access$110(com.google.common.collect.AbstractMapBasedMultiset) -> b
com.google.common.collect.AbstractMapBasedMultiset$1 -> gn:
    java.util.Map$Entry toRemove -> a
    java.util.Iterator val$backingEntries -> b
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.AbstractMapBasedMultiset$1$1 -> go:
    java.util.Map$Entry val$mapEntry -> a
    com.google.common.collect.AbstractMapBasedMultiset$1 this$1 -> b
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.AbstractMapBasedMultiset$MapBasedMultisetIterator -> gp:
    java.util.Iterator entryIterator -> a
    java.util.Map$Entry currentEntry -> b
    int occurrencesLeft -> c
    boolean canRemove -> d
    com.google.common.collect.AbstractMapBasedMultiset this$0 -> e
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.AbstractMapEntry -> gq:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap -> gr:
    java.util.Collection entries -> a
    java.util.Set keySet -> b
    com.google.common.collect.Multiset keys -> c
    java.util.Collection values -> d
    java.util.Map asMap -> e
    boolean isEmpty() -> isEmpty
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection entries() -> entries
    java.util.Collection createEntries() -> h
    java.util.Iterator entryIterator() -> f
    java.util.Set keySet() -> keySet
    java.util.Set createKeySet() -> e
    com.google.common.collect.Multiset keys() -> keys
    com.google.common.collect.Multiset createKeys() -> i
    java.util.Collection values() -> values
    java.util.Collection createValues() -> j
    java.util.Map asMap() -> asMap
    java.util.Map createAsMap() -> g
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractMultimap$1 -> gs:
    com.google.common.collect.AbstractMultimap this$0 -> a
    com.google.common.collect.Multimap multimap() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractMultimap$2 -> gt:
    com.google.common.collect.AbstractMultimap this$0 -> a
    com.google.common.collect.Multimap multimap() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractMultimap$3 -> gu:
    com.google.common.collect.AbstractMultimap this$0 -> a
    java.util.Map map() -> a
com.google.common.collect.AbstractMultiset -> gv:
    java.util.Set elementSet -> a
    java.util.Set entrySet -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    boolean add(java.lang.Object) -> add
    int add(java.lang.Object,int) -> add
    boolean remove(java.lang.Object) -> remove
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.util.Set elementSet() -> elementSet
    java.util.Set createElementSet() -> c
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set createEntrySet() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractMultiset$ElementSet -> gw:
    com.google.common.collect.AbstractMultiset this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
com.google.common.collect.AbstractMultiset$EntrySet -> gx:
    com.google.common.collect.AbstractMultiset this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.AbstractNavigableMap -> gy:
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.AbstractNavigableMap$1 -> gz:
    com.google.common.collect.AbstractNavigableMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractNavigableMap$DescendingMap -> gA:
    com.google.common.collect.AbstractNavigableMap this$0 -> a
    java.util.NavigableMap forward() -> a
    java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.AbstractRangeSet -> gB:
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    boolean isEmpty() -> isEmpty
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    void clear() -> clear
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    void addAll(com.google.common.collect.RangeSet) -> addAll
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    boolean encloses(com.google.common.collect.Range) -> encloses
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.AbstractSequentialIterator -> com.google.common.collect.AbstractSequentialIterator:
    java.lang.Object nextOrNull -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.AbstractSetMultimap -> gC:
    long serialVersionUID -> serialVersionUID
    java.util.Set createCollection() -> a
    java.util.Set createUnmodifiableEmptyCollection() -> k
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean equals(java.lang.Object) -> equals
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> b
    java.util.Collection createUnmodifiableEmptyCollection() -> c
com.google.common.collect.AbstractSortedKeySortedSetMultimap -> gD:
    java.util.SortedMap asMap() -> asMap
    java.util.SortedMap backingMap() -> l
    java.util.SortedSet keySet() -> keySet
    java.util.Map asMap() -> asMap
    java.util.Set keySet() -> keySet
    java.util.Map backingMap() -> d
com.google.common.collect.AbstractSortedMultiset -> gE:
    java.util.Comparator comparator -> a
    com.google.common.collect.SortedMultiset descendingMultiset -> b
    java.util.NavigableSet elementSet() -> elementSet
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    java.util.Iterator descendingEntryIterator() -> e
    java.util.Iterator descendingIterator() -> f
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    java.util.Set createElementSet() -> c
    java.util.Set elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.AbstractSortedMultiset$1 -> gF:
    com.google.common.collect.AbstractSortedMultiset this$0 -> a
    com.google.common.collect.SortedMultiset forwardMultiset() -> a
    java.util.Iterator entryIterator() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.AbstractSortedSetMultimap -> gG:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet createCollection() -> m
    java.util.SortedSet createUnmodifiableEmptyCollection() -> l
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    java.util.Collection values() -> values
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Set createUnmodifiableEmptyCollection() -> k
    java.util.Set createCollection() -> a
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection createCollection() -> b
    java.util.Collection createUnmodifiableEmptyCollection() -> c
com.google.common.collect.AllEqualOrdering -> gH:
    com.google.common.collect.AllEqualOrdering INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
com.google.common.collect.ArrayListMultimap -> com.google.common.collect.ArrayListMultimap:
    int expectedValuesPerKey -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ArrayListMultimap create() -> create
    com.google.common.collect.ArrayListMultimap create(int,int) -> create
    com.google.common.collect.ArrayListMultimap create(com.google.common.collect.Multimap) -> create
    java.util.List createCollection() -> a
    void trimToSize() -> trimToSize
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    java.util.Map asMap() -> asMap
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    java.util.Collection values() -> values
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    java.util.Collection createCollection() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
com.google.common.collect.ArrayTable -> com.google.common.collect.ArrayTable:
    com.google.common.collect.ImmutableList rowList -> a
    com.google.common.collect.ImmutableList columnList -> b
    com.google.common.collect.ImmutableMap rowKeyToIndex -> c
    com.google.common.collect.ImmutableMap columnKeyToIndex -> d
    java.lang.Object[][] array -> e
    com.google.common.collect.ArrayTable$CellSet cellSet -> f
    com.google.common.collect.ArrayTable$ColumnMap columnMap -> g
    com.google.common.collect.ArrayTable$RowMap rowMap -> h
    java.util.Collection values -> i
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ArrayTable create(java.lang.Iterable,java.lang.Iterable) -> create
    com.google.common.collect.ArrayTable create(com.google.common.collect.Table) -> create
    com.google.common.collect.ArrayTable create(com.google.common.collect.ArrayTable) -> create
    com.google.common.collect.ImmutableMap index(java.util.List) -> a
    com.google.common.collect.ImmutableList rowKeyList() -> rowKeyList
    com.google.common.collect.ImmutableList columnKeyList() -> columnKeyList
    java.lang.Object at(int,int) -> at
    java.lang.Object set(int,int,java.lang.Object) -> set
    java.lang.Object[][] toArray(java.lang.Class) -> toArray
    void clear() -> clear
    void eraseAll() -> eraseAll
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object erase(java.lang.Object,java.lang.Object) -> erase
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Set cellSet() -> cellSet
    java.util.Map column(java.lang.Object) -> column
    com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    java.util.Map row(java.lang.Object) -> row
    com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableList access$100(com.google.common.collect.ArrayTable) -> a
    com.google.common.collect.ImmutableList access$200(com.google.common.collect.ArrayTable) -> b
    com.google.common.collect.ImmutableMap access$300(com.google.common.collect.ArrayTable) -> c
    com.google.common.collect.ImmutableMap access$400(com.google.common.collect.ArrayTable) -> d
com.google.common.collect.ArrayTable$ArrayMap -> gI:
    com.google.common.collect.ImmutableMap keyIndex -> a
    java.util.Set keySet() -> keySet
    java.lang.Object getKey(int) -> a
    java.lang.String getKeyRole() -> a
    java.lang.Object getValue(int) -> b
    java.lang.Object setValue(int,java.lang.Object) -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Set createEntrySet() -> b
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.ArrayTable$ArrayMap$1 -> gJ:
    com.google.common.collect.ArrayTable$ArrayMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ArrayTable$ArrayMap$1$1 -> gK:
    com.google.common.collect.ArrayTable$ArrayMap$1 this$1 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.ArrayTable$ArrayMap$1$1$1 -> gL:
    int val$index -> a
    com.google.common.collect.ArrayTable$ArrayMap$1$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ArrayTable$CellSet -> gM:
    com.google.common.collect.ArrayTable this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.ArrayTable$CellSet$1 -> gN:
    com.google.common.collect.ArrayTable$CellSet this$1 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.ArrayTable$CellSet$1$1 -> gO:
    int rowIndex -> a
    int columnIndex -> b
    int val$index -> c
    com.google.common.collect.ArrayTable$CellSet$1 this$2 -> d
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.ArrayTable$Column -> gP:
    int columnIndex -> a
    com.google.common.collect.ArrayTable this$0 -> b
    java.lang.String getKeyRole() -> a
    java.lang.Object getValue(int) -> b
    java.lang.Object setValue(int,java.lang.Object) -> a
com.google.common.collect.ArrayTable$ColumnMap -> gQ:
    com.google.common.collect.ArrayTable this$0 -> a
    java.lang.String getKeyRole() -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object setValue(int,java.lang.Object) -> a
    java.lang.Object getValue(int) -> b
com.google.common.collect.ArrayTable$Row -> gR:
    int rowIndex -> a
    com.google.common.collect.ArrayTable this$0 -> b
    java.lang.String getKeyRole() -> a
    java.lang.Object getValue(int) -> b
    java.lang.Object setValue(int,java.lang.Object) -> a
com.google.common.collect.ArrayTable$RowMap -> gS:
    com.google.common.collect.ArrayTable this$0 -> a
    java.lang.String getKeyRole() -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object setValue(int,java.lang.Object) -> a
    java.lang.Object getValue(int) -> b
com.google.common.collect.ArrayTable$Values -> gT:
    com.google.common.collect.ArrayTable this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.ArrayTable$Values$1 -> gU:
    com.google.common.collect.ArrayTable$Values this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.BiMap -> com.google.common.collect.BiMap:
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    void putAll(java.util.Map) -> putAll
    java.util.Set values() -> values
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.BoundType -> com.google.common.collect.BoundType:
    com.google.common.collect.BoundType OPEN -> OPEN
    com.google.common.collect.BoundType CLOSED -> CLOSED
    com.google.common.collect.BoundType[] $VALUES -> a
    com.google.common.collect.BoundType[] values() -> values
    com.google.common.collect.BoundType valueOf(java.lang.String) -> valueOf
    com.google.common.collect.BoundType forBoolean(boolean) -> a
com.google.common.collect.BoundType$1 -> gV:
com.google.common.collect.BoundType$2 -> gW:
com.google.common.collect.ByFunctionOrdering -> gX:
    com.google.common.base.Function function -> a
    com.google.common.collect.Ordering ordering -> b
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.CartesianList -> gY:
    com.google.common.collect.ImmutableList axes -> a
    int[] axesSizeProduct -> b
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableList access$000(com.google.common.collect.CartesianList) -> a
    int access$100(com.google.common.collect.CartesianList,int,int) -> a
com.google.common.collect.CartesianList$1 -> gZ:
    int val$index -> a
    com.google.common.collect.CartesianList this$0 -> b
    int size() -> size
    java.lang.Object get(int) -> get
    boolean isPartialView() -> a
com.google.common.collect.ClassToInstanceMap -> com.google.common.collect.ClassToInstanceMap:
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
com.google.common.collect.Collections2 -> com.google.common.collect.Collections2:
    com.google.common.base.Joiner STANDARD_JOINER -> a
    java.util.Collection filter(java.util.Collection,com.google.common.base.Predicate) -> filter
    boolean safeContains(java.util.Collection,java.lang.Object) -> a
    boolean safeRemove(java.util.Collection,java.lang.Object) -> b
    java.util.Collection transform(java.util.Collection,com.google.common.base.Function) -> transform
    boolean containsAllImpl(java.util.Collection,java.util.Collection) -> a
    java.lang.String toStringImpl(java.util.Collection) -> a
    java.lang.StringBuilder newStringBuilderForCollection(int) -> a
    java.util.Collection cast(java.lang.Iterable) -> a
    java.util.Collection orderedPermutations(java.lang.Iterable) -> orderedPermutations
    java.util.Collection orderedPermutations(java.lang.Iterable,java.util.Comparator) -> orderedPermutations
    java.util.Collection permutations(java.util.Collection) -> permutations
    boolean access$000(long) -> a
    boolean access$100(java.util.List,java.util.List) -> a
com.google.common.collect.Collections2$1 -> ha:
    java.util.Collection val$collection -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$FilteredCollection -> hb:
    java.util.Collection unfiltered -> a
    com.google.common.base.Predicate predicate -> b
    com.google.common.collect.Collections2$FilteredCollection createCombined(com.google.common.base.Predicate) -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
com.google.common.collect.Collections2$FilteredCollection$1 -> hc:
    java.util.Collection val$collection -> a
    com.google.common.collect.Collections2$FilteredCollection this$0 -> b
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$FilteredCollection$2 -> hd:
    java.util.Collection val$collection -> a
    com.google.common.collect.Collections2$FilteredCollection this$0 -> b
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Collections2$OrderedPermutationCollection -> he:
    com.google.common.collect.ImmutableList inputList -> a
    java.util.Comparator comparator -> b
    int size -> c
    int calculateSize(java.util.List,java.util.Comparator) -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.lang.String toString() -> toString
com.google.common.collect.Collections2$OrderedPermutationIterator -> hf:
    java.util.List nextPermutation -> a
    java.util.Comparator comparator -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Collections2$PermutationCollection -> hg:
    com.google.common.collect.ImmutableList inputList -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.lang.String toString() -> toString
com.google.common.collect.Collections2$PermutationIterator -> hh:
    java.util.List list -> a
    int[] c -> b
    int[] o -> c
    int j -> d
    void switchDirection() -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Collections2$TransformedCollection -> hi:
    java.util.Collection fromCollection -> a
    com.google.common.base.Function function -> b
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.ComparatorOrdering -> hj:
    java.util.Comparator comparator -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    int binarySearch(java.util.List,java.lang.Object) -> binarySearch
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ComparisonChain -> com.google.common.collect.ComparisonChain:
    com.google.common.collect.ComparisonChain ACTIVE -> a
    com.google.common.collect.ComparisonChain LESS -> b
    com.google.common.collect.ComparisonChain GREATER -> c
    com.google.common.collect.ComparisonChain start() -> start
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    com.google.common.collect.ComparisonChain compare(boolean,boolean) -> compare
    int result() -> result
com.google.common.collect.ComparisonChain$1 -> hk:
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    com.google.common.collect.ComparisonChain classify(int) -> a
    int result() -> result
com.google.common.collect.ComparisonChain$InactiveComparisonChain -> hl:
    int result -> d
    com.google.common.collect.ComparisonChain compare(java.lang.Comparable,java.lang.Comparable) -> compare
    com.google.common.collect.ComparisonChain compare(java.lang.Object,java.lang.Object,java.util.Comparator) -> compare
    com.google.common.collect.ComparisonChain compare(int,int) -> compare
    com.google.common.collect.ComparisonChain compare(long,long) -> compare
    com.google.common.collect.ComparisonChain compare(float,float) -> compare
    com.google.common.collect.ComparisonChain compare(double,double) -> compare
    com.google.common.collect.ComparisonChain compareTrueFirst(boolean,boolean) -> compareTrueFirst
    com.google.common.collect.ComparisonChain compareFalseFirst(boolean,boolean) -> compareFalseFirst
    int result() -> result
com.google.common.collect.CompoundOrdering -> hm:
    com.google.common.collect.ImmutableList comparators -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ComputationException -> com.google.common.collect.ComputationException:
    long serialVersionUID -> serialVersionUID
com.google.common.collect.ComputingConcurrentHashMap -> hn:
    com.google.common.base.Function computingFunction -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> a
    com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment segmentFor(int) -> b
    java.lang.Object getOrCompute(java.lang.Object) -> a
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> a
com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference -> ho:
    java.lang.Throwable t -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.ComputingConcurrentHashMap$ComputedReference -> hp:
    java.lang.Object value -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment -> hq:
    java.lang.Object getOrCompute(java.lang.Object,int,com.google.common.base.Function) -> a
    java.lang.Object compute(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference) -> a
com.google.common.collect.ComputingConcurrentHashMap$ComputingSerializationProxy -> hr:
    com.google.common.base.Function computingFunction -> a
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference -> hs:
    com.google.common.base.Function computingFunction -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference computedReference -> b
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    java.lang.Object compute$1fb5a060(java.lang.Object) -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> b
com.google.common.collect.ConcurrentHashMultiset -> com.google.common.collect.ConcurrentHashMultiset:
    java.util.concurrent.ConcurrentMap countMap -> a
    com.google.common.collect.ConcurrentHashMultiset$EntrySet entrySet -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ConcurrentHashMultiset create() -> create
    com.google.common.collect.ConcurrentHashMultiset create(java.lang.Iterable) -> create
    com.google.common.collect.ConcurrentHashMultiset create(com.google.common.collect.GenericMapMaker) -> create
    int count(java.lang.Object) -> count
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.List snapshot() -> e
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    boolean removeExactly(java.lang.Object,int) -> removeExactly
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set createElementSet() -> c
    java.util.Set entrySet() -> entrySet
    int distinctElements() -> b
    boolean isEmpty() -> isEmpty
    java.util.Iterator entryIterator() -> a
    void clear() -> clear
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.util.concurrent.ConcurrentMap access$100(com.google.common.collect.ConcurrentHashMultiset) -> a
com.google.common.collect.ConcurrentHashMultiset$1 -> ht:
    java.util.Set val$delegate -> a
    com.google.common.collect.ConcurrentHashMultiset this$0 -> b
    java.util.Set delegate() -> delegate
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ConcurrentHashMultiset$2 -> hu:
    java.util.Iterator mapEntries -> b
    com.google.common.collect.ConcurrentHashMultiset this$0 -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.ConcurrentHashMultiset$3 -> hv:
    com.google.common.collect.Multiset$Entry last -> c
    java.util.Iterator val$readOnlyIterator -> a
    com.google.common.collect.ConcurrentHashMultiset this$0 -> b
    java.util.Iterator delegate() -> delegate
    void remove() -> remove
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.ConcurrentHashMultiset$EntrySet -> hw:
    com.google.common.collect.ConcurrentHashMultiset this$0 -> b
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.List snapshot() -> b
    com.google.common.collect.Multiset multiset() -> a
com.google.common.collect.ConcurrentHashMultiset$FieldSettersHolder -> hx:
    com.google.common.collect.Serialization$FieldSetter COUNT_MAP_FIELD_SETTER -> a
com.google.common.collect.Constraint -> com.google.common.collect.Constraint:
    java.lang.Object checkElement(java.lang.Object) -> checkElement
    java.lang.String toString() -> toString
com.google.common.collect.Constraints -> com.google.common.collect.Constraints:
    com.google.common.collect.Constraint notNull() -> notNull
    java.util.Collection constrainedCollection(java.util.Collection,com.google.common.collect.Constraint) -> constrainedCollection
    java.util.Set constrainedSet(java.util.Set,com.google.common.collect.Constraint) -> constrainedSet
    java.util.SortedSet constrainedSortedSet(java.util.SortedSet,com.google.common.collect.Constraint) -> constrainedSortedSet
    java.util.List constrainedList(java.util.List,com.google.common.collect.Constraint) -> constrainedList
    java.util.Collection constrainedTypePreservingCollection(java.util.Collection,com.google.common.collect.Constraint) -> a
    com.google.common.collect.Multiset constrainedMultiset(com.google.common.collect.Multiset,com.google.common.collect.Constraint) -> constrainedMultiset
    java.util.Collection access$000(java.util.Collection,com.google.common.collect.Constraint) -> b
    java.util.ListIterator access$100(java.util.ListIterator,com.google.common.collect.Constraint) -> a
com.google.common.collect.Constraints$ConstrainedCollection -> hy:
    java.util.Collection delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.Collection delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedList -> hz:
    java.util.List delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.List delegate() -> delegate
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedListIterator -> hA:
    java.util.ListIterator delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.ListIterator delegate() -> delegate
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.util.Iterator delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedMultiset -> hB:
    com.google.common.collect.Multiset delegate -> a
    com.google.common.collect.Constraint constraint -> b
    com.google.common.collect.Multiset delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    int add(java.lang.Object,int) -> add
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedRandomAccessList -> hC:
com.google.common.collect.Constraints$ConstrainedSet -> hD:
    java.util.Set delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.Set delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$ConstrainedSortedSet -> hE:
    java.util.SortedSet delegate -> a
    com.google.common.collect.Constraint constraint -> b
    java.util.SortedSet delegate() -> delegate
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Constraints$NotNullConstraint -> hF:
    com.google.common.collect.Constraints$NotNullConstraint INSTANCE -> a
    com.google.common.collect.Constraints$NotNullConstraint[] $VALUES -> b
    com.google.common.collect.Constraints$NotNullConstraint[] values() -> values
    com.google.common.collect.Constraints$NotNullConstraint valueOf(java.lang.String) -> valueOf
    java.lang.Object checkElement(java.lang.Object) -> checkElement
    java.lang.String toString() -> toString
com.google.common.collect.ContiguousSet -> com.google.common.collect.ContiguousSet:
    com.google.common.collect.DiscreteDomain domain -> a
    com.google.common.collect.ContiguousSet create(com.google.common.collect.Range,com.google.common.collect.DiscreteDomain) -> create
    com.google.common.collect.ContiguousSet headSet(java.lang.Comparable) -> headSet
    com.google.common.collect.ContiguousSet headSet(java.lang.Comparable,boolean) -> headSet
    com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,java.lang.Comparable) -> subSet
    com.google.common.collect.ContiguousSet subSet(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> subSet
    com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable) -> tailSet
    com.google.common.collect.ContiguousSet tailSet(java.lang.Comparable,boolean) -> tailSet
    com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> b
    com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    com.google.common.collect.Range range() -> range
    com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    java.lang.String toString() -> toString
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
com.google.common.collect.Count -> hG:
    int value -> a
    int get() -> a
    int addAndGet(int) -> a
    int getAndSet(int) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.collect.Cut -> hH:
    java.lang.Comparable endpoint -> a
    long serialVersionUID -> serialVersionUID
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> c
    int compareTo(com.google.common.collect.Cut) -> a
    java.lang.Comparable endpoint() -> c
    boolean equals(java.lang.Object) -> equals
    com.google.common.collect.Cut belowAll() -> d
    com.google.common.collect.Cut aboveAll() -> e
    com.google.common.collect.Cut belowValue(java.lang.Comparable) -> b
    com.google.common.collect.Cut aboveValue(java.lang.Comparable) -> c
    int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.Cut$1 -> hI:
    int[] $SwitchMap$com$google$common$collect$BoundType -> a
com.google.common.collect.Cut$AboveAll -> hJ:
    com.google.common.collect.Cut$AboveAll INSTANCE -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Comparable endpoint() -> c
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    int compareTo(com.google.common.collect.Cut) -> a
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    int compareTo(java.lang.Object) -> compareTo
    com.google.common.collect.Cut$AboveAll access$100() -> f
com.google.common.collect.Cut$AboveValue -> hK:
    long serialVersionUID -> serialVersionUID
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> c
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.Cut$BelowAll -> hL:
    com.google.common.collect.Cut$BelowAll INSTANCE -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Comparable endpoint() -> c
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    com.google.common.collect.Cut canonical(com.google.common.collect.DiscreteDomain) -> c
    int compareTo(com.google.common.collect.Cut) -> a
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    int compareTo(java.lang.Object) -> compareTo
    com.google.common.collect.Cut$BelowAll access$000() -> f
com.google.common.collect.Cut$BelowValue -> hM:
    long serialVersionUID -> serialVersionUID
    boolean isLessThan(java.lang.Comparable) -> a
    com.google.common.collect.BoundType typeAsLowerBound() -> a
    com.google.common.collect.BoundType typeAsUpperBound() -> b
    com.google.common.collect.Cut withLowerBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> a
    com.google.common.collect.Cut withUpperBoundType(com.google.common.collect.BoundType,com.google.common.collect.DiscreteDomain) -> b
    void describeAsLowerBound(java.lang.StringBuilder) -> a
    void describeAsUpperBound(java.lang.StringBuilder) -> b
    java.lang.Comparable leastValueAbove(com.google.common.collect.DiscreteDomain) -> a
    java.lang.Comparable greatestValueBelow(com.google.common.collect.DiscreteDomain) -> b
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.google.common.collect.DescendingImmutableSortedMultiset -> hN:
    com.google.common.collect.ImmutableSortedMultiset forward -> b
    int count(java.lang.Object) -> count
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    int size() -> size
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    com.google.common.collect.ImmutableSet createEntrySet() -> b_
    com.google.common.collect.ImmutableSortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    boolean isPartialView() -> a
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    java.util.NavigableSet elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
    java.util.Set elementSet() -> elementSet
com.google.common.collect.DescendingImmutableSortedMultiset$1 -> hO:
    com.google.common.collect.ImmutableSet val$forwardEntrySet -> a
    com.google.common.collect.DescendingImmutableSortedMultiset this$0 -> b
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.DescendingImmutableSortedSet -> hP:
    com.google.common.collect.ImmutableSortedSet forward -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> c
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    int indexOf(java.lang.Object) -> a
    boolean isPartialView() -> a
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator iterator() -> iterator
com.google.common.collect.DescendingMultiset -> hQ:
    java.util.Comparator comparator -> a
    java.util.NavigableSet elementSet -> b
    java.util.Set entrySet -> c
    com.google.common.collect.SortedMultiset forwardMultiset() -> a
    java.util.Comparator comparator() -> comparator
    java.util.NavigableSet elementSet() -> elementSet
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.Multiset delegate() -> delegate
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    java.util.Iterator entryIterator() -> b
    java.util.Set entrySet() -> entrySet
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    java.util.Set elementSet() -> elementSet
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.DescendingMultiset$1 -> hR:
    com.google.common.collect.DescendingMultiset this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.DiscreteDomain -> com.google.common.collect.DiscreteDomain:
    com.google.common.collect.DiscreteDomain integers() -> integers
    com.google.common.collect.DiscreteDomain longs() -> longs
    java.lang.Comparable next(java.lang.Comparable) -> next
    java.lang.Comparable previous(java.lang.Comparable) -> previous
    long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    java.lang.Comparable minValue() -> minValue
    java.lang.Comparable maxValue() -> maxValue
com.google.common.collect.DiscreteDomain$IntegerDomain -> hS:
    com.google.common.collect.DiscreteDomain$IntegerDomain INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    java.lang.Comparable maxValue() -> maxValue
    java.lang.Comparable minValue() -> minValue
    long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    java.lang.Comparable previous(java.lang.Comparable) -> previous
    java.lang.Comparable next(java.lang.Comparable) -> next
    com.google.common.collect.DiscreteDomain$IntegerDomain access$000() -> a
com.google.common.collect.DiscreteDomain$LongDomain -> hT:
    com.google.common.collect.DiscreteDomain$LongDomain INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    java.lang.Comparable maxValue() -> maxValue
    java.lang.Comparable minValue() -> minValue
    long distance(java.lang.Comparable,java.lang.Comparable) -> distance
    java.lang.Comparable previous(java.lang.Comparable) -> previous
    java.lang.Comparable next(java.lang.Comparable) -> next
    com.google.common.collect.DiscreteDomain$LongDomain access$100() -> a
com.google.common.collect.DiscreteDomains -> com.google.common.collect.DiscreteDomains:
    com.google.common.collect.DiscreteDomain integers() -> integers
    com.google.common.collect.DiscreteDomain longs() -> longs
com.google.common.collect.EmptyContiguousSet -> hU:
    int size() -> size
    com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    com.google.common.collect.Range range() -> range
    com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> b
    int indexOf(java.lang.Object) -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    boolean isPartialView() -> a
    boolean isEmpty() -> isEmpty
    com.google.common.collect.ImmutableList asList() -> asList
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> c
    java.lang.Object last() -> last
    java.lang.Object first() -> first
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyContiguousSet$SerializedForm -> hV:
    com.google.common.collect.DiscreteDomain domain -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableBiMap -> hW:
    com.google.common.collect.EmptyImmutableBiMap INSTANCE -> a
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    com.google.common.collect.ImmutableSet keySet() -> keySet
    boolean isPartialView() -> b
    java.lang.Object readResolve() -> readResolve
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
com.google.common.collect.EmptyImmutableList -> hX:
    com.google.common.collect.EmptyImmutableList INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> a
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    com.google.common.collect.ImmutableList reverse() -> reverse
    com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableListMultimap -> hY:
    com.google.common.collect.EmptyImmutableListMultimap INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableMultiset -> hZ:
    com.google.common.collect.EmptyImmutableMultiset INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    int count(java.lang.Object) -> count
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> b_
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    com.google.common.collect.ImmutableList asList() -> asList
    java.lang.Object readResolve() -> readResolve
    java.util.Iterator iterator() -> iterator
    java.util.Set entrySet() -> entrySet
    java.util.Set elementSet() -> elementSet
com.google.common.collect.EmptyImmutableSet -> ia:
    com.google.common.collect.EmptyImmutableSet INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    com.google.common.collect.ImmutableList asList() -> asList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> a_
    java.lang.String toString() -> toString
    java.lang.Object readResolve() -> readResolve
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableSetMultimap -> ib:
    com.google.common.collect.EmptyImmutableSetMultimap INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.EmptyImmutableSortedMap -> ic:
    com.google.common.collect.ImmutableSortedSet keySet -> a
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.common.collect.ImmutableCollection values() -> values
    java.lang.String toString() -> toString
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    com.google.common.collect.ImmutableSortedMap createDescendingMap() -> c
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.ImmutableSet keySet() -> keySet
com.google.common.collect.EmptyImmutableSortedMultiset -> id:
    com.google.common.collect.ImmutableSortedSet elementSet -> b
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    int count(java.lang.Object) -> count
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    int size() -> size
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> b_
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isPartialView() -> a
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    com.google.common.collect.ImmutableList asList() -> asList
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    java.util.Iterator iterator() -> iterator
    java.util.NavigableSet elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    java.util.Set elementSet() -> elementSet
com.google.common.collect.EmptyImmutableSortedSet -> ie:
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    boolean isPartialView() -> a
    com.google.common.collect.ImmutableList asList() -> asList
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    int indexOf(java.lang.Object) -> a
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> c
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.EmptyImmutableTable -> if:
    com.google.common.collect.EmptyImmutableTable INSTANCE -> a
    int size() -> size
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.common.collect.ImmutableSet cellSet() -> cellSet
    com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    com.google.common.collect.ImmutableMap row(java.lang.Object) -> row
    com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    java.lang.String toString() -> toString
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set cellSet() -> cellSet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
com.google.common.collect.EnumBiMap -> com.google.common.collect.EnumBiMap:
    java.lang.Class keyType -> b
    java.lang.Class valueType -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumBiMap create(java.lang.Class,java.lang.Class) -> create
    com.google.common.collect.EnumBiMap create(java.util.Map) -> create
    java.lang.Class inferKeyType(java.util.Map) -> a
    java.lang.Class keyType() -> keyType
    java.lang.Class valueType() -> valueType
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set entrySet() -> entrySet
    java.util.Set values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.BiMap inverse() -> inverse
    void clear() -> clear
    void putAll(java.util.Map) -> putAll
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object checkValue(java.lang.Object) -> b
    java.lang.Object checkKey(java.lang.Object) -> a
com.google.common.collect.EnumHashBiMap -> com.google.common.collect.EnumHashBiMap:
    java.lang.Class keyType -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumHashBiMap create(java.lang.Class) -> create
    com.google.common.collect.EnumHashBiMap create(java.util.Map) -> create
    java.lang.Object put(java.lang.Enum,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Enum,java.lang.Object) -> forcePut
    java.lang.Class keyType() -> keyType
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set entrySet() -> entrySet
    java.util.Set values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.BiMap inverse() -> inverse
    void clear() -> clear
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object checkKey(java.lang.Object) -> a
com.google.common.collect.EnumMultiset -> com.google.common.collect.EnumMultiset:
    java.lang.Class type -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.EnumMultiset create(java.lang.Class) -> create
    com.google.common.collect.EnumMultiset create(java.lang.Iterable) -> create
    com.google.common.collect.EnumMultiset create(java.lang.Iterable,java.lang.Class) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int remove(java.lang.Object,int) -> remove
    int count(java.lang.Object) -> count
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
com.google.common.collect.ExplicitOrdering -> ig:
    com.google.common.collect.ImmutableMap rankMap -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    int rank(java.lang.Object) -> a
    com.google.common.collect.ImmutableMap buildRankMap(java.util.List) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.FilteredEntryMultimap -> ih:
    com.google.common.base.Predicate predicate -> a
    com.google.common.base.Predicate entryPredicate() -> a
    int size() -> size
    java.util.Collection filterCollection(java.util.Collection,com.google.common.base.Predicate) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection createEntries() -> h
    java.util.Iterator entryIterator() -> f
    java.util.Map createAsMap() -> g
    java.util.Set keySet() -> keySet
    boolean removeIf(com.google.common.base.Predicate) -> a
    com.google.common.collect.Multiset createKeys() -> i
    boolean access$000(com.google.common.collect.FilteredEntryMultimap,java.lang.Object,java.lang.Object) -> a
com.google.common.collect.FilteredEntryMultimap$AsMap -> ii:
    java.util.Set keySet -> b
    com.google.common.collect.FilteredEntryMultimap this$0 -> a
    boolean containsKey(java.lang.Object) -> containsKey
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> b
    java.util.Collection remove(java.lang.Object) -> a
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.FilteredEntryMultimap$AsMap$1 -> ij:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> a
    java.util.Map map() -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.FilteredEntryMultimap$AsMap$2 -> ik:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
com.google.common.collect.FilteredEntryMultimap$AsMap$2$1 -> il:
    java.util.Iterator backingIterator -> a
    com.google.common.collect.FilteredEntryMultimap$AsMap$2 this$2 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.FilteredEntryMultimap$AsMap$3 -> im:
    com.google.common.collect.FilteredEntryMultimap$AsMap this$1 -> a
    java.util.Map map() -> a
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredEntryMultimap$Keys -> in:
    com.google.common.collect.FilteredEntryMultimap this$0 -> a
    int remove(java.lang.Object,int) -> remove
    java.util.Set entrySet() -> entrySet
com.google.common.collect.FilteredEntryMultimap$Keys$1 -> io:
    com.google.common.collect.FilteredEntryMultimap$Keys this$1 -> a
    com.google.common.collect.Multiset multiset() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean removeIf(com.google.common.base.Predicate) -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredEntryMultimap$Keys$1$1 -> ip:
    com.google.common.base.Predicate val$predicate -> a
    com.google.common.collect.FilteredEntryMultimap$Keys$1 this$2 -> b
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.FilteredEntryMultimap$ValuePredicate -> iq:
    java.lang.Object key -> b
    com.google.common.collect.FilteredEntryMultimap this$0 -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.FilteredKeyMultimap -> ir:
    com.google.common.base.Predicate keyPredicate -> a
    com.google.common.base.Predicate entryPredicate() -> a
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Set createKeySet() -> e
    java.util.Collection get(java.lang.Object) -> get
    java.util.Iterator entryIterator() -> f
    java.util.Collection createEntries() -> h
    java.util.Map createAsMap() -> g
    com.google.common.collect.Multiset createKeys() -> i
com.google.common.collect.FilteredKeyMultimap$1 -> is:
    com.google.common.collect.FilteredKeyMultimap this$0 -> a
    com.google.common.collect.Multimap multimap() -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.FilteredKeyMultimap$AddRejectingList -> it:
    java.lang.Object key -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.util.List delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.FilteredKeyMultimap$AddRejectingSet -> iu:
    java.lang.Object key -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.FilteredMultimap -> iv:
    com.google.common.collect.Multimap unfiltered -> b
    com.google.common.base.Predicate entryPredicate() -> a
com.google.common.collect.FluentIterable -> com.google.common.collect.FluentIterable:
    java.lang.Iterable iterable -> a
    com.google.common.collect.FluentIterable from(java.lang.Iterable) -> from
    com.google.common.collect.FluentIterable from(com.google.common.collect.FluentIterable) -> from
    java.lang.String toString() -> toString
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.FluentIterable cycle() -> cycle
    com.google.common.collect.FluentIterable filter(com.google.common.base.Predicate) -> filter
    com.google.common.collect.FluentIterable filter(java.lang.Class) -> filter
    boolean anyMatch(com.google.common.base.Predicate) -> anyMatch
    boolean allMatch(com.google.common.base.Predicate) -> allMatch
    com.google.common.base.Optional firstMatch(com.google.common.base.Predicate) -> firstMatch
    com.google.common.collect.FluentIterable transform(com.google.common.base.Function) -> transform
    com.google.common.collect.FluentIterable transformAndConcat(com.google.common.base.Function) -> transformAndConcat
    com.google.common.base.Optional first() -> first
    com.google.common.base.Optional last() -> last
    com.google.common.collect.FluentIterable skip(int) -> skip
    com.google.common.collect.FluentIterable limit(int) -> limit
    boolean isEmpty() -> isEmpty
    com.google.common.collect.ImmutableList toList() -> toList
    com.google.common.collect.ImmutableList toSortedList(java.util.Comparator) -> toSortedList
    com.google.common.collect.ImmutableSet toSet() -> toSet
    com.google.common.collect.ImmutableSortedSet toSortedSet(java.util.Comparator) -> toSortedSet
    com.google.common.collect.ImmutableMap toMap(com.google.common.base.Function) -> toMap
    com.google.common.collect.ImmutableListMultimap index(com.google.common.base.Function) -> index
    com.google.common.collect.ImmutableMap uniqueIndex(com.google.common.base.Function) -> uniqueIndex
    com.google.common.collect.ImmutableList toImmutableList() -> toImmutableList
    com.google.common.collect.ImmutableList toSortedImmutableList(java.util.Comparator) -> toSortedImmutableList
    com.google.common.collect.ImmutableSet toImmutableSet() -> toImmutableSet
    com.google.common.collect.ImmutableSortedSet toImmutableSortedSet(java.util.Comparator) -> toImmutableSortedSet
    java.lang.Object[] toArray(java.lang.Class) -> toArray
    java.util.Collection copyInto(java.util.Collection) -> copyInto
    java.lang.Object get(int) -> get
com.google.common.collect.FluentIterable$1 -> iw:
    java.lang.Iterable val$iterable -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ForwardingBlockingDeque -> com.google.common.collect.ForwardingBlockingDeque:
    java.util.concurrent.BlockingDeque delegate() -> delegate
    int remainingCapacity() -> remainingCapacity
    void putFirst(java.lang.Object) -> putFirst
    void putLast(java.lang.Object) -> putLast
    boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    java.lang.Object takeFirst() -> takeFirst
    java.lang.Object takeLast() -> takeLast
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Deque delegate() -> delegate
    java.util.Queue delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingCollection -> com.google.common.collect.ForwardingCollection:
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean removeAll(java.util.Collection) -> removeAll
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean standardContains(java.lang.Object) -> standardContains
    boolean standardContainsAll(java.util.Collection) -> standardContainsAll
    boolean standardAddAll(java.util.Collection) -> standardAddAll
    boolean standardRemove(java.lang.Object) -> standardRemove
    boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    void standardClear() -> standardClear
    boolean standardIsEmpty() -> standardIsEmpty
    java.lang.String standardToString() -> standardToString
    java.lang.Object[] standardToArray() -> standardToArray
    java.lang.Object[] standardToArray(java.lang.Object[]) -> standardToArray
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingConcurrentMap -> com.google.common.collect.ForwardingConcurrentMap:
    java.util.concurrent.ConcurrentMap delegate() -> delegate
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingDeque -> com.google.common.collect.ForwardingDeque:
    java.util.Deque delegate() -> delegate
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.util.Iterator descendingIterator() -> descendingIterator
    java.lang.Object getFirst() -> getFirst
    java.lang.Object getLast() -> getLast
    boolean offerFirst(java.lang.Object) -> offerFirst
    boolean offerLast(java.lang.Object) -> offerLast
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object peekLast() -> peekLast
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object pop() -> pop
    void push(java.lang.Object) -> push
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object removeLast() -> removeLast
    boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    java.util.Queue delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingIterator -> com.google.common.collect.ForwardingIterator:
    java.util.Iterator delegate() -> delegate
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingList -> com.google.common.collect.ForwardingList:
    java.util.List delegate() -> delegate
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardAdd(java.lang.Object) -> standardAdd
    boolean standardAddAll(int,java.lang.Iterable) -> standardAddAll
    int standardIndexOf(java.lang.Object) -> standardIndexOf
    int standardLastIndexOf(java.lang.Object) -> standardLastIndexOf
    java.util.Iterator standardIterator() -> standardIterator
    java.util.ListIterator standardListIterator() -> standardListIterator
    java.util.ListIterator standardListIterator(int) -> standardListIterator
    java.util.List standardSubList(int,int) -> standardSubList
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingListIterator -> com.google.common.collect.ForwardingListIterator:
    java.util.ListIterator delegate() -> delegate
    void add(java.lang.Object) -> add
    boolean hasPrevious() -> hasPrevious
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    java.util.Iterator delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingListMultimap -> com.google.common.collect.ForwardingListMultimap:
    com.google.common.collect.ListMultimap delegate() -> delegate
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMap -> com.google.common.collect.ForwardingMap:
    java.util.Map delegate() -> delegate
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void standardPutAll(java.util.Map) -> standardPutAll
    java.lang.Object standardRemove(java.lang.Object) -> standardRemove
    void standardClear() -> standardClear
    boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    boolean standardContainsValue(java.lang.Object) -> standardContainsValue
    boolean standardIsEmpty() -> standardIsEmpty
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMap$StandardEntrySet -> com.google.common.collect.ForwardingMap$StandardEntrySet:
    com.google.common.collect.ForwardingMap this$0 -> a
com.google.common.collect.ForwardingMap$StandardKeySet -> com.google.common.collect.ForwardingMap$StandardKeySet:
    com.google.common.collect.ForwardingMap this$0 -> a
    java.util.Map map() -> a
com.google.common.collect.ForwardingMap$StandardValues -> com.google.common.collect.ForwardingMap$StandardValues:
    com.google.common.collect.ForwardingMap this$0 -> a
    java.util.Map map() -> a
com.google.common.collect.ForwardingMapEntry -> com.google.common.collect.ForwardingMapEntry:
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultimap -> com.google.common.collect.ForwardingMultimap:
    com.google.common.collect.Multimap delegate() -> delegate
    java.util.Map asMap() -> asMap
    void clear() -> clear
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultiset -> com.google.common.collect.ForwardingMultiset:
    com.google.common.collect.Multiset delegate() -> delegate
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean standardContains(java.lang.Object) -> standardContains
    void standardClear() -> standardClear
    int standardCount(java.lang.Object) -> standardCount
    boolean standardAdd(java.lang.Object) -> standardAdd
    boolean standardAddAll(java.util.Collection) -> standardAddAll
    boolean standardRemove(java.lang.Object) -> standardRemove
    boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    boolean standardRetainAll(java.util.Collection) -> standardRetainAll
    int standardSetCount(java.lang.Object,int) -> standardSetCount
    boolean standardSetCount(java.lang.Object,int,int) -> standardSetCount
    java.util.Iterator standardIterator() -> standardIterator
    int standardSize() -> standardSize
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.lang.String standardToString() -> standardToString
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingMultiset$StandardElementSet -> com.google.common.collect.ForwardingMultiset$StandardElementSet:
    com.google.common.collect.ForwardingMultiset this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
com.google.common.collect.ForwardingNavigableMap -> com.google.common.collect.ForwardingNavigableMap:
    java.util.NavigableMap delegate() -> delegate
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.util.Map$Entry standardLowerEntry(java.lang.Object) -> standardLowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.lang.Object standardLowerKey(java.lang.Object) -> standardLowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.util.Map$Entry standardFloorEntry(java.lang.Object) -> standardFloorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.lang.Object standardFloorKey(java.lang.Object) -> standardFloorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.util.Map$Entry standardCeilingEntry(java.lang.Object) -> standardCeilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.lang.Object standardCeilingKey(java.lang.Object) -> standardCeilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.util.Map$Entry standardHigherEntry(java.lang.Object) -> standardHigherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.lang.Object standardHigherKey(java.lang.Object) -> standardHigherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry standardFirstEntry() -> standardFirstEntry
    java.lang.Object standardFirstKey() -> standardFirstKey
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry standardLastEntry() -> standardLastEntry
    java.lang.Object standardLastKey() -> standardLastKey
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry standardPollFirstEntry() -> standardPollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.Map$Entry standardPollLastEntry() -> standardPollLastEntry
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableSet standardDescendingKeySet() -> standardDescendingKeySet
    java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedMap standardHeadMap(java.lang.Object) -> standardHeadMap
    java.util.SortedMap standardTailMap(java.lang.Object) -> standardTailMap
    java.util.SortedMap delegate() -> delegate
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap -> com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap:
    com.google.common.collect.ForwardingNavigableMap this$0 -> a
    java.util.NavigableMap forward() -> a
    java.util.Iterator entryIterator() -> entryIterator
com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap$1 -> ix:
    java.util.Map$Entry toRemove -> b
    java.util.Map$Entry nextOrNull -> c
    com.google.common.collect.ForwardingNavigableMap$StandardDescendingMap this$1 -> a
    boolean hasNext() -> hasNext
    java.util.Map$Entry next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet -> com.google.common.collect.ForwardingNavigableMap$StandardNavigableKeySet:
    com.google.common.collect.ForwardingNavigableMap this$0 -> a
com.google.common.collect.ForwardingNavigableSet -> com.google.common.collect.ForwardingNavigableSet:
    java.util.NavigableSet delegate() -> delegate
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object standardLower(java.lang.Object) -> standardLower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object standardFloor(java.lang.Object) -> standardFloor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object standardCeiling(java.lang.Object) -> standardCeiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object standardHigher(java.lang.Object) -> standardHigher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object standardPollFirst() -> standardPollFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object standardPollLast() -> standardPollLast
    java.lang.Object standardFirst() -> standardFirst
    java.lang.Object standardLast() -> standardLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet standardSubSet(java.lang.Object,boolean,java.lang.Object,boolean) -> standardSubSet
    java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.SortedSet standardHeadSet(java.lang.Object) -> standardHeadSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet standardTailSet(java.lang.Object) -> standardTailSet
    java.util.SortedSet delegate() -> delegate
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet -> com.google.common.collect.ForwardingNavigableSet$StandardDescendingSet:
    com.google.common.collect.ForwardingNavigableSet this$0 -> a
com.google.common.collect.ForwardingObject -> com.google.common.collect.ForwardingObject:
    java.lang.Object delegate() -> delegate
    java.lang.String toString() -> toString
com.google.common.collect.ForwardingQueue -> com.google.common.collect.ForwardingQueue:
    java.util.Queue delegate() -> delegate
    boolean offer(java.lang.Object) -> offer
    java.lang.Object poll() -> poll
    java.lang.Object remove() -> remove
    java.lang.Object peek() -> peek
    java.lang.Object element() -> element
    boolean standardOffer(java.lang.Object) -> standardOffer
    java.lang.Object standardPeek() -> standardPeek
    java.lang.Object standardPoll() -> standardPoll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSet -> com.google.common.collect.ForwardingSet:
    java.util.Set delegate() -> delegate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean standardRemoveAll(java.util.Collection) -> standardRemoveAll
    boolean standardEquals(java.lang.Object) -> standardEquals
    int standardHashCode() -> standardHashCode
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSetMultimap -> com.google.common.collect.ForwardingSetMultimap:
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Set entries() -> entries
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedMap -> com.google.common.collect.ForwardingSortedMap:
    java.util.SortedMap delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    int unsafeCompare(java.lang.Object,java.lang.Object) -> a
    boolean standardContainsKey(java.lang.Object) -> standardContainsKey
    java.lang.Object standardRemove(java.lang.Object) -> standardRemove
    java.util.SortedMap standardSubMap(java.lang.Object,java.lang.Object) -> standardSubMap
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedSet -> com.google.common.collect.ForwardingSortedSet:
    java.util.SortedSet delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    int unsafeCompare(java.lang.Object,java.lang.Object) -> a
    boolean standardContains(java.lang.Object) -> standardContains
    boolean standardRemove(java.lang.Object) -> standardRemove
    java.util.SortedSet standardSubSet(java.lang.Object,java.lang.Object) -> standardSubSet
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingSortedSetMultimap -> com.google.common.collect.ForwardingSortedSetMultimap:
    com.google.common.collect.SortedSetMultimap delegate() -> delegate
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> delegate
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.ForwardingTable -> com.google.common.collect.ForwardingTable:
    com.google.common.collect.Table delegate() -> delegate
    java.util.Set cellSet() -> cellSet
    void clear() -> clear
    java.util.Map column(java.lang.Object) -> column
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.GeneralRange -> iy:
    java.util.Comparator comparator -> a
    boolean hasLowerBound -> b
    java.lang.Object lowerEndpoint -> c
    com.google.common.collect.BoundType lowerBoundType -> d
    boolean hasUpperBound -> e
    java.lang.Object upperEndpoint -> f
    com.google.common.collect.BoundType upperBoundType -> g
    com.google.common.collect.GeneralRange all(java.util.Comparator) -> a
    boolean tooLow(java.lang.Object) -> a
    boolean tooHigh(java.lang.Object) -> b
    boolean contains(java.lang.Object) -> c
    com.google.common.collect.GeneralRange intersect(com.google.common.collect.GeneralRange) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.GenericMapMaker -> com.google.common.collect.GenericMapMaker:
    com.google.common.collect.MapMaker$RemovalListener removalListener -> a
    com.google.common.collect.GenericMapMaker initialCapacity(int) -> initialCapacity
    com.google.common.collect.GenericMapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.common.collect.GenericMapMaker weakKeys() -> weakKeys
    com.google.common.collect.GenericMapMaker weakValues() -> weakValues
    com.google.common.collect.GenericMapMaker softValues() -> softValues
    com.google.common.collect.MapMaker$RemovalListener getRemovalListener() -> a
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function) -> makeComputingMap
com.google.common.collect.GenericMapMaker$NullListener -> iz:
    com.google.common.collect.GenericMapMaker$NullListener INSTANCE -> a
    com.google.common.collect.GenericMapMaker$NullListener[] $VALUES -> b
    com.google.common.collect.GenericMapMaker$NullListener[] values() -> values
    com.google.common.collect.GenericMapMaker$NullListener valueOf(java.lang.String) -> valueOf
com.google.common.collect.HashBasedTable -> com.google.common.collect.HashBasedTable:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashBasedTable create() -> create
    com.google.common.collect.HashBasedTable create(int,int) -> create
    com.google.common.collect.HashBasedTable create(com.google.common.collect.Table) -> create
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean equals(java.lang.Object) -> equals
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
    java.util.Set cellSet() -> cellSet
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    int size() -> size
    boolean isEmpty() -> isEmpty
com.google.common.collect.HashBasedTable$Factory -> iA:
    int expectedSize -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.collect.HashBiMap -> com.google.common.collect.HashBiMap:
    com.google.common.collect.HashBiMap$BiEntry[] hashTableKToV -> a
    com.google.common.collect.HashBiMap$BiEntry[] hashTableVToK -> b
    int size -> c
    int mask -> d
    int modCount -> e
    com.google.common.collect.BiMap inverse -> f
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashBiMap create() -> create
    com.google.common.collect.HashBiMap create(int) -> create
    com.google.common.collect.HashBiMap create(java.util.Map) -> create
    void init(int) -> a
    void delete(com.google.common.collect.HashBiMap$BiEntry) -> a
    void insert(com.google.common.collect.HashBiMap$BiEntry) -> b
    int hash(java.lang.Object) -> b
    com.google.common.collect.HashBiMap$BiEntry seekByKey(java.lang.Object,int) -> a
    com.google.common.collect.HashBiMap$BiEntry seekByValue(java.lang.Object,int) -> b
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object put(java.lang.Object,java.lang.Object,boolean) -> a
    void rehashIfNecessary() -> a
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    int size() -> size
    java.util.Set keySet() -> keySet
    java.util.Set values() -> values
    java.util.Set entrySet() -> entrySet
    com.google.common.collect.BiMap inverse() -> inverse
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection values() -> values
    int access$000(com.google.common.collect.HashBiMap) -> a
    com.google.common.collect.HashBiMap$BiEntry[] access$100(com.google.common.collect.HashBiMap) -> b
    void access$200(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$BiEntry) -> a
    int access$400(java.lang.Object) -> a
    com.google.common.collect.HashBiMap$BiEntry access$500(com.google.common.collect.HashBiMap,java.lang.Object,int) -> a
    com.google.common.collect.HashBiMap$BiEntry access$700(com.google.common.collect.HashBiMap,java.lang.Object,int) -> b
    void access$800(com.google.common.collect.HashBiMap,com.google.common.collect.HashBiMap$BiEntry) -> b
    int access$1000(com.google.common.collect.HashBiMap) -> c
    java.lang.Object access$1100(com.google.common.collect.HashBiMap,java.lang.Object,java.lang.Object,boolean) -> a
com.google.common.collect.HashBiMap$BiEntry -> iB:
    java.lang.Object key -> a
    int keyHash -> b
    java.lang.Object value -> c
    int valueHash -> d
    com.google.common.collect.HashBiMap$BiEntry nextInKToVBucket -> e
    com.google.common.collect.HashBiMap$BiEntry nextInVToKBucket -> f
com.google.common.collect.HashBiMap$EntrySet -> iC:
    com.google.common.collect.HashBiMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.HashBiMap$EntrySet$1 -> iD:
    com.google.common.collect.HashBiMap$EntrySet this$1 -> a
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashBiMap$EntrySet$1$MapEntry -> iE:
    com.google.common.collect.HashBiMap$BiEntry delegate -> a
    com.google.common.collect.HashBiMap$EntrySet$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.HashBiMap$Inverse -> iF:
    com.google.common.collect.HashBiMap this$0 -> a
    int size() -> size
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object remove(java.lang.Object) -> remove
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set keySet() -> keySet
    java.util.Set values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object writeReplace() -> writeReplace
    java.util.Collection values() -> values
com.google.common.collect.HashBiMap$Inverse$1 -> iG:
    com.google.common.collect.HashBiMap$Inverse this$1 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.HashBiMap$Inverse$1$1 -> iH:
    com.google.common.collect.HashBiMap$Inverse$1 this$2 -> a
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashBiMap$Inverse$1$1$InverseEntry -> iI:
    com.google.common.collect.HashBiMap$BiEntry delegate -> a
    com.google.common.collect.HashBiMap$Inverse$1$1 this$3 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.HashBiMap$Inverse$InverseKeySet -> iJ:
    com.google.common.collect.HashBiMap$Inverse this$1 -> a
    java.util.Map map() -> a
    boolean remove(java.lang.Object) -> remove
    java.util.Iterator iterator() -> iterator
com.google.common.collect.HashBiMap$Inverse$InverseKeySet$1 -> iK:
    com.google.common.collect.HashBiMap$Inverse$InverseKeySet this$2 -> a
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashBiMap$InverseSerializedForm -> iL:
    com.google.common.collect.HashBiMap bimap -> a
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.HashBiMap$Itr -> iM:
    int nextBucket -> b
    com.google.common.collect.HashBiMap$BiEntry next -> c
    com.google.common.collect.HashBiMap$BiEntry toRemove -> d
    int expectedModCount -> e
    com.google.common.collect.HashBiMap this$0 -> f
    void checkForConcurrentModification() -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashBiMap$KeySet -> iN:
    com.google.common.collect.HashBiMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.HashBiMap$KeySet$1 -> iO:
    com.google.common.collect.HashBiMap$KeySet this$1 -> a
    java.lang.Object output(com.google.common.collect.HashBiMap$BiEntry) -> a
com.google.common.collect.HashMultimap -> com.google.common.collect.HashMultimap:
    int expectedValuesPerKey -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashMultimap create() -> create
    com.google.common.collect.HashMultimap create(int,int) -> create
    com.google.common.collect.HashMultimap create(com.google.common.collect.Multimap) -> create
    java.util.Set createCollection() -> a
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set entries() -> entries
    java.util.Set get(java.lang.Object) -> get
    java.util.Collection values() -> values
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    java.util.Collection createCollection() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
com.google.common.collect.HashMultiset -> com.google.common.collect.HashMultiset:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.HashMultiset create() -> create
    com.google.common.collect.HashMultiset create(int) -> create
    com.google.common.collect.HashMultiset create(java.lang.Iterable) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int setCount(java.lang.Object,int) -> setCount
    int remove(java.lang.Object,int) -> remove
    int add(java.lang.Object,int) -> add
    int count(java.lang.Object) -> count
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
com.google.common.collect.Hashing -> iP:
    int MAX_TABLE_SIZE -> a
    int smear(int) -> a
    int closedTableSize(int,double) -> a
    boolean needsResizing(int,int,double) -> a
com.google.common.collect.ImmutableAsList -> iQ:
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> a
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableAsList$SerializedForm -> iR:
    com.google.common.collect.ImmutableCollection collection -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableBiMap -> com.google.common.collect.ImmutableBiMap:
    com.google.common.collect.ImmutableBiMap of() -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableBiMap$Builder builder() -> builder
    com.google.common.collect.ImmutableBiMap copyOf(java.util.Map) -> copyOf
    com.google.common.collect.ImmutableBiMap fromEntries(java.util.Collection) -> a
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    com.google.common.collect.ImmutableSet values() -> values
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableCollection values() -> values
    java.util.Collection values() -> values
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
com.google.common.collect.ImmutableBiMap$Builder -> com.google.common.collect.ImmutableBiMap$Builder:
    com.google.common.collect.ImmutableBiMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableBiMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableBiMap build() -> build
    com.google.common.collect.ImmutableMap build() -> build
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableBiMap$SerializedForm -> iS:
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableClassToInstanceMap -> com.google.common.collect.ImmutableClassToInstanceMap:
    com.google.common.collect.ImmutableMap delegate -> a
    com.google.common.collect.ImmutableClassToInstanceMap$Builder builder() -> builder
    com.google.common.collect.ImmutableClassToInstanceMap copyOf(java.util.Map) -> copyOf
    java.util.Map delegate() -> delegate
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object delegate() -> delegate
com.google.common.collect.ImmutableClassToInstanceMap$Builder -> com.google.common.collect.ImmutableClassToInstanceMap$Builder:
    com.google.common.collect.ImmutableMap$Builder mapBuilder -> a
    com.google.common.collect.ImmutableClassToInstanceMap$Builder put(java.lang.Class,java.lang.Object) -> put
    com.google.common.collect.ImmutableClassToInstanceMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableClassToInstanceMap build() -> build
com.google.common.collect.ImmutableCollection -> com.google.common.collect.ImmutableCollection:
    com.google.common.collect.ImmutableCollection EMPTY_IMMUTABLE_COLLECTION -> c
    com.google.common.collect.ImmutableList asList -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.lang.String toString() -> toString
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean addAll(java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    com.google.common.collect.ImmutableList asList() -> asList
    com.google.common.collect.ImmutableList createAsList() -> b
    boolean isPartialView() -> a
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$ArrayImmutableCollection -> iT:
    java.lang.Object[] elements -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    boolean isPartialView() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$Builder -> com.google.common.collect.ImmutableCollection$Builder:
    int expandedCapacity(int,int) -> a
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection build() -> build
com.google.common.collect.ImmutableCollection$EmptyImmutableCollection -> iU:
    java.lang.Object[] EMPTY_ARRAY -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    com.google.common.collect.ImmutableList createAsList() -> b
    boolean isPartialView() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableCollection$SerializedForm -> iV:
    java.lang.Object[] elements -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableEntry -> iW:
    java.lang.Object key -> a
    java.lang.Object value -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.ImmutableEnumMap -> iX:
    java.util.EnumMap delegate -> a
    com.google.common.collect.ImmutableMap asImmutable(java.util.EnumMap) -> a
    com.google.common.collect.ImmutableSet createKeySet() -> c_
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    boolean isPartialView() -> b
    java.lang.Object writeReplace() -> writeReplace
    java.util.EnumMap access$000(com.google.common.collect.ImmutableEnumMap) -> a
com.google.common.collect.ImmutableEnumMap$1 -> iY:
    com.google.common.collect.ImmutableEnumMap this$0 -> a
    boolean contains(java.lang.Object) -> contains
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumMap$2 -> iZ:
    com.google.common.collect.ImmutableEnumMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> d
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumMap$2$1 -> ja:
    java.util.Iterator backingIterator -> b
    com.google.common.collect.ImmutableEnumMap$2 this$1 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableEnumMap$EnumSerializedForm -> jb:
    java.util.EnumMap delegate -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableEnumSet -> jc:
    java.util.EnumSet delegate -> a
    int hashCode -> b
    com.google.common.collect.ImmutableSet asImmutable(java.util.EnumSet) -> a
    boolean isPartialView() -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableEnumSet$EnumSerializedForm -> jd:
    java.util.EnumSet delegate -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList -> com.google.common.collect.ImmutableList:
    com.google.common.collect.ImmutableList of() -> of
    com.google.common.collect.ImmutableList of(java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableList copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableList copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableList asImmutableList(java.lang.Object[]) -> a
    com.google.common.collect.ImmutableList copyFromCollection(java.util.Collection) -> a
    com.google.common.collect.ImmutableList construct(java.lang.Object[]) -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableListIterator listIterator() -> listIterator
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    com.google.common.collect.ImmutableList subListUnchecked(int,int) -> a
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    com.google.common.collect.ImmutableList asList() -> asList
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableList$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
com.google.common.collect.ImmutableList$1 -> je:
    com.google.common.collect.ImmutableList this$0 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.ImmutableList$Builder -> com.google.common.collect.ImmutableList$Builder:
    java.lang.Object[] contents -> a
    int size -> b
    com.google.common.collect.ImmutableList$Builder ensureCapacity(int) -> a
    com.google.common.collect.ImmutableList$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableList$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableList$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableList$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableList build() -> build
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableList$ReverseImmutableList -> jf:
    com.google.common.collect.ImmutableList forwardList -> a
    int size -> b
    int reverseIndex(int) -> a
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    java.lang.Object get(int) -> get
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> a
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.Iterator iterator() -> iterator
    int access$000(com.google.common.collect.ImmutableList$ReverseImmutableList,int) -> a
com.google.common.collect.ImmutableList$ReverseImmutableList$1 -> jg:
    com.google.common.collect.UnmodifiableListIterator val$forward -> a
    com.google.common.collect.ImmutableList$ReverseImmutableList this$0 -> b
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
com.google.common.collect.ImmutableList$SerializedForm -> jh:
    java.lang.Object[] elements -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableList$SubList -> ji:
    int offset -> a
    int length -> b
    com.google.common.collect.ImmutableList this$0 -> d
    int size() -> size
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    boolean isPartialView() -> a
    java.util.List subList(int,int) -> subList
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.ListIterator listIterator() -> listIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableListMultimap -> com.google.common.collect.ImmutableListMultimap:
    com.google.common.collect.ImmutableListMultimap inverse -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableListMultimap of() -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableListMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableListMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableList get(java.lang.Object) -> get
    com.google.common.collect.ImmutableListMultimap inverse() -> inverse
    com.google.common.collect.ImmutableList removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableList replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    com.google.common.collect.ImmutableMultimap inverse() -> inverse
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List get(java.lang.Object) -> get
com.google.common.collect.ImmutableListMultimap$Builder -> com.google.common.collect.ImmutableListMultimap$Builder:
    com.google.common.collect.ImmutableListMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableListMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableListMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableListMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableListMultimap build() -> build
    com.google.common.collect.ImmutableMultimap build() -> build
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableMap -> com.google.common.collect.ImmutableMap:
    com.google.common.collect.ImmutableSet entrySet -> a
    com.google.common.collect.ImmutableSet keySet -> b
    com.google.common.collect.ImmutableCollection values -> c
    com.google.common.collect.ImmutableSetMultimap multimapView -> d
    com.google.common.collect.ImmutableMap of() -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMap$Builder builder() -> builder
    java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object) -> a
    com.google.common.collect.ImmutableMap copyOf(java.util.Map) -> copyOf
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableSet createKeySet() -> c_
    com.google.common.collect.ImmutableCollection values() -> values
    com.google.common.collect.ImmutableSetMultimap asMultimap() -> asMultimap
    boolean equals(java.lang.Object) -> equals
    boolean isPartialView() -> b
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
com.google.common.collect.ImmutableMap$1MapViewOfValuesAsSingletonSets -> jj:
    com.google.common.collect.ImmutableMap this$0 -> a
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    java.lang.Object get(java.lang.Object) -> get
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
com.google.common.collect.ImmutableMap$1MapViewOfValuesAsSingletonSets$1 -> jk:
    com.google.common.collect.ImmutableMap$1MapViewOfValuesAsSingletonSets this$1 -> a
    com.google.common.collect.ImmutableMap map() -> d
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMap$1MapViewOfValuesAsSingletonSets$1$1 -> jl:
    java.util.Iterator val$backingIterator -> a
    com.google.common.collect.ImmutableMap$1MapViewOfValuesAsSingletonSets$1 this$2 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMap$1MapViewOfValuesAsSingletonSets$1$1$1 -> jm:
    java.util.Map$Entry val$backingEntry -> a
    com.google.common.collect.ImmutableMap$1MapViewOfValuesAsSingletonSets$1$1 this$3 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.ImmutableMap$Builder -> com.google.common.collect.ImmutableMap$Builder:
    java.util.ArrayList entries -> a
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap build() -> build
com.google.common.collect.ImmutableMap$SerializedForm -> jn:
    java.lang.Object[] keys -> a
    java.lang.Object[] values -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
    java.lang.Object createMap(com.google.common.collect.ImmutableMap$Builder) -> a
com.google.common.collect.ImmutableMapEntrySet -> jo:
    com.google.common.collect.ImmutableMap map() -> d
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> a
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMapEntrySet$EntrySetSerializedForm -> jp:
    com.google.common.collect.ImmutableMap map -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapKeySet -> jq:
    com.google.common.collect.ImmutableMap map -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.ImmutableList createAsList() -> b
    boolean isPartialView() -> a
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapKeySet$1 -> jr:
    com.google.common.collect.ImmutableList val$entryList -> a
    com.google.common.collect.ImmutableMapKeySet this$0 -> b
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
com.google.common.collect.ImmutableMapKeySet$KeySetSerializedForm -> js:
    com.google.common.collect.ImmutableMap map -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMapValues -> jt:
    com.google.common.collect.ImmutableMap map -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> a
    com.google.common.collect.ImmutableList createAsList() -> b
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMapValues$1 -> ju:
    com.google.common.collect.ImmutableList val$entryList -> a
    com.google.common.collect.ImmutableMapValues this$0 -> b
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
com.google.common.collect.ImmutableMapValues$SerializedForm -> jv:
    com.google.common.collect.ImmutableMap map -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultimap -> com.google.common.collect.ImmutableMultimap:
    com.google.common.collect.ImmutableMap map -> b
    int size -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableMultimap of() -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    void clear() -> clear
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableMultimap inverse() -> inverse
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean isPartialView() -> a
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableMap asMap() -> asMap
    java.util.Map createAsMap() -> g
    com.google.common.collect.ImmutableCollection entries() -> entries
    com.google.common.collect.UnmodifiableIterator entryIterator() -> b
    com.google.common.collect.ImmutableMultiset keys() -> keys
    com.google.common.collect.ImmutableCollection values() -> values
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Map asMap() -> asMap
    java.util.Collection createValues() -> j
    java.util.Collection values() -> values
    com.google.common.collect.Multiset createKeys() -> i
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    java.util.Iterator entryIterator() -> f
    java.util.Collection createEntries() -> h
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.ImmutableMultimap$1 -> jw:
    java.lang.Object key -> a
    java.util.Iterator valueIterator -> b
    java.util.Iterator val$mapIterator -> c
    com.google.common.collect.ImmutableMultimap this$0 -> d
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMultimap$Builder -> com.google.common.collect.ImmutableMultimap$Builder:
    com.google.common.collect.Multimap builderMultimap -> a
    java.util.Comparator keyComparator -> b
    java.util.Comparator valueComparator -> c
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap build() -> build
com.google.common.collect.ImmutableMultimap$Builder$1 -> jx:
    com.google.common.collect.ImmutableMultimap$Builder this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.ImmutableMultimap$BuilderMultimap -> jy:
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> b
com.google.common.collect.ImmutableMultimap$EntryCollection -> jz:
    com.google.common.collect.ImmutableMultimap multimap -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultimap$FieldSettersHolder -> jA:
    com.google.common.collect.Serialization$FieldSetter MAP_FIELD_SETTER -> a
    com.google.common.collect.Serialization$FieldSetter SIZE_FIELD_SETTER -> b
com.google.common.collect.ImmutableMultimap$Keys -> jB:
    com.google.common.collect.ImmutableMultimap this$0 -> a
    boolean contains(java.lang.Object) -> contains
    int count(java.lang.Object) -> count
    java.util.Set elementSet() -> elementSet
    int size() -> size
    com.google.common.collect.ImmutableSet createEntrySet() -> b_
    boolean isPartialView() -> a
com.google.common.collect.ImmutableMultimap$Keys$KeysEntrySet -> jC:
    com.google.common.collect.ImmutableMultimap$Keys this$1 -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultimap$Keys$KeysEntrySet$1 -> jD:
    com.google.common.collect.ImmutableList val$mapEntries -> a
    com.google.common.collect.ImmutableMultimap$Keys$KeysEntrySet this$2 -> b
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableMultimap$Values -> jE:
    com.google.common.collect.ImmutableMultimap multimap -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int size() -> size
    boolean isPartialView() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableMultiset -> com.google.common.collect.ImmutableMultiset:
    com.google.common.collect.ImmutableSet entrySet -> a
    com.google.common.collect.ImmutableMultiset of() -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableMultiset copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableMultiset copyOfInternal(com.google.common.collect.Multiset) -> a
    com.google.common.collect.ImmutableMultiset copyFromEntries(java.util.Collection) -> a
    com.google.common.collect.ImmutableMultiset copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSet createEntrySet() -> b_
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableMultiset$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    java.util.Set entrySet() -> entrySet
com.google.common.collect.ImmutableMultiset$1 -> jF:
    int remaining -> a
    java.lang.Object element -> b
    java.util.Iterator val$entryIterator -> c
    com.google.common.collect.ImmutableMultiset this$0 -> d
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.ImmutableMultiset$Builder -> com.google.common.collect.ImmutableMultiset$Builder:
    com.google.common.collect.Multiset contents -> a
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableMultiset build() -> build
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableMultiset$EntrySet -> jG:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableMultiset this$0 -> d
    boolean isPartialView() -> a
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.ImmutableMultiset$EntrySetSerializedForm -> jH:
    com.google.common.collect.ImmutableMultiset multiset -> a
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableMultiset$SerializedForm -> jI:
    java.lang.Object[] elements -> a
    int[] counts -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableRangeMap -> com.google.common.collect.ImmutableRangeMap:
    com.google.common.collect.ImmutableRangeMap EMPTY -> a
    com.google.common.collect.ImmutableList ranges -> b
    com.google.common.collect.ImmutableList values -> c
    com.google.common.collect.ImmutableRangeMap of() -> of
    com.google.common.collect.ImmutableRangeMap of(com.google.common.collect.Range,java.lang.Object) -> of
    com.google.common.collect.ImmutableRangeMap copyOf(com.google.common.collect.RangeMap) -> copyOf
    com.google.common.collect.ImmutableRangeMap$Builder builder() -> builder
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    com.google.common.collect.ImmutableMap asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    java.util.Map asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeMap) -> a
com.google.common.collect.ImmutableRangeMap$1 -> jJ:
    int val$len -> a
    int val$off -> b
    com.google.common.collect.Range val$range -> d
    com.google.common.collect.ImmutableRangeMap this$0 -> e
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeMap$2 -> jK:
    com.google.common.collect.Range val$range -> a
    com.google.common.collect.ImmutableRangeMap val$outer -> b
    com.google.common.collect.ImmutableRangeMap this$0 -> c
    com.google.common.collect.ImmutableRangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    java.util.Map asMapOfRanges() -> asMapOfRanges
com.google.common.collect.ImmutableRangeMap$Builder -> com.google.common.collect.ImmutableRangeMap$Builder:
    com.google.common.collect.RangeSet keyRanges -> a
    com.google.common.collect.RangeMap rangeMap -> b
    com.google.common.collect.ImmutableRangeMap$Builder put(com.google.common.collect.Range,java.lang.Object) -> put
    com.google.common.collect.ImmutableRangeMap$Builder putAll(com.google.common.collect.RangeMap) -> putAll
    com.google.common.collect.ImmutableRangeMap build() -> build
com.google.common.collect.ImmutableRangeSet -> com.google.common.collect.ImmutableRangeSet:
    com.google.common.collect.ImmutableRangeSet EMPTY -> a
    com.google.common.collect.ImmutableRangeSet ALL -> b
    com.google.common.collect.ImmutableList ranges -> c
    com.google.common.collect.ImmutableRangeSet complement -> d
    com.google.common.collect.ImmutableRangeSet of() -> of
    com.google.common.collect.ImmutableRangeSet all() -> a
    com.google.common.collect.ImmutableRangeSet of(com.google.common.collect.Range) -> of
    com.google.common.collect.ImmutableRangeSet copyOf(com.google.common.collect.RangeSet) -> copyOf
    boolean encloses(com.google.common.collect.Range) -> encloses
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    com.google.common.collect.Range span() -> span
    boolean isEmpty() -> isEmpty
    void add(com.google.common.collect.Range) -> add
    void addAll(com.google.common.collect.RangeSet) -> addAll
    void remove(com.google.common.collect.Range) -> remove
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    com.google.common.collect.ImmutableSet asRanges() -> asRanges
    com.google.common.collect.ImmutableRangeSet complement() -> complement
    com.google.common.collect.ImmutableRangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    com.google.common.collect.ImmutableSortedSet asSet(com.google.common.collect.DiscreteDomain) -> asSet
    com.google.common.collect.ImmutableRangeSet$Builder builder() -> builder
    java.lang.Object writeReplace() -> writeReplace
    boolean equals(java.lang.Object) -> equals
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    void clear() -> clear
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    com.google.common.collect.RangeSet complement() -> complement
    java.util.Set asRanges() -> asRanges
    com.google.common.collect.ImmutableList access$000(com.google.common.collect.ImmutableRangeSet) -> a
com.google.common.collect.ImmutableRangeSet$1 -> jL:
    int val$length -> a
    int val$fromIndex -> b
    com.google.common.collect.Range val$range -> d
    com.google.common.collect.ImmutableRangeSet this$0 -> e
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeSet$AsSet -> jM:
    com.google.common.collect.DiscreteDomain domain -> e
    java.lang.Integer size -> f
    com.google.common.collect.ImmutableRangeSet this$0 -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    com.google.common.collect.ImmutableSortedSet subSet(com.google.common.collect.Range) -> a
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> a
    boolean isPartialView() -> a
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
    com.google.common.collect.DiscreteDomain access$100(com.google.common.collect.ImmutableRangeSet$AsSet) -> a
com.google.common.collect.ImmutableRangeSet$AsSet$1 -> jN:
    java.util.Iterator rangeItr -> a
    java.util.Iterator elemItr -> b
    com.google.common.collect.ImmutableRangeSet$AsSet this$1 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.ImmutableRangeSet$AsSet$2 -> jO:
    java.util.Iterator rangeItr -> a
    java.util.Iterator elemItr -> b
    com.google.common.collect.ImmutableRangeSet$AsSet this$1 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.ImmutableRangeSet$AsSetSerializedForm -> jP:
    com.google.common.collect.ImmutableList ranges -> a
    com.google.common.collect.DiscreteDomain domain -> b
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableRangeSet$Builder -> com.google.common.collect.ImmutableRangeSet$Builder:
    com.google.common.collect.RangeSet rangeSet -> a
    com.google.common.collect.ImmutableRangeSet$Builder add(com.google.common.collect.Range) -> add
    com.google.common.collect.ImmutableRangeSet$Builder addAll(com.google.common.collect.RangeSet) -> addAll
    com.google.common.collect.ImmutableRangeSet build() -> build
com.google.common.collect.ImmutableRangeSet$ComplementRanges -> jQ:
    boolean positiveBoundedBelow -> b
    boolean positiveBoundedAbove -> d
    int size -> e
    com.google.common.collect.ImmutableRangeSet this$0 -> a
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object get(int) -> get
com.google.common.collect.ImmutableRangeSet$SerializedForm -> jR:
    com.google.common.collect.ImmutableList ranges -> a
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSet -> com.google.common.collect.ImmutableSet:
    int CUTOFF -> a
    com.google.common.collect.ImmutableSet of() -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSet construct(int,java.lang.Object[]) -> b
    int chooseTableSize(int) -> a
    com.google.common.collect.ImmutableSet copyOf(java.lang.Object[]) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSet copyOf(java.util.Collection) -> copyOf
    boolean isHashCodeFast() -> a_
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSet$Builder builder() -> builder
    java.util.Iterator iterator() -> iterator
    com.google.common.collect.ImmutableSet access$000(int,java.lang.Object[]) -> a
com.google.common.collect.ImmutableSet$ArrayImmutableSet -> jS:
    java.lang.Object[] elements -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isPartialView() -> a
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.ImmutableSet$Builder -> com.google.common.collect.ImmutableSet$Builder:
    java.lang.Object[] contents -> a
    int size -> b
    com.google.common.collect.ImmutableSet$Builder ensureCapacity(int) -> a
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSet build() -> build
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSet$SerializedForm -> jT:
    java.lang.Object[] elements -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSetMultimap -> com.google.common.collect.ImmutableSetMultimap:
    com.google.common.collect.ImmutableSortedSet emptySet -> a
    com.google.common.collect.ImmutableSetMultimap inverse -> d
    com.google.common.collect.ImmutableSet entries -> e
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableSetMultimap of() -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSetMultimap$Builder builder() -> builder
    com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap) -> copyOf
    com.google.common.collect.ImmutableSetMultimap copyOf(com.google.common.collect.Multimap,java.util.Comparator) -> b
    com.google.common.collect.ImmutableSet get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSetMultimap inverse() -> inverse
    com.google.common.collect.ImmutableSet removeAll(java.lang.Object) -> removeAll
    com.google.common.collect.ImmutableSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableSet entries() -> entries
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    com.google.common.collect.ImmutableCollection entries() -> entries
    com.google.common.collect.ImmutableMultimap inverse() -> inverse
    com.google.common.collect.ImmutableCollection get(java.lang.Object) -> get
    com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.ImmutableCollection removeAll(java.lang.Object) -> removeAll
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Set entries() -> entries
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSetMultimap access$000(com.google.common.collect.Multimap,java.util.Comparator) -> a
com.google.common.collect.ImmutableSetMultimap$Builder -> com.google.common.collect.ImmutableSetMultimap$Builder:
    com.google.common.collect.ImmutableSetMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableSetMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableSetMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableSetMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableSetMultimap build() -> build
    com.google.common.collect.ImmutableMultimap build() -> build
    com.google.common.collect.ImmutableMultimap$Builder orderValuesBy(java.util.Comparator) -> orderValuesBy
    com.google.common.collect.ImmutableMultimap$Builder orderKeysBy(java.util.Comparator) -> orderKeysBy
    com.google.common.collect.ImmutableMultimap$Builder putAll(com.google.common.collect.Multimap) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Object[]) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder putAll(java.lang.Object,java.lang.Iterable) -> putAll
    com.google.common.collect.ImmutableMultimap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMultimap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableSetMultimap$Builder$1 -> jU:
    com.google.common.collect.ImmutableSetMultimap$Builder this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.ImmutableSetMultimap$BuilderMultimap -> jV:
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> b
com.google.common.collect.ImmutableSortedAsList -> jW:
    java.util.Comparator comparator() -> comparator
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.ImmutableList subListUnchecked(int,int) -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
com.google.common.collect.ImmutableSortedMap -> com.google.common.collect.ImmutableSortedMap:
    java.util.Comparator NATURAL_ORDER -> a
    com.google.common.collect.ImmutableSortedMap NATURAL_EMPTY_MAP -> b
    com.google.common.collect.ImmutableSortedMap descendingMap -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ImmutableSortedMap emptyMap(java.util.Comparator) -> a
    com.google.common.collect.ImmutableSortedMap fromSortedEntries(java.util.Comparator,java.util.Collection) -> a
    com.google.common.collect.ImmutableSortedMap from(com.google.common.collect.ImmutableSortedSet,com.google.common.collect.ImmutableList) -> a
    com.google.common.collect.ImmutableSortedMap of() -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object,java.lang.Comparable,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map) -> copyOf
    com.google.common.collect.ImmutableSortedMap copyOf(java.util.Map,java.util.Comparator) -> copyOf
    com.google.common.collect.ImmutableSortedMap copyOfSorted(java.util.SortedMap) -> copyOfSorted
    com.google.common.collect.ImmutableSortedMap copyOfInternal(java.util.Map,java.util.Comparator) -> a
    void sortEntries(java.util.List,java.util.Comparator) -> c
    void validateEntries(java.util.List,java.util.Comparator) -> d
    com.google.common.collect.ImmutableSortedMap$Builder naturalOrder() -> naturalOrder
    com.google.common.collect.ImmutableSortedMap$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.ImmutableSortedMap$Builder reverseOrder() -> reverseOrder
    int size() -> size
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet entrySet() -> entrySet
    com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object) -> headMap
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    com.google.common.collect.ImmutableSortedMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object) -> tailMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.ImmutableSortedMap descendingMap() -> descendingMap
    com.google.common.collect.ImmutableSortedMap createDescendingMap() -> c
    com.google.common.collect.ImmutableSortedSet navigableKeySet() -> navigableKeySet
    com.google.common.collect.ImmutableSortedSet descendingKeySet() -> descendingKeySet
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.ImmutableSet keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableMap descendingMap() -> descendingMap
    void access$000(java.util.List,java.util.Comparator) -> a
    void access$100(java.util.List,java.util.Comparator) -> b
com.google.common.collect.ImmutableSortedMap$1 -> jX:
    java.util.Comparator val$comparator -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.ImmutableSortedMap$Builder -> com.google.common.collect.ImmutableSortedMap$Builder:
    java.util.Comparator comparator -> b
    com.google.common.collect.ImmutableSortedMap$Builder put(java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableSortedMap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableSortedMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableSortedMap build() -> build
    com.google.common.collect.ImmutableMap build() -> build
    com.google.common.collect.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    com.google.common.collect.ImmutableMap$Builder put(java.util.Map$Entry) -> put
    com.google.common.collect.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
com.google.common.collect.ImmutableSortedMap$SerializedForm -> jY:
    java.util.Comparator comparator -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMapFauxverideShim -> jZ:
    com.google.common.collect.ImmutableSortedMap$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
com.google.common.collect.ImmutableSortedMultiset -> com.google.common.collect.ImmutableSortedMultiset:
    java.util.Comparator NATURAL_ORDER -> b
    com.google.common.collect.ImmutableSortedMultiset NATURAL_EMPTY_MULTISET -> d
    com.google.common.collect.ImmutableSortedMultiset descendingMultiset -> a
    com.google.common.collect.ImmutableSortedMultiset of() -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Comparable[]) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedMultiset copyOfSorted(com.google.common.collect.SortedMultiset) -> copyOfSorted
    com.google.common.collect.ImmutableSortedMultiset copyOfSortedEntries(java.util.Comparator,java.util.Collection) -> a
    com.google.common.collect.ImmutableSortedMultiset emptyMultiset(java.util.Comparator) -> a
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    com.google.common.collect.ImmutableSortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.ImmutableSortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.ImmutableSortedMultiset$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.ImmutableSortedMultiset$Builder reverseOrder() -> reverseOrder
    com.google.common.collect.ImmutableSortedMultiset$Builder naturalOrder() -> naturalOrder
    java.lang.Object writeReplace() -> writeReplace
    java.util.Set elementSet() -> elementSet
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    java.util.NavigableSet elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
com.google.common.collect.ImmutableSortedMultiset$Builder -> com.google.common.collect.ImmutableSortedMultiset$Builder:
    java.util.Comparator comparator -> b
    com.google.common.collect.ImmutableSortedMultiset$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableSortedMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    com.google.common.collect.ImmutableSortedMultiset$Builder setCount(java.lang.Object,int) -> setCount
    com.google.common.collect.ImmutableSortedMultiset$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSortedMultiset$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSortedMultiset$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSortedMultiset build() -> build
    com.google.common.collect.ImmutableMultiset build() -> build
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object,int) -> setCount
    com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int) -> addCopies
    com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSortedMultiset$SerializedForm -> ka:
    java.util.Comparator comparator -> a
    java.lang.Object[] elements -> b
    int[] counts -> c
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedMultisetFauxverideShim -> kb:
    com.google.common.collect.ImmutableSortedMultiset$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedMultiset of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSortedMultiset copyOf(java.lang.Object[]) -> copyOf
com.google.common.collect.ImmutableSortedSet -> com.google.common.collect.ImmutableSortedSet:
    java.util.Comparator NATURAL_ORDER -> a
    com.google.common.collect.ImmutableSortedSet NATURAL_EMPTY_SET -> e
    java.util.Comparator comparator -> b
    com.google.common.collect.ImmutableSortedSet descendingSet -> d
    com.google.common.collect.ImmutableSortedSet emptySet(java.util.Comparator) -> a
    com.google.common.collect.ImmutableSortedSet of() -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable,java.lang.Comparable[]) -> of
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Comparable[]) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Iterator) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.lang.Iterable) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOf(java.util.Comparator,java.util.Collection) -> copyOf
    com.google.common.collect.ImmutableSortedSet copyOfSorted(java.util.SortedSet) -> copyOfSorted
    com.google.common.collect.ImmutableSortedSet construct(java.util.Comparator,int,java.lang.Object[]) -> a
    com.google.common.collect.ImmutableSortedSet$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.ImmutableSortedSet$Builder reverseOrder() -> reverseOrder
    com.google.common.collect.ImmutableSortedSet$Builder naturalOrder() -> naturalOrder
    int unsafeCompare(java.lang.Object,java.lang.Object) -> a
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) -> headSet
    com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object,boolean) -> headSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) -> tailSet
    com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object,boolean) -> tailSet
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    com.google.common.collect.ImmutableSortedSet descendingSet() -> descendingSet
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> c
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    int indexOf(java.lang.Object) -> a
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object writeReplace() -> writeReplace
    java.util.Iterator iterator() -> iterator
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet descendingSet() -> descendingSet
com.google.common.collect.ImmutableSortedSet$Builder -> com.google.common.collect.ImmutableSortedSet$Builder:
    java.util.Comparator comparator -> c
    com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableSortedSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSortedSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSortedSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSortedSet build() -> build
    com.google.common.collect.ImmutableSet build() -> build
    com.google.common.collect.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableSet$Builder add(java.lang.Object) -> add
    com.google.common.collect.ImmutableCollection build() -> build
    com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator) -> addAll
    com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable) -> addAll
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[]) -> add
    com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object) -> add
com.google.common.collect.ImmutableSortedSet$SerializedForm -> kc:
    java.util.Comparator comparator -> a
    java.lang.Object[] elements -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.ImmutableSortedSetFauxverideShim -> kd:
    com.google.common.collect.ImmutableSortedSet$Builder builder() -> builder
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableSortedSet of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> of
    com.google.common.collect.ImmutableSortedSet copyOf(java.lang.Object[]) -> copyOf
com.google.common.collect.ImmutableTable -> com.google.common.collect.ImmutableTable:
    com.google.common.collect.ImmutableTable of() -> of
    com.google.common.collect.ImmutableTable of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    com.google.common.collect.ImmutableTable copyOf(com.google.common.collect.Table) -> copyOf
    com.google.common.collect.ImmutableTable$Builder builder() -> builder
    com.google.common.collect.Table$Cell cellOf(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    com.google.common.collect.ImmutableSet cellSet() -> cellSet
    com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    com.google.common.collect.ImmutableMap row(java.lang.Object) -> row
    com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set cellSet() -> cellSet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
com.google.common.collect.ImmutableTable$Builder -> com.google.common.collect.ImmutableTable$Builder:
    java.util.List cells -> a
    java.util.Comparator rowComparator -> b
    java.util.Comparator columnComparator -> c
    com.google.common.collect.ImmutableTable$Builder orderRowsBy(java.util.Comparator) -> orderRowsBy
    com.google.common.collect.ImmutableTable$Builder orderColumnsBy(java.util.Comparator) -> orderColumnsBy
    com.google.common.collect.ImmutableTable$Builder put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    com.google.common.collect.ImmutableTable$Builder put(com.google.common.collect.Table$Cell) -> put
    com.google.common.collect.ImmutableTable$Builder putAll(com.google.common.collect.Table) -> putAll
    com.google.common.collect.ImmutableTable build() -> build
com.google.common.collect.Interner -> com.google.common.collect.Interner:
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners -> com.google.common.collect.Interners:
    com.google.common.collect.Interner newStrongInterner() -> newStrongInterner
    com.google.common.collect.Interner newWeakInterner() -> newWeakInterner
    com.google.common.base.Function asFunction(com.google.common.collect.Interner) -> asFunction
com.google.common.collect.Interners$1 -> ke:
    java.util.concurrent.ConcurrentMap val$map -> a
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners$InternerFunction -> kf:
    com.google.common.collect.Interner interner -> a
    java.lang.Object apply(java.lang.Object) -> apply
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Interners$WeakInterner -> kg:
    com.google.common.collect.MapMakerInternalMap map -> a
    java.lang.Object intern(java.lang.Object) -> intern
com.google.common.collect.Interners$WeakInterner$Dummy -> kh:
    com.google.common.collect.Interners$WeakInterner$Dummy VALUE -> a
    com.google.common.collect.Interners$WeakInterner$Dummy[] $VALUES -> b
    com.google.common.collect.Interners$WeakInterner$Dummy[] values() -> values
    com.google.common.collect.Interners$WeakInterner$Dummy valueOf(java.lang.String) -> valueOf
com.google.common.collect.Iterables -> com.google.common.collect.Iterables:
    java.lang.Iterable unmodifiableIterable(java.lang.Iterable) -> unmodifiableIterable
    java.lang.Iterable unmodifiableIterable(com.google.common.collect.ImmutableCollection) -> unmodifiableIterable
    int size(java.lang.Iterable) -> size
    boolean contains(java.lang.Iterable,java.lang.Object) -> contains
    boolean removeAll(java.lang.Iterable,java.util.Collection) -> removeAll
    boolean retainAll(java.lang.Iterable,java.util.Collection) -> retainAll
    boolean removeIf(java.lang.Iterable,com.google.common.base.Predicate) -> removeIf
    boolean removeIfFromRandomAccessList(java.util.List,com.google.common.base.Predicate) -> a
    boolean elementsEqual(java.lang.Iterable,java.lang.Iterable) -> elementsEqual
    java.lang.String toString(java.lang.Iterable) -> toString
    java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    java.lang.Object getOnlyElement(java.lang.Iterable,java.lang.Object) -> getOnlyElement
    java.lang.Object[] toArray(java.lang.Iterable,java.lang.Class) -> toArray
    java.lang.Object[] toArray(java.lang.Iterable) -> a
    java.util.Collection toCollection(java.lang.Iterable) -> c
    boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    int frequency(java.lang.Iterable,java.lang.Object) -> frequency
    java.lang.Iterable cycle(java.lang.Iterable) -> cycle
    java.lang.Iterable cycle(java.lang.Object[]) -> cycle
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable,java.lang.Iterable) -> concat
    java.lang.Iterable concat(java.lang.Iterable[]) -> concat
    java.lang.Iterable concat(java.lang.Iterable) -> concat
    java.lang.Iterable partition(java.lang.Iterable,int) -> partition
    java.lang.Iterable paddedPartition(java.lang.Iterable,int) -> paddedPartition
    java.lang.Iterable filter(java.lang.Iterable,com.google.common.base.Predicate) -> filter
    java.lang.Iterable filter(java.lang.Iterable,java.lang.Class) -> filter
    boolean any(java.lang.Iterable,com.google.common.base.Predicate) -> any
    boolean all(java.lang.Iterable,com.google.common.base.Predicate) -> all
    java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate) -> find
    java.lang.Object find(java.lang.Iterable,com.google.common.base.Predicate,java.lang.Object) -> find
    com.google.common.base.Optional tryFind(java.lang.Iterable,com.google.common.base.Predicate) -> tryFind
    int indexOf(java.lang.Iterable,com.google.common.base.Predicate) -> indexOf
    java.lang.Iterable transform(java.lang.Iterable,com.google.common.base.Function) -> transform
    java.lang.Object get(java.lang.Iterable,int) -> get
    void checkNonnegativeIndex(int) -> a
    java.lang.Object get(java.lang.Iterable,int,java.lang.Object) -> get
    java.lang.Object getFirst(java.lang.Iterable,java.lang.Object) -> getFirst
    java.lang.Object getLast(java.lang.Iterable) -> getLast
    java.lang.Object getLast(java.lang.Iterable,java.lang.Object) -> getLast
    java.lang.Object getLastInNonemptyList(java.util.List) -> a
    java.lang.Iterable skip(java.lang.Iterable,int) -> skip
    java.lang.Iterable limit(java.lang.Iterable,int) -> limit
    java.lang.Iterable consumingIterable(java.lang.Iterable) -> consumingIterable
    boolean isEmpty(java.lang.Iterable) -> isEmpty
    java.lang.Iterable mergeSorted(java.lang.Iterable,java.util.Comparator) -> mergeSorted
    com.google.common.collect.UnmodifiableIterator access$100(java.lang.Iterable) -> b
    com.google.common.base.Function access$300() -> a
com.google.common.collect.Iterables$1 -> ki:
    java.lang.Iterable val$iterable -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.google.common.collect.Iterables$10 -> kj:
    java.lang.Iterable val$iterable -> a
    int val$numberToSkip -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$10$1 -> kk:
    boolean atStart -> a
    java.util.Iterator val$iterator -> b
    com.google.common.collect.Iterables$10 this$0 -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterables$11 -> kl:
    java.lang.Iterable val$iterable -> a
    int val$limitSize -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$12 -> km:
    java.lang.Iterable val$iterable -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$13 -> kn:
    java.lang.Iterable val$iterable -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$14 -> ko:
    java.lang.Iterable val$iterables -> a
    java.util.Comparator val$comparator -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$15 -> kp:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Iterables$2 -> kq:
    java.lang.Iterable val$inputs -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$3 -> kr:
    java.util.Iterator val$iterableIterator -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterables$4 -> ks:
    java.lang.Iterable val$iterable -> a
    int val$size -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$5 -> kt:
    java.lang.Iterable val$iterable -> a
    int val$size -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$6 -> ku:
    java.lang.Iterable val$unfiltered -> a
    com.google.common.base.Predicate val$predicate -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$7 -> kv:
    java.lang.Iterable val$unfiltered -> a
    java.lang.Class val$type -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$8 -> kw:
    java.lang.Iterable val$fromIterable -> a
    com.google.common.base.Function val$function -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$9 -> kx:
    int val$numberToSkip -> a
    java.util.List val$list -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Iterables$ConsumingQueueIterator -> ky:
    java.util.Queue queue -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterables$UnmodifiableIterable -> kz:
    java.lang.Iterable iterable -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.google.common.collect.Iterators -> com.google.common.collect.Iterators:
    com.google.common.collect.UnmodifiableListIterator EMPTY_LIST_ITERATOR -> a
    java.util.Iterator EMPTY_MODIFIABLE_ITERATOR -> b
    com.google.common.collect.UnmodifiableIterator emptyIterator() -> emptyIterator
    java.util.Iterator emptyModifiableIterator() -> a
    com.google.common.collect.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
    com.google.common.collect.UnmodifiableIterator unmodifiableIterator(com.google.common.collect.UnmodifiableIterator) -> unmodifiableIterator
    int size(java.util.Iterator) -> size
    boolean contains(java.util.Iterator,java.lang.Object) -> contains
    boolean removeAll(java.util.Iterator,java.util.Collection) -> removeAll
    boolean removeIf(java.util.Iterator,com.google.common.base.Predicate) -> removeIf
    boolean retainAll(java.util.Iterator,java.util.Collection) -> retainAll
    boolean elementsEqual(java.util.Iterator,java.util.Iterator) -> elementsEqual
    java.lang.String toString(java.util.Iterator) -> toString
    java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    java.lang.Object getOnlyElement(java.util.Iterator,java.lang.Object) -> getOnlyElement
    java.lang.Object[] toArray(java.util.Iterator,java.lang.Class) -> toArray
    boolean addAll(java.util.Collection,java.util.Iterator) -> addAll
    int frequency(java.util.Iterator,java.lang.Object) -> frequency
    java.util.Iterator cycle(java.lang.Iterable) -> cycle
    java.util.Iterator cycle(java.lang.Object[]) -> cycle
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator,java.util.Iterator,java.util.Iterator,java.util.Iterator) -> concat
    java.util.Iterator concat(java.util.Iterator[]) -> concat
    java.util.Iterator concat(java.util.Iterator) -> concat
    com.google.common.collect.UnmodifiableIterator partition(java.util.Iterator,int) -> partition
    com.google.common.collect.UnmodifiableIterator paddedPartition(java.util.Iterator,int) -> paddedPartition
    com.google.common.collect.UnmodifiableIterator partitionImpl(java.util.Iterator,int,boolean) -> a
    com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,com.google.common.base.Predicate) -> filter
    com.google.common.collect.UnmodifiableIterator filter(java.util.Iterator,java.lang.Class) -> filter
    boolean any(java.util.Iterator,com.google.common.base.Predicate) -> any
    boolean all(java.util.Iterator,com.google.common.base.Predicate) -> all
    java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate) -> find
    java.lang.Object find(java.util.Iterator,com.google.common.base.Predicate,java.lang.Object) -> find
    com.google.common.base.Optional tryFind(java.util.Iterator,com.google.common.base.Predicate) -> tryFind
    int indexOf(java.util.Iterator,com.google.common.base.Predicate) -> indexOf
    java.util.Iterator transform(java.util.Iterator,com.google.common.base.Function) -> transform
    java.lang.Object get(java.util.Iterator,int) -> get
    void checkNonnegative(int) -> a
    java.lang.Object get(java.util.Iterator,int,java.lang.Object) -> get
    java.lang.Object getNext(java.util.Iterator,java.lang.Object) -> getNext
    java.lang.Object getLast(java.util.Iterator) -> getLast
    java.lang.Object getLast(java.util.Iterator,java.lang.Object) -> getLast
    int advance(java.util.Iterator,int) -> advance
    java.util.Iterator limit(java.util.Iterator,int) -> limit
    java.util.Iterator consumingIterator(java.util.Iterator) -> consumingIterator
    java.lang.Object pollNext(java.util.Iterator) -> a
    void clear(java.util.Iterator) -> b
    com.google.common.collect.UnmodifiableIterator forArray(java.lang.Object[]) -> forArray
    com.google.common.collect.UnmodifiableListIterator forArray(java.lang.Object[],int,int,int) -> a
    com.google.common.collect.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    com.google.common.collect.UnmodifiableIterator forEnumeration(java.util.Enumeration) -> forEnumeration
    java.util.Enumeration asEnumeration(java.util.Iterator) -> asEnumeration
    com.google.common.collect.PeekingIterator peekingIterator(java.util.Iterator) -> peekingIterator
    com.google.common.collect.PeekingIterator peekingIterator(com.google.common.collect.PeekingIterator) -> peekingIterator
    com.google.common.collect.UnmodifiableIterator mergeSorted(java.lang.Iterable,java.util.Comparator) -> mergeSorted
    void checkRemove(boolean) -> a
    java.util.ListIterator cast(java.util.Iterator) -> c
com.google.common.collect.Iterators$1 -> kA:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
com.google.common.collect.Iterators$10 -> kB:
    java.util.Iterator val$iterator -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$11 -> kC:
    java.lang.Object[] val$array -> a
    java.lang.Object get(int) -> a
com.google.common.collect.Iterators$12 -> kD:
    java.lang.Object[] val$array -> a
    int val$offset -> b
    java.lang.Object get(int) -> a
com.google.common.collect.Iterators$13 -> kE:
    boolean done -> a
    java.lang.Object val$value -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$14 -> kF:
    java.util.Enumeration val$enumeration -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$15 -> kG:
    java.util.Iterator val$iterator -> a
    boolean hasMoreElements() -> hasMoreElements
    java.lang.Object nextElement() -> nextElement
com.google.common.collect.Iterators$2 -> kH:
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$3 -> kI:
    java.util.Iterator val$iterator -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$4 -> kJ:
    java.util.Iterator iterator -> a
    java.util.Iterator removeFrom -> b
    java.lang.Iterable val$iterable -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$5 -> kK:
    java.util.Iterator current -> a
    java.util.Iterator removeFrom -> b
    java.util.Iterator val$inputs -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$6 -> kL:
    java.util.Iterator val$iterator -> a
    int val$size -> b
    boolean val$pad -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Iterators$7 -> kM:
    java.util.Iterator val$unfiltered -> a
    com.google.common.base.Predicate val$predicate -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterators$8 -> kN:
    com.google.common.base.Function val$function -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Iterators$9 -> kO:
    int count -> c
    int val$limitSize -> a
    java.util.Iterator val$iterator -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Iterators$MergingIterator -> kP:
    java.util.Queue queue -> a
    java.util.Comparator comparator -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Iterators$MergingIterator$1 -> kQ:
    com.google.common.collect.Iterators$MergingIterator this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Iterators$PeekingImpl -> kR:
    java.util.Iterator iterator -> a
    boolean hasPeeked -> b
    java.lang.Object peekedElement -> c
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    java.lang.Object peek() -> peek
com.google.common.collect.LexicographicalOrdering -> kS:
    com.google.common.collect.Ordering elementOrder -> a
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.LinkedHashMultimap -> com.google.common.collect.LinkedHashMultimap:
    int valueSetCapacity -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry multimapHeaderEntry -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedHashMultimap create() -> create
    com.google.common.collect.LinkedHashMultimap create(int,int) -> create
    com.google.common.collect.LinkedHashMultimap create(com.google.common.collect.Multimap) -> create
    void succeedsInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> b
    void succeedsInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> b
    java.util.Set createCollection() -> a
    java.util.Collection createCollection(java.lang.Object) -> a
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Collection values() -> values
    java.util.Iterator entryIterator() -> f
    void clear() -> clear
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Map asMap() -> asMap
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    java.util.Collection createCollection() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
    void access$200(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    void access$300(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> a
    void access$500(com.google.common.collect.LinkedHashMultimap$ValueSetLink,com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry access$600(com.google.common.collect.LinkedHashMultimap) -> a
    void access$700(com.google.common.collect.LinkedHashMultimap$ValueEntry,com.google.common.collect.LinkedHashMultimap$ValueEntry) -> a
com.google.common.collect.LinkedHashMultimap$1 -> kT:
    com.google.common.collect.LinkedHashMultimap$ValueEntry nextEntry -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove -> b
    com.google.common.collect.LinkedHashMultimap this$0 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.LinkedHashMultimap$ValueEntry -> kU:
    java.lang.Object key -> a
    java.lang.Object value -> b
    int valueHash -> c
    com.google.common.collect.LinkedHashMultimap$ValueEntry nextInValueSetHashRow -> d
    com.google.common.collect.LinkedHashMultimap$ValueSetLink predecessorInValueSet -> e
    com.google.common.collect.LinkedHashMultimap$ValueSetLink successorInValueSet -> f
    com.google.common.collect.LinkedHashMultimap$ValueEntry predecessorInMultimap -> g
    com.google.common.collect.LinkedHashMultimap$ValueEntry successorInMultimap -> h
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> a
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> b
    void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> b
    com.google.common.collect.LinkedHashMultimap$ValueEntry getPredecessorInMultimap() -> c
    com.google.common.collect.LinkedHashMultimap$ValueEntry getSuccessorInMultimap() -> d
    void setSuccessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> a
    void setPredecessorInMultimap(com.google.common.collect.LinkedHashMultimap$ValueEntry) -> b
com.google.common.collect.LinkedHashMultimap$ValueSet -> kV:
    java.lang.Object key -> c
    com.google.common.collect.LinkedHashMultimap$ValueEntry[] hashTable -> a
    int size -> d
    int modCount -> e
    com.google.common.collect.LinkedHashMultimap$ValueSetLink firstEntry -> f
    com.google.common.collect.LinkedHashMultimap$ValueSetLink lastEntry -> g
    com.google.common.collect.LinkedHashMultimap this$0 -> b
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> a
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> b
    void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    com.google.common.collect.LinkedHashMultimap$ValueSetLink access$000(com.google.common.collect.LinkedHashMultimap$ValueSet) -> a
    int access$100(com.google.common.collect.LinkedHashMultimap$ValueSet) -> b
    int access$410(com.google.common.collect.LinkedHashMultimap$ValueSet) -> c
    int access$104(com.google.common.collect.LinkedHashMultimap$ValueSet) -> d
com.google.common.collect.LinkedHashMultimap$ValueSet$1 -> kW:
    com.google.common.collect.LinkedHashMultimap$ValueSetLink nextEntry -> a
    com.google.common.collect.LinkedHashMultimap$ValueEntry toRemove -> b
    int expectedModCount -> c
    com.google.common.collect.LinkedHashMultimap$ValueSet this$1 -> d
    void checkForComodification() -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.LinkedHashMultimap$ValueSetLink -> kX:
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getPredecessorInValueSet() -> a
    com.google.common.collect.LinkedHashMultimap$ValueSetLink getSuccessorInValueSet() -> b
    void setPredecessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> a
    void setSuccessorInValueSet(com.google.common.collect.LinkedHashMultimap$ValueSetLink) -> b
com.google.common.collect.LinkedHashMultiset -> com.google.common.collect.LinkedHashMultiset:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedHashMultiset create() -> create
    com.google.common.collect.LinkedHashMultiset create(int) -> create
    com.google.common.collect.LinkedHashMultiset create(java.lang.Iterable) -> create
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    int setCount(java.lang.Object,int) -> setCount
    int remove(java.lang.Object,int) -> remove
    int add(java.lang.Object,int) -> add
    int count(java.lang.Object) -> count
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    java.util.Set entrySet() -> entrySet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set elementSet() -> elementSet
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean setCount(java.lang.Object,int,int) -> setCount
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
com.google.common.collect.LinkedListMultimap -> com.google.common.collect.LinkedListMultimap:
    com.google.common.collect.LinkedListMultimap$Node head -> a
    com.google.common.collect.LinkedListMultimap$Node tail -> b
    java.util.Map keyToKeyList -> c
    int size -> d
    int modCount -> e
    java.util.Set keySet -> f
    com.google.common.collect.Multiset keys -> g
    java.util.List valuesList -> h
    java.util.List entries -> i
    java.util.Map map -> j
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.LinkedListMultimap create() -> create
    com.google.common.collect.LinkedListMultimap create(int) -> create
    com.google.common.collect.LinkedListMultimap create(com.google.common.collect.Multimap) -> create
    com.google.common.collect.LinkedListMultimap$Node addNode(java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> a
    void removeAllNodes(java.lang.Object) -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.List getCopy(java.lang.Object) -> c
    java.util.List removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.List get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    java.util.List values() -> values
    java.util.List entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection entries() -> entries
    java.util.Collection values() -> values
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    int access$000(com.google.common.collect.LinkedListMultimap) -> a
    com.google.common.collect.LinkedListMultimap$Node access$100(com.google.common.collect.LinkedListMultimap) -> b
    com.google.common.collect.LinkedListMultimap$Node access$200(com.google.common.collect.LinkedListMultimap) -> c
    void access$300(java.lang.Object) -> a
    void access$400(com.google.common.collect.LinkedListMultimap,com.google.common.collect.LinkedListMultimap$Node) -> a
    void access$500(com.google.common.collect.LinkedListMultimap,java.lang.Object) -> a
    java.util.Map access$600(com.google.common.collect.LinkedListMultimap) -> d
    com.google.common.collect.LinkedListMultimap$Node access$700(com.google.common.collect.LinkedListMultimap,java.lang.Object,java.lang.Object,com.google.common.collect.LinkedListMultimap$Node) -> a
    int access$1000(com.google.common.collect.LinkedListMultimap) -> e
    java.util.Map$Entry access$1100(com.google.common.collect.LinkedListMultimap$Node) -> a
com.google.common.collect.LinkedListMultimap$1 -> kY:
    java.lang.Object val$key -> a
    com.google.common.collect.LinkedListMultimap this$0 -> b
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.LinkedListMultimap$2 -> kZ:
    com.google.common.collect.LinkedListMultimap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.LinkedListMultimap$3 -> la:
    com.google.common.collect.LinkedListMultimap this$0 -> a
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.LinkedListMultimap$3$1 -> lb:
    com.google.common.collect.LinkedListMultimap$NodeIterator val$nodes -> a
    com.google.common.collect.LinkedListMultimap$3 this$1 -> b
    void set(java.lang.Object) -> set
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.LinkedListMultimap$4 -> lc:
    com.google.common.collect.LinkedListMultimap$Node val$node -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.LinkedListMultimap$5 -> ld:
    com.google.common.collect.LinkedListMultimap this$0 -> a
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.LinkedListMultimap$5$1 -> le:
    com.google.common.collect.LinkedListMultimap$5 this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.LinkedListMultimap$6 -> lf:
    com.google.common.collect.LinkedListMultimap this$0 -> a
    int size() -> size
    com.google.common.collect.Multimap multimap() -> a
    java.util.Iterator entryIterator() -> c
com.google.common.collect.LinkedListMultimap$6$1 -> lg:
    com.google.common.collect.LinkedListMultimap$6 this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.LinkedListMultimap$6$1$1 -> lh:
    java.lang.Object val$key -> a
    com.google.common.collect.LinkedListMultimap$6$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.LinkedListMultimap$DistinctKeyIterator -> li:
    java.util.Set seenKeys -> a
    com.google.common.collect.LinkedListMultimap$Node next -> b
    com.google.common.collect.LinkedListMultimap$Node current -> c
    int expectedModCount -> d
    com.google.common.collect.LinkedListMultimap this$0 -> e
    void checkForConcurrentModification() -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.LinkedListMultimap$KeyList -> lj:
    com.google.common.collect.LinkedListMultimap$Node head -> a
    com.google.common.collect.LinkedListMultimap$Node tail -> b
    int count -> c
com.google.common.collect.LinkedListMultimap$MultisetView -> lk:
    com.google.common.collect.LinkedListMultimap this$0 -> a
    int size() -> size
    int count(java.lang.Object) -> count
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
    java.util.Iterator iterator() -> iterator
    int remove(java.lang.Object,int) -> remove
    java.util.Set elementSet() -> elementSet
com.google.common.collect.LinkedListMultimap$MultisetView$1 -> ll:
    com.google.common.collect.LinkedListMultimap$MultisetView this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.LinkedListMultimap$MultisetView$1$1 -> lm:
    java.lang.Object val$key -> a
    com.google.common.collect.LinkedListMultimap$MultisetView$1 this$2 -> b
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.LinkedListMultimap$MultisetView$2 -> ln:
    com.google.common.collect.LinkedListMultimap$MultisetView this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.LinkedListMultimap$Node -> lo:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.collect.LinkedListMultimap$Node next -> c
    com.google.common.collect.LinkedListMultimap$Node previous -> d
    com.google.common.collect.LinkedListMultimap$Node nextSibling -> e
    com.google.common.collect.LinkedListMultimap$Node previousSibling -> f
    java.lang.String toString() -> toString
com.google.common.collect.LinkedListMultimap$NodeIterator -> lp:
    int nextIndex -> a
    com.google.common.collect.LinkedListMultimap$Node next -> b
    com.google.common.collect.LinkedListMultimap$Node current -> c
    com.google.common.collect.LinkedListMultimap$Node previous -> d
    int expectedModCount -> e
    com.google.common.collect.LinkedListMultimap this$0 -> f
    void checkForConcurrentModification() -> a
    boolean hasNext() -> hasNext
    com.google.common.collect.LinkedListMultimap$Node next() -> b
    void remove() -> remove
    boolean hasPrevious() -> hasPrevious
    com.google.common.collect.LinkedListMultimap$Node previous() -> c
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
    java.lang.Object previous() -> previous
    java.lang.Object next() -> next
com.google.common.collect.LinkedListMultimap$ValueForKeyIterator -> lq:
    java.lang.Object key -> a
    int nextIndex -> b
    com.google.common.collect.LinkedListMultimap$Node next -> c
    com.google.common.collect.LinkedListMultimap$Node current -> d
    com.google.common.collect.LinkedListMultimap$Node previous -> e
    com.google.common.collect.LinkedListMultimap this$0 -> f
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
com.google.common.collect.ListMultimap -> com.google.common.collect.ListMultimap:
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Lists -> com.google.common.collect.Lists:
    java.util.ArrayList newArrayList() -> newArrayList
    java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    int computeArrayListCapacity(int) -> a
    java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    java.util.ArrayList newArrayListWithCapacity(int) -> newArrayListWithCapacity
    java.util.ArrayList newArrayListWithExpectedSize(int) -> newArrayListWithExpectedSize
    java.util.LinkedList newLinkedList() -> newLinkedList
    java.util.LinkedList newLinkedList(java.lang.Iterable) -> newLinkedList
    java.util.concurrent.CopyOnWriteArrayList newCopyOnWriteArrayList() -> newCopyOnWriteArrayList
    java.util.concurrent.CopyOnWriteArrayList newCopyOnWriteArrayList(java.lang.Iterable) -> newCopyOnWriteArrayList
    java.util.List asList(java.lang.Object,java.lang.Object[]) -> asList
    java.util.List asList(java.lang.Object,java.lang.Object,java.lang.Object[]) -> asList
    java.util.List transform(java.util.List,com.google.common.base.Function) -> transform
    java.util.List partition(java.util.List,int) -> partition
    com.google.common.collect.ImmutableList charactersOf(java.lang.String) -> charactersOf
    java.util.List charactersOf(java.lang.CharSequence) -> charactersOf
    java.util.List reverse(java.util.List) -> reverse
    int hashCodeImpl(java.util.List) -> a
    boolean equalsImpl(java.util.List,java.lang.Object) -> a
    boolean addAllImpl(java.util.List,int,java.lang.Iterable) -> a
    int indexOfImpl(java.util.List,java.lang.Object) -> b
    int lastIndexOfImpl(java.util.List,java.lang.Object) -> c
    java.util.ListIterator listIteratorImpl(java.util.List,int) -> a
    java.util.List subListImpl(java.util.List,int,int) -> a
    java.util.List cast(java.lang.Iterable) -> a
com.google.common.collect.Lists$1 -> lr:
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$2 -> ls:
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$AbstractListWrapper -> lt:
    java.util.List backingList -> a
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    boolean contains(java.lang.Object) -> contains
    int size() -> size
com.google.common.collect.Lists$CharSequenceAsList -> lu:
    java.lang.CharSequence sequence -> a
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    int size() -> size
    java.util.List subList(int,int) -> subList
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$OnePlusArrayList -> lv:
    java.lang.Object first -> a
    java.lang.Object[] rest -> b
    long serialVersionUID -> serialVersionUID
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$Partition -> lw:
    java.util.List list -> a
    int size -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$RandomAccessListWrapper -> lx:
com.google.common.collect.Lists$RandomAccessPartition -> ly:
com.google.common.collect.Lists$RandomAccessReverseList -> lz:
com.google.common.collect.Lists$ReverseList -> lA:
    java.util.List forwardList -> a
    java.util.List getForwardList() -> a
    int reverseIndex(int) -> a
    int reversePosition(int) -> b
    void add(int,java.lang.Object) -> add
    void clear() -> clear
    java.lang.Object remove(int) -> remove
    void removeRange(int,int) -> removeRange
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.util.List subList(int,int) -> subList
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.Iterator iterator() -> iterator
    java.util.ListIterator listIterator(int) -> listIterator
    int access$000(com.google.common.collect.Lists$ReverseList,int) -> a
com.google.common.collect.Lists$ReverseList$1 -> lB:
    boolean canRemove -> a
    boolean canSet -> b
    java.util.ListIterator val$forwardIterator -> c
    com.google.common.collect.Lists$ReverseList this$0 -> d
    void add(java.lang.Object) -> add
    boolean hasNext() -> hasNext
    boolean hasPrevious() -> hasPrevious
    java.lang.Object next() -> next
    int nextIndex() -> nextIndex
    java.lang.Object previous() -> previous
    int previousIndex() -> previousIndex
    void remove() -> remove
    void set(java.lang.Object) -> set
com.google.common.collect.Lists$StringAsImmutableList -> lC:
    java.lang.String string -> b
    int hash -> a
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    boolean isPartialView() -> a
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
com.google.common.collect.Lists$TransformingRandomAccessList -> lD:
    java.util.List fromList -> a
    com.google.common.base.Function function -> b
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    java.lang.Object get(int) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(int) -> remove
    int size() -> size
com.google.common.collect.Lists$TransformingSequentialList -> lE:
    java.util.List fromList -> a
    com.google.common.base.Function function -> b
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    int size() -> size
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.Lists$TransformingSequentialList$1 -> lF:
    com.google.common.collect.Lists$TransformingSequentialList this$0 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Lists$TwoPlusArrayList -> lG:
    java.lang.Object first -> a
    java.lang.Object second -> b
    java.lang.Object[] rest -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    java.lang.Object get(int) -> get
com.google.common.collect.MapConstraint -> com.google.common.collect.MapConstraint:
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
    java.lang.String toString() -> toString
com.google.common.collect.MapConstraints -> com.google.common.collect.MapConstraints:
    com.google.common.collect.MapConstraint notNull() -> notNull
    java.util.Map constrainedMap(java.util.Map,com.google.common.collect.MapConstraint) -> constrainedMap
    com.google.common.collect.Multimap constrainedMultimap(com.google.common.collect.Multimap,com.google.common.collect.MapConstraint) -> constrainedMultimap
    com.google.common.collect.ListMultimap constrainedListMultimap(com.google.common.collect.ListMultimap,com.google.common.collect.MapConstraint) -> constrainedListMultimap
    com.google.common.collect.SetMultimap constrainedSetMultimap(com.google.common.collect.SetMultimap,com.google.common.collect.MapConstraint) -> constrainedSetMultimap
    com.google.common.collect.SortedSetMultimap constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap,com.google.common.collect.MapConstraint) -> constrainedSortedSetMultimap
    java.util.Set constrainedEntrySet(java.util.Set,com.google.common.collect.MapConstraint) -> c
    com.google.common.collect.BiMap constrainedBiMap(com.google.common.collect.BiMap,com.google.common.collect.MapConstraint) -> constrainedBiMap
    java.util.Set access$000(java.util.Set,com.google.common.collect.MapConstraint) -> a
    java.util.Map access$100(java.util.Map,com.google.common.collect.MapConstraint) -> a
    java.util.Set access$200(java.util.Set,com.google.common.collect.MapConstraint) -> b
    java.util.Collection access$300(java.util.Collection,com.google.common.collect.MapConstraint) -> a
    java.util.Collection access$400(java.lang.Object,java.lang.Iterable,com.google.common.collect.MapConstraint) -> a
    java.util.Map$Entry access$500(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> a
    java.util.Map$Entry access$700(java.util.Map$Entry,com.google.common.collect.MapConstraint) -> b
com.google.common.collect.MapConstraints$1 -> lH:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.MapConstraint val$constraint -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$2 -> lI:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.MapConstraint val$constraint -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object getValue() -> getValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$2$1 -> lJ:
    com.google.common.collect.MapConstraints$2 this$0 -> a
    java.lang.Object checkElement(java.lang.Object) -> checkElement
com.google.common.collect.MapConstraints$ConstrainedAsMapEntries -> lK:
    com.google.common.collect.MapConstraint constraint -> a
    java.util.Set entries -> b
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
    com.google.common.collect.MapConstraint access$600(com.google.common.collect.MapConstraints$ConstrainedAsMapEntries) -> a
com.google.common.collect.MapConstraints$ConstrainedAsMapEntries$1 -> lL:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.MapConstraints$ConstrainedAsMapEntries this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedAsMapValues -> lM:
    java.util.Collection delegate -> a
    java.util.Set entrySet -> b
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedAsMapValues$1 -> lN:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.MapConstraints$ConstrainedAsMapValues this$0 -> b
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.MapConstraints$ConstrainedBiMap -> lO:
    com.google.common.collect.BiMap inverse -> a
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Map delegate() -> delegate
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntries -> lP:
    com.google.common.collect.MapConstraint constraint -> a
    java.util.Collection entries -> b
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntries$1 -> lQ:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.MapConstraints$ConstrainedEntries this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedEntrySet -> lR:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapConstraints$ConstrainedListMultimap -> lS:
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.MapConstraints$ConstrainedMap -> lT:
    java.util.Map delegate -> a
    com.google.common.collect.MapConstraint constraint -> b
    java.util.Set entrySet -> c
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap -> lU:
    com.google.common.collect.MapConstraint constraint -> a
    com.google.common.collect.Multimap delegate -> b
    java.util.Collection entries -> c
    java.util.Map asMap -> d
    com.google.common.collect.Multimap delegate() -> delegate
    java.util.Map asMap() -> asMap
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap$1 -> lV:
    java.util.Set entrySet -> a
    java.util.Collection values -> b
    java.util.Map val$asMapDelegate -> c
    com.google.common.collect.MapConstraints$ConstrainedMultimap this$0 -> d
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.util.Collection get(java.lang.Object) -> a
    java.util.Collection values() -> values
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapConstraints$ConstrainedMultimap$2 -> lW:
    java.lang.Object val$key -> a
    com.google.common.collect.MapConstraints$ConstrainedMultimap this$0 -> b
    java.lang.Object checkElement(java.lang.Object) -> checkElement
com.google.common.collect.MapConstraints$ConstrainedSetMultimap -> lX:
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    java.util.Collection removeAll(java.lang.Object) -> removeAll
com.google.common.collect.MapConstraints$ConstrainedSortedSetMultimap -> lY:
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.MapConstraints$InverseConstraint -> lZ:
    com.google.common.collect.MapConstraint constraint -> a
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
com.google.common.collect.MapConstraints$NotNullMapConstraint -> ma:
    com.google.common.collect.MapConstraints$NotNullMapConstraint INSTANCE -> a
    com.google.common.collect.MapConstraints$NotNullMapConstraint[] $VALUES -> b
    com.google.common.collect.MapConstraints$NotNullMapConstraint[] values() -> values
    com.google.common.collect.MapConstraints$NotNullMapConstraint valueOf(java.lang.String) -> valueOf
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
    java.lang.String toString() -> toString
com.google.common.collect.MapDifference -> com.google.common.collect.MapDifference:
    boolean areEqual() -> areEqual
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesDiffering() -> entriesDiffering
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapDifference$ValueDifference -> com.google.common.collect.MapDifference$ValueDifference:
    java.lang.Object leftValue() -> leftValue
    java.lang.Object rightValue() -> rightValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.MapMaker -> com.google.common.collect.MapMaker:
    boolean useCustomMap -> b
    int initialCapacity -> c
    int concurrencyLevel -> d
    int maximumSize -> e
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> f
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> g
    long expireAfterWriteNanos -> h
    long expireAfterAccessNanos -> i
    com.google.common.collect.MapMaker$RemovalCause nullRemovalCause -> j
    com.google.common.base.Equivalence keyEquivalence -> k
    com.google.common.base.Ticker ticker -> l
    com.google.common.collect.MapMaker keyEquivalence(com.google.common.base.Equivalence) -> a
    com.google.common.base.Equivalence getKeyEquivalence() -> b
    com.google.common.collect.MapMaker initialCapacity(int) -> initialCapacity
    int getInitialCapacity() -> c
    com.google.common.collect.MapMaker maximumSize(int) -> a
    com.google.common.collect.MapMaker concurrencyLevel(int) -> concurrencyLevel
    int getConcurrencyLevel() -> d
    com.google.common.collect.MapMaker weakKeys() -> weakKeys
    com.google.common.collect.MapMaker setKeyStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> a
    com.google.common.collect.MapMakerInternalMap$Strength getKeyStrength() -> e
    com.google.common.collect.MapMaker weakValues() -> weakValues
    com.google.common.collect.MapMaker softValues() -> softValues
    com.google.common.collect.MapMaker setValueStrength(com.google.common.collect.MapMakerInternalMap$Strength) -> b
    com.google.common.collect.MapMakerInternalMap$Strength getValueStrength() -> f
    com.google.common.collect.MapMaker expireAfterWrite(long,java.util.concurrent.TimeUnit) -> a
    void checkExpiration(long,java.util.concurrent.TimeUnit) -> c
    long getExpireAfterWriteNanos() -> g
    com.google.common.collect.MapMaker expireAfterAccess(long,java.util.concurrent.TimeUnit) -> b
    long getExpireAfterAccessNanos() -> h
    com.google.common.base.Ticker getTicker() -> i
    com.google.common.collect.GenericMapMaker removalListener(com.google.common.collect.MapMaker$RemovalListener) -> a
    java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    com.google.common.collect.MapMakerInternalMap makeCustomMap() -> j
    java.util.concurrent.ConcurrentMap makeComputingMap(com.google.common.base.Function) -> makeComputingMap
    java.lang.String toString() -> toString
    com.google.common.collect.GenericMapMaker softValues() -> softValues
    com.google.common.collect.GenericMapMaker weakValues() -> weakValues
    com.google.common.collect.GenericMapMaker weakKeys() -> weakKeys
    com.google.common.collect.GenericMapMaker concurrencyLevel(int) -> concurrencyLevel
    com.google.common.collect.GenericMapMaker initialCapacity(int) -> initialCapacity
com.google.common.collect.MapMaker$ComputingMapAdapter -> mb:
    long serialVersionUID -> serialVersionUID
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.MapMaker$NullComputingConcurrentMap -> mc:
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function computingFunction -> a
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object compute(java.lang.Object) -> a
com.google.common.collect.MapMaker$NullConcurrentMap -> md:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMaker$RemovalListener removalListener -> a
    com.google.common.collect.MapMaker$RemovalCause removalCause -> b
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    void notifyRemoval(java.lang.Object,java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.util.Set entrySet() -> entrySet
com.google.common.collect.MapMaker$RemovalCause -> me:
    com.google.common.collect.MapMaker$RemovalCause EXPLICIT -> a
    com.google.common.collect.MapMaker$RemovalCause REPLACED -> b
    com.google.common.collect.MapMaker$RemovalCause COLLECTED -> c
    com.google.common.collect.MapMaker$RemovalCause EXPIRED -> d
    com.google.common.collect.MapMaker$RemovalCause SIZE -> e
    com.google.common.collect.MapMaker$RemovalCause[] $VALUES -> f
    com.google.common.collect.MapMaker$RemovalCause[] values() -> values
    com.google.common.collect.MapMaker$RemovalCause valueOf(java.lang.String) -> valueOf
com.google.common.collect.MapMaker$RemovalCause$1 -> mf:
com.google.common.collect.MapMaker$RemovalCause$2 -> mg:
com.google.common.collect.MapMaker$RemovalCause$3 -> mh:
com.google.common.collect.MapMaker$RemovalCause$4 -> mi:
com.google.common.collect.MapMaker$RemovalCause$5 -> mj:
com.google.common.collect.MapMaker$RemovalListener -> mk:
com.google.common.collect.MapMaker$RemovalNotification -> ml:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMaker$RemovalCause cause -> a
com.google.common.collect.MapMakerInternalMap -> mm:
    java.util.logging.Logger logger -> a
    int segmentMask -> b
    int segmentShift -> c
    com.google.common.collect.MapMakerInternalMap$Segment[] segments -> d
    int concurrencyLevel -> e
    com.google.common.base.Equivalence keyEquivalence -> f
    com.google.common.base.Equivalence valueEquivalence -> g
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> h
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> i
    int maximumSize -> j
    long expireAfterAccessNanos -> k
    long expireAfterWriteNanos -> l
    java.util.Queue removalNotificationQueue -> m
    com.google.common.collect.MapMaker$RemovalListener removalListener -> n
    com.google.common.collect.MapMakerInternalMap$EntryFactory entryFactory -> o
    com.google.common.base.Ticker ticker -> p
    com.google.common.collect.MapMakerInternalMap$ValueReference UNSET -> q
    java.util.Queue DISCARDING_QUEUE -> r
    java.util.Set keySet -> s
    java.util.Collection values -> t
    java.util.Set entrySet -> u
    long serialVersionUID -> serialVersionUID
    boolean evictsBySize() -> a
    boolean expires() -> b
    boolean expiresAfterAccess() -> c
    boolean usesKeyReferences() -> d
    boolean usesValueReferences() -> e
    com.google.common.collect.MapMakerInternalMap$ValueReference unset() -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nullEntry() -> g
    java.util.Queue discardingQueue() -> h
    int hash(java.lang.Object) -> b
    void reclaimValue(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    void reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$Segment segmentFor(int) -> a
    com.google.common.collect.MapMakerInternalMap$Segment createSegment(int,int) -> a
    java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    boolean isExpired(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> a
    void connectExpirables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void nullifyExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    void processPendingNotifications() -> i
    void connectEvictables(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    void nullifyEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> e
    boolean isEmpty() -> isEmpty
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object) -> c
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object writeReplace() -> writeReplace
com.google.common.collect.MapMakerInternalMap$1 -> mn:
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.MapMakerInternalMap$2 -> mo:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.MapMakerInternalMap$AbstractReferenceEntry -> mp:
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy -> mq:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.MapMakerInternalMap$Strength keyStrength -> b
    com.google.common.collect.MapMakerInternalMap$Strength valueStrength -> c
    com.google.common.base.Equivalence keyEquivalence -> d
    com.google.common.base.Equivalence valueEquivalence -> e
    long expireAfterWriteNanos -> f
    long expireAfterAccessNanos -> g
    int maximumSize -> h
    int concurrencyLevel -> i
    com.google.common.collect.MapMaker$RemovalListener removalListener -> j
    java.util.concurrent.ConcurrentMap delegate -> k
    java.util.concurrent.ConcurrentMap delegate() -> delegate
    void writeMapTo(java.io.ObjectOutputStream) -> a
    com.google.common.collect.MapMaker readMapMaker(java.io.ObjectInputStream) -> a
    void readEntries(java.io.ObjectInputStream) -> b
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.MapMakerInternalMap$EntryFactory -> mr:
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG -> a
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EXPIRABLE -> b
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EVICTABLE -> c
    com.google.common.collect.MapMakerInternalMap$EntryFactory STRONG_EXPIRABLE_EVICTABLE -> d
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK -> e
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EXPIRABLE -> f
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EVICTABLE -> g
    com.google.common.collect.MapMakerInternalMap$EntryFactory WEAK_EXPIRABLE_EVICTABLE -> h
    com.google.common.collect.MapMakerInternalMap$EntryFactory[][] factories -> i
    com.google.common.collect.MapMakerInternalMap$EntryFactory[] $VALUES -> j
    com.google.common.collect.MapMakerInternalMap$EntryFactory[] values() -> values
    com.google.common.collect.MapMakerInternalMap$EntryFactory valueOf(java.lang.String) -> valueOf
    com.google.common.collect.MapMakerInternalMap$EntryFactory getFactory(com.google.common.collect.MapMakerInternalMap$Strength,boolean,boolean) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void copyExpirableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void copyEvictableEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$EntryFactory$1 -> ms:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$2 -> mt:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$3 -> mu:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$4 -> mv:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$5 -> mw:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$6 -> mx:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$7 -> my:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryFactory$8 -> mz:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(com.google.common.collect.MapMakerInternalMap$Segment,java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
com.google.common.collect.MapMakerInternalMap$EntryIterator -> mA:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$EntrySet -> mB:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.MapMakerInternalMap$EvictionQueue -> mC:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry head -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.collect.MapMakerInternalMap$EvictionQueue$1 -> mD:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> b
    com.google.common.collect.MapMakerInternalMap$EvictionQueue this$0 -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$EvictionQueue$2 -> mE:
    com.google.common.collect.MapMakerInternalMap$EvictionQueue this$0 -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.MapMakerInternalMap$ExpirationQueue -> mF:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry head -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry peek() -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    boolean offer(java.lang.Object) -> offer
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$1 -> mG:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> b
    com.google.common.collect.MapMakerInternalMap$ExpirationQueue this$0 -> c
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$ExpirationQueue$2 -> mH:
    com.google.common.collect.MapMakerInternalMap$ExpirationQueue this$0 -> a
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.MapMakerInternalMap$HashIterator -> mI:
    int nextSegmentIndex -> b
    int nextTableIndex -> c
    com.google.common.collect.MapMakerInternalMap$Segment currentSegment -> d
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEntry -> f
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextExternal -> g
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry lastReturned -> h
    com.google.common.collect.MapMakerInternalMap this$0 -> i
    void advance() -> b
    boolean nextInChain() -> c
    boolean nextInTable() -> d
    boolean advanceTo(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean hasNext() -> hasNext
    com.google.common.collect.MapMakerInternalMap$WriteThroughEntry nextEntry() -> a
    void remove() -> remove
com.google.common.collect.MapMakerInternalMap$KeyIterator -> mJ:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$KeySet -> mK:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.MapMakerInternalMap$NullEntry -> mL:
    com.google.common.collect.MapMakerInternalMap$NullEntry INSTANCE -> a
    com.google.common.collect.MapMakerInternalMap$NullEntry[] $VALUES -> b
    com.google.common.collect.MapMakerInternalMap$NullEntry[] values() -> values
    com.google.common.collect.MapMakerInternalMap$NullEntry valueOf(java.lang.String) -> valueOf
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$ReferenceEntry -> mM:
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
    int getHash() -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$Segment -> mN:
    com.google.common.collect.MapMakerInternalMap map -> a
    int count -> b
    int modCount -> c
    int threshold -> d
    java.util.concurrent.atomic.AtomicReferenceArray table -> e
    int maxSegmentSize -> f
    java.lang.ref.ReferenceQueue keyReferenceQueue -> g
    java.lang.ref.ReferenceQueue valueReferenceQueue -> h
    java.util.Queue recencyQueue -> i
    java.util.concurrent.atomic.AtomicInteger readCount -> j
    java.util.Queue evictionQueue -> k
    java.util.Queue expirationQueue -> l
    java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry newEntry(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry copyEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void setValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    void tryDrainReferenceQueues() -> e
    void drainReferenceQueues() -> f
    void recordRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void recordLockedRead(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    void drainRecencyQueue() -> g
    void recordExpirationTime(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,long) -> a
    void tryExpireEntries() -> h
    void expireEntries() -> i
    void enqueueNotification(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMaker$RemovalCause) -> a
    void enqueueNotification$4edc571b(java.lang.Object,java.lang.Object,com.google.common.collect.MapMaker$RemovalCause) -> a
    boolean evictEntries() -> j
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry(java.lang.Object,int) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getLiveEntry(java.lang.Object,int) -> e
    java.lang.Object get(java.lang.Object,int) -> b
    boolean containsKey(java.lang.Object,int) -> c
    java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> a
    boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> a
    java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> a
    java.lang.Object remove(java.lang.Object,int) -> d
    boolean remove(java.lang.Object,int,java.lang.Object) -> b
    void clear() -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry removeFromChain(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    void removeCollectedEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    boolean reclaimKey(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int) -> a
    boolean reclaimValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    boolean clearValue(java.lang.Object,int,com.google.common.collect.MapMakerInternalMap$ValueReference) -> b
    boolean removeEntry(com.google.common.collect.MapMakerInternalMap$ReferenceEntry,int,com.google.common.collect.MapMaker$RemovalCause) -> a
    boolean isCollected(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    java.lang.Object getLiveValue(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    void postReadCleanup() -> b
    void runLockedCleanup() -> c
    void runUnlockedCleanup() -> d
com.google.common.collect.MapMakerInternalMap$SerializationProxy -> mO:
    long serialVersionUID -> serialVersionUID
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.MapMakerInternalMap$SoftValueReference -> mP:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry entry -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
com.google.common.collect.MapMakerInternalMap$Strength -> mQ:
    com.google.common.collect.MapMakerInternalMap$Strength STRONG -> a
    com.google.common.collect.MapMakerInternalMap$Strength SOFT -> b
    com.google.common.collect.MapMakerInternalMap$Strength WEAK -> c
    com.google.common.collect.MapMakerInternalMap$Strength[] $VALUES -> d
    com.google.common.collect.MapMakerInternalMap$Strength[] values() -> values
    com.google.common.collect.MapMakerInternalMap$Strength valueOf(java.lang.String) -> valueOf
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$Strength$1 -> mR:
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$Strength$2 -> mS:
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$Strength$3 -> mT:
    com.google.common.collect.MapMakerInternalMap$ValueReference referenceValue(com.google.common.collect.MapMakerInternalMap$Segment,com.google.common.collect.MapMakerInternalMap$ReferenceEntry,java.lang.Object) -> a
    com.google.common.base.Equivalence defaultEquivalence() -> a
com.google.common.collect.MapMakerInternalMap$StrongEntry -> mU:
    java.lang.Object key -> a
    int hash -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> c
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> d
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    int getHash() -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
com.google.common.collect.MapMakerInternalMap$StrongEvictableEntry -> mV:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$StrongExpirableEntry -> mW:
    long time -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> g
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$StrongExpirableEvictableEntry -> mX:
    long time -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> g
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> h
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> i
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$StrongValueReference -> mY:
    java.lang.Object referent -> a
    java.lang.Object get() -> get
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
com.google.common.collect.MapMakerInternalMap$ValueIterator -> mZ:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.lang.Object next() -> next
com.google.common.collect.MapMakerInternalMap$ValueReference -> na:
    java.lang.Object get() -> get
    java.lang.Object waitForValue() -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    boolean isComputingReference() -> b
com.google.common.collect.MapMakerInternalMap$Values -> nb:
    com.google.common.collect.MapMakerInternalMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.common.collect.MapMakerInternalMap$WeakEntry -> nc:
    int hash -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry next -> b
    com.google.common.collect.MapMakerInternalMap$ValueReference valueReference -> c
    java.lang.Object getKey() -> d
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
    com.google.common.collect.MapMakerInternalMap$ValueReference getValueReference() -> a
    void setValueReference(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    int getHash() -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNext() -> b
com.google.common.collect.MapMakerInternalMap$WeakEvictableEntry -> nd:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$WeakExpirableEntry -> ne:
    long time -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> f
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
com.google.common.collect.MapMakerInternalMap$WeakExpirableEvictableEntry -> nf:
    long time -> d
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextExpirable -> e
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousExpirable -> f
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry nextEvictable -> g
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry previousEvictable -> h
    long getExpirationTime() -> e
    void setExpirationTime(long) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextExpirable() -> f
    void setNextExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousExpirable() -> g
    void setPreviousExpirable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> b
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getNextEvictable() -> h
    void setNextEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> c
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getPreviousEvictable() -> i
    void setPreviousEvictable(com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> d
com.google.common.collect.MapMakerInternalMap$WeakValueReference -> ng:
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry entry -> a
    com.google.common.collect.MapMakerInternalMap$ReferenceEntry getEntry() -> a
    void clear(com.google.common.collect.MapMakerInternalMap$ValueReference) -> a
    com.google.common.collect.MapMakerInternalMap$ValueReference copyFor(java.lang.ref.ReferenceQueue,java.lang.Object,com.google.common.collect.MapMakerInternalMap$ReferenceEntry) -> a
    boolean isComputingReference() -> b
    java.lang.Object waitForValue() -> c
com.google.common.collect.MapMakerInternalMap$WriteThroughEntry -> nh:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.google.common.collect.MapMakerInternalMap this$0 -> c
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.Maps -> com.google.common.collect.Maps:
    com.google.common.base.Joiner$MapJoiner STANDARD_JOINER -> a
    com.google.common.base.Function keyFunction() -> a
    com.google.common.base.Function valueFunction() -> b
    com.google.common.collect.ImmutableMap immutableEnumMap(java.util.Map) -> immutableEnumMap
    java.util.HashMap newHashMap() -> newHashMap
    java.util.HashMap newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
    int capacity(int) -> a
    java.util.HashMap newHashMap(java.util.Map) -> newHashMap
    java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    java.util.LinkedHashMap newLinkedHashMap(java.util.Map) -> newLinkedHashMap
    java.util.concurrent.ConcurrentMap newConcurrentMap() -> newConcurrentMap
    java.util.TreeMap newTreeMap() -> newTreeMap
    java.util.TreeMap newTreeMap(java.util.SortedMap) -> newTreeMap
    java.util.TreeMap newTreeMap(java.util.Comparator) -> newTreeMap
    java.util.EnumMap newEnumMap(java.lang.Class) -> newEnumMap
    java.util.EnumMap newEnumMap(java.util.Map) -> newEnumMap
    java.util.IdentityHashMap newIdentityHashMap() -> newIdentityHashMap
    com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map) -> difference
    com.google.common.collect.MapDifference difference(java.util.Map,java.util.Map,com.google.common.base.Equivalence) -> difference
    com.google.common.collect.SortedMapDifference difference(java.util.SortedMap,java.util.Map) -> difference
    java.util.Map asMap(java.util.Set,com.google.common.base.Function) -> asMap
    java.util.SortedMap asMap(java.util.SortedSet,com.google.common.base.Function) -> asMap
    java.util.NavigableMap asMap(java.util.NavigableSet,com.google.common.base.Function) -> asMap
    com.google.common.collect.ImmutableMap toMap(java.lang.Iterable,com.google.common.base.Function) -> toMap
    com.google.common.collect.ImmutableMap toMap(java.util.Iterator,com.google.common.base.Function) -> toMap
    com.google.common.collect.ImmutableMap uniqueIndex(java.lang.Iterable,com.google.common.base.Function) -> uniqueIndex
    com.google.common.collect.ImmutableMap uniqueIndex(java.util.Iterator,com.google.common.base.Function) -> uniqueIndex
    com.google.common.collect.ImmutableMap fromProperties(java.util.Properties) -> fromProperties
    java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
    java.util.Set unmodifiableEntrySet(java.util.Set) -> a
    java.util.Map$Entry unmodifiableEntry(java.util.Map$Entry) -> a
    com.google.common.collect.BiMap synchronizedBiMap(com.google.common.collect.BiMap) -> synchronizedBiMap
    com.google.common.collect.BiMap unmodifiableBiMap(com.google.common.collect.BiMap) -> unmodifiableBiMap
    java.util.Map transformValues(java.util.Map,com.google.common.base.Function) -> transformValues
    java.util.SortedMap transformValues(java.util.SortedMap,com.google.common.base.Function) -> transformValues
    java.util.NavigableMap transformValues(java.util.NavigableMap,com.google.common.base.Function) -> transformValues
    com.google.common.collect.Maps$EntryTransformer asEntryTransformer(com.google.common.base.Function) -> a
    java.util.Map transformEntries(java.util.Map,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    java.util.SortedMap transformEntries(java.util.SortedMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    java.util.NavigableMap transformEntries(java.util.NavigableMap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    java.util.Map filterKeys(java.util.Map,com.google.common.base.Predicate) -> filterKeys
    java.util.SortedMap filterKeys(java.util.SortedMap,com.google.common.base.Predicate) -> filterKeys
    java.util.NavigableMap filterKeys(java.util.NavigableMap,com.google.common.base.Predicate) -> filterKeys
    com.google.common.collect.BiMap filterKeys(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterKeys
    java.util.Map filterValues(java.util.Map,com.google.common.base.Predicate) -> filterValues
    java.util.SortedMap filterValues(java.util.SortedMap,com.google.common.base.Predicate) -> filterValues
    java.util.NavigableMap filterValues(java.util.NavigableMap,com.google.common.base.Predicate) -> filterValues
    com.google.common.collect.BiMap filterValues(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterValues
    java.util.Map filterEntries(java.util.Map,com.google.common.base.Predicate) -> filterEntries
    java.util.SortedMap filterEntries(java.util.SortedMap,com.google.common.base.Predicate) -> filterEntries
    java.util.NavigableMap filterEntries(java.util.NavigableMap,com.google.common.base.Predicate) -> filterEntries
    com.google.common.collect.BiMap filterEntries(com.google.common.collect.BiMap,com.google.common.base.Predicate) -> filterEntries
    java.util.Map filterFiltered(com.google.common.collect.Maps$AbstractFilteredMap,com.google.common.base.Predicate) -> a
    java.util.NavigableMap unmodifiableNavigableMap(java.util.NavigableMap) -> unmodifiableNavigableMap
    java.util.NavigableMap synchronizedNavigableMap(java.util.NavigableMap) -> synchronizedNavigableMap
    java.lang.Object safeGet(java.util.Map,java.lang.Object) -> a
    boolean safeContainsKey(java.util.Map,java.lang.Object) -> b
    java.lang.Object safeRemove(java.util.Map,java.lang.Object) -> c
    boolean containsEntryImpl(java.util.Collection,java.lang.Object) -> a
    boolean removeEntryImpl(java.util.Collection,java.lang.Object) -> b
    boolean equalsImpl(java.util.Map,java.lang.Object) -> d
    java.lang.String toStringImpl(java.util.Map) -> a
    void putAllImpl(java.util.Map,java.util.Map) -> a
    boolean containsKeyImpl(java.util.Map,java.lang.Object) -> e
    boolean containsValueImpl(java.util.Map,java.lang.Object) -> f
    java.util.Iterator keyIterator(java.util.Iterator) -> a
    java.lang.Object keyOrNull(java.util.Map$Entry) -> b
    java.lang.Object valueOrNull(java.util.Map$Entry) -> c
    java.util.Iterator valueIterator(java.util.Iterator) -> b
    com.google.common.collect.UnmodifiableIterator valueIterator(com.google.common.collect.UnmodifiableIterator) -> a
    java.util.Set access$100(java.util.Set) -> b
    java.util.Iterator access$200(java.util.Set,com.google.common.base.Function) -> a
    java.util.SortedSet access$300(java.util.SortedSet) -> a
    java.util.NavigableSet access$400(java.util.NavigableSet) -> a
    java.util.Map$Entry access$700(java.util.Map$Entry) -> d
com.google.common.collect.Maps$1 -> ni:
    com.google.common.base.Function val$function -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Maps$2 -> nj:
    java.util.Set val$set -> a
    java.util.Set delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$3 -> nk:
    java.util.SortedSet val$set -> a
    java.util.SortedSet delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$4 -> nl:
    java.util.NavigableSet val$set -> a
    java.util.NavigableSet delegate() -> delegate
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.SortedSet delegate() -> delegate
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$5 -> nm:
    java.util.Map$Entry val$entry -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$6 -> nn:
    com.google.common.base.Function val$function -> a
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$7 -> no:
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Maps$8 -> np:
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Maps$9 -> nq:
    com.google.common.collect.UnmodifiableIterator val$entryIterator -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Maps$AbstractFilteredMap -> nr:
    java.util.Map unfiltered -> a
    com.google.common.base.Predicate predicate -> b
    java.util.Collection values -> c
    boolean apply(java.lang.Object,java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Collection values() -> values
com.google.common.collect.Maps$AbstractFilteredMap$Values -> ns:
    com.google.common.collect.Maps$AbstractFilteredMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$AbstractFilteredMap$Values$1 -> nt:
    java.util.Iterator val$entryIterator -> a
    com.google.common.collect.Maps$AbstractFilteredMap$Values this$1 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Maps$AsMapView -> nu:
    java.util.Set set -> b
    com.google.common.base.Function function -> a
    java.util.Set backingSet() -> a
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set createEntrySet() -> b
com.google.common.collect.Maps$AsMapView$1 -> nv:
    com.google.common.collect.Maps$AsMapView this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$DescendingMap -> nw:
    java.util.Comparator comparator -> a
    java.util.Set entrySet -> b
    java.util.NavigableSet navigableKeySet -> c
    java.util.NavigableMap forward() -> a
    java.util.Map delegate() -> delegate
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.Set entrySet() -> entrySet
    java.util.Iterator entryIterator() -> entryIterator
    java.util.Set keySet() -> keySet
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$DescendingMap$1 -> nx:
    com.google.common.collect.Maps$DescendingMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$DescendingMap$2 -> ny:
    com.google.common.collect.Maps$DescendingMap this$0 -> a
    java.util.Map map() -> a
com.google.common.collect.Maps$EntryFunction -> nz:
    com.google.common.collect.Maps$EntryFunction KEY -> a
    com.google.common.collect.Maps$EntryFunction VALUE -> b
    com.google.common.collect.Maps$EntryFunction[] $VALUES -> c
    com.google.common.collect.Maps$EntryFunction[] values() -> values
    com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String) -> valueOf
com.google.common.collect.Maps$EntryFunction$1 -> nA:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$EntryFunction$2 -> nB:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Maps$EntrySet -> nC:
    java.util.Map map() -> a
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$EntryTransformer -> com.google.common.collect.Maps$EntryTransformer:
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Maps$FilteredEntryBiMap -> nD:
    com.google.common.collect.BiMap inverse -> g
    com.google.common.collect.BiMap unfiltered() -> a
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Collection values() -> values
com.google.common.collect.Maps$FilteredEntryBiMap$1 -> nE:
    com.google.common.base.Predicate val$forwardPredicate -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Maps$FilteredEntryMap -> nF:
    java.util.Set filteredEntrySet -> d
    java.util.Set entrySet -> e
    java.util.Set keySet -> f
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Set createKeySet() -> b
com.google.common.collect.Maps$FilteredEntryMap$EntrySet -> nG:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> a
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 -> nH:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet this$1 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1$1 -> nI:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.Maps$FilteredEntryMap$EntrySet$1 this$2 -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$FilteredEntryMap$KeySet -> nJ:
    com.google.common.collect.Maps$FilteredEntryMap this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.google.common.collect.Maps$FilteredEntryMap$KeySet$1 -> nK:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.Maps$FilteredEntryMap$KeySet this$1 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Maps$FilteredEntryNavigableMap -> nL:
    java.util.NavigableMap sortedMap() -> a
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.Map$Entry pollFirstSatisfyingEntry(java.util.Iterator) -> a
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap sortedMap() -> c
    java.util.Set keySet() -> keySet
    java.util.Set createKeySet() -> b
com.google.common.collect.Maps$FilteredEntryNavigableMap$1 -> nM:
    com.google.common.collect.Maps$FilteredEntryNavigableMap this$0 -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Maps$FilteredEntrySortedMap -> nN:
    java.util.SortedMap sortedMap() -> c
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$FilteredKeyMap -> nO:
    com.google.common.base.Predicate keyPredicate -> d
    java.util.Set entrySet -> e
    java.util.Set keySet -> f
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    boolean containsKey(java.lang.Object) -> containsKey
com.google.common.collect.Maps$ImprovedAbstractMap -> nP:
    java.util.Set entrySet -> a
    java.util.Set keySet -> b
    java.util.Collection values -> c
    java.util.Set createEntrySet() -> b
    java.util.Set entrySet() -> entrySet
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
com.google.common.collect.Maps$ImprovedAbstractMap$1 -> nQ:
    com.google.common.collect.Maps$ImprovedAbstractMap this$0 -> a
    java.util.Map map() -> a
com.google.common.collect.Maps$ImprovedAbstractMap$2 -> nR:
    com.google.common.collect.Maps$ImprovedAbstractMap this$0 -> a
    java.util.Map map() -> a
com.google.common.collect.Maps$KeyPredicate -> nS:
    com.google.common.base.Predicate keyPredicate -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Maps$KeySet -> nT:
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.Maps$MapDifferenceImpl -> nU:
    boolean areEqual -> a
    java.util.Map onlyOnLeft -> b
    java.util.Map onlyOnRight -> c
    java.util.Map onBoth -> d
    java.util.Map differences -> e
    boolean areEqual() -> areEqual
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesDiffering() -> entriesDiffering
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Maps$NavigableAsMapView -> nV:
    java.util.NavigableSet set -> a
    com.google.common.base.Function function -> b
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.Comparator comparator() -> comparator
    java.lang.Object get(java.lang.Object) -> get
    void clear() -> clear
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    int size() -> size
    java.util.NavigableMap descendingMap() -> descendingMap
com.google.common.collect.Maps$NavigableKeySet -> nW:
    java.util.NavigableMap map -> a
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.Map map() -> a
com.google.common.collect.Maps$SortedAsMapView -> nX:
    java.util.Comparator comparator() -> comparator
    java.util.Set keySet() -> keySet
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.Set backingSet() -> a
com.google.common.collect.Maps$SortedMapDifferenceImpl -> nY:
    java.util.SortedMap entriesDiffering() -> entriesDiffering
    java.util.SortedMap entriesInCommon() -> entriesInCommon
    java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesDiffering() -> entriesDiffering
    java.util.Map entriesInCommon() -> entriesInCommon
    java.util.Map entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.Map entriesOnlyOnLeft() -> entriesOnlyOnLeft
com.google.common.collect.Maps$TransformedEntriesMap -> nZ:
    java.util.Map fromMap -> a
    com.google.common.collect.Maps$EntryTransformer transformer -> b
    java.util.Set entrySet -> c
    java.util.Collection values -> d
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
com.google.common.collect.Maps$TransformedEntriesMap$1 -> oa:
    com.google.common.collect.Maps$TransformedEntriesMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Maps$TransformedEntriesMap$1$1 -> ob:
    com.google.common.collect.Maps$TransformedEntriesMap$1 this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Maps$TransformedEntriesMap$1$1$1 -> oc:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.Maps$TransformedEntriesMap$1$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Maps$TransformedEntriesMap$2 -> od:
    com.google.common.collect.Maps$TransformedEntriesMap this$0 -> a
    java.util.Map map() -> a
com.google.common.collect.Maps$TransformedEntriesNavigableMap -> oe:
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.Map$Entry transformEntry(java.util.Map$Entry) -> a
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap fromMap() -> a
com.google.common.collect.Maps$TransformedEntriesSortedMap -> of:
    java.util.SortedMap fromMap() -> a
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.Maps$UnmodifiableBiMap -> og:
    java.util.Map unmodifiableMap -> a
    com.google.common.collect.BiMap delegate -> b
    com.google.common.collect.BiMap inverse -> c
    java.util.Set values -> d
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> delegate
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Set values() -> values
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntries -> oh:
    java.util.Collection entries -> a
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntries$1 -> oi:
    java.util.Iterator val$delegate -> a
    com.google.common.collect.Maps$UnmodifiableEntries this$0 -> b
    void remove() -> remove
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$UnmodifiableEntrySet -> oj:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Maps$UnmodifiableNavigableMap -> ok:
    java.util.NavigableMap delegate -> a
    com.google.common.collect.Maps$UnmodifiableNavigableMap descendingMap -> b
    java.util.SortedMap delegate() -> delegate
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.Set keySet() -> keySet
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.Map delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Maps$ValueDifferenceImpl -> ol:
    java.lang.Object left -> a
    java.lang.Object right -> b
    com.google.common.collect.MapDifference$ValueDifference create(java.lang.Object,java.lang.Object) -> a
    java.lang.Object leftValue() -> leftValue
    java.lang.Object rightValue() -> rightValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Maps$ValuePredicate -> om:
    com.google.common.base.Predicate valuePredicate -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Maps$Values -> on:
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.common.collect.MinMaxPriorityQueue -> com.google.common.collect.MinMaxPriorityQueue:
    com.google.common.collect.MinMaxPriorityQueue$Heap minHeap -> b
    com.google.common.collect.MinMaxPriorityQueue$Heap maxHeap -> c
    int maximumSize -> a
    java.lang.Object[] queue -> d
    int size -> e
    int modCount -> f
    com.google.common.collect.MinMaxPriorityQueue create() -> create
    com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    com.google.common.collect.MinMaxPriorityQueue$Builder orderedBy(java.util.Comparator) -> orderedBy
    com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    int size() -> size
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean offer(java.lang.Object) -> offer
    java.lang.Object poll() -> poll
    java.lang.Object elementData(int) -> a
    java.lang.Object peek() -> peek
    int getMaxElementIndex() -> a
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object removeFirst() -> removeFirst
    java.lang.Object peekFirst() -> peekFirst
    java.lang.Object pollLast() -> pollLast
    java.lang.Object removeLast() -> removeLast
    java.lang.Object peekLast() -> peekLast
    com.google.common.collect.MinMaxPriorityQueue$MoveDesc removeAt(int) -> b
    java.lang.Object removeAndGet(int) -> c
    com.google.common.collect.MinMaxPriorityQueue$Heap heapForIndex(int) -> d
    java.util.Iterator iterator() -> iterator
    void clear() -> clear
    java.lang.Object[] toArray() -> toArray
    java.util.Comparator comparator() -> comparator
    int initialQueueSize(int,int,java.lang.Iterable) -> a
    int capAtMaximumSize(int,int) -> a
    java.lang.Object[] access$500(com.google.common.collect.MinMaxPriorityQueue) -> a
    int access$600(com.google.common.collect.MinMaxPriorityQueue) -> b
    int access$700(com.google.common.collect.MinMaxPriorityQueue) -> c
com.google.common.collect.MinMaxPriorityQueue$Builder -> com.google.common.collect.MinMaxPriorityQueue$Builder:
    java.util.Comparator comparator -> a
    int expectedSize -> b
    int maximumSize -> c
    com.google.common.collect.MinMaxPriorityQueue$Builder expectedSize(int) -> expectedSize
    com.google.common.collect.MinMaxPriorityQueue$Builder maximumSize(int) -> maximumSize
    com.google.common.collect.MinMaxPriorityQueue create() -> create
    com.google.common.collect.MinMaxPriorityQueue create(java.lang.Iterable) -> create
    com.google.common.collect.Ordering access$200(com.google.common.collect.MinMaxPriorityQueue$Builder) -> a
    int access$300(com.google.common.collect.MinMaxPriorityQueue$Builder) -> b
com.google.common.collect.MinMaxPriorityQueue$Heap -> oo:
    com.google.common.collect.Ordering ordering -> a
    com.google.common.collect.MinMaxPriorityQueue$Heap otherHeap -> b
    com.google.common.collect.MinMaxPriorityQueue this$0 -> c
    int compareElements(int,int) -> a
    int bubbleUpAlternatingLevels(int,java.lang.Object) -> a
    int findMin(int,int) -> b
    int crossOverUp(int,java.lang.Object) -> b
com.google.common.collect.MinMaxPriorityQueue$MoveDesc -> op:
    java.lang.Object toTrickle -> a
    java.lang.Object replaced -> b
com.google.common.collect.MinMaxPriorityQueue$QueueIterator -> oq:
    int cursor -> b
    int expectedModCount -> c
    java.util.Queue forgetMeNot -> d
    java.util.List skipMe -> e
    java.lang.Object lastFromForgetMeNot -> f
    boolean canRemove -> g
    com.google.common.collect.MinMaxPriorityQueue this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    boolean removeExact(java.lang.Object) -> a
    void checkModCount() -> a
    int nextNotInSkipMe(int) -> a
com.google.common.collect.Multimap -> com.google.common.collect.Multimap:
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Collection get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Multimaps -> com.google.common.collect.Multimaps:
    com.google.common.collect.Multimap newMultimap(java.util.Map,com.google.common.base.Supplier) -> newMultimap
    com.google.common.collect.ListMultimap newListMultimap(java.util.Map,com.google.common.base.Supplier) -> newListMultimap
    com.google.common.collect.SetMultimap newSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSetMultimap
    com.google.common.collect.SortedSetMultimap newSortedSetMultimap(java.util.Map,com.google.common.base.Supplier) -> newSortedSetMultimap
    com.google.common.collect.Multimap invertFrom(com.google.common.collect.Multimap,com.google.common.collect.Multimap) -> invertFrom
    com.google.common.collect.Multimap synchronizedMultimap(com.google.common.collect.Multimap) -> synchronizedMultimap
    com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.Multimap) -> unmodifiableMultimap
    com.google.common.collect.Multimap unmodifiableMultimap(com.google.common.collect.ImmutableMultimap) -> unmodifiableMultimap
    com.google.common.collect.SetMultimap synchronizedSetMultimap(com.google.common.collect.SetMultimap) -> synchronizedSetMultimap
    com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.SetMultimap) -> unmodifiableSetMultimap
    com.google.common.collect.SetMultimap unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap) -> unmodifiableSetMultimap
    com.google.common.collect.SortedSetMultimap synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> synchronizedSortedSetMultimap
    com.google.common.collect.SortedSetMultimap unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap) -> unmodifiableSortedSetMultimap
    com.google.common.collect.ListMultimap synchronizedListMultimap(com.google.common.collect.ListMultimap) -> synchronizedListMultimap
    com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ListMultimap) -> unmodifiableListMultimap
    com.google.common.collect.ListMultimap unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap) -> unmodifiableListMultimap
    com.google.common.collect.SetMultimap forMap(java.util.Map) -> forMap
    com.google.common.collect.Multimap transformValues(com.google.common.collect.Multimap,com.google.common.base.Function) -> transformValues
    com.google.common.collect.Multimap transformEntries(com.google.common.collect.Multimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    com.google.common.collect.ListMultimap transformValues(com.google.common.collect.ListMultimap,com.google.common.base.Function) -> transformValues
    com.google.common.collect.ListMultimap transformEntries(com.google.common.collect.ListMultimap,com.google.common.collect.Maps$EntryTransformer) -> transformEntries
    com.google.common.collect.ImmutableListMultimap index(java.lang.Iterable,com.google.common.base.Function) -> index
    com.google.common.collect.ImmutableListMultimap index(java.util.Iterator,com.google.common.base.Function) -> index
    com.google.common.collect.Multimap filterKeys(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterKeys
    com.google.common.collect.Multimap filterValues(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterValues
    com.google.common.collect.Multimap filterEntries(com.google.common.collect.Multimap,com.google.common.base.Predicate) -> filterEntries
    java.util.Set access$000(java.util.Set) -> a
    java.util.Collection access$100(java.util.Collection) -> a
    java.util.Collection access$200(java.util.Collection) -> b
    java.util.Map$Entry access$300(java.util.Map$Entry) -> a
com.google.common.collect.Multimaps$1 -> or:
    java.util.Map$Entry val$entry -> a
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Multimaps$2 -> os:
    com.google.common.base.Function val$function -> a
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Multimaps$3 -> ot:
    com.google.common.base.Function val$function -> a
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Multimaps$AsMap -> ou:
    com.google.common.collect.Multimap multimap() -> a
    java.util.Iterator entryIterator() -> c
    java.util.Set createEntrySet() -> b
    void removeValuesForKey(java.lang.Object) -> a
    java.util.Set keySet() -> keySet
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.Multimaps$AsMap$EntrySet -> ov:
    com.google.common.collect.Multimaps$AsMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$CustomListMultimap -> ow:
    com.google.common.base.Supplier factory -> a
    long serialVersionUID -> serialVersionUID
    java.util.List createCollection() -> a
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection createCollection() -> b
com.google.common.collect.Multimaps$CustomMultimap -> ox:
    com.google.common.base.Supplier factory -> a
    long serialVersionUID -> serialVersionUID
    java.util.Collection createCollection() -> b
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.collect.Multimaps$CustomSetMultimap -> oy:
    com.google.common.base.Supplier factory -> a
    long serialVersionUID -> serialVersionUID
    java.util.Set createCollection() -> a
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Collection createCollection() -> b
com.google.common.collect.Multimaps$CustomSortedSetMultimap -> oz:
    com.google.common.base.Supplier factory -> a
    java.util.Comparator valueComparator -> b
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet createCollection() -> m
    java.util.Comparator valueComparator() -> valueComparator
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.Set createCollection() -> a
    java.util.Collection createCollection() -> b
com.google.common.collect.Multimaps$Entries -> oA:
    com.google.common.collect.Multimap multimap() -> a
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.Multimaps$EntrySet -> oB:
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Multimaps$Keys -> oC:
    com.google.common.collect.Multimap multimap -> b
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
    java.util.Set createEntrySet() -> d
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    int count(java.lang.Object) -> count
    int remove(java.lang.Object,int) -> remove
    void clear() -> clear
    java.util.Set elementSet() -> elementSet
com.google.common.collect.Multimaps$Keys$1 -> oD:
    com.google.common.collect.Multimaps$Keys this$0 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Multimaps$Keys$1$1 -> oE:
    java.util.Map$Entry val$backingEntry -> a
    com.google.common.collect.Multimaps$Keys$1 this$1 -> b
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.Multimaps$Keys$KeysEntrySet -> oF:
    com.google.common.collect.Multimaps$Keys this$0 -> a
    com.google.common.collect.Multiset multiset() -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$MapMultimap -> oG:
    java.util.Map map -> a
    java.util.Map asMap -> b
    com.google.common.base.Joiner$MapJoiner JOINER -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    java.util.Set get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Set removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    java.util.Collection values() -> values
    java.util.Set entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
com.google.common.collect.Multimaps$MapMultimap$1 -> oH:
    java.lang.Object val$key -> a
    com.google.common.collect.Multimaps$MapMultimap this$0 -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.Multimaps$MapMultimap$1$1 -> oI:
    int i -> a
    com.google.common.collect.Multimaps$MapMultimap$1 this$1 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Multimaps$MapMultimap$AsMap -> oJ:
    com.google.common.collect.Multimaps$MapMultimap this$0 -> a
    java.util.Set createEntrySet() -> b
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.Multimaps$MapMultimap$AsMapEntries -> oK:
    com.google.common.collect.Multimaps$MapMultimap this$0 -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1 -> oL:
    com.google.common.collect.Multimaps$MapMultimap$AsMapEntries this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1$1 -> oM:
    java.lang.Object val$key -> a
    com.google.common.collect.Multimaps$MapMultimap$AsMapEntries$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Multimaps$TransformedEntriesListMultimap -> oN:
    java.util.List transform(java.lang.Object,java.util.Collection) -> b
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection transform(java.lang.Object,java.util.Collection) -> a
com.google.common.collect.Multimaps$TransformedEntriesListMultimap$1 -> oO:
    java.lang.Object val$key -> a
    com.google.common.collect.Multimaps$TransformedEntriesListMultimap this$0 -> b
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$TransformedEntriesMultimap -> oP:
    com.google.common.collect.Multimap fromMultimap -> a
    com.google.common.collect.Maps$EntryTransformer transformer -> b
    java.util.Collection transform(java.lang.Object,java.util.Collection) -> a
    java.util.Map createAsMap() -> g
    void clear() -> clear
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Iterator entryIterator() -> f
    java.util.Collection get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    com.google.common.collect.Multiset keys() -> keys
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    int size() -> size
    java.util.Collection createValues() -> j
com.google.common.collect.Multimaps$TransformedEntriesMultimap$1 -> oQ:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> a
    java.lang.Object transformEntry(java.lang.Object,java.lang.Object) -> transformEntry
com.google.common.collect.Multimaps$TransformedEntriesMultimap$2 -> oR:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$TransformedEntriesMultimap$2$1 -> oS:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.Multimaps$TransformedEntriesMultimap$2 this$1 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Multimaps$TransformedEntriesMultimap$3 -> oT:
    com.google.common.collect.Multimaps$TransformedEntriesMultimap this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$UnmodifiableAsMapEntries -> oU:
    java.util.Set delegate -> a
    java.util.Set delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableAsMapEntries$1 -> oV:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.Multimaps$UnmodifiableAsMapEntries this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableAsMapValues -> oW:
    java.util.Collection delegate -> a
    java.util.Collection delegate() -> delegate
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableAsMapValues$1 -> oX:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.Multimaps$UnmodifiableAsMapValues this$0 -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Multimaps$UnmodifiableListMultimap -> oY:
    long serialVersionUID -> serialVersionUID
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableMultimap -> oZ:
    com.google.common.collect.Multimap delegate -> a
    java.util.Collection entries -> b
    com.google.common.collect.Multiset keys -> c
    java.util.Set keySet -> d
    java.util.Collection values -> e
    java.util.Map map -> f
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multimap delegate() -> delegate
    void clear() -> clear
    java.util.Map asMap() -> asMap
    java.util.Collection entries() -> entries
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multiset keys() -> keys
    java.util.Set keySet() -> keySet
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableMultimap$1 -> pa:
    java.util.Set entrySet -> a
    java.util.Collection asMapValues -> b
    java.util.Map val$unmodifiableMap -> c
    com.google.common.collect.Multimaps$UnmodifiableMultimap this$0 -> d
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableSetMultimap -> pb:
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.SetMultimap delegate() -> a
    java.util.Set get(java.lang.Object) -> get
    java.util.Set entries() -> entries
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection entries() -> entries
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$UnmodifiableSortedSetMultimap -> pc:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> a
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Multimaps$ValueFunction -> pd:
    java.lang.Object key -> a
    com.google.common.collect.Maps$EntryTransformer transformer -> b
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Multimaps$Values -> pe:
    com.google.common.collect.Multimap multimap -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    void clear() -> clear
com.google.common.collect.Multiset -> com.google.common.collect.Multiset:
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Multiset$Entry -> com.google.common.collect.Multiset$Entry:
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Multisets -> com.google.common.collect.Multisets:
    com.google.common.collect.Ordering DECREASING_COUNT_ORDERING -> a
    com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.Multiset) -> unmodifiableMultiset
    com.google.common.collect.Multiset unmodifiableMultiset(com.google.common.collect.ImmutableMultiset) -> unmodifiableMultiset
    com.google.common.collect.SortedMultiset unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset) -> unmodifiableSortedMultiset
    com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int) -> immutableEntry
    com.google.common.collect.Multiset filter(com.google.common.collect.Multiset,com.google.common.base.Predicate) -> filter
    int inferDistinctElements(java.lang.Iterable) -> a
    com.google.common.collect.Multiset union(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> union
    com.google.common.collect.Multiset intersection(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> intersection
    com.google.common.collect.Multiset sum(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> sum
    com.google.common.collect.Multiset difference(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> difference
    boolean containsOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> containsOccurrences
    boolean retainOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> retainOccurrences
    boolean removeOccurrences(com.google.common.collect.Multiset,com.google.common.collect.Multiset) -> removeOccurrences
    boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object) -> a
    boolean addAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> a
    boolean removeAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> b
    boolean retainAllImpl(com.google.common.collect.Multiset,java.util.Collection) -> c
    int setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int) -> a
    boolean setCountImpl(com.google.common.collect.Multiset,java.lang.Object,int,int) -> a
    java.util.Iterator iteratorImpl(com.google.common.collect.Multiset) -> a
    int sizeImpl(com.google.common.collect.Multiset) -> b
    void checkNonnegative(int,java.lang.String) -> a
    com.google.common.collect.Multiset cast(java.lang.Iterable) -> b
    com.google.common.collect.ImmutableMultiset copyHighestCountFirst(com.google.common.collect.Multiset) -> copyHighestCountFirst
com.google.common.collect.Multisets$1 -> pf:
    com.google.common.collect.Multiset val$multiset1 -> a
    com.google.common.collect.Multiset val$multiset2 -> b
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int count(java.lang.Object) -> count
    java.util.Set createElementSet() -> c
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
com.google.common.collect.Multisets$1$1 -> pg:
    java.util.Iterator val$iterator1 -> a
    java.util.Iterator val$iterator2 -> b
    com.google.common.collect.Multisets$1 this$0 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$2 -> ph:
    com.google.common.collect.Multiset val$multiset1 -> a
    com.google.common.collect.Multiset val$multiset2 -> b
    int count(java.lang.Object) -> count
    java.util.Set createElementSet() -> c
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
com.google.common.collect.Multisets$2$1 -> pi:
    java.util.Iterator val$iterator1 -> a
    com.google.common.collect.Multisets$2 this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$3 -> pj:
    com.google.common.collect.Multiset val$multiset1 -> a
    com.google.common.collect.Multiset val$multiset2 -> b
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    int size() -> size
    int count(java.lang.Object) -> count
    java.util.Set createElementSet() -> c
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
com.google.common.collect.Multisets$3$1 -> pk:
    java.util.Iterator val$iterator1 -> a
    java.util.Iterator val$iterator2 -> b
    com.google.common.collect.Multisets$3 this$0 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$4 -> pl:
    com.google.common.collect.Multiset val$multiset1 -> a
    com.google.common.collect.Multiset val$multiset2 -> b
    int count(java.lang.Object) -> count
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
com.google.common.collect.Multisets$4$1 -> pm:
    java.util.Iterator val$iterator1 -> a
    com.google.common.collect.Multisets$4 this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.Multisets$5 -> pn:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Multisets$AbstractEntry -> po:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Multisets$ElementSet -> pp:
    com.google.common.collect.Multiset multiset() -> a
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    int size() -> size
com.google.common.collect.Multisets$ElementSet$1 -> pq:
    com.google.common.collect.Multisets$ElementSet this$0 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Multisets$EntrySet -> pr:
    com.google.common.collect.Multiset multiset() -> a
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
com.google.common.collect.Multisets$FilteredMultiset -> ps:
    com.google.common.collect.Multiset unfiltered -> a
    com.google.common.base.Predicate predicate -> b
    java.util.Set createElementSet() -> c
    java.util.Set createEntrySet() -> d
    java.util.Iterator entryIterator() -> a
    int distinctElements() -> b
    boolean contains(java.lang.Object) -> contains
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
com.google.common.collect.Multisets$FilteredMultiset$1 -> pt:
    com.google.common.collect.Multisets$FilteredMultiset this$0 -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Multisets$ImmutableEntry -> pu:
    java.lang.Object element -> a
    int count -> b
    long serialVersionUID -> serialVersionUID
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.Multisets$MultisetIteratorImpl -> pv:
    com.google.common.collect.Multiset multiset -> a
    java.util.Iterator entryIterator -> b
    com.google.common.collect.Multiset$Entry currentEntry -> c
    int laterCount -> d
    int totalCount -> e
    boolean canRemove -> f
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Multisets$UnmodifiableMultiset -> pw:
    com.google.common.collect.Multiset delegate -> a
    java.util.Set elementSet -> b
    java.util.Set entrySet -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multiset delegate() -> delegate
    java.util.Set createElementSet() -> a
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    java.util.Iterator iterator() -> iterator
    boolean add(java.lang.Object) -> add
    int add(java.lang.Object,int) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    int remove(java.lang.Object,int) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.MutableClassToInstanceMap -> com.google.common.collect.MutableClassToInstanceMap:
    com.google.common.collect.MapConstraint VALUE_CAN_BE_CAST_TO_KEY -> a
    com.google.common.collect.MutableClassToInstanceMap create() -> create
    com.google.common.collect.MutableClassToInstanceMap create(java.util.Map) -> create
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object cast(java.lang.Class,java.lang.Object) -> b
    void putAll(java.util.Map) -> putAll
    java.util.Set entrySet() -> entrySet
    java.lang.Object access$000(java.lang.Class,java.lang.Object) -> a
com.google.common.collect.MutableClassToInstanceMap$1 -> px:
    void checkKeyValue(java.lang.Object,java.lang.Object) -> checkKeyValue
com.google.common.collect.NaturalOrdering -> py:
    com.google.common.collect.NaturalOrdering INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Ordering reverse() -> reverse
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    int binarySearch(java.util.List,java.lang.Object) -> binarySearch
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.NullsFirstOrdering -> pz:
    com.google.common.collect.Ordering ordering -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.NullsLastOrdering -> pA:
    com.google.common.collect.Ordering ordering -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.ObjectArrays -> com.google.common.collect.ObjectArrays:
    java.lang.Object[] EMPTY_ARRAY -> a
    java.lang.Object[] newArray(java.lang.Class,int) -> newArray
    java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
    java.lang.Object[] concat(java.lang.Object[],java.lang.Object[],java.lang.Class) -> concat
    java.lang.Object[] concat(java.lang.Object,java.lang.Object[]) -> concat
    java.lang.Object[] concat(java.lang.Object[],java.lang.Object) -> concat
    java.lang.Object[] arraysCopyOf(java.lang.Object[],int) -> a
    java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[]) -> a
    java.lang.Object[] toArrayImpl(java.util.Collection) -> a
    java.lang.Object[] fillArray(java.lang.Iterable,java.lang.Object[]) -> a
    void swap(java.lang.Object[],int,int) -> a
    java.lang.Object checkElementNotNull(java.lang.Object,int) -> a
com.google.common.collect.Ordering -> com.google.common.collect.Ordering:
    com.google.common.collect.Ordering natural() -> natural
    com.google.common.collect.Ordering from(java.util.Comparator) -> from
    com.google.common.collect.Ordering from(com.google.common.collect.Ordering) -> from
    com.google.common.collect.Ordering explicit(java.util.List) -> explicit
    com.google.common.collect.Ordering explicit(java.lang.Object,java.lang.Object[]) -> explicit
    com.google.common.collect.Ordering allEqual() -> allEqual
    com.google.common.collect.Ordering usingToString() -> usingToString
    com.google.common.collect.Ordering arbitrary() -> arbitrary
    com.google.common.collect.Ordering reverse() -> reverse
    com.google.common.collect.Ordering nullsFirst() -> nullsFirst
    com.google.common.collect.Ordering nullsLast() -> nullsLast
    com.google.common.collect.Ordering onResultOf(com.google.common.base.Function) -> onResultOf
    com.google.common.collect.Ordering compound(java.util.Comparator) -> compound
    com.google.common.collect.Ordering compound(java.lang.Iterable) -> compound
    com.google.common.collect.Ordering lexicographical() -> lexicographical
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.Object min(java.util.Iterator) -> min
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object max(java.util.Iterator) -> max
    java.lang.Object max(java.lang.Iterable) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.util.List leastOf(java.lang.Iterable,int) -> leastOf
    java.util.List leastOf(java.util.Iterator,int) -> leastOf
    java.util.List greatestOf(java.lang.Iterable,int) -> greatestOf
    java.util.List greatestOf(java.util.Iterator,int) -> greatestOf
    java.util.List sortedCopy(java.lang.Iterable) -> sortedCopy
    com.google.common.collect.ImmutableList immutableSortedCopy(java.lang.Iterable) -> immutableSortedCopy
    boolean isOrdered(java.lang.Iterable) -> isOrdered
    boolean isStrictlyOrdered(java.lang.Iterable) -> isStrictlyOrdered
    int binarySearch(java.util.List,java.lang.Object) -> binarySearch
com.google.common.collect.Ordering$ArbitraryOrdering -> pB:
    java.util.Map uids -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.String toString() -> toString
com.google.common.collect.Ordering$ArbitraryOrdering$1 -> pC:
    java.util.concurrent.atomic.AtomicInteger counter -> a
    com.google.common.collect.Ordering$ArbitraryOrdering this$0 -> b
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Ordering$ArbitraryOrderingHolder -> pD:
    com.google.common.collect.Ordering ARBITRARY_ORDERING -> a
com.google.common.collect.Ordering$IncomparableValueException -> pE:
    java.lang.Object value -> a
    long serialVersionUID -> serialVersionUID
com.google.common.collect.PeekingIterator -> com.google.common.collect.PeekingIterator:
    java.lang.Object peek() -> peek
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.Platform -> pF:
    java.lang.Object[] clone(java.lang.Object[]) -> a
com.google.common.collect.Queues -> com.google.common.collect.Queues:
    java.util.concurrent.ArrayBlockingQueue newArrayBlockingQueue(int) -> newArrayBlockingQueue
    java.util.ArrayDeque newArrayDeque() -> newArrayDeque
    java.util.ArrayDeque newArrayDeque(java.lang.Iterable) -> newArrayDeque
    java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue() -> newConcurrentLinkedQueue
    java.util.concurrent.ConcurrentLinkedQueue newConcurrentLinkedQueue(java.lang.Iterable) -> newConcurrentLinkedQueue
    java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque() -> newLinkedBlockingDeque
    java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(int) -> newLinkedBlockingDeque
    java.util.concurrent.LinkedBlockingDeque newLinkedBlockingDeque(java.lang.Iterable) -> newLinkedBlockingDeque
    java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue() -> newLinkedBlockingQueue
    java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(int) -> newLinkedBlockingQueue
    java.util.concurrent.LinkedBlockingQueue newLinkedBlockingQueue(java.lang.Iterable) -> newLinkedBlockingQueue
    java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue() -> newPriorityBlockingQueue
    java.util.concurrent.PriorityBlockingQueue newPriorityBlockingQueue(java.lang.Iterable) -> newPriorityBlockingQueue
    java.util.PriorityQueue newPriorityQueue() -> newPriorityQueue
    java.util.PriorityQueue newPriorityQueue(java.lang.Iterable) -> newPriorityQueue
    java.util.concurrent.SynchronousQueue newSynchronousQueue() -> newSynchronousQueue
    int drain(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit) -> drain
    int drainUninterruptibly(java.util.concurrent.BlockingQueue,java.util.Collection,int,long,java.util.concurrent.TimeUnit) -> drainUninterruptibly
    java.util.Queue synchronizedQueue(java.util.Queue) -> synchronizedQueue
com.google.common.collect.Range -> com.google.common.collect.Range:
    com.google.common.base.Function LOWER_BOUND_FN -> d
    com.google.common.base.Function UPPER_BOUND_FN -> e
    com.google.common.collect.Ordering RANGE_LEX_ORDERING -> a
    com.google.common.collect.Range ALL -> f
    com.google.common.collect.Cut lowerBound -> b
    com.google.common.collect.Cut upperBound -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.base.Function lowerBoundFn() -> a
    com.google.common.base.Function upperBoundFn() -> b
    com.google.common.collect.Range create(com.google.common.collect.Cut,com.google.common.collect.Cut) -> a
    com.google.common.collect.Range open(java.lang.Comparable,java.lang.Comparable) -> open
    com.google.common.collect.Range closed(java.lang.Comparable,java.lang.Comparable) -> closed
    com.google.common.collect.Range closedOpen(java.lang.Comparable,java.lang.Comparable) -> closedOpen
    com.google.common.collect.Range openClosed(java.lang.Comparable,java.lang.Comparable) -> openClosed
    com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    com.google.common.collect.Range all() -> all
    com.google.common.collect.Range singleton(java.lang.Comparable) -> singleton
    com.google.common.collect.Range encloseAll(java.lang.Iterable) -> encloseAll
    boolean hasLowerBound() -> hasLowerBound
    java.lang.Comparable lowerEndpoint() -> lowerEndpoint
    com.google.common.collect.BoundType lowerBoundType() -> lowerBoundType
    boolean hasUpperBound() -> hasUpperBound
    java.lang.Comparable upperEndpoint() -> upperEndpoint
    com.google.common.collect.BoundType upperBoundType() -> upperBoundType
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Comparable) -> contains
    boolean apply(java.lang.Comparable) -> apply
    boolean containsAll(java.lang.Iterable) -> containsAll
    boolean encloses(com.google.common.collect.Range) -> encloses
    boolean isConnected(com.google.common.collect.Range) -> isConnected
    com.google.common.collect.Range intersection(com.google.common.collect.Range) -> intersection
    com.google.common.collect.Range span(com.google.common.collect.Range) -> span
    com.google.common.collect.ContiguousSet asSet(com.google.common.collect.DiscreteDomain) -> asSet
    com.google.common.collect.Range canonical(com.google.common.collect.DiscreteDomain) -> canonical
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.String toString(com.google.common.collect.Cut,com.google.common.collect.Cut) -> b
    java.lang.Object readResolve() -> readResolve
    int compareOrThrow(java.lang.Comparable,java.lang.Comparable) -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.Range$1 -> pG:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Range$2 -> pH:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Range$3 -> pI:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.Range$4 -> pJ:
    int[] $SwitchMap$com$google$common$collect$BoundType -> a
com.google.common.collect.RangeMap -> com.google.common.collect.RangeMap:
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    java.util.Map asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.RangeSet -> com.google.common.collect.RangeSet:
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    boolean encloses(com.google.common.collect.Range) -> encloses
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    boolean isEmpty() -> isEmpty
    com.google.common.collect.Range span() -> span
    java.util.Set asRanges() -> asRanges
    com.google.common.collect.RangeSet complement() -> complement
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    void clear() -> clear
    void addAll(com.google.common.collect.RangeSet) -> addAll
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Ranges -> com.google.common.collect.Ranges:
    com.google.common.collect.Range open(java.lang.Comparable,java.lang.Comparable) -> open
    com.google.common.collect.Range closed(java.lang.Comparable,java.lang.Comparable) -> closed
    com.google.common.collect.Range closedOpen(java.lang.Comparable,java.lang.Comparable) -> closedOpen
    com.google.common.collect.Range openClosed(java.lang.Comparable,java.lang.Comparable) -> openClosed
    com.google.common.collect.Range range(java.lang.Comparable,com.google.common.collect.BoundType,java.lang.Comparable,com.google.common.collect.BoundType) -> range
    com.google.common.collect.Range lessThan(java.lang.Comparable) -> lessThan
    com.google.common.collect.Range atMost(java.lang.Comparable) -> atMost
    com.google.common.collect.Range upTo(java.lang.Comparable,com.google.common.collect.BoundType) -> upTo
    com.google.common.collect.Range greaterThan(java.lang.Comparable) -> greaterThan
    com.google.common.collect.Range atLeast(java.lang.Comparable) -> atLeast
    com.google.common.collect.Range downTo(java.lang.Comparable,com.google.common.collect.BoundType) -> downTo
    com.google.common.collect.Range all() -> all
    com.google.common.collect.Range singleton(java.lang.Comparable) -> singleton
    com.google.common.collect.Range encloseAll(java.lang.Iterable) -> encloseAll
com.google.common.collect.RegularContiguousSet -> pK:
    com.google.common.collect.Range range -> e
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.ContiguousSet intersectionInCurrentDomain(com.google.common.collect.Range) -> a
    com.google.common.collect.ContiguousSet headSetImpl(java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet subSetImpl(java.lang.Comparable,boolean,java.lang.Comparable,boolean) -> a
    com.google.common.collect.ContiguousSet tailSetImpl(java.lang.Comparable,boolean) -> b
    int indexOf(java.lang.Object) -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    boolean isPartialView() -> a
    java.lang.Comparable first() -> d
    java.lang.Comparable last() -> e
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    com.google.common.collect.ContiguousSet intersection(com.google.common.collect.ContiguousSet) -> intersection
    com.google.common.collect.Range range() -> range
    com.google.common.collect.Range range(com.google.common.collect.BoundType,com.google.common.collect.BoundType) -> range
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object writeReplace() -> writeReplace
    java.lang.Object last() -> last
    java.lang.Object first() -> first
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
    boolean access$000(java.lang.Comparable,java.lang.Comparable) -> a
com.google.common.collect.RegularContiguousSet$1 -> pL:
    java.lang.Comparable last -> a
    com.google.common.collect.RegularContiguousSet this$0 -> b
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.RegularContiguousSet$2 -> pM:
    java.lang.Comparable first -> a
    com.google.common.collect.RegularContiguousSet this$0 -> b
    java.lang.Object computeNext(java.lang.Object) -> computeNext
com.google.common.collect.RegularContiguousSet$SerializedForm -> pN:
    com.google.common.collect.Range range -> a
    com.google.common.collect.DiscreteDomain domain -> b
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.RegularImmutableAsList -> pO:
    com.google.common.collect.ImmutableCollection delegate -> a
    com.google.common.collect.ImmutableList delegateList -> b
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object get(int) -> get
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableBiMap -> pP:
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry[] kToVTable -> c
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry[] vToKTable -> a
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry[] entries -> d
    int mask -> b
    int hashCode -> e
    com.google.common.collect.ImmutableBiMap inverse -> f
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    boolean isPartialView() -> b
    int size() -> size
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    com.google.common.collect.BiMap inverse() -> inverse
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry[] access$000(com.google.common.collect.RegularImmutableBiMap) -> a
    int access$100(com.google.common.collect.RegularImmutableBiMap) -> b
com.google.common.collect.RegularImmutableBiMap$1 -> pQ:
    com.google.common.collect.RegularImmutableBiMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> d
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    boolean isHashCodeFast() -> a_
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableBiMap$BiMapEntry -> pR:
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry getNextInKToVBucket() -> a
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry getNextInVToKBucket() -> b
com.google.common.collect.RegularImmutableBiMap$Inverse -> pS:
    com.google.common.collect.RegularImmutableBiMap this$0 -> a
    int size() -> size
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    boolean isPartialView() -> b
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet -> pT:
    com.google.common.collect.RegularImmutableBiMap$Inverse this$1 -> a
    com.google.common.collect.ImmutableMap map() -> d
    boolean isHashCodeFast() -> a_
    int hashCode() -> hashCode
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet$1 -> pU:
    com.google.common.collect.RegularImmutableBiMap$Inverse$InverseEntrySet this$2 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableBiMap$InverseSerializedForm -> pV:
    com.google.common.collect.ImmutableBiMap forward -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry -> pW:
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry nextInKToVBucket -> a
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry nextInVToKBucket -> b
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry getNextInKToVBucket() -> a
    com.google.common.collect.RegularImmutableBiMap$BiMapEntry getNextInVToKBucket() -> b
com.google.common.collect.RegularImmutableList -> pX:
    int offset -> a
    int size -> b
    java.lang.Object[] array -> d
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> a
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object get(int) -> get
    com.google.common.collect.ImmutableList subListUnchecked(int,int) -> a
    com.google.common.collect.UnmodifiableListIterator listIterator(int) -> listIterator
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.util.ListIterator listIterator(int) -> listIterator
com.google.common.collect.RegularImmutableMap -> pY:
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] entries -> a
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] table -> b
    int mask -> c
    long serialVersionUID -> serialVersionUID
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    com.google.common.collect.RegularImmutableMap$LinkedEntry[] access$100(com.google.common.collect.RegularImmutableMap) -> a
com.google.common.collect.RegularImmutableMap$EntrySet -> pZ:
    com.google.common.collect.RegularImmutableMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> d
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableMap$LinkedEntry -> qa:
    com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> a
com.google.common.collect.RegularImmutableMap$NonTerminalEntry -> qb:
    com.google.common.collect.RegularImmutableMap$LinkedEntry next -> a
    com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> a
com.google.common.collect.RegularImmutableMap$TerminalEntry -> qc:
    com.google.common.collect.RegularImmutableMap$LinkedEntry next() -> a
com.google.common.collect.RegularImmutableMultiset -> qd:
    com.google.common.collect.ImmutableMap map -> a
    int size -> b
    boolean isPartialView() -> a
    int count(java.lang.Object) -> count
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.ImmutableSet createEntrySet() -> b_
    int hashCode() -> hashCode
    java.util.Set elementSet() -> elementSet
    com.google.common.collect.ImmutableMap access$100(com.google.common.collect.RegularImmutableMultiset) -> a
    com.google.common.collect.Multiset$Entry access$200(java.util.Map$Entry) -> a
com.google.common.collect.RegularImmutableMultiset$EntrySet -> qe:
    com.google.common.collect.RegularImmutableMultiset this$0 -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableMultiset$EntrySet$1 -> qf:
    com.google.common.collect.ImmutableList val$entryList -> a
    com.google.common.collect.RegularImmutableMultiset$EntrySet this$1 -> b
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableSet -> qg:
    java.lang.Object[] table -> b
    int mask -> d
    int hashCode -> e
    boolean contains(java.lang.Object) -> contains
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> a_
com.google.common.collect.RegularImmutableSortedMap -> qh:
    com.google.common.collect.RegularImmutableSortedSet keySet -> a
    com.google.common.collect.ImmutableList valueList -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    com.google.common.collect.ImmutableSortedSet keySet() -> keySet
    com.google.common.collect.ImmutableCollection values() -> values
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSortedMap getSubMap(int,int) -> a
    com.google.common.collect.ImmutableSortedMap headMap(java.lang.Object,boolean) -> headMap
    com.google.common.collect.ImmutableSortedMap tailMap(java.lang.Object,boolean) -> tailMap
    com.google.common.collect.ImmutableSortedMap createDescendingMap() -> c
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    com.google.common.collect.ImmutableSet keySet() -> keySet
    com.google.common.collect.ImmutableList access$100(com.google.common.collect.RegularImmutableSortedMap) -> a
com.google.common.collect.RegularImmutableSortedMap$EntrySet -> qi:
    com.google.common.collect.RegularImmutableSortedMap this$0 -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    com.google.common.collect.ImmutableMap map() -> d
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableSortedMap$EntrySet$1 -> qj:
    com.google.common.collect.ImmutableList keyList -> b
    com.google.common.collect.RegularImmutableSortedMap$EntrySet this$1 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableSortedMultiset -> qk:
    com.google.common.collect.RegularImmutableSortedSet elementSet -> b
    int[] counts -> d
    long[] cumulativeCounts -> e
    int offset -> f
    int length -> g
    com.google.common.collect.Multiset$Entry getEntry(int) -> a
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    int count(java.lang.Object) -> count
    int size() -> size
    com.google.common.collect.ImmutableSortedSet elementSet() -> elementSet
    com.google.common.collect.ImmutableSortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.ImmutableSortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.ImmutableSortedMultiset getSubMultiset(int,int) -> a
    com.google.common.collect.ImmutableSet createEntrySet() -> b_
    boolean isPartialView() -> a
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    java.util.NavigableSet elementSet() -> elementSet
    java.util.SortedSet elementSet() -> elementSet
    java.util.Set elementSet() -> elementSet
    int access$100(com.google.common.collect.RegularImmutableSortedMultiset) -> a
    com.google.common.collect.Multiset$Entry access$200(com.google.common.collect.RegularImmutableSortedMultiset,int) -> a
com.google.common.collect.RegularImmutableSortedMultiset$EntrySet -> ql:
    com.google.common.collect.RegularImmutableSortedMultiset this$0 -> a
    int size() -> size
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableSortedMultiset$EntrySet$1 -> qm:
    com.google.common.collect.RegularImmutableSortedMultiset$EntrySet this$1 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableSortedSet -> qn:
    com.google.common.collect.ImmutableList elements -> a
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.UnmodifiableIterator descendingIterator() -> descendingIterator
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isPartialView() -> a
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    com.google.common.collect.ImmutableSortedSet headSetImpl(java.lang.Object,boolean) -> b
    int headIndex(java.lang.Object,boolean) -> c
    com.google.common.collect.ImmutableSortedSet subSetImpl(java.lang.Object,boolean,java.lang.Object,boolean) -> a
    com.google.common.collect.ImmutableSortedSet tailSetImpl(java.lang.Object,boolean) -> a
    int tailIndex(java.lang.Object,boolean) -> d
    com.google.common.collect.ImmutableSortedSet getSubSet(int,int) -> a
    int indexOf(java.lang.Object) -> a
    com.google.common.collect.ImmutableList createAsList() -> b
    com.google.common.collect.ImmutableSortedSet createDescendingSet() -> c
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableTable -> qo:
    com.google.common.collect.ImmutableCollection values -> a
    com.google.common.collect.ImmutableSet cellSet -> b
    com.google.common.collect.ImmutableCollection values() -> a
    com.google.common.collect.ImmutableCollection createValues() -> b
    int size() -> size
    boolean containsValue(java.lang.Object) -> containsValue
    com.google.common.collect.ImmutableSet cellSet() -> cellSet
    com.google.common.collect.ImmutableSet createCellSet() -> c
    boolean isEmpty() -> isEmpty
    com.google.common.collect.RegularImmutableTable forCells(java.util.List,java.util.Comparator,java.util.Comparator) -> a
    com.google.common.collect.RegularImmutableTable forCellsInternal(java.lang.Iterable,java.util.Comparator,java.util.Comparator) -> a
    java.util.Collection values() -> values
    java.util.Set cellSet() -> cellSet
com.google.common.collect.RegularImmutableTable$1 -> qp:
    java.util.Comparator val$rowComparator -> a
    java.util.Comparator val$columnComparator -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.RegularImmutableTable$CellSet -> qq:
    com.google.common.collect.RegularImmutableTable this$0 -> a
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean isPartialView() -> a
com.google.common.collect.RegularImmutableTable$DenseImmutableTable -> qr:
    com.google.common.collect.ImmutableMap rowKeyToIndex -> a
    com.google.common.collect.ImmutableMap columnKeyToIndex -> b
    com.google.common.collect.ImmutableMap rowMap -> c
    com.google.common.collect.ImmutableMap columnMap -> d
    int[] rowCounts -> e
    int[] columnCounts -> f
    java.lang.Object[][] values -> g
    int[] iterationOrderRow -> h
    int[] iterationOrderColumn -> i
    com.google.common.collect.ImmutableMap makeIndex(com.google.common.collect.ImmutableSet) -> a
    com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    com.google.common.collect.ImmutableMap row(java.lang.Object) -> row
    com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    com.google.common.collect.ImmutableCollection createValues() -> b
    int size() -> size
    com.google.common.collect.ImmutableSet createCellSet() -> c
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set cellSet() -> cellSet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
    int[] access$600(com.google.common.collect.RegularImmutableTable$DenseImmutableTable) -> a
    com.google.common.collect.ImmutableMap access$700(com.google.common.collect.RegularImmutableTable$DenseImmutableTable) -> b
    java.lang.Object[][] access$800(com.google.common.collect.RegularImmutableTable$DenseImmutableTable) -> c
    int[] access$900(com.google.common.collect.RegularImmutableTable$DenseImmutableTable) -> d
    com.google.common.collect.ImmutableMap access$1000(com.google.common.collect.RegularImmutableTable$DenseImmutableTable) -> e
    int[] access$1100(com.google.common.collect.RegularImmutableTable$DenseImmutableTable) -> f
    int[] access$1200(com.google.common.collect.RegularImmutableTable$DenseImmutableTable) -> g
com.google.common.collect.RegularImmutableTable$DenseImmutableTable$1 -> qs:
    com.google.common.collect.RegularImmutableTable$DenseImmutableTable this$0 -> a
    int size() -> size
    java.lang.Object get(int) -> get
    boolean isPartialView() -> a
com.google.common.collect.RegularImmutableTable$DenseImmutableTable$Column -> qt:
    int columnIndex -> b
    com.google.common.collect.RegularImmutableTable$DenseImmutableTable this$0 -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> d
    java.lang.Object getValue(int) -> a
    boolean isPartialView() -> b
com.google.common.collect.RegularImmutableTable$DenseImmutableTable$ColumnMap -> qu:
    com.google.common.collect.RegularImmutableTable$DenseImmutableTable this$0 -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> d
    boolean isPartialView() -> b
    java.lang.Object getValue(int) -> a
com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet -> qv:
    com.google.common.collect.RegularImmutableTable$DenseImmutableTable this$0 -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet$1 -> qw:
    com.google.common.collect.RegularImmutableTable$DenseImmutableTable$DenseCellSet this$1 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    java.lang.Object get(int) -> get
com.google.common.collect.RegularImmutableTable$DenseImmutableTable$Row -> qx:
    int rowIndex -> b
    com.google.common.collect.RegularImmutableTable$DenseImmutableTable this$0 -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> d
    java.lang.Object getValue(int) -> a
    boolean isPartialView() -> b
com.google.common.collect.RegularImmutableTable$DenseImmutableTable$RowMap -> qy:
    com.google.common.collect.RegularImmutableTable$DenseImmutableTable this$0 -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> d
    boolean isPartialView() -> b
    java.lang.Object getValue(int) -> a
com.google.common.collect.RegularImmutableTable$ImmutableArrayMap -> qz:
    int size -> a
    com.google.common.collect.ImmutableMap keyToIndex() -> d
    boolean isFull() -> e
    java.lang.Object getKey(int) -> b
    java.lang.Object getValue(int) -> a
    com.google.common.collect.ImmutableSet createKeySet() -> c_
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    com.google.common.collect.ImmutableSet createEntrySet() -> a
com.google.common.collect.RegularImmutableTable$ImmutableArrayMap$1 -> qA:
    com.google.common.collect.RegularImmutableTable$ImmutableArrayMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> d
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableTable$ImmutableArrayMap$1$1 -> qB:
    com.google.common.collect.RegularImmutableTable$ImmutableArrayMap$1 this$1 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.RegularImmutableTable$ImmutableArrayMap$2 -> qC:
    com.google.common.collect.RegularImmutableTable$ImmutableArrayMap this$0 -> a
    com.google.common.collect.ImmutableMap map() -> d
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableTable$ImmutableArrayMap$2$1 -> qD:
    int index -> b
    int maxIndex -> c
    com.google.common.collect.RegularImmutableTable$ImmutableArrayMap$2 this$1 -> a
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.RegularImmutableTable$SparseImmutableTable -> qE:
    com.google.common.collect.ImmutableMap rowMap -> a
    com.google.common.collect.ImmutableMap columnMap -> b
    int[] iterationOrderRow -> c
    int[] iterationOrderColumn -> d
    com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    com.google.common.collect.ImmutableMap row(java.lang.Object) -> row
    com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    com.google.common.collect.ImmutableCollection createValues() -> b
    int size() -> size
    com.google.common.collect.ImmutableSet createCellSet() -> c
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set cellSet() -> cellSet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
    int[] access$100(com.google.common.collect.RegularImmutableTable$SparseImmutableTable) -> a
    com.google.common.collect.ImmutableMap access$200(com.google.common.collect.RegularImmutableTable$SparseImmutableTable) -> b
    int[] access$300(com.google.common.collect.RegularImmutableTable$SparseImmutableTable) -> c
com.google.common.collect.RegularImmutableTable$SparseImmutableTable$1 -> qF:
    com.google.common.collect.RegularImmutableTable$SparseImmutableTable this$0 -> a
    int size() -> size
    java.lang.Object get(int) -> get
    boolean isPartialView() -> a
com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet -> qG:
    com.google.common.collect.RegularImmutableTable$SparseImmutableTable this$0 -> b
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    com.google.common.collect.ImmutableList createAsList() -> b
    java.util.Iterator iterator() -> iterator
com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet$1 -> qH:
    com.google.common.collect.RegularImmutableTable$SparseImmutableTable$SparseCellSet this$1 -> a
    com.google.common.collect.ImmutableCollection delegateCollection() -> c
    java.lang.Object get(int) -> get
com.google.common.collect.ReverseNaturalOrdering -> qI:
    com.google.common.collect.ReverseNaturalOrdering INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object max(java.lang.Iterable) -> max
    java.lang.Object max(java.util.Iterator) -> max
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object min(java.util.Iterator) -> min
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.collect.ReverseOrdering -> qJ:
    com.google.common.collect.Ordering forwardOrder -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    com.google.common.collect.Ordering reverse() -> reverse
    java.lang.Object min(java.lang.Object,java.lang.Object) -> min
    java.lang.Object min(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> min
    java.lang.Object min(java.util.Iterator) -> min
    java.lang.Object min(java.lang.Iterable) -> min
    java.lang.Object max(java.lang.Object,java.lang.Object) -> max
    java.lang.Object max(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> max
    java.lang.Object max(java.util.Iterator) -> max
    java.lang.Object max(java.lang.Iterable) -> max
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.collect.RowSortedTable -> com.google.common.collect.RowSortedTable:
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
com.google.common.collect.Serialization -> qK:
    void writeMap(java.util.Map,java.io.ObjectOutputStream) -> a
    void populateMap(java.util.Map,java.io.ObjectInputStream) -> a
    void populateMap(java.util.Map,java.io.ObjectInputStream,int) -> a
    void writeMultiset(com.google.common.collect.Multiset,java.io.ObjectOutputStream) -> a
    void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream) -> a
    void populateMultiset(com.google.common.collect.Multiset,java.io.ObjectInputStream,int) -> a
    void writeMultimap(com.google.common.collect.Multimap,java.io.ObjectOutputStream) -> a
    void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream) -> a
    void populateMultimap(com.google.common.collect.Multimap,java.io.ObjectInputStream,int) -> a
    com.google.common.collect.Serialization$FieldSetter getFieldSetter(java.lang.Class,java.lang.String) -> a
com.google.common.collect.Serialization$FieldSetter -> qL:
    java.lang.reflect.Field field -> a
    void set(java.lang.Object,java.lang.Object) -> a
    void set(java.lang.Object,int) -> a
com.google.common.collect.SetMultimap -> com.google.common.collect.SetMultimap:
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Map asMap() -> asMap
    boolean equals(java.lang.Object) -> equals
com.google.common.collect.Sets -> com.google.common.collect.Sets:
    com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Enum,java.lang.Enum[]) -> immutableEnumSet
    com.google.common.collect.ImmutableSet immutableEnumSet(java.lang.Iterable) -> immutableEnumSet
    java.util.EnumSet newEnumSet(java.lang.Iterable,java.lang.Class) -> newEnumSet
    java.util.HashSet newHashSet() -> newHashSet
    java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    java.util.HashSet newHashSetWithExpectedSize(int) -> newHashSetWithExpectedSize
    java.util.HashSet newHashSet(java.lang.Iterable) -> newHashSet
    java.util.HashSet newHashSet(java.util.Iterator) -> newHashSet
    java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    java.util.LinkedHashSet newLinkedHashSetWithExpectedSize(int) -> newLinkedHashSetWithExpectedSize
    java.util.LinkedHashSet newLinkedHashSet(java.lang.Iterable) -> newLinkedHashSet
    java.util.TreeSet newTreeSet() -> newTreeSet
    java.util.TreeSet newTreeSet(java.lang.Iterable) -> newTreeSet
    java.util.TreeSet newTreeSet(java.util.Comparator) -> newTreeSet
    java.util.Set newIdentityHashSet() -> newIdentityHashSet
    java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet() -> newCopyOnWriteArraySet
    java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet(java.lang.Iterable) -> newCopyOnWriteArraySet
    java.util.EnumSet complementOf(java.util.Collection) -> complementOf
    java.util.EnumSet complementOf(java.util.Collection,java.lang.Class) -> complementOf
    java.util.EnumSet makeComplementByHand(java.util.Collection,java.lang.Class) -> a
    java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
    com.google.common.collect.Sets$SetView union(java.util.Set,java.util.Set) -> union
    com.google.common.collect.Sets$SetView intersection(java.util.Set,java.util.Set) -> intersection
    com.google.common.collect.Sets$SetView difference(java.util.Set,java.util.Set) -> difference
    com.google.common.collect.Sets$SetView symmetricDifference(java.util.Set,java.util.Set) -> symmetricDifference
    java.util.Set filter(java.util.Set,com.google.common.base.Predicate) -> filter
    java.util.SortedSet filter(java.util.SortedSet,com.google.common.base.Predicate) -> filter
    java.util.NavigableSet filter(java.util.NavigableSet,com.google.common.base.Predicate) -> filter
    java.util.Set cartesianProduct(java.util.List) -> cartesianProduct
    java.util.Set cartesianProduct(java.util.Set[]) -> cartesianProduct
    java.util.Set powerSet(java.util.Set) -> powerSet
    int hashCodeImpl(java.util.Set) -> a
    boolean equalsImpl(java.util.Set,java.lang.Object) -> a
    java.util.NavigableSet unmodifiableNavigableSet(java.util.NavigableSet) -> unmodifiableNavigableSet
    java.util.NavigableSet synchronizedNavigableSet(java.util.NavigableSet) -> synchronizedNavigableSet
    boolean removeAllImpl(java.util.Set,java.util.Collection) -> a
    java.util.SortedSet cast(java.lang.Iterable) -> a
com.google.common.collect.Sets$1 -> qM:
    java.util.Set val$set1 -> a
    java.util.Set val$set2minus1 -> b
    java.util.Set val$set2 -> c
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    java.util.Set copyInto(java.util.Set) -> copyInto
    com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
com.google.common.collect.Sets$2 -> qN:
    java.util.Set val$set1 -> a
    com.google.common.base.Predicate val$inSet2 -> b
    java.util.Set val$set2 -> c
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
com.google.common.collect.Sets$3 -> qO:
    java.util.Set val$set1 -> a
    com.google.common.base.Predicate val$notInSet2 -> b
    java.util.Set val$set2 -> c
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.Sets$CartesianSet -> qP:
    com.google.common.collect.ImmutableList axes -> a
    com.google.common.collect.CartesianList delegate -> b
    java.util.Set create(java.util.List) -> a
    java.util.Collection delegate() -> delegate
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> delegate
com.google.common.collect.Sets$CartesianSet$1 -> qQ:
    com.google.common.collect.ImmutableList val$axes -> a
    int size() -> size
    boolean isPartialView() -> a
    java.lang.Object get(int) -> get
com.google.common.collect.Sets$DescendingSet -> qR:
    java.util.NavigableSet forward -> a
    java.util.NavigableSet delegate() -> delegate
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    java.util.SortedSet delegate() -> delegate
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Sets$FilteredNavigableSet -> qS:
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.lang.Object last() -> last
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.Sets$FilteredSet -> qT:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Sets$FilteredSortedSet -> qU:
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
com.google.common.collect.Sets$ImprovedAbstractSet -> qV:
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Sets$PowerSet -> qW:
    com.google.common.collect.ImmutableSet inputSet -> a
    com.google.common.collect.ImmutableList inputList -> b
    int powerSetSize -> c
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Sets$PowerSet$1 -> qX:
    com.google.common.collect.Sets$PowerSet this$0 -> a
    java.lang.Object get(int) -> a
com.google.common.collect.Sets$PowerSet$1$1 -> qY:
    int val$setBits -> a
    com.google.common.collect.Sets$PowerSet$1 this$1 -> b
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Sets$PowerSet$BitFilteredSetIterator -> qZ:
    com.google.common.collect.ImmutableList input -> a
    int remainingSetBits -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.google.common.collect.Sets$SetFromMap -> ra:
    java.util.Map m -> a
    java.util.Set s -> b
    long serialVersionUID -> serialVersionUID
    void clear() -> clear
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean containsAll(java.util.Collection) -> containsAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.collect.Sets$SetView -> com.google.common.collect.Sets$SetView:
    com.google.common.collect.ImmutableSet immutableCopy() -> immutableCopy
    java.util.Set copyInto(java.util.Set) -> copyInto
com.google.common.collect.Sets$UnmodifiableNavigableSet -> rb:
    java.util.NavigableSet delegate -> a
    com.google.common.collect.Sets$UnmodifiableNavigableSet descendingSet -> b
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet delegate() -> delegate
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.Set delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.SingletonImmutableBiMap -> rc:
    java.lang.Object singleKey -> a
    java.lang.Object singleValue -> b
    com.google.common.collect.ImmutableBiMap inverse -> c
    java.lang.Object get(java.lang.Object) -> get
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isPartialView() -> b
    com.google.common.collect.ImmutableSet createEntrySet() -> a
    com.google.common.collect.ImmutableSet createKeySet() -> c_
    com.google.common.collect.ImmutableBiMap inverse() -> inverse
    com.google.common.collect.BiMap inverse() -> inverse
com.google.common.collect.SingletonImmutableList -> rd:
    java.lang.Object element -> a
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    int size() -> size
    com.google.common.collect.ImmutableList subList(int,int) -> subList
    com.google.common.collect.ImmutableList reverse() -> reverse
    boolean contains(java.lang.Object) -> contains
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isEmpty() -> isEmpty
    boolean isPartialView() -> a
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.List subList(int,int) -> subList
    java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableSet -> re:
    java.lang.Object element -> a
    int cachedHashCode -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    com.google.common.collect.UnmodifiableIterator iterator() -> iterator
    boolean isPartialView() -> a
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isHashCodeFast() -> a_
    java.lang.String toString() -> toString
    java.util.Iterator iterator() -> iterator
com.google.common.collect.SingletonImmutableTable -> rf:
    java.lang.Object singleRowKey -> a
    java.lang.Object singleColumnKey -> b
    java.lang.Object singleValue -> c
    com.google.common.collect.ImmutableSet cellSet() -> cellSet
    com.google.common.collect.ImmutableMap column(java.lang.Object) -> column
    com.google.common.collect.ImmutableSet columnKeySet() -> columnKeySet
    com.google.common.collect.ImmutableMap columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    com.google.common.collect.ImmutableMap row(java.lang.Object) -> row
    com.google.common.collect.ImmutableSet rowKeySet() -> rowKeySet
    com.google.common.collect.ImmutableMap rowMap() -> rowMap
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Map columnMap() -> columnMap
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set cellSet() -> cellSet
    java.util.Map column(java.lang.Object) -> column
    java.util.Map row(java.lang.Object) -> row
com.google.common.collect.SortedIterable -> rg:
    java.util.Comparator comparator() -> comparator
com.google.common.collect.SortedIterables -> rh:
    boolean hasSameComparator(java.util.Comparator,java.lang.Iterable) -> a
    java.util.Comparator comparator(java.util.SortedSet) -> a
com.google.common.collect.SortedLists -> com.google.common.collect.SortedLists:
    int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Comparable,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
    int binarySearch(java.util.List,com.google.common.base.Function,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
    int binarySearch(java.util.List,java.lang.Object,java.util.Comparator,com.google.common.collect.SortedLists$KeyPresentBehavior,com.google.common.collect.SortedLists$KeyAbsentBehavior) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior -> com.google.common.collect.SortedLists$KeyAbsentBehavior:
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_LOWER -> NEXT_LOWER
    com.google.common.collect.SortedLists$KeyAbsentBehavior NEXT_HIGHER -> NEXT_HIGHER
    com.google.common.collect.SortedLists$KeyAbsentBehavior INVERTED_INSERTION_INDEX -> INVERTED_INSERTION_INDEX
    com.google.common.collect.SortedLists$KeyAbsentBehavior[] $VALUES -> a
    com.google.common.collect.SortedLists$KeyAbsentBehavior[] values() -> values
    com.google.common.collect.SortedLists$KeyAbsentBehavior valueOf(java.lang.String) -> valueOf
    int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior$1 -> ri:
    int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior$2 -> rj:
    int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyAbsentBehavior$3 -> rk:
    int resultIndex(int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior -> com.google.common.collect.SortedLists$KeyPresentBehavior:
    com.google.common.collect.SortedLists$KeyPresentBehavior ANY_PRESENT -> ANY_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_PRESENT -> LAST_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_PRESENT -> FIRST_PRESENT
    com.google.common.collect.SortedLists$KeyPresentBehavior FIRST_AFTER -> FIRST_AFTER
    com.google.common.collect.SortedLists$KeyPresentBehavior LAST_BEFORE -> LAST_BEFORE
    com.google.common.collect.SortedLists$KeyPresentBehavior[] $VALUES -> a
    com.google.common.collect.SortedLists$KeyPresentBehavior[] values() -> values
    com.google.common.collect.SortedLists$KeyPresentBehavior valueOf(java.lang.String) -> valueOf
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$1 -> rl:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$2 -> rm:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$3 -> rn:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$4 -> ro:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedLists$KeyPresentBehavior$5 -> rp:
    int resultIndex(java.util.Comparator,java.lang.Object,java.util.List,int) -> a
com.google.common.collect.SortedMapDifference -> com.google.common.collect.SortedMapDifference:
    java.util.SortedMap entriesOnlyOnLeft() -> entriesOnlyOnLeft
    java.util.SortedMap entriesOnlyOnRight() -> entriesOnlyOnRight
    java.util.SortedMap entriesInCommon() -> entriesInCommon
    java.util.SortedMap entriesDiffering() -> entriesDiffering
com.google.common.collect.SortedMultiset -> com.google.common.collect.SortedMultiset:
    java.util.Comparator comparator() -> comparator
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableSet elementSet() -> elementSet
    java.util.Iterator iterator() -> iterator
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
com.google.common.collect.SortedMultisetBridge -> rq:
com.google.common.collect.SortedMultisets -> rr:
    java.lang.Object access$000(com.google.common.collect.Multiset$Entry) -> a
    java.lang.Object access$100(com.google.common.collect.Multiset$Entry) -> b
com.google.common.collect.SortedMultisets$ElementSet -> rs:
    com.google.common.collect.SortedMultiset multiset -> a
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    com.google.common.collect.Multiset multiset() -> a
com.google.common.collect.SortedMultisets$NavigableElementSet -> rt:
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object floor(java.lang.Object) -> floor
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.lang.Object higher(java.lang.Object) -> higher
    java.util.NavigableSet descendingSet() -> descendingSet
    java.util.Iterator descendingIterator() -> descendingIterator
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
com.google.common.collect.SortedSetMultimap -> com.google.common.collect.SortedSetMultimap:
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Map asMap() -> asMap
    java.util.Comparator valueComparator() -> valueComparator
com.google.common.collect.StandardRowSortedTable -> ru:
    java.util.SortedSet rowKeySet -> c
    com.google.common.collect.StandardRowSortedTable$RowSortedMap rowMap -> d
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
    java.util.Map rowMap() -> rowMap
    java.util.Set rowKeySet() -> rowKeySet
    java.util.SortedMap access$100(com.google.common.collect.StandardRowSortedTable) -> a
com.google.common.collect.StandardRowSortedTable$RowKeySortedSet -> rv:
    com.google.common.collect.StandardRowSortedTable this$0 -> a
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.google.common.collect.StandardRowSortedTable$RowSortedMap -> rw:
    com.google.common.collect.StandardRowSortedTable this$0 -> a
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
com.google.common.collect.StandardTable -> rx:
    java.util.Map backingMap -> a
    com.google.common.base.Supplier factory -> b
    com.google.common.collect.StandardTable$CellSet cellSet -> c
    com.google.common.collect.StandardTable$RowKeySet rowKeySet -> d
    java.util.Set columnKeySet -> e
    com.google.common.collect.StandardTable$Values values -> f
    com.google.common.collect.StandardTable$RowMap rowMap -> g
    com.google.common.collect.StandardTable$ColumnMap columnMap -> h
    long serialVersionUID -> serialVersionUID
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsMapping(java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.util.Set cellSet() -> cellSet
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Iterator createColumnKeyIterator() -> a
    java.util.Collection values() -> values
    java.util.Map rowMap() -> rowMap
    java.util.Map columnMap() -> columnMap
    boolean access$300(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    boolean access$400(com.google.common.collect.StandardTable,java.lang.Object,java.lang.Object,java.lang.Object) -> b
    java.util.Map access$1100(com.google.common.collect.StandardTable,java.lang.Object) -> a
com.google.common.collect.StandardTable$CellIterator -> ry:
    java.util.Iterator rowIterator -> a
    java.util.Map$Entry rowEntry -> b
    java.util.Iterator columnIterator -> c
    com.google.common.collect.StandardTable this$0 -> d
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.StandardTable$CellSet -> rz:
    com.google.common.collect.StandardTable this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$Column -> rA:
    java.lang.Object columnKey -> a
    com.google.common.collect.StandardTable$Column$Values columnValues -> b
    com.google.common.collect.StandardTable$Column$KeySet keySet -> c
    com.google.common.collect.StandardTable this$0 -> d
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object get(java.lang.Object) -> get
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set createEntrySet() -> b
    java.util.Collection values() -> values
    boolean removePredicate(com.google.common.base.Predicate) -> a
    java.util.Set keySet() -> keySet
com.google.common.collect.StandardTable$Column$EntrySet -> rB:
    com.google.common.collect.StandardTable$Column this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$EntrySetIterator -> rC:
    java.util.Iterator iterator -> a
    com.google.common.collect.StandardTable$Column this$1 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.StandardTable$Column$EntrySetIterator$1 -> rD:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.StandardTable$Column$EntrySetIterator this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.collect.StandardTable$Column$KeySet -> rE:
    com.google.common.collect.StandardTable$Column this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    void clear() -> clear
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$KeySet$1 -> rF:
    java.util.Collection val$c -> a
    com.google.common.collect.StandardTable$Column$KeySet this$2 -> b
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$Column$Values -> rG:
    com.google.common.collect.StandardTable$Column this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$Column$Values$1 -> rH:
    java.util.Collection val$c -> a
    com.google.common.collect.StandardTable$Column$Values this$2 -> b
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$Column$Values$2 -> rI:
    java.util.Collection val$c -> a
    com.google.common.collect.StandardTable$Column$Values this$2 -> b
    boolean apply(java.lang.Object) -> apply
com.google.common.collect.StandardTable$ColumnKeyIterator -> rJ:
    java.util.Map seen -> a
    java.util.Iterator mapIterator -> b
    java.util.Iterator entryIterator -> c
    com.google.common.collect.StandardTable this$0 -> d
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.StandardTable$ColumnKeySet -> rK:
    com.google.common.collect.StandardTable this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    boolean contains(java.lang.Object) -> contains
com.google.common.collect.StandardTable$ColumnMap -> rL:
    com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues columnMapValues -> a
    com.google.common.collect.StandardTable this$0 -> b
    java.util.Map get(java.lang.Object) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Set createEntrySet() -> b
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet -> rM:
    com.google.common.collect.StandardTable$ColumnMap this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet$1 -> rN:
    com.google.common.collect.StandardTable$ColumnMap$ColumnMapEntrySet this$2 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.StandardTable$ColumnMap$ColumnMapValues -> rO:
    com.google.common.collect.StandardTable$ColumnMap this$1 -> a
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
com.google.common.collect.StandardTable$Row -> rP:
    java.lang.Object rowKey -> a
    java.util.Map backingRowMap -> b
    java.util.Set keySet -> c
    java.util.Set entrySet -> d
    com.google.common.collect.StandardTable this$0 -> e
    java.util.Map backingRowMap() -> a
    java.util.Map computeBackingRowMap() -> b
    void maintainEmptyInvariant() -> c
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
com.google.common.collect.StandardTable$Row$1 -> rQ:
    com.google.common.collect.StandardTable$Row this$1 -> a
    java.util.Map map() -> a
com.google.common.collect.StandardTable$Row$RowEntrySet -> rR:
    com.google.common.collect.StandardTable$Row this$1 -> a
    java.util.Map map() -> a
    int size() -> size
    java.util.Iterator iterator() -> iterator
com.google.common.collect.StandardTable$Row$RowEntrySet$1 -> rS:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.StandardTable$Row$RowEntrySet this$2 -> b
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.StandardTable$Row$RowEntrySet$1$1 -> rT:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.StandardTable$Row$RowEntrySet$1 this$3 -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
    java.lang.Object delegate() -> delegate
com.google.common.collect.StandardTable$RowKeySet -> rU:
    com.google.common.collect.StandardTable this$0 -> b
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$RowMap -> rV:
    com.google.common.collect.StandardTable this$0 -> b
    boolean containsKey(java.lang.Object) -> containsKey
    java.util.Set keySet() -> keySet
    java.util.Set createEntrySet() -> b
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.StandardTable$RowMap$EntrySet -> rW:
    com.google.common.collect.StandardTable$RowMap this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.StandardTable$RowMap$EntrySet$1 -> rX:
    com.google.common.collect.StandardTable$RowMap$EntrySet this$2 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.StandardTable$TableCollection -> rY:
    com.google.common.collect.StandardTable this$0 -> b
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.StandardTable$TableSet -> rZ:
    com.google.common.collect.StandardTable this$0 -> c
    boolean isEmpty() -> isEmpty
    void clear() -> clear
com.google.common.collect.StandardTable$Values -> sa:
    com.google.common.collect.StandardTable this$0 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.StandardTable$Values$1 -> sb:
    com.google.common.collect.StandardTable$Values this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.Synchronized -> sc:
    java.util.Collection collection(java.util.Collection,java.lang.Object) -> a
    java.util.Set set(java.util.Set,java.lang.Object) -> a
    java.util.SortedSet sortedSet(java.util.SortedSet,java.lang.Object) -> a
    java.util.List list(java.util.List,java.lang.Object) -> a
    java.util.SortedMap sortedMap(java.util.SortedMap,java.lang.Object) -> a
    java.util.NavigableSet navigableSet(java.util.NavigableSet,java.lang.Object) -> a
    java.util.NavigableMap navigableMap(java.util.NavigableMap,java.lang.Object) -> a
    java.util.Set access$300(java.util.Set,java.lang.Object) -> b
    java.util.Collection access$400(java.util.Collection,java.lang.Object) -> b
    java.util.Map$Entry access$700(java.util.Map$Entry,java.lang.Object) -> a
com.google.common.collect.Synchronized$SynchronizedAsMap -> sd:
    java.util.Set asMapEntrySet -> a
    java.util.Collection asMapValues -> b
    long serialVersionUID -> serialVersionUID
    java.util.Collection get(java.lang.Object) -> a
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
com.google.common.collect.Synchronized$SynchronizedAsMapEntries -> se:
    long serialVersionUID -> serialVersionUID
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 -> sf:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.Synchronized$SynchronizedAsMapEntries this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1$1 -> sg:
    java.util.Map$Entry val$entry -> a
    com.google.common.collect.Synchronized$SynchronizedAsMapEntries$1 this$1 -> b
    java.util.Map$Entry delegate() -> delegate
    java.lang.Object getValue() -> getValue
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedAsMapValues -> sh:
    long serialVersionUID -> serialVersionUID
    java.util.Iterator iterator() -> iterator
com.google.common.collect.Synchronized$SynchronizedAsMapValues$1 -> si:
    java.util.Iterator val$iterator -> a
    com.google.common.collect.Synchronized$SynchronizedAsMapValues this$0 -> b
    java.util.Iterator delegate() -> delegate
    java.lang.Object next() -> next
    java.lang.Object delegate() -> delegate
com.google.common.collect.Synchronized$SynchronizedBiMap -> sj:
    java.util.Set valueSet -> a
    com.google.common.collect.BiMap inverse -> b
    long serialVersionUID -> serialVersionUID
    java.util.Set values() -> values
    java.lang.Object forcePut(java.lang.Object,java.lang.Object) -> forcePut
    com.google.common.collect.BiMap inverse() -> inverse
    java.util.Collection values() -> values
    java.util.Map delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedCollection -> sk:
    long serialVersionUID -> serialVersionUID
    java.util.Collection delegate() -> a
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedEntry -> sl:
    long serialVersionUID -> serialVersionUID
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedList -> sm:
    long serialVersionUID -> serialVersionUID
    void add(int,java.lang.Object) -> add
    boolean addAll(int,java.util.Collection) -> addAll
    java.lang.Object get(int) -> get
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.lang.Object remove(int) -> remove
    java.lang.Object set(int,java.lang.Object) -> set
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedListMultimap -> sn:
    long serialVersionUID -> serialVersionUID
    java.util.List get(java.lang.Object) -> get
    java.util.List removeAll(java.lang.Object) -> removeAll
    java.util.List replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedMap -> so:
    java.util.Set keySet -> c
    java.util.Collection values -> d
    java.util.Set entrySet -> e
    long serialVersionUID -> serialVersionUID
    java.util.Map delegate() -> a
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.util.Set entrySet() -> entrySet
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.util.Set keySet() -> keySet
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedMultimap -> sp:
    java.util.Set keySet -> a
    java.util.Collection valuesCollection -> b
    java.util.Collection entries -> c
    java.util.Map asMap -> d
    com.google.common.collect.Multiset keys -> e
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Multimap delegate() -> a
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    java.util.Collection get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Collection entries() -> entries
    java.util.Map asMap() -> asMap
    com.google.common.collect.Multiset keys() -> keys
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedMultiset -> sq:
    java.util.Set elementSet -> a
    java.util.Set entrySet -> b
    long serialVersionUID -> serialVersionUID
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Set elementSet() -> elementSet
    java.util.Set entrySet() -> entrySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedNavigableMap -> sr:
    java.util.NavigableSet descendingKeySet -> a
    java.util.NavigableMap descendingMap -> b
    java.util.NavigableSet navigableKeySet -> f
    long serialVersionUID -> serialVersionUID
    java.util.Map$Entry ceilingEntry(java.lang.Object) -> ceilingEntry
    java.lang.Object ceilingKey(java.lang.Object) -> ceilingKey
    java.util.NavigableSet descendingKeySet() -> descendingKeySet
    java.util.NavigableMap descendingMap() -> descendingMap
    java.util.Map$Entry firstEntry() -> firstEntry
    java.util.Map$Entry floorEntry(java.lang.Object) -> floorEntry
    java.lang.Object floorKey(java.lang.Object) -> floorKey
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.Map$Entry higherEntry(java.lang.Object) -> higherEntry
    java.lang.Object higherKey(java.lang.Object) -> higherKey
    java.util.Map$Entry lastEntry() -> lastEntry
    java.util.Map$Entry lowerEntry(java.lang.Object) -> lowerEntry
    java.lang.Object lowerKey(java.lang.Object) -> lowerKey
    java.util.Set keySet() -> keySet
    java.util.NavigableSet navigableKeySet() -> navigableKeySet
    java.util.Map$Entry pollFirstEntry() -> pollFirstEntry
    java.util.Map$Entry pollLastEntry() -> pollLastEntry
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.SortedMap delegate() -> c
    java.util.Map delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedNavigableSet -> ss:
    java.util.NavigableSet descendingSet -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object ceiling(java.lang.Object) -> ceiling
    java.util.Iterator descendingIterator() -> descendingIterator
    java.util.NavigableSet descendingSet() -> descendingSet
    java.lang.Object floor(java.lang.Object) -> floor
    java.util.NavigableSet headSet(java.lang.Object,boolean) -> headSet
    java.lang.Object higher(java.lang.Object) -> higher
    java.lang.Object lower(java.lang.Object) -> lower
    java.lang.Object pollFirst() -> pollFirst
    java.lang.Object pollLast() -> pollLast
    java.util.NavigableSet subSet(java.lang.Object,boolean,java.lang.Object,boolean) -> subSet
    java.util.NavigableSet tailSet(java.lang.Object,boolean) -> tailSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.util.SortedSet delegate() -> c
    java.util.Set delegate() -> d
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedObject -> st:
    java.lang.Object delegate -> g
    java.lang.Object mutex -> h
    long serialVersionUID -> serialVersionUID
    java.lang.Object delegate() -> b
    java.lang.String toString() -> toString
    void writeObject(java.io.ObjectOutputStream) -> writeObject
com.google.common.collect.Synchronized$SynchronizedQueue -> su:
    long serialVersionUID -> serialVersionUID
    java.lang.Object element() -> element
    boolean offer(java.lang.Object) -> offer
    java.lang.Object peek() -> peek
    java.lang.Object poll() -> poll
    java.lang.Object remove() -> remove
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedRandomAccessList -> sv:
    long serialVersionUID -> serialVersionUID
com.google.common.collect.Synchronized$SynchronizedSet -> sw:
    long serialVersionUID -> serialVersionUID
    java.util.Set delegate() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedSetMultimap -> sx:
    java.util.Set entrySet -> f
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.SetMultimap delegate() -> c
    java.util.Set get(java.lang.Object) -> get
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set entries() -> entries
    java.util.Collection entries() -> entries
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Collection get(java.lang.Object) -> get
    com.google.common.collect.Multimap delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedSortedMap -> sy:
    long serialVersionUID -> serialVersionUID
    java.util.SortedMap delegate() -> c
    java.util.Comparator comparator() -> comparator
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Map delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedSortedSet -> sz:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet delegate() -> c
    java.util.Comparator comparator() -> comparator
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
    java.lang.Object first() -> first
    java.lang.Object last() -> last
    java.util.Set delegate() -> d
    java.util.Collection delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Synchronized$SynchronizedSortedSetMultimap -> sA:
    long serialVersionUID -> serialVersionUID
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Comparator valueComparator() -> valueComparator
    java.util.Set replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.Set removeAll(java.lang.Object) -> removeAll
    java.util.Set get(java.lang.Object) -> get
    com.google.common.collect.SetMultimap delegate() -> c
    java.util.Collection get(java.lang.Object) -> get
    java.util.Collection removeAll(java.lang.Object) -> removeAll
    java.util.Collection replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    com.google.common.collect.Multimap delegate() -> a
    java.lang.Object delegate() -> b
com.google.common.collect.Table -> com.google.common.collect.Table:
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    java.util.Set cellSet() -> cellSet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Collection values() -> values
    java.util.Map rowMap() -> rowMap
    java.util.Map columnMap() -> columnMap
com.google.common.collect.Table$Cell -> com.google.common.collect.Table$Cell:
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.collect.Tables -> com.google.common.collect.Tables:
    com.google.common.base.Function UNMODIFIABLE_WRAPPER -> a
    com.google.common.collect.Table$Cell immutableCell(java.lang.Object,java.lang.Object,java.lang.Object) -> immutableCell
    com.google.common.collect.Table transpose(com.google.common.collect.Table) -> transpose
    com.google.common.collect.Table newCustomTable(java.util.Map,com.google.common.base.Supplier) -> newCustomTable
    com.google.common.collect.Table transformValues(com.google.common.collect.Table,com.google.common.base.Function) -> transformValues
    com.google.common.collect.Table unmodifiableTable(com.google.common.collect.Table) -> unmodifiableTable
    com.google.common.collect.RowSortedTable unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable) -> unmodifiableRowSortedTable
    com.google.common.base.Function access$100() -> a
com.google.common.collect.Tables$1 -> sB:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$AbstractCell -> sC:
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Tables$ImmutableCell -> sD:
    java.lang.Object rowKey -> a
    java.lang.Object columnKey -> b
    java.lang.Object value -> c
    long serialVersionUID -> serialVersionUID
    java.lang.Object getRowKey() -> getRowKey
    java.lang.Object getColumnKey() -> getColumnKey
    java.lang.Object getValue() -> getValue
com.google.common.collect.Tables$TransformedTable -> sE:
    com.google.common.collect.Table fromTable -> a
    com.google.common.base.Function function -> b
    com.google.common.collect.Tables$TransformedTable$CellSet cellSet -> c
    java.util.Collection values -> d
    java.util.Map rowMap -> e
    java.util.Map columnMap -> f
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    int size() -> size
    void clear() -> clear
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Map column(java.lang.Object) -> column
    com.google.common.base.Function cellFunction() -> a
    java.util.Set cellSet() -> cellSet
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Collection values() -> values
    java.util.Map rowMap() -> rowMap
    java.util.Map columnMap() -> columnMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.collect.Tables$TransformedTable$1 -> sF:
    com.google.common.collect.Tables$TransformedTable this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransformedTable$2 -> sG:
    com.google.common.collect.Tables$TransformedTable this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransformedTable$3 -> sH:
    com.google.common.collect.Tables$TransformedTable this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransformedTable$CellSet -> sI:
    com.google.common.collect.Tables$TransformedTable this$0 -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Tables$TransposeTable -> sJ:
    com.google.common.collect.Table original -> a
    com.google.common.base.Function TRANSPOSE_CELL -> c
    com.google.common.collect.Tables$TransposeTable$CellSet cellSet -> b
    void clear() -> clear
    java.util.Map column(java.lang.Object) -> column
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    int size() -> size
    java.util.Collection values() -> values
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.Set cellSet() -> cellSet
    com.google.common.base.Function access$000() -> a
com.google.common.collect.Tables$TransposeTable$1 -> sK:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.Tables$TransposeTable$CellSet -> sL:
    com.google.common.collect.Tables$TransposeTable this$0 -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean contains(java.lang.Object) -> contains
    boolean remove(java.lang.Object) -> remove
com.google.common.collect.Tables$UnmodifiableRowSortedMap -> sM:
    long serialVersionUID -> serialVersionUID
    java.util.SortedMap rowMap() -> rowMap
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    java.util.Set rowKeySet() -> rowKeySet
    com.google.common.collect.Table delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.Tables$UnmodifiableTable -> sN:
    com.google.common.collect.Table delegate -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.Table delegate() -> delegate
    java.util.Set cellSet() -> cellSet
    void clear() -> clear
    java.util.Map column(java.lang.Object) -> column
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map columnMap() -> columnMap
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Map row(java.lang.Object) -> row
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map rowMap() -> rowMap
    java.util.Collection values() -> values
    java.lang.Object delegate() -> delegate
com.google.common.collect.TransformedIterator -> sO:
    java.util.Iterator backingIterator -> c
    java.lang.Object transform(java.lang.Object) -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.google.common.collect.TransformedListIterator -> sP:
    boolean hasPrevious() -> hasPrevious
    java.lang.Object previous() -> previous
    int nextIndex() -> nextIndex
    int previousIndex() -> previousIndex
    void set(java.lang.Object) -> set
    void add(java.lang.Object) -> add
com.google.common.collect.TreeBasedTable -> com.google.common.collect.TreeBasedTable:
    java.util.Comparator columnComparator -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeBasedTable create() -> create
    com.google.common.collect.TreeBasedTable create(java.util.Comparator,java.util.Comparator) -> create
    com.google.common.collect.TreeBasedTable create(com.google.common.collect.TreeBasedTable) -> create
    java.util.Comparator rowComparator() -> rowComparator
    java.util.Comparator columnComparator() -> columnComparator
    java.util.SortedMap row(java.lang.Object) -> row
    java.util.SortedSet rowKeySet() -> rowKeySet
    java.util.SortedMap rowMap() -> rowMap
    boolean contains(java.lang.Object,java.lang.Object) -> contains
    boolean containsColumn(java.lang.Object) -> containsColumn
    boolean containsRow(java.lang.Object) -> containsRow
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object,java.lang.Object) -> get
    boolean equals(java.lang.Object) -> equals
    java.lang.Object remove(java.lang.Object,java.lang.Object) -> remove
    java.util.Iterator createColumnKeyIterator() -> a
    java.util.Map rowMap() -> rowMap
    java.util.Set rowKeySet() -> rowKeySet
    java.util.Map row(java.lang.Object) -> row
    java.util.Map columnMap() -> columnMap
    java.util.Collection values() -> values
    java.util.Set columnKeySet() -> columnKeySet
    java.util.Map column(java.lang.Object) -> column
    java.util.Set cellSet() -> cellSet
    void putAll(com.google.common.collect.Table) -> putAll
    java.lang.Object put(java.lang.Object,java.lang.Object,java.lang.Object) -> put
    void clear() -> clear
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    int size() -> size
    boolean isEmpty() -> isEmpty
com.google.common.collect.TreeBasedTable$1 -> sQ:
    com.google.common.collect.TreeBasedTable this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.collect.TreeBasedTable$2 -> sR:
    java.lang.Object lastValue -> a
    java.util.Iterator val$merged -> b
    java.util.Comparator val$comparator -> c
    com.google.common.collect.TreeBasedTable this$0 -> d
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeBasedTable$Factory -> sS:
    java.util.Comparator comparator -> a
    long serialVersionUID -> serialVersionUID
    java.lang.Object get() -> get
com.google.common.collect.TreeBasedTable$TreeRow -> sT:
    java.lang.Object lowerBound -> f
    java.lang.Object upperBound -> g
    java.util.SortedMap wholeRow -> h
    com.google.common.collect.TreeBasedTable this$0 -> i
    java.util.Comparator comparator() -> comparator
    int compare(java.lang.Object,java.lang.Object) -> a
    boolean rangeContains(java.lang.Object) -> a
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.lang.Object firstKey() -> firstKey
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap wholeRow() -> d
    void maintainEmptyInvariant() -> c
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.util.Map computeBackingRowMap() -> b
    java.util.Map backingRowMap() -> a
com.google.common.collect.TreeMultimap -> com.google.common.collect.TreeMultimap:
    java.util.Comparator keyComparator -> a
    java.util.Comparator valueComparator -> b
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeMultimap create() -> create
    com.google.common.collect.TreeMultimap create(java.util.Comparator,java.util.Comparator) -> create
    com.google.common.collect.TreeMultimap create(com.google.common.collect.Multimap) -> create
    java.util.SortedSet createCollection() -> m
    java.util.Collection createCollection(java.lang.Object) -> a
    java.util.Comparator keyComparator() -> keyComparator
    java.util.Comparator valueComparator() -> valueComparator
    java.util.NavigableSet get(java.lang.Object) -> get
    java.util.Collection unmodifiableCollectionSubclass(java.util.Collection) -> a
    java.util.Collection wrapCollection(java.lang.Object,java.util.Collection) -> a
    java.util.NavigableSet keySet() -> keySet
    java.util.NavigableMap asMap() -> asMap
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    java.util.SortedSet keySet() -> keySet
    java.util.SortedMap backingMap() -> l
    java.util.SortedMap asMap() -> asMap
    java.util.Collection values() -> values
    java.util.Map asMap() -> asMap
    java.util.SortedSet replaceValues(java.lang.Object,java.lang.Iterable) -> replaceValues
    java.util.SortedSet removeAll(java.lang.Object) -> removeAll
    java.util.SortedSet get(java.lang.Object) -> get
    java.util.Set get(java.lang.Object) -> get
    java.util.Set keySet() -> keySet
    java.util.Collection get(java.lang.Object) -> get
    boolean equals(java.lang.Object) -> equals
    boolean put(java.lang.Object,java.lang.Object) -> put
    java.util.Set entries() -> entries
    java.util.Set createCollection() -> a
    java.util.Map createAsMap() -> g
    java.util.Set createKeySet() -> e
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    java.util.Map backingMap() -> d
    java.util.Collection createCollection() -> b
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    com.google.common.collect.Multiset keys() -> keys
    boolean putAll(com.google.common.collect.Multimap) -> putAll
    boolean putAll(java.lang.Object,java.lang.Iterable) -> putAll
    boolean remove(java.lang.Object,java.lang.Object) -> remove
    boolean containsEntry(java.lang.Object,java.lang.Object) -> containsEntry
    boolean containsValue(java.lang.Object) -> containsValue
    boolean isEmpty() -> isEmpty
com.google.common.collect.TreeMultiset -> com.google.common.collect.TreeMultiset:
    com.google.common.collect.TreeMultiset$Reference rootReference -> b
    com.google.common.collect.GeneralRange range -> c
    com.google.common.collect.TreeMultiset$AvlNode header -> d
    long serialVersionUID -> serialVersionUID
    com.google.common.collect.TreeMultiset create() -> create
    com.google.common.collect.TreeMultiset create(java.util.Comparator) -> create
    com.google.common.collect.TreeMultiset create(java.lang.Iterable) -> create
    long aggregateForEntries(com.google.common.collect.TreeMultiset$Aggregate) -> a
    long aggregateBelowRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode) -> a
    long aggregateAboveRange(com.google.common.collect.TreeMultiset$Aggregate,com.google.common.collect.TreeMultiset$AvlNode) -> b
    int size() -> size
    int distinctElements() -> b
    int count(java.lang.Object) -> count
    int add(java.lang.Object,int) -> add
    int remove(java.lang.Object,int) -> remove
    int setCount(java.lang.Object,int) -> setCount
    boolean setCount(java.lang.Object,int,int) -> setCount
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> e
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    int distinctElements(com.google.common.collect.TreeMultiset$AvlNode) -> a
    void successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> b
    void successor(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> b
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    java.util.Comparator comparator() -> comparator
    java.util.NavigableSet elementSet() -> elementSet
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.util.Set entrySet() -> entrySet
    void clear() -> clear
    boolean retainAll(java.util.Collection) -> retainAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean add(java.lang.Object) -> add
    java.util.Iterator iterator() -> iterator
    boolean contains(java.lang.Object) -> contains
    boolean isEmpty() -> isEmpty
    com.google.common.collect.TreeMultiset$AvlNode access$1200(com.google.common.collect.TreeMultiset) -> a
    com.google.common.collect.GeneralRange access$1300(com.google.common.collect.TreeMultiset) -> b
    com.google.common.collect.Multiset$Entry access$1400(com.google.common.collect.TreeMultiset,com.google.common.collect.TreeMultiset$AvlNode) -> a
    com.google.common.collect.TreeMultiset$AvlNode access$1500(com.google.common.collect.TreeMultiset) -> c
    com.google.common.collect.TreeMultiset$AvlNode access$1600(com.google.common.collect.TreeMultiset) -> d
    void access$1700(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> a
    void access$1800(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> a
com.google.common.collect.TreeMultiset$1 -> sU:
    com.google.common.collect.TreeMultiset$AvlNode val$baseEntry -> a
    com.google.common.collect.TreeMultiset this$0 -> b
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
com.google.common.collect.TreeMultiset$2 -> sV:
    com.google.common.collect.TreeMultiset$AvlNode current -> a
    com.google.common.collect.Multiset$Entry prevEntry -> b
    com.google.common.collect.TreeMultiset this$0 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.TreeMultiset$3 -> sW:
    com.google.common.collect.TreeMultiset$AvlNode current -> a
    com.google.common.collect.Multiset$Entry prevEntry -> b
    com.google.common.collect.TreeMultiset this$0 -> c
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
com.google.common.collect.TreeMultiset$4 -> sX:
    int[] $SwitchMap$com$google$common$collect$BoundType -> a
com.google.common.collect.TreeMultiset$Aggregate -> sY:
    com.google.common.collect.TreeMultiset$Aggregate SIZE -> a
    com.google.common.collect.TreeMultiset$Aggregate DISTINCT -> b
    com.google.common.collect.TreeMultiset$Aggregate[] $VALUES -> c
    com.google.common.collect.TreeMultiset$Aggregate[] values() -> values
    com.google.common.collect.TreeMultiset$Aggregate valueOf(java.lang.String) -> valueOf
    int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> a
    long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> b
com.google.common.collect.TreeMultiset$Aggregate$1 -> sZ:
    int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> a
    long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> b
com.google.common.collect.TreeMultiset$Aggregate$2 -> ta:
    int nodeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> a
    long treeAggregate(com.google.common.collect.TreeMultiset$AvlNode) -> b
com.google.common.collect.TreeMultiset$AvlNode -> tb:
    java.lang.Object elem -> a
    int elemCount -> b
    int distinctElements -> c
    long totalCount -> d
    int height -> e
    com.google.common.collect.TreeMultiset$AvlNode left -> f
    com.google.common.collect.TreeMultiset$AvlNode right -> g
    com.google.common.collect.TreeMultiset$AvlNode pred -> h
    com.google.common.collect.TreeMultiset$AvlNode succ -> i
    int count(java.util.Comparator,java.lang.Object) -> a
    com.google.common.collect.TreeMultiset$AvlNode addRightChild(java.lang.Object,int) -> a
    com.google.common.collect.TreeMultiset$AvlNode addLeftChild(java.lang.Object,int) -> b
    com.google.common.collect.TreeMultiset$AvlNode add(java.util.Comparator,java.lang.Object,int,int[]) -> a
    com.google.common.collect.TreeMultiset$AvlNode remove(java.util.Comparator,java.lang.Object,int,int[]) -> b
    com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int[]) -> c
    com.google.common.collect.TreeMultiset$AvlNode setCount(java.util.Comparator,java.lang.Object,int,int,int[]) -> a
    com.google.common.collect.TreeMultiset$AvlNode deleteMe() -> a
    com.google.common.collect.TreeMultiset$AvlNode removeMin(com.google.common.collect.TreeMultiset$AvlNode) -> i
    com.google.common.collect.TreeMultiset$AvlNode removeMax(com.google.common.collect.TreeMultiset$AvlNode) -> j
    void recomputeHeight() -> b
    void recompute() -> c
    com.google.common.collect.TreeMultiset$AvlNode rebalance() -> d
    int balanceFactor() -> e
    com.google.common.collect.TreeMultiset$AvlNode rotateLeft() -> f
    com.google.common.collect.TreeMultiset$AvlNode rotateRight() -> g
    long totalCount(com.google.common.collect.TreeMultiset$AvlNode) -> k
    int height(com.google.common.collect.TreeMultiset$AvlNode) -> l
    com.google.common.collect.TreeMultiset$AvlNode ceiling(java.util.Comparator,java.lang.Object) -> b
    com.google.common.collect.TreeMultiset$AvlNode floor(java.util.Comparator,java.lang.Object) -> c
    java.lang.Object getElement() -> getElement
    int getCount() -> getCount
    java.lang.String toString() -> toString
    int access$200(com.google.common.collect.TreeMultiset$AvlNode) -> a
    long access$300(com.google.common.collect.TreeMultiset$AvlNode) -> b
    int access$400(com.google.common.collect.TreeMultiset$AvlNode) -> c
    java.lang.Object access$500(com.google.common.collect.TreeMultiset$AvlNode) -> d
    com.google.common.collect.TreeMultiset$AvlNode access$600(com.google.common.collect.TreeMultiset$AvlNode) -> e
    com.google.common.collect.TreeMultiset$AvlNode access$700(com.google.common.collect.TreeMultiset$AvlNode) -> f
    com.google.common.collect.TreeMultiset$AvlNode access$800(com.google.common.collect.TreeMultiset$AvlNode,java.util.Comparator,java.lang.Object) -> a
    com.google.common.collect.TreeMultiset$AvlNode access$900(com.google.common.collect.TreeMultiset$AvlNode) -> g
    com.google.common.collect.TreeMultiset$AvlNode access$1000(com.google.common.collect.TreeMultiset$AvlNode,java.util.Comparator,java.lang.Object) -> b
    com.google.common.collect.TreeMultiset$AvlNode access$1100(com.google.common.collect.TreeMultiset$AvlNode) -> h
    com.google.common.collect.TreeMultiset$AvlNode access$902(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> a
    com.google.common.collect.TreeMultiset$AvlNode access$1102(com.google.common.collect.TreeMultiset$AvlNode,com.google.common.collect.TreeMultiset$AvlNode) -> b
com.google.common.collect.TreeMultiset$Reference -> tc:
    java.lang.Object value -> a
    void checkAndSet(java.lang.Object,java.lang.Object) -> a
com.google.common.collect.TreeRangeMap -> com.google.common.collect.TreeRangeMap:
    java.util.NavigableMap entriesByLowerBound -> a
    com.google.common.collect.RangeMap EMPTY_SUB_RANGE_MAP -> b
    com.google.common.collect.TreeRangeMap create() -> create
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    com.google.common.collect.Range span() -> span
    void putRangeMapEntry(com.google.common.collect.Cut,com.google.common.collect.Cut,java.lang.Object) -> a
    void remove(com.google.common.collect.Range) -> remove
    java.util.Map asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.util.NavigableMap access$100(com.google.common.collect.TreeRangeMap) -> a
    com.google.common.collect.RangeMap access$200(com.google.common.collect.TreeRangeMap) -> b
com.google.common.collect.TreeRangeMap$1 -> td:
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    java.util.Map asMapOfRanges() -> asMapOfRanges
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
com.google.common.collect.TreeRangeMap$AsMapOfRanges -> te:
    com.google.common.collect.TreeRangeMap this$0 -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.util.Set entrySet() -> entrySet
com.google.common.collect.TreeRangeMap$AsMapOfRanges$1 -> tf:
    com.google.common.collect.TreeRangeMap$AsMapOfRanges this$1 -> a
    java.util.Iterator iterator() -> iterator
    int size() -> size
com.google.common.collect.TreeRangeMap$RangeMapEntry -> tg:
    com.google.common.collect.Range range -> a
    java.lang.Object value -> b
    com.google.common.collect.Range getKey() -> a
    java.lang.Object getValue() -> getValue
    boolean contains(java.lang.Comparable) -> a
    com.google.common.collect.Cut getLowerBound() -> b
    com.google.common.collect.Cut getUpperBound() -> c
    java.lang.Object getKey() -> getKey
com.google.common.collect.TreeRangeMap$SubRangeMap -> th:
    com.google.common.collect.Range subRange -> b
    com.google.common.collect.TreeRangeMap this$0 -> a
    java.lang.Object get(java.lang.Comparable) -> get
    java.util.Map$Entry getEntry(java.lang.Comparable) -> getEntry
    com.google.common.collect.Range span() -> span
    void put(com.google.common.collect.Range,java.lang.Object) -> put
    void putAll(com.google.common.collect.RangeMap) -> putAll
    void clear() -> clear
    void remove(com.google.common.collect.Range) -> remove
    com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) -> subRangeMap
    java.util.Map asMapOfRanges() -> asMapOfRanges
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeMap$SubRangeMap) -> a
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap -> ti:
    com.google.common.collect.TreeRangeMap$SubRangeMap this$1 -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    void clear() -> clear
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
    java.util.Collection values() -> values
    boolean access$400(com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap,com.google.common.base.Predicate) -> a
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$1 -> tj:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> a
    java.util.Map map() -> a
    boolean remove(java.lang.Object) -> remove
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 -> tk:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    boolean isEmpty() -> isEmpty
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2$1 -> tl:
    java.util.Iterator val$backingItr -> a
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$2 this$3 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap$3 -> tm:
    com.google.common.collect.TreeRangeMap$SubRangeMap$SubRangeMapAsMap this$2 -> a
    java.util.Map map() -> a
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
com.google.common.collect.TreeRangeSet -> com.google.common.collect.TreeRangeSet:
    java.util.NavigableMap rangesByLowerBound -> a
    java.util.Set asRanges -> b
    com.google.common.collect.RangeSet complement -> c
    com.google.common.collect.TreeRangeSet create() -> create
    com.google.common.collect.TreeRangeSet create(com.google.common.collect.RangeSet) -> create
    java.util.Set asRanges() -> asRanges
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    boolean encloses(com.google.common.collect.Range) -> encloses
    com.google.common.collect.Range span() -> span
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    void replaceRangeWithSameLowerBound(com.google.common.collect.Range) -> a
    com.google.common.collect.RangeSet complement() -> complement
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
    boolean equals(java.lang.Object) -> equals
    void removeAll(com.google.common.collect.RangeSet) -> removeAll
    void addAll(com.google.common.collect.RangeSet) -> addAll
    boolean enclosesAll(com.google.common.collect.RangeSet) -> enclosesAll
    void clear() -> clear
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Comparable) -> contains
com.google.common.collect.TreeRangeSet$AsRanges -> tn:
    com.google.common.collect.TreeRangeSet this$0 -> a
    java.util.Collection delegate() -> delegate
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.Object delegate() -> delegate
com.google.common.collect.TreeRangeSet$Complement -> to:
    com.google.common.collect.TreeRangeSet this$0 -> b
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    boolean contains(java.lang.Comparable) -> contains
    com.google.common.collect.RangeSet complement() -> complement
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound -> tp:
    java.util.NavigableMap positiveRangesByLowerBound -> a
    java.util.NavigableMap positiveRangesByUpperBound -> b
    com.google.common.collect.Range complementLowerBoundWindow -> c
    java.util.NavigableMap subMap(com.google.common.collect.Range) -> a
    java.util.NavigableMap tailMap(com.google.common.collect.Cut,boolean) -> a
    java.util.Comparator comparator() -> comparator
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    int size() -> size
    com.google.common.collect.Range get(java.lang.Object) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    com.google.common.collect.Range access$100(com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound) -> a
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$1 -> tq:
    com.google.common.collect.Cut nextComplementRangeLowerBound -> a
    com.google.common.collect.Cut val$firstComplementRangeLowerBound -> b
    com.google.common.collect.PeekingIterator val$positiveItr -> c
    com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound this$0 -> d
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound$2 -> tr:
    com.google.common.collect.Cut nextComplementRangeUpperBound -> a
    com.google.common.collect.Cut val$firstComplementRangeUpperBound -> b
    com.google.common.collect.PeekingIterator val$positiveItr -> c
    com.google.common.collect.TreeRangeSet$ComplementRangesByLowerBound this$0 -> d
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound -> ts:
    java.util.NavigableMap rangesByLowerBound -> a
    com.google.common.collect.Range upperBoundWindow -> b
    java.util.NavigableMap subMap(com.google.common.collect.Range) -> a
    java.util.Comparator comparator() -> comparator
    boolean containsKey(java.lang.Object) -> containsKey
    com.google.common.collect.Range get(java.lang.Object) -> a
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.lang.Object get(java.lang.Object) -> get
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    com.google.common.collect.Range access$000(com.google.common.collect.TreeRangeSet$RangesByUpperBound) -> a
com.google.common.collect.TreeRangeSet$RangesByUpperBound$1 -> tt:
    java.util.Iterator val$backingItr -> a
    com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$RangesByUpperBound$2 -> tu:
    com.google.common.collect.PeekingIterator val$backingItr -> a
    com.google.common.collect.TreeRangeSet$RangesByUpperBound this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$SubRangeSet -> tv:
    com.google.common.collect.Range restriction -> c
    com.google.common.collect.TreeRangeSet this$0 -> b
    boolean encloses(com.google.common.collect.Range) -> encloses
    com.google.common.collect.Range rangeContaining(java.lang.Comparable) -> rangeContaining
    void add(com.google.common.collect.Range) -> add
    void remove(com.google.common.collect.Range) -> remove
    boolean contains(java.lang.Comparable) -> contains
    void clear() -> clear
    com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) -> subRangeSet
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound -> tw:
    com.google.common.collect.Range lowerBoundWindow -> a
    com.google.common.collect.Range restriction -> b
    java.util.NavigableMap rangesByLowerBound -> c
    java.util.NavigableMap rangesByUpperBound -> d
    java.util.NavigableMap subMap(com.google.common.collect.Range) -> a
    java.util.Comparator comparator() -> comparator
    boolean containsKey(java.lang.Object) -> containsKey
    com.google.common.collect.Range get(java.lang.Object) -> a
    java.util.Iterator entryIterator() -> a
    java.util.Iterator descendingEntryIterator() -> b
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.util.NavigableMap tailMap(java.lang.Object,boolean) -> tailMap
    java.util.NavigableMap headMap(java.lang.Object,boolean) -> headMap
    java.util.NavigableMap subMap(java.lang.Object,boolean,java.lang.Object,boolean) -> subMap
    com.google.common.collect.Range access$300(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound) -> a
    com.google.common.collect.Range access$400(com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound) -> b
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$1 -> tx:
    java.util.Iterator val$completeRangeItr -> a
    com.google.common.collect.Cut val$upperBoundOnLowerBounds -> b
    com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound this$0 -> c
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound$2 -> ty:
    java.util.Iterator val$completeRangeItr -> a
    com.google.common.collect.TreeRangeSet$SubRangeSetRangesByLowerBound this$0 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.collect.UnmodifiableIterator -> com.google.common.collect.UnmodifiableIterator:
    void remove() -> remove
com.google.common.collect.UnmodifiableListIterator -> com.google.common.collect.UnmodifiableListIterator:
    void add(java.lang.Object) -> add
    void set(java.lang.Object) -> set
com.google.common.collect.UnmodifiableSortedMultiset -> tz:
    com.google.common.collect.UnmodifiableSortedMultiset descendingMultiset -> d
    long serialVersionUID -> serialVersionUID
    java.util.Comparator comparator() -> comparator
    java.util.NavigableSet elementSet() -> elementSet
    com.google.common.collect.SortedMultiset descendingMultiset() -> descendingMultiset
    com.google.common.collect.Multiset$Entry firstEntry() -> firstEntry
    com.google.common.collect.Multiset$Entry lastEntry() -> lastEntry
    com.google.common.collect.Multiset$Entry pollFirstEntry() -> pollFirstEntry
    com.google.common.collect.Multiset$Entry pollLastEntry() -> pollLastEntry
    com.google.common.collect.SortedMultiset headMultiset(java.lang.Object,com.google.common.collect.BoundType) -> headMultiset
    com.google.common.collect.SortedMultiset subMultiset(java.lang.Object,com.google.common.collect.BoundType,java.lang.Object,com.google.common.collect.BoundType) -> subMultiset
    com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object,com.google.common.collect.BoundType) -> tailMultiset
    java.util.Set elementSet() -> elementSet
    java.util.Set createElementSet() -> a
    com.google.common.collect.Multiset delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.collect.UsingToStringOrdering -> tA:
    com.google.common.collect.UsingToStringOrdering INSTANCE -> a
    long serialVersionUID -> serialVersionUID
    int compare(java.lang.Object,java.lang.Object) -> compare
    java.lang.Object readResolve() -> readResolve
    java.lang.String toString() -> toString
com.google.common.collect.WellBehavedMap -> tB:
    java.util.Map delegate -> a
    java.util.Set entrySet -> b
    com.google.common.collect.WellBehavedMap wrap(java.util.Map) -> a
    java.util.Map delegate() -> delegate
    java.util.Set entrySet() -> entrySet
    java.lang.Object delegate() -> delegate
com.google.common.collect.WellBehavedMap$EntrySet -> tC:
    com.google.common.collect.WellBehavedMap this$0 -> a
    java.util.Map map() -> a
    java.util.Iterator iterator() -> iterator
com.google.common.collect.WellBehavedMap$EntrySet$1 -> tD:
    com.google.common.collect.WellBehavedMap$EntrySet this$1 -> a
    java.lang.Object transform(java.lang.Object) -> a
com.google.common.collect.WellBehavedMap$EntrySet$1$1 -> tE:
    java.lang.Object val$key -> a
    com.google.common.collect.WellBehavedMap$EntrySet$1 this$2 -> b
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.google.common.eventbus.AllowConcurrentEvents -> com.google.common.eventbus.AllowConcurrentEvents:
com.google.common.eventbus.AnnotatedHandlerFinder -> tF:
    com.google.common.cache.LoadingCache handlerMethodsCache -> a
    com.google.common.collect.Multimap findAllHandlers(java.lang.Object) -> a
    com.google.common.collect.ImmutableList getAnnotatedMethods(java.lang.Class) -> b
    com.google.common.collect.ImmutableList getAnnotatedMethodsInternal(java.lang.Class) -> c
    com.google.common.collect.ImmutableList access$000(java.lang.Class) -> a
com.google.common.eventbus.AnnotatedHandlerFinder$1 -> tG:
    java.lang.Object load(java.lang.Object) -> load
com.google.common.eventbus.AsyncEventBus -> com.google.common.eventbus.AsyncEventBus:
    java.util.concurrent.Executor executor -> a
    java.util.concurrent.ConcurrentLinkedQueue eventsToDispatch -> b
    void enqueueEvent(java.lang.Object,com.google.common.eventbus.EventHandler) -> a
    void dispatchQueuedEvents() -> dispatchQueuedEvents
    void dispatch(java.lang.Object,com.google.common.eventbus.EventHandler) -> b
    void access$001(com.google.common.eventbus.AsyncEventBus,java.lang.Object,com.google.common.eventbus.EventHandler) -> a
com.google.common.eventbus.AsyncEventBus$1 -> tH:
    java.lang.Object val$event -> a
    com.google.common.eventbus.EventHandler val$handler -> b
    com.google.common.eventbus.AsyncEventBus this$0 -> c
    void run() -> run
com.google.common.eventbus.DeadEvent -> com.google.common.eventbus.DeadEvent:
    java.lang.Object source -> a
    java.lang.Object event -> b
    java.lang.Object getSource() -> getSource
    java.lang.Object getEvent() -> getEvent
com.google.common.eventbus.EventBus -> com.google.common.eventbus.EventBus:
    com.google.common.cache.LoadingCache flattenHierarchyCache -> a
    com.google.common.collect.SetMultimap handlersByType -> b
    java.util.concurrent.locks.ReadWriteLock handlersByTypeLock -> c
    java.util.logging.Logger logger -> d
    com.google.common.eventbus.HandlerFindingStrategy finder -> e
    java.lang.ThreadLocal eventsToDispatch -> f
    java.lang.ThreadLocal isDispatching -> g
    void register(java.lang.Object) -> register
    void unregister(java.lang.Object) -> unregister
    void post(java.lang.Object) -> post
    void enqueueEvent(java.lang.Object,com.google.common.eventbus.EventHandler) -> a
    void dispatchQueuedEvents() -> dispatchQueuedEvents
    void dispatch(java.lang.Object,com.google.common.eventbus.EventHandler) -> b
    java.util.Set flattenHierarchy(java.lang.Class) -> a
com.google.common.eventbus.EventBus$1 -> tI:
    java.lang.Object load(java.lang.Object) -> load
com.google.common.eventbus.EventBus$2 -> tJ:
    com.google.common.eventbus.EventBus this$0 -> a
    java.lang.Object initialValue() -> initialValue
com.google.common.eventbus.EventBus$3 -> tK:
    com.google.common.eventbus.EventBus this$0 -> a
    java.lang.Object initialValue() -> initialValue
com.google.common.eventbus.EventBus$EventWithHandler -> tL:
    java.lang.Object event -> a
    com.google.common.eventbus.EventHandler handler -> b
com.google.common.eventbus.EventHandler -> tM:
    java.lang.Object target -> a
    java.lang.reflect.Method method -> b
    void handleEvent(java.lang.Object) -> a
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.eventbus.HandlerFindingStrategy -> tN:
    com.google.common.collect.Multimap findAllHandlers(java.lang.Object) -> a
com.google.common.eventbus.Subscribe -> com.google.common.eventbus.Subscribe:
com.google.common.eventbus.SynchronizedEventHandler -> tO:
    void handleEvent(java.lang.Object) -> a
com.google.common.hash.AbstractByteHasher -> tP:
    java.nio.ByteBuffer scratch -> a
    void update(byte) -> a
    void update(byte[]) -> a
    void update(byte[],int,int) -> a
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher update(int) -> a
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.AbstractCompositeHashFunction -> tQ:
    com.google.common.hash.HashFunction[] functions -> a
    com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[]) -> a
    com.google.common.hash.Hasher newHasher() -> newHasher
com.google.common.hash.AbstractCompositeHashFunction$1 -> tR:
    com.google.common.hash.Hasher[] val$hashers -> a
    com.google.common.hash.AbstractCompositeHashFunction this$0 -> b
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putFloat(float) -> putFloat
    com.google.common.hash.Hasher putDouble(double) -> putDouble
    com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putString(java.lang.CharSequence) -> putString
    com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.HashCode hash() -> hash
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence) -> putString
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.AbstractHasher -> tS:
    com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    com.google.common.hash.Hasher putDouble(double) -> putDouble
    com.google.common.hash.Hasher putFloat(float) -> putFloat
    com.google.common.hash.Hasher putString(java.lang.CharSequence) -> putString
    com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence) -> putString
    com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
com.google.common.hash.AbstractStreamingHashFunction -> com.google.common.hash.AbstractStreamingHashFunction:
    com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel) -> hashObject
    com.google.common.hash.HashCode hashString(java.lang.CharSequence) -> hashString
    com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset) -> hashString
    com.google.common.hash.HashCode hashInt(int) -> hashInt
    com.google.common.hash.HashCode hashLong(long) -> hashLong
    com.google.common.hash.HashCode hashBytes(byte[]) -> hashBytes
    com.google.common.hash.HashCode hashBytes(byte[],int,int) -> hashBytes
    com.google.common.hash.Hasher newHasher(int) -> newHasher
com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher -> com.google.common.hash.AbstractStreamingHashFunction$AbstractStreamingHasher:
    java.nio.ByteBuffer buffer -> a
    int bufferSize -> b
    int chunkSize -> c
    void process(java.nio.ByteBuffer) -> process
    void processRemaining(java.nio.ByteBuffer) -> processRemaining
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher putString(java.lang.CharSequence) -> putString
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.HashCode hash() -> hash
    com.google.common.hash.HashCode makeHash() -> a
    void munchIfFull() -> b
    void munch() -> c
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence) -> putString
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
com.google.common.hash.BloomFilter -> com.google.common.hash.BloomFilter:
    com.google.common.hash.BloomFilterStrategies$BitArray bits -> a
    int numHashFunctions -> b
    com.google.common.hash.Funnel funnel -> c
    com.google.common.hash.BloomFilter$Strategy strategy -> d
    com.google.common.hash.BloomFilter copy() -> copy
    boolean mightContain(java.lang.Object) -> mightContain
    boolean apply(java.lang.Object) -> apply
    boolean put(java.lang.Object) -> put
    double expectedFpp() -> expectedFpp
    double expectedFalsePositiveProbability() -> expectedFalsePositiveProbability
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,int,double) -> create
    com.google.common.hash.BloomFilter create(com.google.common.hash.Funnel,int) -> create
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.hash.BloomFilterStrategies$BitArray access$000(com.google.common.hash.BloomFilter) -> a
    int access$100(com.google.common.hash.BloomFilter) -> b
    com.google.common.hash.Funnel access$200(com.google.common.hash.BloomFilter) -> c
    com.google.common.hash.BloomFilter$Strategy access$300(com.google.common.hash.BloomFilter) -> d
com.google.common.hash.BloomFilter$SerialForm -> tT:
    long[] data -> a
    int numHashFunctions -> b
    com.google.common.hash.Funnel funnel -> c
    com.google.common.hash.BloomFilter$Strategy strategy -> d
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.hash.BloomFilter$Strategy -> tU:
    boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> a
    boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> b
com.google.common.hash.BloomFilterStrategies -> tV:
    com.google.common.hash.BloomFilterStrategies MURMUR128_MITZ_32 -> a
    com.google.common.hash.BloomFilterStrategies[] $VALUES -> b
    com.google.common.hash.BloomFilterStrategies[] values() -> values
    com.google.common.hash.BloomFilterStrategies valueOf(java.lang.String) -> valueOf
com.google.common.hash.BloomFilterStrategies$1 -> tW:
    boolean put(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> a
    boolean mightContain(java.lang.Object,com.google.common.hash.Funnel,int,com.google.common.hash.BloomFilterStrategies$BitArray) -> b
com.google.common.hash.BloomFilterStrategies$BitArray -> tX:
    long[] data -> a
    int bitCount -> b
    boolean get(int) -> a
    int size() -> a
    com.google.common.hash.BloomFilterStrategies$BitArray copy() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.hash.ChecksumHashFunction -> tY:
    com.google.common.base.Supplier checksumSupplier -> a
    int bits -> b
    java.lang.String toString -> c
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.String toString() -> toString
    int access$100(com.google.common.hash.ChecksumHashFunction) -> a
com.google.common.hash.ChecksumHashFunction$ChecksumHasher -> tZ:
    java.util.zip.Checksum checksum -> b
    com.google.common.hash.ChecksumHashFunction this$0 -> a
    void update(byte) -> a
    void update(byte[],int,int) -> a
    com.google.common.hash.HashCode hash() -> hash
com.google.common.hash.Funnel -> com.google.common.hash.Funnel:
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels -> com.google.common.hash.Funnels:
    com.google.common.hash.Funnel byteArrayFunnel() -> byteArrayFunnel
    com.google.common.hash.Funnel stringFunnel() -> stringFunnel
    com.google.common.hash.Funnel integerFunnel() -> integerFunnel
    com.google.common.hash.Funnel longFunnel() -> longFunnel
    java.io.OutputStream asOutputStream(com.google.common.hash.PrimitiveSink) -> asOutputStream
com.google.common.hash.Funnels$ByteArrayFunnel -> ua:
    com.google.common.hash.Funnels$ByteArrayFunnel INSTANCE -> a
    com.google.common.hash.Funnels$ByteArrayFunnel[] $VALUES -> b
    com.google.common.hash.Funnels$ByteArrayFunnel[] values() -> values
    com.google.common.hash.Funnels$ByteArrayFunnel valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$IntegerFunnel -> ub:
    com.google.common.hash.Funnels$IntegerFunnel INSTANCE -> a
    com.google.common.hash.Funnels$IntegerFunnel[] $VALUES -> b
    com.google.common.hash.Funnels$IntegerFunnel[] values() -> values
    com.google.common.hash.Funnels$IntegerFunnel valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$LongFunnel -> uc:
    com.google.common.hash.Funnels$LongFunnel INSTANCE -> a
    com.google.common.hash.Funnels$LongFunnel[] $VALUES -> b
    com.google.common.hash.Funnels$LongFunnel[] values() -> values
    com.google.common.hash.Funnels$LongFunnel valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.Funnels$SinkAsStream -> ud:
    com.google.common.hash.PrimitiveSink sink -> a
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    java.lang.String toString() -> toString
com.google.common.hash.Funnels$StringFunnel -> ue:
    com.google.common.hash.Funnels$StringFunnel INSTANCE -> a
    com.google.common.hash.Funnels$StringFunnel[] $VALUES -> b
    com.google.common.hash.Funnels$StringFunnel[] values() -> values
    com.google.common.hash.Funnels$StringFunnel valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
    void funnel(java.lang.Object,com.google.common.hash.PrimitiveSink) -> funnel
com.google.common.hash.HashCode -> com.google.common.hash.HashCode:
    char[] hexDigits -> a
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
    byte[] asBytes() -> asBytes
    int writeBytesTo(byte[],int,int) -> writeBytesTo
    int bits() -> bits
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.hash.HashCodes -> com.google.common.hash.HashCodes:
    com.google.common.hash.HashCode fromInt(int) -> fromInt
    com.google.common.hash.HashCode fromLong(long) -> fromLong
    com.google.common.hash.HashCode fromBytes(byte[]) -> fromBytes
    com.google.common.hash.HashCode fromBytesNoCopy(byte[]) -> a
com.google.common.hash.HashCodes$BytesHashCode -> uf:
    byte[] bytes -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    byte[] asBytes() -> asBytes
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
    int hashCode() -> hashCode
com.google.common.hash.HashCodes$IntHashCode -> ug:
    int hash -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    byte[] asBytes() -> asBytes
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
com.google.common.hash.HashCodes$LongHashCode -> uh:
    long hash -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    byte[] asBytes() -> asBytes
    int asInt() -> asInt
    long asLong() -> asLong
    long padToLong() -> padToLong
com.google.common.hash.HashFunction -> com.google.common.hash.HashFunction:
    com.google.common.hash.Hasher newHasher() -> newHasher
    com.google.common.hash.Hasher newHasher(int) -> newHasher
    com.google.common.hash.HashCode hashInt(int) -> hashInt
    com.google.common.hash.HashCode hashLong(long) -> hashLong
    com.google.common.hash.HashCode hashBytes(byte[]) -> hashBytes
    com.google.common.hash.HashCode hashBytes(byte[],int,int) -> hashBytes
    com.google.common.hash.HashCode hashString(java.lang.CharSequence) -> hashString
    com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset) -> hashString
    com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel) -> hashObject
    int bits() -> bits
com.google.common.hash.Hasher -> com.google.common.hash.Hasher:
    com.google.common.hash.Hasher putByte(byte) -> putByte
    com.google.common.hash.Hasher putBytes(byte[]) -> putBytes
    com.google.common.hash.Hasher putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.Hasher putShort(short) -> putShort
    com.google.common.hash.Hasher putInt(int) -> putInt
    com.google.common.hash.Hasher putLong(long) -> putLong
    com.google.common.hash.Hasher putFloat(float) -> putFloat
    com.google.common.hash.Hasher putDouble(double) -> putDouble
    com.google.common.hash.Hasher putBoolean(boolean) -> putBoolean
    com.google.common.hash.Hasher putChar(char) -> putChar
    com.google.common.hash.Hasher putString(java.lang.CharSequence) -> putString
    com.google.common.hash.Hasher putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
    com.google.common.hash.Hasher putObject(java.lang.Object,com.google.common.hash.Funnel) -> putObject
    com.google.common.hash.HashCode hash() -> hash
com.google.common.hash.Hashing -> com.google.common.hash.Hashing:
    int GOOD_FAST_HASH_SEED -> a
    com.google.common.hash.HashFunction GOOD_FAST_HASH_FUNCTION_32 -> b
    com.google.common.hash.HashFunction GOOD_FAST_HASH_FUNCTION_128 -> c
    com.google.common.hash.HashFunction MURMUR3_32 -> d
    com.google.common.hash.HashFunction MURMUR3_128 -> e
    com.google.common.hash.HashFunction MD5 -> f
    com.google.common.hash.HashFunction SHA_1 -> g
    com.google.common.hash.HashFunction SHA_256 -> h
    com.google.common.hash.HashFunction SHA_512 -> i
    com.google.common.hash.HashFunction CRC_32 -> j
    com.google.common.hash.HashFunction ADLER_32 -> k
    com.google.common.hash.HashFunction goodFastHash(int) -> goodFastHash
    com.google.common.hash.HashFunction murmur3_32(int) -> murmur3_32
    com.google.common.hash.HashFunction murmur3_32() -> murmur3_32
    com.google.common.hash.HashFunction murmur3_128(int) -> murmur3_128
    com.google.common.hash.HashFunction murmur3_128() -> murmur3_128
    com.google.common.hash.HashFunction md5() -> md5
    com.google.common.hash.HashFunction sha1() -> sha1
    com.google.common.hash.HashFunction sha256() -> sha256
    com.google.common.hash.HashFunction sha512() -> sha512
    com.google.common.hash.HashFunction crc32() -> crc32
    com.google.common.hash.HashFunction adler32() -> adler32
    com.google.common.hash.HashFunction checksumHashFunction(com.google.common.hash.Hashing$ChecksumType,java.lang.String) -> a
    long padToLong(com.google.common.hash.HashCode) -> padToLong
    int consistentHash(com.google.common.hash.HashCode,int) -> consistentHash
    int consistentHash(long,int) -> consistentHash
    com.google.common.hash.HashCode combineOrdered(java.lang.Iterable) -> combineOrdered
    com.google.common.hash.HashCode combineUnordered(java.lang.Iterable) -> combineUnordered
com.google.common.hash.Hashing$ChecksumType -> ui:
    com.google.common.hash.Hashing$ChecksumType CRC_32 -> a
    com.google.common.hash.Hashing$ChecksumType ADLER_32 -> b
    int bits -> c
    com.google.common.hash.Hashing$ChecksumType[] $VALUES -> d
    com.google.common.hash.Hashing$ChecksumType[] values() -> values
    com.google.common.hash.Hashing$ChecksumType valueOf(java.lang.String) -> valueOf
    java.util.zip.Checksum get() -> a
    java.lang.Object get() -> get
    int access$000(com.google.common.hash.Hashing$ChecksumType) -> a
com.google.common.hash.Hashing$ChecksumType$1 -> uj:
    java.util.zip.Checksum get() -> a
    java.lang.Object get() -> get
com.google.common.hash.Hashing$ChecksumType$2 -> uk:
    java.util.zip.Checksum get() -> a
    java.lang.Object get() -> get
com.google.common.hash.Hashing$ConcatenatedHashFunction -> ul:
    int bits -> b
    com.google.common.hash.HashCode makeHash(com.google.common.hash.Hasher[]) -> a
    int bits() -> bits
com.google.common.hash.Hashing$LinearCongruentialGenerator -> um:
    long state -> a
com.google.common.hash.MessageDigestHashFunction -> un:
    java.security.MessageDigest prototype -> a
    int bytes -> b
    boolean supportsClone -> c
    java.lang.String toString -> d
    boolean supportsClone() -> a
    int bits() -> bits
    java.lang.String toString() -> toString
    java.security.MessageDigest getMessageDigest(java.lang.String) -> a
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.Object writeReplace() -> writeReplace
com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher -> uo:
    java.security.MessageDigest digest -> a
    int bytes -> b
    boolean done -> c
    void update(byte) -> a
    void update(byte[]) -> a
    void update(byte[],int,int) -> a
    void checkNotDone() -> a
    com.google.common.hash.HashCode hash() -> hash
com.google.common.hash.MessageDigestHashFunction$SerializedForm -> up:
    java.lang.String algorithmName -> a
    int bytes -> b
    java.lang.String toString -> c
    long serialVersionUID -> serialVersionUID
    java.lang.Object readResolve() -> readResolve
com.google.common.hash.Murmur3_128HashFunction -> uq:
    int seed -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.String toString() -> toString
com.google.common.hash.Murmur3_128HashFunction$Murmur3_128Hasher -> ur:
    long h1 -> a
    long h2 -> b
    int length -> c
    void process(java.nio.ByteBuffer) -> process
    void processRemaining(java.nio.ByteBuffer) -> processRemaining
    com.google.common.hash.HashCode makeHash() -> a
    long fmix64(long) -> a
    long mixK1(long) -> b
    long mixK2(long) -> c
com.google.common.hash.Murmur3_32HashFunction -> us:
    int seed -> a
    long serialVersionUID -> serialVersionUID
    int bits() -> bits
    com.google.common.hash.Hasher newHasher() -> newHasher
    java.lang.String toString() -> toString
    com.google.common.hash.HashCode hashInt(int) -> hashInt
    com.google.common.hash.HashCode hashLong(long) -> hashLong
    com.google.common.hash.HashCode hashString(java.lang.CharSequence) -> hashString
    int mixK1(int) -> b
    int mixH1(int,int) -> c
    com.google.common.hash.HashCode fmix(int,int) -> d
    int access$000(int) -> a
    int access$100(int,int) -> a
    com.google.common.hash.HashCode access$200(int,int) -> b
com.google.common.hash.Murmur3_32HashFunction$Murmur3_32Hasher -> ut:
    int h1 -> a
    int length -> b
    void process(java.nio.ByteBuffer) -> process
    void processRemaining(java.nio.ByteBuffer) -> processRemaining
    com.google.common.hash.HashCode makeHash() -> a
com.google.common.hash.PrimitiveSink -> com.google.common.hash.PrimitiveSink:
    com.google.common.hash.PrimitiveSink putByte(byte) -> putByte
    com.google.common.hash.PrimitiveSink putBytes(byte[]) -> putBytes
    com.google.common.hash.PrimitiveSink putBytes(byte[],int,int) -> putBytes
    com.google.common.hash.PrimitiveSink putShort(short) -> putShort
    com.google.common.hash.PrimitiveSink putInt(int) -> putInt
    com.google.common.hash.PrimitiveSink putLong(long) -> putLong
    com.google.common.hash.PrimitiveSink putFloat(float) -> putFloat
    com.google.common.hash.PrimitiveSink putDouble(double) -> putDouble
    com.google.common.hash.PrimitiveSink putBoolean(boolean) -> putBoolean
    com.google.common.hash.PrimitiveSink putChar(char) -> putChar
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence) -> putString
    com.google.common.hash.PrimitiveSink putString(java.lang.CharSequence,java.nio.charset.Charset) -> putString
com.google.common.io.AppendableWriter -> uu:
    java.lang.Appendable target -> a
    boolean closed -> b
    void write(char[],int,int) -> write
    void flush() -> flush
    void close() -> close
    void write(int) -> write
    void write(java.lang.String) -> write
    void write(java.lang.String,int,int) -> write
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    void checkNotClosed() -> a
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.google.common.io.BaseEncoding -> com.google.common.io.BaseEncoding:
    com.google.common.io.BaseEncoding BASE64 -> a
    com.google.common.io.BaseEncoding BASE64_URL -> b
    com.google.common.io.BaseEncoding BASE32 -> c
    com.google.common.io.BaseEncoding BASE32_HEX -> d
    com.google.common.io.BaseEncoding BASE16 -> e
    java.lang.String encode(byte[]) -> encode
    java.lang.String encode(byte[],int,int) -> encode
    java.io.OutputStream encodingStream(java.io.Writer) -> encodingStream
    com.google.common.io.OutputSupplier encodingStream(com.google.common.io.OutputSupplier) -> encodingStream
    com.google.common.io.ByteSink encodingSink(com.google.common.io.CharSink) -> encodingSink
    byte[] decode(java.lang.CharSequence) -> decode
    java.io.InputStream decodingStream(java.io.Reader) -> decodingStream
    com.google.common.io.InputSupplier decodingStream(com.google.common.io.InputSupplier) -> decodingStream
    com.google.common.io.ByteSource decodingSource(com.google.common.io.CharSource) -> decodingSource
    int maxEncodedSize(int) -> a
    com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(com.google.common.io.GwtWorkarounds$CharOutput) -> a
    int maxDecodedSize(int) -> b
    com.google.common.io.GwtWorkarounds$ByteInput decodingStream(com.google.common.io.GwtWorkarounds$CharInput) -> a
    com.google.common.base.CharMatcher padding() -> a
    com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    com.google.common.io.BaseEncoding upperCase() -> upperCase
    com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    com.google.common.io.BaseEncoding base64() -> base64
    com.google.common.io.BaseEncoding base64Url() -> base64Url
    com.google.common.io.BaseEncoding base32() -> base32
    com.google.common.io.BaseEncoding base32Hex() -> base32Hex
    com.google.common.io.BaseEncoding base16() -> base16
com.google.common.io.BaseEncoding$1 -> uv:
    com.google.common.io.OutputSupplier val$writerSupplier -> a
    com.google.common.io.BaseEncoding this$0 -> b
    java.lang.Object getOutput() -> getOutput
com.google.common.io.BaseEncoding$2 -> uw:
    com.google.common.io.CharSink val$encodedSink -> a
    com.google.common.io.BaseEncoding this$0 -> b
    java.io.OutputStream openStream() -> openStream
com.google.common.io.BaseEncoding$3 -> ux:
    com.google.common.io.InputSupplier val$readerSupplier -> a
    com.google.common.io.BaseEncoding this$0 -> b
    java.lang.Object getInput() -> getInput
com.google.common.io.BaseEncoding$4 -> uy:
    com.google.common.io.CharSource val$encodedSource -> a
    com.google.common.io.BaseEncoding this$0 -> b
    java.io.InputStream openStream() -> openStream
com.google.common.io.BaseEncoding$5 -> uz:
    com.google.common.io.GwtWorkarounds$CharInput val$delegate -> a
    com.google.common.base.CharMatcher val$toIgnore -> b
    int read() -> a
    void close() -> b
com.google.common.io.BaseEncoding$6 -> uA:
    int charsUntilSeparator -> a
    int val$afterEveryChars -> b
    java.lang.String val$separator -> c
    com.google.common.io.GwtWorkarounds$CharOutput val$delegate -> d
    void write(char) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.BaseEncoding$Alphabet -> uB:
    java.lang.String name -> f
    char[] chars -> g
    int mask -> b
    int bitsPerChar -> c
    int charsPerChunk -> d
    int bytesPerChunk -> e
    byte[] decodabet -> h
    boolean[] validPadding -> i
    char encode(int) -> a
    boolean isValidPaddingStartPosition(int) -> b
    int decode(char) -> a
    boolean hasLowerCase() -> d
    boolean hasUpperCase() -> e
    com.google.common.io.BaseEncoding$Alphabet upperCase() -> b
    com.google.common.io.BaseEncoding$Alphabet lowerCase() -> c
    boolean matches(char) -> matches
    java.lang.String toString() -> toString
com.google.common.io.BaseEncoding$SeparatedBaseEncoding -> uC:
    com.google.common.io.BaseEncoding delegate -> a
    java.lang.String separator -> b
    int afterEveryChars -> c
    com.google.common.base.CharMatcher separatorChars -> d
    com.google.common.base.CharMatcher padding() -> a
    int maxEncodedSize(int) -> a
    com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(com.google.common.io.GwtWorkarounds$CharOutput) -> a
    int maxDecodedSize(int) -> b
    com.google.common.io.GwtWorkarounds$ByteInput decodingStream(com.google.common.io.GwtWorkarounds$CharInput) -> a
    com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    com.google.common.io.BaseEncoding upperCase() -> upperCase
    com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    java.lang.String toString() -> toString
com.google.common.io.BaseEncoding$StandardBaseEncoding -> uD:
    com.google.common.io.BaseEncoding$Alphabet alphabet -> a
    java.lang.Character paddingChar -> b
    com.google.common.io.BaseEncoding upperCase -> c
    com.google.common.io.BaseEncoding lowerCase -> d
    com.google.common.base.CharMatcher padding() -> a
    int maxEncodedSize(int) -> a
    com.google.common.io.GwtWorkarounds$ByteOutput encodingStream(com.google.common.io.GwtWorkarounds$CharOutput) -> a
    int maxDecodedSize(int) -> b
    com.google.common.io.GwtWorkarounds$ByteInput decodingStream(com.google.common.io.GwtWorkarounds$CharInput) -> a
    com.google.common.io.BaseEncoding omitPadding() -> omitPadding
    com.google.common.io.BaseEncoding withPadChar(char) -> withPadChar
    com.google.common.io.BaseEncoding withSeparator(java.lang.String,int) -> withSeparator
    com.google.common.io.BaseEncoding upperCase() -> upperCase
    com.google.common.io.BaseEncoding lowerCase() -> lowerCase
    java.lang.String toString() -> toString
    com.google.common.io.BaseEncoding$Alphabet access$000(com.google.common.io.BaseEncoding$StandardBaseEncoding) -> a
    java.lang.Character access$100(com.google.common.io.BaseEncoding$StandardBaseEncoding) -> b
com.google.common.io.BaseEncoding$StandardBaseEncoding$1 -> uE:
    int bitBuffer -> a
    int bitBufferLength -> b
    int writtenChars -> c
    com.google.common.io.GwtWorkarounds$CharOutput val$out -> d
    com.google.common.io.BaseEncoding$StandardBaseEncoding this$0 -> e
    void write(byte) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.BaseEncoding$StandardBaseEncoding$2 -> uF:
    int bitBuffer -> a
    int bitBufferLength -> b
    int readChars -> c
    boolean hitPadding -> d
    com.google.common.base.CharMatcher paddingMatcher -> e
    com.google.common.io.GwtWorkarounds$CharInput val$reader -> f
    com.google.common.io.BaseEncoding$StandardBaseEncoding this$0 -> g
    int read() -> a
    void close() -> b
com.google.common.io.ByteArrayDataInput -> com.google.common.io.ByteArrayDataInput:
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.google.common.io.ByteArrayDataOutput -> com.google.common.io.ByteArrayDataOutput:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeShort(int) -> writeShort
    void writeChar(int) -> writeChar
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeFloat(float) -> writeFloat
    void writeDouble(double) -> writeDouble
    void writeChars(java.lang.String) -> writeChars
    void writeUTF(java.lang.String) -> writeUTF
    void writeBytes(java.lang.String) -> writeBytes
    byte[] toByteArray() -> toByteArray
com.google.common.io.ByteProcessor -> com.google.common.io.ByteProcessor:
    boolean processBytes(byte[],int,int) -> processBytes
    java.lang.Object getResult() -> getResult
com.google.common.io.ByteSink -> com.google.common.io.ByteSink:
    com.google.common.io.CharSink asCharSink(java.nio.charset.Charset) -> asCharSink
    java.io.OutputStream openStream() -> openStream
    java.io.BufferedOutputStream openBufferedStream() -> openBufferedStream
    void write(byte[]) -> write
    long writeFrom(java.io.InputStream) -> writeFrom
com.google.common.io.ByteSink$AsCharSink -> uG:
    java.nio.charset.Charset charset -> b
    com.google.common.io.ByteSink this$0 -> a
    java.io.Writer openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.io.ByteSource -> com.google.common.io.ByteSource:
    byte[] countBuffer -> a
    com.google.common.io.CharSource asCharSource(java.nio.charset.Charset) -> asCharSource
    java.io.InputStream openStream() -> openStream
    java.io.BufferedInputStream openBufferedStream() -> openBufferedStream
    com.google.common.io.ByteSource slice(long,long) -> slice
    long size() -> size
    long copyTo(java.io.OutputStream) -> copyTo
    long copyTo(com.google.common.io.ByteSink) -> copyTo
    byte[] read() -> read
    com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction) -> hash
    boolean contentEquals(com.google.common.io.ByteSource) -> contentEquals
com.google.common.io.ByteSource$AsCharSource -> uH:
    java.nio.charset.Charset charset -> b
    com.google.common.io.ByteSource this$0 -> a
    java.io.Reader openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.io.ByteSource$SlicedByteSource -> uI:
    long offset -> b
    long length -> c
    com.google.common.io.ByteSource this$0 -> a
    java.io.InputStream openStream() -> openStream
    com.google.common.io.ByteSource slice(long,long) -> slice
    java.lang.String toString() -> toString
com.google.common.io.ByteStreams -> com.google.common.io.ByteStreams:
    java.io.OutputStream NULL_OUTPUT_STREAM -> a
    com.google.common.io.InputSupplier newInputStreamSupplier(byte[]) -> newInputStreamSupplier
    com.google.common.io.InputSupplier newInputStreamSupplier(byte[],int,int) -> newInputStreamSupplier
    com.google.common.io.ByteSource asByteSource(byte[]) -> asByteSource
    void write(byte[],com.google.common.io.OutputSupplier) -> write
    long copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier) -> copy
    long copy(com.google.common.io.InputSupplier,java.io.OutputStream) -> copy
    long copy(java.io.InputStream,com.google.common.io.OutputSupplier) -> copy
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    long copy(java.nio.channels.ReadableByteChannel,java.nio.channels.WritableByteChannel) -> copy
    byte[] toByteArray(java.io.InputStream) -> toByteArray
    byte[] toByteArray(com.google.common.io.InputSupplier) -> toByteArray
    com.google.common.io.ByteArrayDataInput newDataInput(byte[]) -> newDataInput
    com.google.common.io.ByteArrayDataInput newDataInput(byte[],int) -> newDataInput
    com.google.common.io.ByteArrayDataOutput newDataOutput() -> newDataOutput
    com.google.common.io.ByteArrayDataOutput newDataOutput(int) -> newDataOutput
    java.io.OutputStream nullOutputStream() -> nullOutputStream
    java.io.InputStream limit(java.io.InputStream,long) -> limit
    long length(com.google.common.io.InputSupplier) -> length
    boolean equal(com.google.common.io.InputSupplier,com.google.common.io.InputSupplier) -> equal
    void readFully(java.io.InputStream,byte[]) -> readFully
    void readFully(java.io.InputStream,byte[],int,int) -> readFully
    void skipFully(java.io.InputStream,long) -> skipFully
    java.lang.Object readBytes(com.google.common.io.InputSupplier,com.google.common.io.ByteProcessor) -> readBytes
    java.lang.Object readBytes(java.io.InputStream,com.google.common.io.ByteProcessor) -> readBytes
    long getChecksum(com.google.common.io.InputSupplier,java.util.zip.Checksum) -> getChecksum
    com.google.common.hash.HashCode hash(com.google.common.io.InputSupplier,com.google.common.hash.HashFunction) -> hash
    int read(java.io.InputStream,byte[],int,int) -> read
    com.google.common.io.InputSupplier slice(com.google.common.io.InputSupplier,long,long) -> slice
    com.google.common.io.InputSupplier join(java.lang.Iterable) -> join
    com.google.common.io.InputSupplier join(com.google.common.io.InputSupplier[]) -> join
    com.google.common.io.InputSupplier asInputSupplier(com.google.common.io.ByteSource) -> a
    com.google.common.io.OutputSupplier asOutputSupplier(com.google.common.io.ByteSink) -> a
    com.google.common.io.ByteSource asByteSource(com.google.common.io.InputSupplier) -> a
    com.google.common.io.ByteSink asByteSink(com.google.common.io.OutputSupplier) -> a
com.google.common.io.ByteStreams$1 -> uJ:
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    java.lang.String toString() -> toString
com.google.common.io.ByteStreams$2 -> uK:
    java.util.zip.Checksum val$checksum -> a
    boolean processBytes(byte[],int,int) -> processBytes
    java.lang.Object getResult() -> getResult
com.google.common.io.ByteStreams$3 -> uL:
    java.lang.Iterable val$suppliers -> a
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteStreams$4 -> uM:
    com.google.common.io.ByteSource val$source -> a
    java.lang.Object getInput() -> getInput
com.google.common.io.ByteStreams$5 -> uN:
    com.google.common.io.ByteSink val$sink -> a
    java.lang.Object getOutput() -> getOutput
com.google.common.io.ByteStreams$6 -> uO:
    com.google.common.io.InputSupplier val$supplier -> a
    java.io.InputStream openStream() -> openStream
com.google.common.io.ByteStreams$7 -> uP:
    com.google.common.io.OutputSupplier val$supplier -> a
    java.io.OutputStream openStream() -> openStream
com.google.common.io.ByteStreams$ByteArrayByteSource -> uQ:
    byte[] bytes -> a
    java.io.InputStream openStream() -> openStream
    long size() -> size
    byte[] read() -> read
    long copyTo(java.io.OutputStream) -> copyTo
    com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction) -> hash
    java.lang.String toString() -> toString
com.google.common.io.ByteStreams$ByteArrayDataInputStream -> uR:
    java.io.DataInput input -> a
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    char readChar() -> readChar
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readLine() -> readLine
    java.lang.String readUTF() -> readUTF
com.google.common.io.ByteStreams$ByteArrayDataOutputStream -> uS:
    java.io.DataOutput output -> a
    java.io.ByteArrayOutputStream byteArrayOutputSteam -> b
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeBytes(java.lang.String) -> writeBytes
    void writeChar(int) -> writeChar
    void writeChars(java.lang.String) -> writeChars
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void writeUTF(java.lang.String) -> writeUTF
    byte[] toByteArray() -> toByteArray
com.google.common.io.ByteStreams$LimitedInputStream -> uT:
    long left -> a
    long mark -> b
    int available() -> available
    void mark(int) -> mark
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.google.common.io.CharSink -> com.google.common.io.CharSink:
    java.io.Writer openStream() -> openStream
    java.io.BufferedWriter openBufferedStream() -> openBufferedStream
    void write(java.lang.CharSequence) -> write
    void writeLines(java.lang.Iterable) -> writeLines
    void writeLines(java.lang.Iterable,java.lang.String) -> writeLines
    long writeFrom(java.lang.Readable) -> writeFrom
com.google.common.io.CharSource -> com.google.common.io.CharSource:
    java.io.Reader openStream() -> openStream
    java.io.BufferedReader openBufferedStream() -> openBufferedStream
    long copyTo(java.lang.Appendable) -> copyTo
    long copyTo(com.google.common.io.CharSink) -> copyTo
    java.lang.String read() -> read
    java.lang.String readFirstLine() -> readFirstLine
    com.google.common.collect.ImmutableList readLines() -> readLines
com.google.common.io.CharStreams -> com.google.common.io.CharStreams:
    com.google.common.io.InputSupplier newReaderSupplier(java.lang.String) -> newReaderSupplier
    com.google.common.io.CharSource asCharSource(java.lang.String) -> asCharSource
    com.google.common.io.InputSupplier newReaderSupplier(com.google.common.io.InputSupplier,java.nio.charset.Charset) -> newReaderSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(com.google.common.io.OutputSupplier,java.nio.charset.Charset) -> newWriterSupplier
    void write(java.lang.CharSequence,com.google.common.io.OutputSupplier) -> write
    long copy(com.google.common.io.InputSupplier,com.google.common.io.OutputSupplier) -> copy
    long copy(com.google.common.io.InputSupplier,java.lang.Appendable) -> copy
    long copy(java.lang.Readable,java.lang.Appendable) -> copy
    java.lang.String toString(java.lang.Readable) -> toString
    java.lang.String toString(com.google.common.io.InputSupplier) -> toString
    java.lang.String readFirstLine(com.google.common.io.InputSupplier) -> readFirstLine
    java.util.List readLines(com.google.common.io.InputSupplier) -> readLines
    java.util.List readLines(java.lang.Readable) -> readLines
    java.lang.Object readLines(java.lang.Readable,com.google.common.io.LineProcessor) -> readLines
    java.lang.Object readLines(com.google.common.io.InputSupplier,com.google.common.io.LineProcessor) -> readLines
    com.google.common.io.InputSupplier join(java.lang.Iterable) -> join
    com.google.common.io.InputSupplier join(com.google.common.io.InputSupplier[]) -> join
    void skipFully(java.io.Reader,long) -> skipFully
    java.io.Writer asWriter(java.lang.Appendable) -> asWriter
    java.io.Reader asReader(java.lang.Readable) -> a
    com.google.common.io.InputSupplier asInputSupplier(com.google.common.io.CharSource) -> a
    com.google.common.io.OutputSupplier asOutputSupplier(com.google.common.io.CharSink) -> a
    com.google.common.io.CharSource asCharSource(com.google.common.io.InputSupplier) -> a
    com.google.common.io.CharSink asCharSink(com.google.common.io.OutputSupplier) -> a
com.google.common.io.CharStreams$1 -> uU:
    java.lang.Iterable val$suppliers -> a
    java.lang.Object getInput() -> getInput
com.google.common.io.CharStreams$2 -> uV:
    java.lang.Readable val$readable -> a
    int read(char[],int,int) -> read
    int read(java.nio.CharBuffer) -> read
    void close() -> close
com.google.common.io.CharStreams$3 -> uW:
    com.google.common.io.CharSource val$source -> a
    java.lang.Object getInput() -> getInput
com.google.common.io.CharStreams$4 -> uX:
    com.google.common.io.CharSink val$sink -> a
    java.lang.Object getOutput() -> getOutput
com.google.common.io.CharStreams$5 -> uY:
    com.google.common.io.InputSupplier val$supplier -> a
    java.io.Reader openStream() -> openStream
com.google.common.io.CharStreams$6 -> uZ:
    com.google.common.io.OutputSupplier val$supplier -> a
    java.io.Writer openStream() -> openStream
com.google.common.io.CharStreams$StringCharSource -> va:
    com.google.common.base.Splitter LINE_SPLITTER -> a
    java.lang.String string -> b
    java.io.Reader openStream() -> openStream
    java.lang.String read() -> read
    java.lang.Iterable lines() -> b
    java.lang.String readFirstLine() -> readFirstLine
    com.google.common.collect.ImmutableList readLines() -> readLines
    java.lang.String toString() -> toString
    java.lang.String access$100(com.google.common.io.CharStreams$StringCharSource) -> a
    com.google.common.base.Splitter access$200() -> a
com.google.common.io.CharStreams$StringCharSource$1 -> vb:
    com.google.common.io.CharStreams$StringCharSource this$0 -> a
    java.util.Iterator iterator() -> iterator
com.google.common.io.CharStreams$StringCharSource$1$1 -> vc:
    java.util.Iterator lines -> a
    com.google.common.io.CharStreams$StringCharSource$1 this$1 -> b
    java.lang.Object computeNext() -> computeNext
com.google.common.io.Closeables -> com.google.common.io.Closeables:
    java.util.logging.Logger logger -> a
    void close(java.io.Closeable,boolean) -> close
    void closeQuietly(java.io.Closeable) -> closeQuietly
com.google.common.io.Closer -> com.google.common.io.Closer:
    com.google.common.io.Closer$Suppressor SUPPRESSOR -> b
    com.google.common.io.Closer$Suppressor suppressor -> a
    java.util.Deque stack -> c
    java.lang.Throwable thrown -> d
    com.google.common.io.Closer create() -> create
    java.io.Closeable register(java.io.Closeable) -> register
    java.lang.RuntimeException rethrow(java.lang.Throwable) -> rethrow
    java.lang.RuntimeException rethrow(java.lang.Throwable,java.lang.Class) -> rethrow
    java.lang.RuntimeException rethrow(java.lang.Throwable,java.lang.Class,java.lang.Class) -> rethrow
    void close() -> close
com.google.common.io.Closer$LoggingSuppressor -> vd:
    com.google.common.io.Closer$LoggingSuppressor INSTANCE -> a
    void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> a
com.google.common.io.Closer$SuppressingSuppressor -> ve:
    com.google.common.io.Closer$SuppressingSuppressor INSTANCE -> a
    java.lang.reflect.Method addSuppressed -> b
    boolean isAvailable() -> a
    java.lang.reflect.Method getAddSuppressed() -> b
    void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> a
com.google.common.io.Closer$Suppressor -> vf:
    void suppress(java.io.Closeable,java.lang.Throwable,java.lang.Throwable) -> a
com.google.common.io.CountingInputStream -> com.google.common.io.CountingInputStream:
    long count -> a
    long mark -> b
    long getCount() -> getCount
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
com.google.common.io.CountingOutputStream -> com.google.common.io.CountingOutputStream:
    long count -> a
    long getCount() -> getCount
    void write(byte[],int,int) -> write
    void write(int) -> write
com.google.common.io.FileBackedOutputStream -> com.google.common.io.FileBackedOutputStream:
    int fileThreshold -> a
    boolean resetOnFinalize -> b
    com.google.common.io.InputSupplier supplier -> c
    java.io.OutputStream out -> d
    com.google.common.io.FileBackedOutputStream$MemoryOutput memory -> e
    java.io.File file -> f
    com.google.common.io.InputSupplier getSupplier() -> getSupplier
    java.io.InputStream openStream() -> a
    void reset() -> reset
    void write(int) -> write
    void write(byte[]) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    void flush() -> flush
    void update(int) -> a
    java.io.InputStream access$100(com.google.common.io.FileBackedOutputStream) -> a
com.google.common.io.FileBackedOutputStream$1 -> vg:
    com.google.common.io.FileBackedOutputStream this$0 -> a
    void finalize() -> finalize
    java.lang.Object getInput() -> getInput
com.google.common.io.FileBackedOutputStream$2 -> vh:
    com.google.common.io.FileBackedOutputStream this$0 -> a
    java.lang.Object getInput() -> getInput
com.google.common.io.FileBackedOutputStream$MemoryOutput -> vi:
    byte[] getBuffer() -> a
    int getCount() -> b
com.google.common.io.FileWriteMode -> com.google.common.io.FileWriteMode:
    com.google.common.io.FileWriteMode APPEND -> APPEND
    com.google.common.io.FileWriteMode[] $VALUES -> a
    com.google.common.io.FileWriteMode[] values() -> values
    com.google.common.io.FileWriteMode valueOf(java.lang.String) -> valueOf
com.google.common.io.Files -> com.google.common.io.Files:
    java.io.BufferedReader newReader(java.io.File,java.nio.charset.Charset) -> newReader
    java.io.BufferedWriter newWriter(java.io.File,java.nio.charset.Charset) -> newWriter
    com.google.common.io.ByteSource asByteSource(java.io.File) -> asByteSource
    com.google.common.io.ByteSink asByteSink(java.io.File,com.google.common.io.FileWriteMode[]) -> asByteSink
    com.google.common.io.CharSource asCharSource(java.io.File,java.nio.charset.Charset) -> asCharSource
    com.google.common.io.CharSink asCharSink(java.io.File,java.nio.charset.Charset,com.google.common.io.FileWriteMode[]) -> asCharSink
    com.google.common.io.InputSupplier newInputStreamSupplier(java.io.File) -> newInputStreamSupplier
    com.google.common.io.OutputSupplier newOutputStreamSupplier(java.io.File) -> newOutputStreamSupplier
    com.google.common.io.OutputSupplier newOutputStreamSupplier(java.io.File,boolean) -> newOutputStreamSupplier
    com.google.common.io.FileWriteMode[] modes(boolean) -> a
    com.google.common.io.InputSupplier newReaderSupplier(java.io.File,java.nio.charset.Charset) -> newReaderSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(java.io.File,java.nio.charset.Charset) -> newWriterSupplier
    com.google.common.io.OutputSupplier newWriterSupplier(java.io.File,java.nio.charset.Charset,boolean) -> newWriterSupplier
    byte[] toByteArray(java.io.File) -> toByteArray
    java.lang.String toString(java.io.File,java.nio.charset.Charset) -> toString
    void copy(com.google.common.io.InputSupplier,java.io.File) -> copy
    void write(byte[],java.io.File) -> write
    void copy(java.io.File,com.google.common.io.OutputSupplier) -> copy
    void copy(java.io.File,java.io.OutputStream) -> copy
    void copy(java.io.File,java.io.File) -> copy
    void copy(com.google.common.io.InputSupplier,java.io.File,java.nio.charset.Charset) -> copy
    void write(java.lang.CharSequence,java.io.File,java.nio.charset.Charset) -> write
    void append(java.lang.CharSequence,java.io.File,java.nio.charset.Charset) -> append
    void copy(java.io.File,java.nio.charset.Charset,com.google.common.io.OutputSupplier) -> copy
    void copy(java.io.File,java.nio.charset.Charset,java.lang.Appendable) -> copy
    boolean equal(java.io.File,java.io.File) -> equal
    java.io.File createTempDir() -> createTempDir
    void touch(java.io.File) -> touch
    void createParentDirs(java.io.File) -> createParentDirs
    void move(java.io.File,java.io.File) -> move
    java.lang.String readFirstLine(java.io.File,java.nio.charset.Charset) -> readFirstLine
    java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    java.lang.Object readLines(java.io.File,java.nio.charset.Charset,com.google.common.io.LineProcessor) -> readLines
    java.lang.Object readBytes(java.io.File,com.google.common.io.ByteProcessor) -> readBytes
    long getChecksum(java.io.File,java.util.zip.Checksum) -> getChecksum
    com.google.common.hash.HashCode hash(java.io.File,com.google.common.hash.HashFunction) -> hash
    java.nio.MappedByteBuffer map(java.io.File) -> map
    java.nio.MappedByteBuffer map(java.io.File,java.nio.channels.FileChannel$MapMode) -> map
    java.nio.MappedByteBuffer map(java.io.File,java.nio.channels.FileChannel$MapMode,long) -> map
    java.nio.MappedByteBuffer map(java.io.RandomAccessFile,java.nio.channels.FileChannel$MapMode,long) -> a
    java.lang.String simplifyPath(java.lang.String) -> simplifyPath
    java.lang.String getFileExtension(java.lang.String) -> getFileExtension
    java.lang.String getNameWithoutExtension(java.lang.String) -> getNameWithoutExtension
com.google.common.io.Files$FileByteSink -> vj:
    java.io.File file -> a
    com.google.common.collect.ImmutableSet modes -> b
    java.lang.String toString() -> toString
    java.io.OutputStream openStream() -> openStream
com.google.common.io.Files$FileByteSource -> vk:
    java.io.File file -> a
    java.io.FileInputStream openStream() -> a
    long size() -> size
    byte[] read() -> read
    java.lang.String toString() -> toString
    java.io.InputStream openStream() -> openStream
com.google.common.io.Flushables -> com.google.common.io.Flushables:
    java.util.logging.Logger logger -> a
    void flush(java.io.Flushable,boolean) -> flush
    void flushQuietly(java.io.Flushable) -> flushQuietly
com.google.common.io.GwtWorkarounds -> vl:
com.google.common.io.GwtWorkarounds$1 -> vm:
    java.io.Reader val$reader -> a
    int read() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$2 -> vn:
    int index -> a
    java.lang.CharSequence val$chars -> b
    int read() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$3 -> vo:
    com.google.common.io.GwtWorkarounds$ByteInput val$input -> a
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
com.google.common.io.GwtWorkarounds$4 -> vp:
    com.google.common.io.GwtWorkarounds$ByteOutput val$output -> a
    void write(int) -> write
    void flush() -> flush
    void close() -> close
com.google.common.io.GwtWorkarounds$5 -> vq:
    java.io.Writer val$writer -> a
    void write(char) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$6 -> vr:
    java.lang.StringBuilder val$builder -> a
    void write(char) -> a
    void flush() -> a
    void close() -> b
    java.lang.String toString() -> toString
com.google.common.io.GwtWorkarounds$ByteInput -> vs:
    int read() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$ByteOutput -> vt:
    void write(byte) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$CharInput -> vu:
    int read() -> a
    void close() -> b
com.google.common.io.GwtWorkarounds$CharOutput -> vv:
    void write(char) -> a
    void flush() -> a
    void close() -> b
com.google.common.io.InputSupplier -> com.google.common.io.InputSupplier:
    java.lang.Object getInput() -> getInput
com.google.common.io.LimitInputStream -> com.google.common.io.LimitInputStream:
    long left -> a
    long mark -> b
    int available() -> available
    void mark(int) -> mark
    int read() -> read
    int read(byte[],int,int) -> read
    void reset() -> reset
    long skip(long) -> skip
com.google.common.io.LineBuffer -> vw:
    java.lang.StringBuilder line -> a
    boolean sawReturn -> b
    void add(char[],int,int) -> a
    boolean finishLine(boolean) -> a
    void finish() -> a
    void handleLine$16da05f7(java.lang.String) -> a
com.google.common.io.LineProcessor -> com.google.common.io.LineProcessor:
    boolean processLine(java.lang.String) -> processLine
    java.lang.Object getResult() -> getResult
com.google.common.io.LineReader -> com.google.common.io.LineReader:
    java.lang.Readable readable -> a
    java.io.Reader reader -> b
    char[] buf -> c
    java.nio.CharBuffer cbuf -> d
    java.util.Queue lines -> e
    com.google.common.io.LineBuffer lineBuf -> f
    java.lang.String readLine() -> readLine
    java.util.Queue access$000(com.google.common.io.LineReader) -> a
com.google.common.io.LineReader$1 -> vx:
    com.google.common.io.LineReader this$0 -> a
    void handleLine$16da05f7(java.lang.String) -> a
com.google.common.io.LittleEndianDataInputStream -> com.google.common.io.LittleEndianDataInputStream:
    java.lang.String readLine() -> readLine
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int skipBytes(int) -> skipBytes
    int readUnsignedByte() -> readUnsignedByte
    int readUnsignedShort() -> readUnsignedShort
    int readInt() -> readInt
    long readLong() -> readLong
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    java.lang.String readUTF() -> readUTF
    short readShort() -> readShort
    char readChar() -> readChar
    byte readByte() -> readByte
    boolean readBoolean() -> readBoolean
    byte readAndCheckByte() -> a
com.google.common.io.LittleEndianDataOutputStream -> com.google.common.io.LittleEndianDataOutputStream:
    void write(byte[],int,int) -> write
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeBytes(java.lang.String) -> writeBytes
    void writeChar(int) -> writeChar
    void writeChars(java.lang.String) -> writeChars
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeInt(int) -> writeInt
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void writeUTF(java.lang.String) -> writeUTF
com.google.common.io.MultiInputStream -> vy:
    java.util.Iterator it -> a
    java.io.InputStream in -> b
    void close() -> close
    void advance() -> a
    int available() -> available
    boolean markSupported() -> markSupported
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
com.google.common.io.MultiReader -> vz:
    java.util.Iterator it -> a
    java.io.Reader current -> b
    void advance() -> a
    int read(char[],int,int) -> read
    long skip(long) -> skip
    boolean ready() -> ready
    void close() -> close
com.google.common.io.NullOutputStream -> com.google.common.io.NullOutputStream:
    void write(int) -> write
    void write(byte[],int,int) -> write
com.google.common.io.OutputSupplier -> com.google.common.io.OutputSupplier:
    java.lang.Object getOutput() -> getOutput
com.google.common.io.PatternFilenameFilter -> com.google.common.io.PatternFilenameFilter:
    java.util.regex.Pattern pattern -> a
    boolean accept(java.io.File,java.lang.String) -> accept
com.google.common.io.Resources -> com.google.common.io.Resources:
    com.google.common.io.InputSupplier newInputStreamSupplier(java.net.URL) -> newInputStreamSupplier
    com.google.common.io.ByteSource asByteSource(java.net.URL) -> asByteSource
    com.google.common.io.InputSupplier newReaderSupplier(java.net.URL,java.nio.charset.Charset) -> newReaderSupplier
    com.google.common.io.CharSource asCharSource(java.net.URL,java.nio.charset.Charset) -> asCharSource
    byte[] toByteArray(java.net.URL) -> toByteArray
    java.lang.String toString(java.net.URL,java.nio.charset.Charset) -> toString
    java.lang.Object readLines(java.net.URL,java.nio.charset.Charset,com.google.common.io.LineProcessor) -> readLines
    java.util.List readLines(java.net.URL,java.nio.charset.Charset) -> readLines
    void copy(java.net.URL,java.io.OutputStream) -> copy
    java.net.URL getResource(java.lang.String) -> getResource
    java.net.URL getResource(java.lang.Class,java.lang.String) -> getResource
com.google.common.io.Resources$UrlByteSource -> vA:
    java.net.URL url -> a
    java.io.InputStream openStream() -> openStream
    java.lang.String toString() -> toString
com.google.common.math.BigIntegerMath -> com.google.common.math.BigIntegerMath:
    java.math.BigInteger SQRT2_PRECOMPUTED_BITS -> a
    double LN_10 -> b
    double LN_2 -> c
    boolean isPowerOfTwo(java.math.BigInteger) -> isPowerOfTwo
    int log2(java.math.BigInteger,java.math.RoundingMode) -> log2
    int log10(java.math.BigInteger,java.math.RoundingMode) -> log10
    java.math.BigInteger sqrt(java.math.BigInteger,java.math.RoundingMode) -> sqrt
    java.math.BigInteger sqrtFloor(java.math.BigInteger) -> a
    java.math.BigInteger sqrtApproxWithDoubles(java.math.BigInteger) -> b
    java.math.BigInteger divide(java.math.BigInteger,java.math.BigInteger,java.math.RoundingMode) -> divide
    java.math.BigInteger factorial(int) -> factorial
    java.math.BigInteger listProduct(java.util.List,int,int) -> a
    java.math.BigInteger binomial(int,int) -> binomial
    boolean fitsInLong(java.math.BigInteger) -> c
com.google.common.math.BigIntegerMath$1 -> vB:
    int[] $SwitchMap$java$math$RoundingMode -> a
com.google.common.math.DoubleMath -> com.google.common.math.DoubleMath:
    double LN_2 -> b
    double[] everySixteenthFactorial -> a
    double roundIntermediate(double,java.math.RoundingMode) -> a
    int roundToInt(double,java.math.RoundingMode) -> roundToInt
    long roundToLong(double,java.math.RoundingMode) -> roundToLong
    java.math.BigInteger roundToBigInteger(double,java.math.RoundingMode) -> roundToBigInteger
    boolean isPowerOfTwo(double) -> isPowerOfTwo
    double log2(double) -> log2
    int log2(double,java.math.RoundingMode) -> log2
    boolean isMathematicalInteger(double) -> isMathematicalInteger
    double factorial(int) -> factorial
    boolean fuzzyEquals(double,double,double) -> fuzzyEquals
    int fuzzyCompare(double,double,double) -> fuzzyCompare
com.google.common.math.DoubleMath$1 -> vC:
    int[] $SwitchMap$java$math$RoundingMode -> a
com.google.common.math.DoubleUtils -> vD:
    long ONE_BITS -> a
    long getSignificand(double) -> a
    boolean isFinite(double) -> b
    boolean isNormal(double) -> c
    double scaleNormalize(double) -> d
    double bigToDouble(java.math.BigInteger) -> a
com.google.common.math.IntMath -> com.google.common.math.IntMath:
    byte[] maxLog10ForLeadingZeros -> a
    int[] powersOf10 -> b
    int[] halfPowersOf10 -> c
    int[] factorials -> e
    int[] biggestBinomials -> d
    boolean isPowerOfTwo(int) -> isPowerOfTwo
    int log2(int,java.math.RoundingMode) -> log2
    int log10(int,java.math.RoundingMode) -> log10
    int pow(int,int) -> pow
    int sqrt(int,java.math.RoundingMode) -> sqrt
    int divide(int,int,java.math.RoundingMode) -> divide
    int mod(int,int) -> mod
    int gcd(int,int) -> gcd
    int checkedAdd(int,int) -> checkedAdd
    int checkedSubtract(int,int) -> checkedSubtract
    int checkedMultiply(int,int) -> checkedMultiply
    int checkedPow(int,int) -> checkedPow
    int factorial(int) -> factorial
    int binomial(int,int) -> binomial
    int mean(int,int) -> mean
com.google.common.math.IntMath$1 -> vE:
    int[] $SwitchMap$java$math$RoundingMode -> a
com.google.common.math.LongMath -> com.google.common.math.LongMath:
    byte[] maxLog10ForLeadingZeros -> a
    long[] powersOf10 -> b
    long[] halfPowersOf10 -> c
    long[] factorials -> d
    int[] biggestBinomials -> e
    int[] biggestSimpleBinomials -> f
    boolean isPowerOfTwo(long) -> isPowerOfTwo
    int log2(long,java.math.RoundingMode) -> log2
    int log10(long,java.math.RoundingMode) -> log10
    long pow(long,int) -> pow
    long sqrt(long,java.math.RoundingMode) -> sqrt
    long divide(long,long,java.math.RoundingMode) -> divide
    int mod(long,int) -> mod
    long mod(long,long) -> mod
    long gcd(long,long) -> gcd
    long checkedAdd(long,long) -> checkedAdd
    long checkedSubtract(long,long) -> checkedSubtract
    long checkedMultiply(long,long) -> checkedMultiply
    long checkedPow(long,int) -> checkedPow
    long factorial(int) -> factorial
    long binomial(int,int) -> binomial
    long multiplyFraction(long,long,long) -> a
    boolean fitsInInt(long) -> a
    long mean(long,long) -> mean
com.google.common.math.LongMath$1 -> vF:
    int[] $SwitchMap$java$math$RoundingMode -> a
com.google.common.math.MathPreconditions -> vG:
    int checkPositive(java.lang.String,int) -> a
    long checkPositive(java.lang.String,long) -> a
    java.math.BigInteger checkPositive(java.lang.String,java.math.BigInteger) -> a
    int checkNonNegative(java.lang.String,int) -> b
    long checkNonNegative(java.lang.String,long) -> b
    void checkRoundingUnnecessary(boolean) -> a
    void checkInRange(boolean) -> b
    void checkNoOverflow(boolean) -> c
com.google.common.net.HostAndPort -> com.google.common.net.HostAndPort:
    java.lang.String host -> a
    int port -> b
    boolean hasBracketlessColons -> c
    java.util.regex.Pattern BRACKET_PATTERN -> d
    long serialVersionUID -> serialVersionUID
    java.lang.String getHostText() -> getHostText
    boolean hasPort() -> hasPort
    int getPort() -> getPort
    int getPortOrDefault(int) -> getPortOrDefault
    com.google.common.net.HostAndPort fromParts(java.lang.String,int) -> fromParts
    com.google.common.net.HostAndPort fromString(java.lang.String) -> fromString
    com.google.common.net.HostAndPort withDefaultPort(int) -> withDefaultPort
    com.google.common.net.HostAndPort requireBracketsForIPv6() -> requireBracketsForIPv6
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isValidPort(int) -> a
com.google.common.net.HostSpecifier -> com.google.common.net.HostSpecifier:
    java.lang.String canonicalForm -> a
    com.google.common.net.HostSpecifier fromValid(java.lang.String) -> fromValid
    com.google.common.net.HostSpecifier from(java.lang.String) -> from
    boolean isValid(java.lang.String) -> isValid
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.net.HttpHeaders -> com.google.common.net.HttpHeaders:
    java.lang.String CACHE_CONTROL -> CACHE_CONTROL
    java.lang.String CONTENT_LENGTH -> CONTENT_LENGTH
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String DATE -> DATE
    java.lang.String PRAGMA -> PRAGMA
    java.lang.String VIA -> VIA
    java.lang.String WARNING -> WARNING
    java.lang.String ACCEPT -> ACCEPT
    java.lang.String ACCEPT_CHARSET -> ACCEPT_CHARSET
    java.lang.String ACCEPT_ENCODING -> ACCEPT_ENCODING
    java.lang.String ACCEPT_LANGUAGE -> ACCEPT_LANGUAGE
    java.lang.String ACCESS_CONTROL_REQUEST_HEADERS -> ACCESS_CONTROL_REQUEST_HEADERS
    java.lang.String ACCESS_CONTROL_REQUEST_METHOD -> ACCESS_CONTROL_REQUEST_METHOD
    java.lang.String AUTHORIZATION -> AUTHORIZATION
    java.lang.String CONNECTION -> CONNECTION
    java.lang.String COOKIE -> COOKIE
    java.lang.String EXPECT -> EXPECT
    java.lang.String FROM -> FROM
    java.lang.String HOST -> HOST
    java.lang.String IF_MATCH -> IF_MATCH
    java.lang.String IF_MODIFIED_SINCE -> IF_MODIFIED_SINCE
    java.lang.String IF_NONE_MATCH -> IF_NONE_MATCH
    java.lang.String IF_RANGE -> IF_RANGE
    java.lang.String IF_UNMODIFIED_SINCE -> IF_UNMODIFIED_SINCE
    java.lang.String LAST_EVENT_ID -> LAST_EVENT_ID
    java.lang.String MAX_FORWARDS -> MAX_FORWARDS
    java.lang.String ORIGIN -> ORIGIN
    java.lang.String PROXY_AUTHORIZATION -> PROXY_AUTHORIZATION
    java.lang.String RANGE -> RANGE
    java.lang.String REFERER -> REFERER
    java.lang.String TE -> TE
    java.lang.String UPGRADE -> UPGRADE
    java.lang.String USER_AGENT -> USER_AGENT
    java.lang.String ACCEPT_RANGES -> ACCEPT_RANGES
    java.lang.String ACCESS_CONTROL_ALLOW_HEADERS -> ACCESS_CONTROL_ALLOW_HEADERS
    java.lang.String ACCESS_CONTROL_ALLOW_METHODS -> ACCESS_CONTROL_ALLOW_METHODS
    java.lang.String ACCESS_CONTROL_ALLOW_ORIGIN -> ACCESS_CONTROL_ALLOW_ORIGIN
    java.lang.String ACCESS_CONTROL_ALLOW_CREDENTIALS -> ACCESS_CONTROL_ALLOW_CREDENTIALS
    java.lang.String ACCESS_CONTROL_EXPOSE_HEADERS -> ACCESS_CONTROL_EXPOSE_HEADERS
    java.lang.String ACCESS_CONTROL_MAX_AGE -> ACCESS_CONTROL_MAX_AGE
    java.lang.String AGE -> AGE
    java.lang.String ALLOW -> ALLOW
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String CONTENT_ENCODING -> CONTENT_ENCODING
    java.lang.String CONTENT_LANGUAGE -> CONTENT_LANGUAGE
    java.lang.String CONTENT_LOCATION -> CONTENT_LOCATION
    java.lang.String CONTENT_MD5 -> CONTENT_MD5
    java.lang.String CONTENT_RANGE -> CONTENT_RANGE
    java.lang.String ETAG -> ETAG
    java.lang.String EXPIRES -> EXPIRES
    java.lang.String LAST_MODIFIED -> LAST_MODIFIED
    java.lang.String LINK -> LINK
    java.lang.String LOCATION -> LOCATION
    java.lang.String P3P -> P3P
    java.lang.String PROXY_AUTHENTICATE -> PROXY_AUTHENTICATE
    java.lang.String REFRESH -> REFRESH
    java.lang.String RETRY_AFTER -> RETRY_AFTER
    java.lang.String SERVER -> SERVER
    java.lang.String SET_COOKIE -> SET_COOKIE
    java.lang.String SET_COOKIE2 -> SET_COOKIE2
    java.lang.String TRAILER -> TRAILER
    java.lang.String TRANSFER_ENCODING -> TRANSFER_ENCODING
    java.lang.String VARY -> VARY
    java.lang.String WWW_AUTHENTICATE -> WWW_AUTHENTICATE
    java.lang.String DNT -> DNT
    java.lang.String X_CONTENT_TYPE_OPTIONS -> X_CONTENT_TYPE_OPTIONS
    java.lang.String X_DO_NOT_TRACK -> X_DO_NOT_TRACK
    java.lang.String X_FORWARDED_FOR -> X_FORWARDED_FOR
    java.lang.String X_FORWARDED_PROTO -> X_FORWARDED_PROTO
    java.lang.String X_FRAME_OPTIONS -> X_FRAME_OPTIONS
    java.lang.String X_POWERED_BY -> X_POWERED_BY
    java.lang.String X_REQUESTED_WITH -> X_REQUESTED_WITH
    java.lang.String X_USER_IP -> X_USER_IP
    java.lang.String X_XSS_PROTECTION -> X_XSS_PROTECTION
com.google.common.net.InetAddresses -> com.google.common.net.InetAddresses:
    java.net.Inet4Address LOOPBACK4 -> a
    java.net.Inet4Address ANY4 -> b
    java.net.Inet4Address getInet4Address(byte[]) -> a
    java.net.InetAddress forString(java.lang.String) -> forString
    boolean isInetAddress(java.lang.String) -> isInetAddress
    byte[] ipStringToBytes(java.lang.String) -> a
    byte[] textToNumericFormatV4(java.lang.String) -> b
    byte[] textToNumericFormatV6(java.lang.String) -> c
    short parseHextet(java.lang.String) -> d
    java.net.InetAddress bytesToInetAddress(byte[]) -> b
    java.lang.String toAddrString(java.net.InetAddress) -> toAddrString
    java.lang.String toUriString(java.net.InetAddress) -> toUriString
    java.net.InetAddress forUriString(java.lang.String) -> forUriString
    boolean isUriInetAddress(java.lang.String) -> isUriInetAddress
    boolean isCompatIPv4Address(java.net.Inet6Address) -> isCompatIPv4Address
    java.net.Inet4Address getCompatIPv4Address(java.net.Inet6Address) -> getCompatIPv4Address
    boolean is6to4Address(java.net.Inet6Address) -> is6to4Address
    java.net.Inet4Address get6to4IPv4Address(java.net.Inet6Address) -> get6to4IPv4Address
    boolean isTeredoAddress(java.net.Inet6Address) -> isTeredoAddress
    com.google.common.net.InetAddresses$TeredoInfo getTeredoInfo(java.net.Inet6Address) -> getTeredoInfo
    boolean isIsatapAddress(java.net.Inet6Address) -> isIsatapAddress
    java.net.Inet4Address getIsatapIPv4Address(java.net.Inet6Address) -> getIsatapIPv4Address
    boolean hasEmbeddedIPv4ClientAddress(java.net.Inet6Address) -> hasEmbeddedIPv4ClientAddress
    java.net.Inet4Address getEmbeddedIPv4ClientAddress(java.net.Inet6Address) -> getEmbeddedIPv4ClientAddress
    boolean isMappedIPv4Address(java.lang.String) -> isMappedIPv4Address
    java.net.Inet4Address getCoercedIPv4Address(java.net.InetAddress) -> getCoercedIPv4Address
    int coerceToInteger(java.net.InetAddress) -> coerceToInteger
    java.net.Inet4Address fromInteger(int) -> fromInteger
    java.net.InetAddress fromLittleEndianByteArray(byte[]) -> fromLittleEndianByteArray
    java.net.InetAddress increment(java.net.InetAddress) -> increment
    boolean isMaximum(java.net.InetAddress) -> isMaximum
    java.net.Inet4Address access$000() -> a
com.google.common.net.InetAddresses$TeredoInfo -> com.google.common.net.InetAddresses$TeredoInfo:
    java.net.Inet4Address server -> a
    java.net.Inet4Address client -> b
    int port -> c
    int flags -> d
    java.net.Inet4Address getServer() -> getServer
    java.net.Inet4Address getClient() -> getClient
    int getPort() -> getPort
    int getFlags() -> getFlags
com.google.common.net.InternetDomainName -> com.google.common.net.InternetDomainName:
    com.google.common.base.CharMatcher DOTS_MATCHER -> a
    com.google.common.base.Splitter DOT_SPLITTER -> b
    com.google.common.base.Joiner DOT_JOINER -> c
    java.lang.String name -> d
    com.google.common.collect.ImmutableList parts -> e
    int publicSuffixIndex -> f
    com.google.common.base.CharMatcher DASH_MATCHER -> g
    com.google.common.base.CharMatcher PART_CHAR_MATCHER -> h
    int findPublicSuffix() -> a
    com.google.common.net.InternetDomainName fromLenient(java.lang.String) -> fromLenient
    com.google.common.net.InternetDomainName from(java.lang.String) -> from
    boolean validateSyntax(java.util.List) -> a
    boolean validatePart(java.lang.String,boolean) -> a
    java.lang.String name() -> name
    com.google.common.collect.ImmutableList parts() -> parts
    boolean isPublicSuffix() -> isPublicSuffix
    boolean hasPublicSuffix() -> hasPublicSuffix
    com.google.common.net.InternetDomainName publicSuffix() -> publicSuffix
    boolean isUnderPublicSuffix() -> isUnderPublicSuffix
    boolean isTopPrivateDomain() -> isTopPrivateDomain
    com.google.common.net.InternetDomainName topPrivateDomain() -> topPrivateDomain
    boolean hasParent() -> hasParent
    com.google.common.net.InternetDomainName parent() -> parent
    com.google.common.net.InternetDomainName ancestor(int) -> a
    com.google.common.net.InternetDomainName child(java.lang.String) -> child
    boolean isValidLenient(java.lang.String) -> isValidLenient
    boolean isValid(java.lang.String) -> isValid
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.net.MediaType -> com.google.common.net.MediaType:
    com.google.common.collect.ImmutableListMultimap UTF_8_CONSTANT_PARAMETERS -> a
    com.google.common.base.CharMatcher TOKEN_MATCHER -> b
    com.google.common.base.CharMatcher QUOTED_TEXT_MATCHER -> c
    com.google.common.base.CharMatcher LINEAR_WHITE_SPACE -> d
    com.google.common.net.MediaType ANY_TYPE -> ANY_TYPE
    com.google.common.net.MediaType ANY_TEXT_TYPE -> ANY_TEXT_TYPE
    com.google.common.net.MediaType ANY_IMAGE_TYPE -> ANY_IMAGE_TYPE
    com.google.common.net.MediaType ANY_AUDIO_TYPE -> ANY_AUDIO_TYPE
    com.google.common.net.MediaType ANY_VIDEO_TYPE -> ANY_VIDEO_TYPE
    com.google.common.net.MediaType ANY_APPLICATION_TYPE -> ANY_APPLICATION_TYPE
    com.google.common.net.MediaType CACHE_MANIFEST_UTF_8 -> CACHE_MANIFEST_UTF_8
    com.google.common.net.MediaType CSS_UTF_8 -> CSS_UTF_8
    com.google.common.net.MediaType CSV_UTF_8 -> CSV_UTF_8
    com.google.common.net.MediaType HTML_UTF_8 -> HTML_UTF_8
    com.google.common.net.MediaType I_CALENDAR_UTF_8 -> I_CALENDAR_UTF_8
    com.google.common.net.MediaType PLAIN_TEXT_UTF_8 -> PLAIN_TEXT_UTF_8
    com.google.common.net.MediaType TEXT_JAVASCRIPT_UTF_8 -> TEXT_JAVASCRIPT_UTF_8
    com.google.common.net.MediaType VCARD_UTF_8 -> VCARD_UTF_8
    com.google.common.net.MediaType WML_UTF_8 -> WML_UTF_8
    com.google.common.net.MediaType XML_UTF_8 -> XML_UTF_8
    com.google.common.net.MediaType BMP -> BMP
    com.google.common.net.MediaType GIF -> GIF
    com.google.common.net.MediaType ICO -> ICO
    com.google.common.net.MediaType JPEG -> JPEG
    com.google.common.net.MediaType PNG -> PNG
    com.google.common.net.MediaType SVG_UTF_8 -> SVG_UTF_8
    com.google.common.net.MediaType TIFF -> TIFF
    com.google.common.net.MediaType WEBP -> WEBP
    com.google.common.net.MediaType MP4_AUDIO -> MP4_AUDIO
    com.google.common.net.MediaType MPEG_AUDIO -> MPEG_AUDIO
    com.google.common.net.MediaType OGG_AUDIO -> OGG_AUDIO
    com.google.common.net.MediaType WEBM_AUDIO -> WEBM_AUDIO
    com.google.common.net.MediaType MP4_VIDEO -> MP4_VIDEO
    com.google.common.net.MediaType MPEG_VIDEO -> MPEG_VIDEO
    com.google.common.net.MediaType OGG_VIDEO -> OGG_VIDEO
    com.google.common.net.MediaType QUICKTIME -> QUICKTIME
    com.google.common.net.MediaType WEBM_VIDEO -> WEBM_VIDEO
    com.google.common.net.MediaType WMV -> WMV
    com.google.common.net.MediaType APPLICATION_XML_UTF_8 -> APPLICATION_XML_UTF_8
    com.google.common.net.MediaType ATOM_UTF_8 -> ATOM_UTF_8
    com.google.common.net.MediaType BZIP2 -> BZIP2
    com.google.common.net.MediaType FORM_DATA -> FORM_DATA
    com.google.common.net.MediaType APPLICATION_BINARY -> APPLICATION_BINARY
    com.google.common.net.MediaType GZIP -> GZIP
    com.google.common.net.MediaType JAVASCRIPT_UTF_8 -> JAVASCRIPT_UTF_8
    com.google.common.net.MediaType JSON_UTF_8 -> JSON_UTF_8
    com.google.common.net.MediaType KML -> KML
    com.google.common.net.MediaType KMZ -> KMZ
    com.google.common.net.MediaType MBOX -> MBOX
    com.google.common.net.MediaType MICROSOFT_EXCEL -> MICROSOFT_EXCEL
    com.google.common.net.MediaType MICROSOFT_POWERPOINT -> MICROSOFT_POWERPOINT
    com.google.common.net.MediaType MICROSOFT_WORD -> MICROSOFT_WORD
    com.google.common.net.MediaType OCTET_STREAM -> OCTET_STREAM
    com.google.common.net.MediaType OGG_CONTAINER -> OGG_CONTAINER
    com.google.common.net.MediaType OOXML_DOCUMENT -> OOXML_DOCUMENT
    com.google.common.net.MediaType OOXML_PRESENTATION -> OOXML_PRESENTATION
    com.google.common.net.MediaType OOXML_SHEET -> OOXML_SHEET
    com.google.common.net.MediaType OPENDOCUMENT_GRAPHICS -> OPENDOCUMENT_GRAPHICS
    com.google.common.net.MediaType OPENDOCUMENT_PRESENTATION -> OPENDOCUMENT_PRESENTATION
    com.google.common.net.MediaType OPENDOCUMENT_SPREADSHEET -> OPENDOCUMENT_SPREADSHEET
    com.google.common.net.MediaType OPENDOCUMENT_TEXT -> OPENDOCUMENT_TEXT
    com.google.common.net.MediaType PDF -> PDF
    com.google.common.net.MediaType POSTSCRIPT -> POSTSCRIPT
    com.google.common.net.MediaType RDF_XML_UTF_8 -> RDF_XML_UTF_8
    com.google.common.net.MediaType RTF_UTF_8 -> RTF_UTF_8
    com.google.common.net.MediaType SHOCKWAVE_FLASH -> SHOCKWAVE_FLASH
    com.google.common.net.MediaType SKETCHUP -> SKETCHUP
    com.google.common.net.MediaType TAR -> TAR
    com.google.common.net.MediaType XHTML_UTF_8 -> XHTML_UTF_8
    com.google.common.net.MediaType XRD_UTF_8 -> XRD_UTF_8
    com.google.common.net.MediaType ZIP -> ZIP
    com.google.common.collect.ImmutableMap KNOWN_TYPES -> e
    java.lang.String type -> f
    java.lang.String subtype -> g
    com.google.common.collect.ImmutableListMultimap parameters -> h
    com.google.common.base.Joiner$MapJoiner PARAMETER_JOINER -> i
    com.google.common.net.MediaType createConstant(java.lang.String,java.lang.String) -> a
    com.google.common.net.MediaType createConstantUtf8(java.lang.String,java.lang.String) -> b
    java.lang.String type() -> type
    java.lang.String subtype() -> subtype
    com.google.common.collect.ImmutableListMultimap parameters() -> parameters
    java.util.Map parametersAsMap() -> b
    com.google.common.base.Optional charset() -> charset
    com.google.common.net.MediaType withoutParameters() -> withoutParameters
    com.google.common.net.MediaType withParameters(com.google.common.collect.Multimap) -> withParameters
    com.google.common.net.MediaType withParameter(java.lang.String,java.lang.String) -> withParameter
    com.google.common.net.MediaType withCharset(java.nio.charset.Charset) -> withCharset
    boolean hasWildcard() -> hasWildcard
    boolean is(com.google.common.net.MediaType) -> is
    com.google.common.net.MediaType create(java.lang.String,java.lang.String) -> create
    com.google.common.net.MediaType create(java.lang.String,java.lang.String,com.google.common.collect.Multimap) -> a
    java.lang.String normalizeToken(java.lang.String) -> b
    java.lang.String normalizeParameterValue(java.lang.String,java.lang.String) -> c
    com.google.common.net.MediaType parse(java.lang.String) -> parse
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    com.google.common.base.CharMatcher access$000() -> a
    java.lang.String access$100(java.lang.String) -> a
com.google.common.net.MediaType$1 -> vH:
    com.google.common.net.MediaType this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.net.MediaType$2 -> vI:
    com.google.common.net.MediaType this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.net.MediaType$Tokenizer -> vJ:
    java.lang.String input -> a
    int position -> b
    java.lang.String consumeTokenIfPresent(com.google.common.base.CharMatcher) -> a
    java.lang.String consumeToken(com.google.common.base.CharMatcher) -> b
    char consumeCharacter(char) -> a
    char previewChar() -> a
    boolean hasMore() -> b
com.google.common.net.TldPatterns -> vK:
    com.google.common.collect.ImmutableSet EXACT -> a
    com.google.common.collect.ImmutableSet UNDER -> b
    com.google.common.collect.ImmutableSet EXCLUDED -> c
com.google.common.primitives.Booleans -> com.google.common.primitives.Booleans:
    int hashCode(boolean) -> hashCode
    int compare(boolean,boolean) -> compare
    boolean contains(boolean[],boolean) -> contains
    int indexOf(boolean[],boolean) -> indexOf
    int indexOf(boolean[],boolean,int,int) -> c
    int indexOf(boolean[],boolean[]) -> indexOf
    int lastIndexOf(boolean[],boolean) -> lastIndexOf
    int lastIndexOf(boolean[],boolean,int,int) -> d
    boolean[] concat(boolean[][]) -> concat
    boolean[] ensureCapacity(boolean[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,boolean[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    boolean[] toArray(java.util.Collection) -> toArray
    java.util.List asList(boolean[]) -> asList
    int access$000(boolean[],boolean,int,int) -> a
    int access$100(boolean[],boolean,int,int) -> b
com.google.common.primitives.Booleans$BooleanArrayAsList -> vL:
    boolean[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean[] toBooleanArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Booleans$LexicographicalComparator -> vM:
    com.google.common.primitives.Booleans$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Booleans$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Booleans$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Booleans$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Bytes -> com.google.common.primitives.Bytes:
    int hashCode(byte) -> hashCode
    boolean contains(byte[],byte) -> contains
    int indexOf(byte[],byte) -> indexOf
    int indexOf(byte[],byte,int,int) -> c
    int indexOf(byte[],byte[]) -> indexOf
    int lastIndexOf(byte[],byte) -> lastIndexOf
    int lastIndexOf(byte[],byte,int,int) -> d
    byte[] concat(byte[][]) -> concat
    byte[] ensureCapacity(byte[],int,int) -> ensureCapacity
    byte[] toArray(java.util.Collection) -> toArray
    java.util.List asList(byte[]) -> asList
    int access$000(byte[],byte,int,int) -> a
    int access$100(byte[],byte,int,int) -> b
com.google.common.primitives.Bytes$ByteArrayAsList -> vN:
    byte[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    byte[] toByteArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Chars -> com.google.common.primitives.Chars:
    int BYTES -> BYTES
    int hashCode(char) -> hashCode
    char checkedCast(long) -> checkedCast
    char saturatedCast(long) -> saturatedCast
    int compare(char,char) -> compare
    boolean contains(char[],char) -> contains
    int indexOf(char[],char) -> indexOf
    int indexOf(char[],char,int,int) -> c
    int indexOf(char[],char[]) -> indexOf
    int lastIndexOf(char[],char) -> lastIndexOf
    int lastIndexOf(char[],char,int,int) -> d
    char min(char[]) -> min
    char max(char[]) -> max
    char[] concat(char[][]) -> concat
    byte[] toByteArray(char) -> toByteArray
    char fromByteArray(byte[]) -> fromByteArray
    char fromBytes(byte,byte) -> fromBytes
    char[] ensureCapacity(char[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,char[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    char[] toArray(java.util.Collection) -> toArray
    java.util.List asList(char[]) -> asList
    int access$000(char[],char,int,int) -> a
    int access$100(char[],char,int,int) -> b
com.google.common.primitives.Chars$CharArrayAsList -> vO:
    char[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    char[] toCharArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Chars$LexicographicalComparator -> vP:
    com.google.common.primitives.Chars$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Chars$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Chars$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Chars$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Doubles -> com.google.common.primitives.Doubles:
    int BYTES -> BYTES
    java.util.regex.Pattern FLOATING_POINT_PATTERN -> a
    int hashCode(double) -> hashCode
    int compare(double,double) -> compare
    boolean isFinite(double) -> isFinite
    boolean contains(double[],double) -> contains
    int indexOf(double[],double) -> indexOf
    int indexOf(double[],double,int,int) -> c
    int indexOf(double[],double[]) -> indexOf
    int lastIndexOf(double[],double) -> lastIndexOf
    int lastIndexOf(double[],double,int,int) -> d
    double min(double[]) -> min
    double max(double[]) -> max
    double[] concat(double[][]) -> concat
    double[] ensureCapacity(double[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,double[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    double[] toArray(java.util.Collection) -> toArray
    java.util.List asList(double[]) -> asList
    java.lang.Double tryParse(java.lang.String) -> tryParse
    int access$000(double[],double,int,int) -> a
    int access$100(double[],double,int,int) -> b
com.google.common.primitives.Doubles$DoubleArrayAsList -> vQ:
    double[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    double[] toDoubleArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Doubles$LexicographicalComparator -> vR:
    com.google.common.primitives.Doubles$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Doubles$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Doubles$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Doubles$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Floats -> com.google.common.primitives.Floats:
    int BYTES -> BYTES
    int hashCode(float) -> hashCode
    int compare(float,float) -> compare
    boolean isFinite(float) -> isFinite
    boolean contains(float[],float) -> contains
    int indexOf(float[],float) -> indexOf
    int indexOf(float[],float,int,int) -> c
    int indexOf(float[],float[]) -> indexOf
    int lastIndexOf(float[],float) -> lastIndexOf
    int lastIndexOf(float[],float,int,int) -> d
    float min(float[]) -> min
    float max(float[]) -> max
    float[] concat(float[][]) -> concat
    float[] ensureCapacity(float[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,float[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    float[] toArray(java.util.Collection) -> toArray
    java.util.List asList(float[]) -> asList
    java.lang.Float tryParse(java.lang.String) -> tryParse
    int access$000(float[],float,int,int) -> a
    int access$100(float[],float,int,int) -> b
com.google.common.primitives.Floats$FloatArrayAsList -> vS:
    float[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    float[] toFloatArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Floats$LexicographicalComparator -> vT:
    com.google.common.primitives.Floats$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Floats$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Floats$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Floats$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Ints -> com.google.common.primitives.Ints:
    int BYTES -> BYTES
    int MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    int hashCode(int) -> hashCode
    int checkedCast(long) -> checkedCast
    int saturatedCast(long) -> saturatedCast
    int compare(int,int) -> compare
    boolean contains(int[],int) -> contains
    int indexOf(int[],int) -> indexOf
    int indexOf(int[],int,int,int) -> c
    int indexOf(int[],int[]) -> indexOf
    int lastIndexOf(int[],int) -> lastIndexOf
    int lastIndexOf(int[],int,int,int) -> d
    int min(int[]) -> min
    int max(int[]) -> max
    int[] concat(int[][]) -> concat
    byte[] toByteArray(int) -> toByteArray
    int fromByteArray(byte[]) -> fromByteArray
    int fromBytes(byte,byte,byte,byte) -> fromBytes
    int[] ensureCapacity(int[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,int[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    int[] toArray(java.util.Collection) -> toArray
    java.util.List asList(int[]) -> asList
    java.lang.Integer tryParse(java.lang.String) -> tryParse
    int access$000(int[],int,int,int) -> a
    int access$100(int[],int,int,int) -> b
com.google.common.primitives.Ints$IntArrayAsList -> vU:
    int[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int[] toIntArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.Ints$LexicographicalComparator -> vV:
    com.google.common.primitives.Ints$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Ints$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Ints$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Ints$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Longs -> com.google.common.primitives.Longs:
    int BYTES -> BYTES
    long MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    int hashCode(long) -> hashCode
    int compare(long,long) -> compare
    boolean contains(long[],long) -> contains
    int indexOf(long[],long) -> indexOf
    int indexOf(long[],long,int,int) -> c
    int indexOf(long[],long[]) -> indexOf
    int lastIndexOf(long[],long) -> lastIndexOf
    int lastIndexOf(long[],long,int,int) -> d
    long min(long[]) -> min
    long max(long[]) -> max
    long[] concat(long[][]) -> concat
    byte[] toByteArray(long) -> toByteArray
    long fromByteArray(byte[]) -> fromByteArray
    long fromBytes(byte,byte,byte,byte,byte,byte,byte,byte) -> fromBytes
    java.lang.Long tryParse(java.lang.String) -> tryParse
    long[] ensureCapacity(long[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,long[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    long[] toArray(java.util.Collection) -> toArray
    java.util.List asList(long[]) -> asList
    int access$000(long[],long,int,int) -> a
    int access$100(long[],long,int,int) -> b
com.google.common.primitives.Longs$LexicographicalComparator -> vW:
    com.google.common.primitives.Longs$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Longs$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Longs$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Longs$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Longs$LongArrayAsList -> vX:
    long[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    long[] toLongArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.ParseRequest -> vY:
    java.lang.String rawValue -> a
    int radix -> b
    com.google.common.primitives.ParseRequest fromString(java.lang.String) -> a
com.google.common.primitives.Primitives -> com.google.common.primitives.Primitives:
    java.util.Map PRIMITIVE_TO_WRAPPER_TYPE -> a
    java.util.Map WRAPPER_TO_PRIMITIVE_TYPE -> b
    void add(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    java.util.Set allPrimitiveTypes() -> allPrimitiveTypes
    java.util.Set allWrapperTypes() -> allWrapperTypes
    boolean isWrapperType(java.lang.Class) -> isWrapperType
    java.lang.Class wrap(java.lang.Class) -> wrap
    java.lang.Class unwrap(java.lang.Class) -> unwrap
com.google.common.primitives.Shorts -> com.google.common.primitives.Shorts:
    int BYTES -> BYTES
    short MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    int hashCode(short) -> hashCode
    short checkedCast(long) -> checkedCast
    short saturatedCast(long) -> saturatedCast
    int compare(short,short) -> compare
    boolean contains(short[],short) -> contains
    int indexOf(short[],short) -> indexOf
    int indexOf(short[],short,int,int) -> c
    int indexOf(short[],short[]) -> indexOf
    int lastIndexOf(short[],short) -> lastIndexOf
    int lastIndexOf(short[],short,int,int) -> d
    short min(short[]) -> min
    short max(short[]) -> max
    short[] concat(short[][]) -> concat
    byte[] toByteArray(short) -> toByteArray
    short fromByteArray(byte[]) -> fromByteArray
    short fromBytes(byte,byte) -> fromBytes
    short[] ensureCapacity(short[],int,int) -> ensureCapacity
    java.lang.String join(java.lang.String,short[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    short[] toArray(java.util.Collection) -> toArray
    java.util.List asList(short[]) -> asList
    int access$000(short[],short,int,int) -> a
    int access$100(short[],short,int,int) -> b
com.google.common.primitives.Shorts$LexicographicalComparator -> vZ:
    com.google.common.primitives.Shorts$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.Shorts$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.Shorts$LexicographicalComparator[] values() -> values
    com.google.common.primitives.Shorts$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.Shorts$ShortArrayAsList -> wa:
    short[] array -> a
    int start -> b
    int end -> c
    long serialVersionUID -> serialVersionUID
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.List subList(int,int) -> subList
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    short[] toShortArray() -> a
    java.lang.Object set(int,java.lang.Object) -> set
    java.lang.Object get(int) -> get
com.google.common.primitives.SignedBytes -> com.google.common.primitives.SignedBytes:
    byte MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    byte checkedCast(long) -> checkedCast
    byte saturatedCast(long) -> saturatedCast
    int compare(byte,byte) -> compare
    byte min(byte[]) -> min
    byte max(byte[]) -> max
    java.lang.String join(java.lang.String,byte[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
com.google.common.primitives.SignedBytes$LexicographicalComparator -> wb:
    com.google.common.primitives.SignedBytes$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.SignedBytes$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.SignedBytes$LexicographicalComparator[] values() -> values
    com.google.common.primitives.SignedBytes$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedBytes -> com.google.common.primitives.UnsignedBytes:
    byte MAX_POWER_OF_TWO -> MAX_POWER_OF_TWO
    byte MAX_VALUE -> MAX_VALUE
    int toInt(byte) -> toInt
    byte checkedCast(long) -> checkedCast
    byte saturatedCast(long) -> saturatedCast
    int compare(byte,byte) -> compare
    byte min(byte[]) -> min
    byte max(byte[]) -> max
    java.lang.String toString(byte) -> toString
    java.lang.String toString(byte,int) -> toString
    byte parseUnsignedByte(java.lang.String) -> parseUnsignedByte
    byte parseUnsignedByte(java.lang.String,int) -> parseUnsignedByte
    java.lang.String join(java.lang.String,byte[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    java.util.Comparator lexicographicalComparatorJavaImpl() -> a
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder -> wc:
    java.lang.String UNSAFE_COMPARATOR_NAME -> a
    java.util.Comparator BEST_COMPARATOR -> b
    java.util.Comparator getBestComparator() -> a
com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator -> wd:
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator INSTANCE -> a
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] $VALUES -> b
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator[] values() -> values
    com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$PureJavaComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedInteger -> com.google.common.primitives.UnsignedInteger:
    com.google.common.primitives.UnsignedInteger ZERO -> ZERO
    com.google.common.primitives.UnsignedInteger ONE -> ONE
    com.google.common.primitives.UnsignedInteger MAX_VALUE -> MAX_VALUE
    int value -> a
    com.google.common.primitives.UnsignedInteger asUnsigned(int) -> asUnsigned
    com.google.common.primitives.UnsignedInteger fromIntBits(int) -> fromIntBits
    com.google.common.primitives.UnsignedInteger valueOf(long) -> valueOf
    com.google.common.primitives.UnsignedInteger valueOf(java.math.BigInteger) -> valueOf
    com.google.common.primitives.UnsignedInteger valueOf(java.lang.String) -> valueOf
    com.google.common.primitives.UnsignedInteger valueOf(java.lang.String,int) -> valueOf
    com.google.common.primitives.UnsignedInteger add(com.google.common.primitives.UnsignedInteger) -> add
    com.google.common.primitives.UnsignedInteger plus(com.google.common.primitives.UnsignedInteger) -> plus
    com.google.common.primitives.UnsignedInteger subtract(com.google.common.primitives.UnsignedInteger) -> subtract
    com.google.common.primitives.UnsignedInteger minus(com.google.common.primitives.UnsignedInteger) -> minus
    com.google.common.primitives.UnsignedInteger multiply(com.google.common.primitives.UnsignedInteger) -> multiply
    com.google.common.primitives.UnsignedInteger times(com.google.common.primitives.UnsignedInteger) -> times
    com.google.common.primitives.UnsignedInteger divide(com.google.common.primitives.UnsignedInteger) -> divide
    com.google.common.primitives.UnsignedInteger dividedBy(com.google.common.primitives.UnsignedInteger) -> dividedBy
    com.google.common.primitives.UnsignedInteger remainder(com.google.common.primitives.UnsignedInteger) -> remainder
    com.google.common.primitives.UnsignedInteger mod(com.google.common.primitives.UnsignedInteger) -> mod
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    int compareTo(com.google.common.primitives.UnsignedInteger) -> compareTo
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    int compareTo(java.lang.Object) -> compareTo
com.google.common.primitives.UnsignedInts -> com.google.common.primitives.UnsignedInts:
    int compare(int,int) -> compare
    long toLong(int) -> toLong
    int min(int[]) -> min
    int max(int[]) -> max
    java.lang.String join(java.lang.String,int[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    int divide(int,int) -> divide
    int remainder(int,int) -> remainder
    int decode(java.lang.String) -> decode
    int parseUnsignedInt(java.lang.String) -> parseUnsignedInt
    int parseUnsignedInt(java.lang.String,int) -> parseUnsignedInt
    java.lang.String toString(int) -> toString
    java.lang.String toString(int,int) -> toString
com.google.common.primitives.UnsignedInts$LexicographicalComparator -> we:
    com.google.common.primitives.UnsignedInts$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.UnsignedInts$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.UnsignedInts$LexicographicalComparator[] values() -> values
    com.google.common.primitives.UnsignedInts$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.primitives.UnsignedLong -> com.google.common.primitives.UnsignedLong:
    com.google.common.primitives.UnsignedLong ZERO -> ZERO
    com.google.common.primitives.UnsignedLong ONE -> ONE
    com.google.common.primitives.UnsignedLong MAX_VALUE -> MAX_VALUE
    long value -> a
    com.google.common.primitives.UnsignedLong asUnsigned(long) -> asUnsigned
    com.google.common.primitives.UnsignedLong fromLongBits(long) -> fromLongBits
    com.google.common.primitives.UnsignedLong valueOf(long) -> valueOf
    com.google.common.primitives.UnsignedLong valueOf(java.math.BigInteger) -> valueOf
    com.google.common.primitives.UnsignedLong valueOf(java.lang.String) -> valueOf
    com.google.common.primitives.UnsignedLong valueOf(java.lang.String,int) -> valueOf
    com.google.common.primitives.UnsignedLong add(com.google.common.primitives.UnsignedLong) -> add
    com.google.common.primitives.UnsignedLong plus(com.google.common.primitives.UnsignedLong) -> plus
    com.google.common.primitives.UnsignedLong subtract(com.google.common.primitives.UnsignedLong) -> subtract
    com.google.common.primitives.UnsignedLong minus(com.google.common.primitives.UnsignedLong) -> minus
    com.google.common.primitives.UnsignedLong multiply(com.google.common.primitives.UnsignedLong) -> multiply
    com.google.common.primitives.UnsignedLong times(com.google.common.primitives.UnsignedLong) -> times
    com.google.common.primitives.UnsignedLong divide(com.google.common.primitives.UnsignedLong) -> divide
    com.google.common.primitives.UnsignedLong dividedBy(com.google.common.primitives.UnsignedLong) -> dividedBy
    com.google.common.primitives.UnsignedLong remainder(com.google.common.primitives.UnsignedLong) -> remainder
    com.google.common.primitives.UnsignedLong mod(com.google.common.primitives.UnsignedLong) -> mod
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    java.math.BigInteger bigIntegerValue() -> bigIntegerValue
    int compareTo(com.google.common.primitives.UnsignedLong) -> compareTo
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    int compareTo(java.lang.Object) -> compareTo
com.google.common.primitives.UnsignedLongs -> com.google.common.primitives.UnsignedLongs:
    long MAX_VALUE -> MAX_VALUE
    long[] maxValueDivs -> a
    int[] maxValueMods -> b
    int[] maxSafeDigits -> c
    int compare(long,long) -> compare
    long min(long[]) -> min
    long max(long[]) -> max
    java.lang.String join(java.lang.String,long[]) -> join
    java.util.Comparator lexicographicalComparator() -> lexicographicalComparator
    long divide(long,long) -> divide
    long remainder(long,long) -> remainder
    long parseUnsignedLong(java.lang.String) -> parseUnsignedLong
    long decode(java.lang.String) -> decode
    long parseUnsignedLong(java.lang.String,int) -> parseUnsignedLong
    java.lang.String toString(long) -> toString
    java.lang.String toString(long,int) -> toString
com.google.common.primitives.UnsignedLongs$LexicographicalComparator -> wf:
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator INSTANCE -> a
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator[] $VALUES -> b
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator[] values() -> values
    com.google.common.primitives.UnsignedLongs$LexicographicalComparator valueOf(java.lang.String) -> valueOf
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.reflect.AbstractInvocationHandler -> com.google.common.reflect.AbstractInvocationHandler:
    java.lang.Object[] NO_ARGS -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object handleInvocation(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> handleInvocation
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.reflect.ClassPath -> com.google.common.reflect.ClassPath:
    java.util.logging.Logger logger -> a
    com.google.common.base.Splitter CLASS_PATH_ATTRIBUTE_SEPARATOR -> b
    com.google.common.collect.ImmutableSet resources -> c
    com.google.common.reflect.ClassPath from(java.lang.ClassLoader) -> from
    com.google.common.collect.ImmutableSet getResources() -> getResources
    com.google.common.collect.ImmutableSet getTopLevelClasses() -> getTopLevelClasses
    com.google.common.collect.ImmutableSet getTopLevelClasses(java.lang.String) -> getTopLevelClasses
    com.google.common.collect.ImmutableSet getTopLevelClassesRecursive(java.lang.String) -> getTopLevelClassesRecursive
    com.google.common.collect.ImmutableMap getClassPathEntries(java.lang.ClassLoader) -> a
    void browse(java.net.URI,java.lang.ClassLoader,com.google.common.collect.ImmutableSet$Builder) -> a
    void browseDirectory(java.io.File,java.lang.ClassLoader,java.lang.String,com.google.common.collect.ImmutableSet$Builder) -> a
    void browseJar(java.io.File,java.lang.ClassLoader,com.google.common.collect.ImmutableSet$Builder) -> a
    com.google.common.collect.ImmutableSet getClassPathFromManifest(java.io.File,java.util.jar.Manifest) -> a
    java.lang.String getClassName(java.lang.String) -> a
com.google.common.reflect.ClassPath$ClassInfo -> com.google.common.reflect.ClassPath$ClassInfo:
    java.lang.String className -> b
    java.lang.String getPackageName() -> getPackageName
    java.lang.String getSimpleName() -> getSimpleName
    java.lang.String getName() -> getName
    java.lang.Class load() -> load
    java.lang.String toString() -> toString
com.google.common.reflect.ClassPath$ResourceInfo -> com.google.common.reflect.ClassPath$ResourceInfo:
    java.lang.String resourceName -> b
    java.lang.ClassLoader loader -> a
    com.google.common.reflect.ClassPath$ResourceInfo of(java.lang.String,java.lang.ClassLoader) -> a
    java.net.URL url() -> url
    java.lang.String getResourceName() -> getResourceName
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.reflect.Element -> wg:
    java.lang.reflect.AccessibleObject accessibleObject -> a
    java.lang.reflect.Member member -> b
    boolean isAnnotationPresent(java.lang.Class) -> isAnnotationPresent
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation[] getAnnotations() -> getAnnotations
    java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    void setAccessible(boolean) -> setAccessible
    boolean isAccessible() -> isAccessible
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.String getName() -> getName
    int getModifiers() -> getModifiers
    boolean isSynthetic() -> isSynthetic
    boolean isPublic() -> isPublic
    boolean isProtected() -> isProtected
    boolean isPackagePrivate() -> isPackagePrivate
    boolean isPrivate() -> isPrivate
    boolean isStatic() -> isStatic
    boolean isFinal() -> isFinal
    boolean isAbstract() -> isAbstract
    boolean isNative() -> isNative
    boolean isSynchronized() -> isSynchronized
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.reflect.ImmutableTypeToInstanceMap -> com.google.common.reflect.ImmutableTypeToInstanceMap:
    com.google.common.collect.ImmutableMap delegate -> a
    com.google.common.reflect.ImmutableTypeToInstanceMap of() -> of
    com.google.common.reflect.ImmutableTypeToInstanceMap$Builder builder() -> builder
    java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.util.Map delegate() -> delegate
    java.lang.Object trustedGet(com.google.common.reflect.TypeToken) -> a
    java.lang.Object delegate() -> delegate
com.google.common.reflect.ImmutableTypeToInstanceMap$Builder -> com.google.common.reflect.ImmutableTypeToInstanceMap$Builder:
    com.google.common.collect.ImmutableMap$Builder mapBuilder -> a
    com.google.common.reflect.ImmutableTypeToInstanceMap$Builder put(java.lang.Class,java.lang.Object) -> put
    com.google.common.reflect.ImmutableTypeToInstanceMap$Builder put(com.google.common.reflect.TypeToken,java.lang.Object) -> put
    com.google.common.reflect.ImmutableTypeToInstanceMap build() -> build
com.google.common.reflect.Invokable -> com.google.common.reflect.Invokable:
    com.google.common.reflect.Invokable from(java.lang.reflect.Method) -> from
    com.google.common.reflect.Invokable from(java.lang.reflect.Constructor) -> from
    boolean isOverridable() -> isOverridable
    boolean isVarArgs() -> isVarArgs
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    com.google.common.reflect.TypeToken getReturnType() -> getReturnType
    com.google.common.collect.ImmutableList getParameters() -> getParameters
    com.google.common.collect.ImmutableList getExceptionTypes() -> getExceptionTypes
    com.google.common.reflect.Invokable returning(java.lang.Class) -> returning
    com.google.common.reflect.Invokable returning(com.google.common.reflect.TypeToken) -> returning
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
    java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> a
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    java.lang.annotation.Annotation[][] getParameterAnnotations() -> c
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Invokable$ConstructorInvokable -> wh:
    java.lang.reflect.Constructor constructor -> a
    java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> a
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    java.lang.annotation.Annotation[][] getParameterAnnotations() -> c
    java.lang.reflect.TypeVariable[] getTypeParameters() -> getTypeParameters
    boolean isOverridable() -> isOverridable
    boolean isVarArgs() -> isVarArgs
com.google.common.reflect.Invokable$MethodInvokable -> wi:
    java.lang.reflect.Method method -> a
    java.lang.Object invokeInternal(java.lang.Object,java.lang.Object[]) -> a
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    java.lang.annotation.Annotation[][] getParameterAnnotations() -> c
    java.lang.reflect.TypeVariable[] getTypeParameters() -> getTypeParameters
    boolean isOverridable() -> isOverridable
    boolean isVarArgs() -> isVarArgs
com.google.common.reflect.MutableTypeToInstanceMap -> com.google.common.reflect.MutableTypeToInstanceMap:
    java.util.Map backingMap -> a
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
    java.lang.Object put(com.google.common.reflect.TypeToken,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.util.Map delegate() -> delegate
    java.lang.Object trustedPut(com.google.common.reflect.TypeToken,java.lang.Object) -> a
    java.lang.Object trustedGet(com.google.common.reflect.TypeToken) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object delegate() -> delegate
com.google.common.reflect.Parameter -> com.google.common.reflect.Parameter:
    com.google.common.reflect.Invokable declaration -> a
    int position -> b
    com.google.common.reflect.TypeToken type -> c
    com.google.common.collect.ImmutableList annotations -> d
    com.google.common.reflect.TypeToken getType() -> getType
    com.google.common.reflect.Invokable getDeclaringInvokable() -> getDeclaringInvokable
    boolean isAnnotationPresent(java.lang.Class) -> isAnnotationPresent
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.annotation.Annotation[] getAnnotations() -> getAnnotations
    java.lang.annotation.Annotation[] getDeclaredAnnotations() -> getDeclaredAnnotations
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.reflect.Reflection -> com.google.common.reflect.Reflection:
    java.lang.String getPackageName(java.lang.Class) -> getPackageName
    java.lang.String getPackageName(java.lang.String) -> getPackageName
    void initialize(java.lang.Class[]) -> initialize
    java.lang.Object newProxy(java.lang.Class,java.lang.reflect.InvocationHandler) -> newProxy
com.google.common.reflect.TypeCapture -> wj:
    java.lang.reflect.Type capture() -> a
com.google.common.reflect.TypeParameter -> com.google.common.reflect.TypeParameter:
    java.lang.reflect.TypeVariable typeVariable -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.google.common.reflect.TypeResolver -> wk:
    com.google.common.collect.ImmutableMap typeTable -> a
    com.google.common.reflect.TypeResolver where(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    com.google.common.reflect.TypeResolver where(java.util.Map) -> a
    void populateTypeMappings(java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type) -> a
    java.lang.reflect.Type resolveType(java.lang.reflect.Type) -> a
    java.lang.reflect.Type[] resolveTypes(java.lang.reflect.Type[]) -> a
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver) -> a
    java.lang.Object expectArgument(java.lang.Class,java.lang.Object) -> a
com.google.common.reflect.TypeResolver$1 -> wl:
    java.lang.reflect.TypeVariable val$var -> a
    com.google.common.reflect.TypeResolver val$unguarded -> b
    com.google.common.reflect.TypeResolver this$0 -> c
    java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.TypeVariable,com.google.common.reflect.TypeResolver) -> a
com.google.common.reflect.TypeResolver$TypeMappingIntrospector -> wm:
    com.google.common.reflect.TypeResolver$WildcardCapturer wildcardCapturer -> a
    java.util.Map mappings -> b
    java.util.Set introspectedTypes -> c
    com.google.common.collect.ImmutableMap getTypeMappings(java.lang.reflect.Type) -> a
    void introspect(java.lang.reflect.Type) -> b
    void introspectClass(java.lang.Class) -> a
com.google.common.reflect.TypeResolver$WildcardCapturer -> wn:
    java.util.concurrent.atomic.AtomicInteger id -> a
    java.lang.reflect.Type capture(java.lang.reflect.Type) -> a
com.google.common.reflect.TypeToInstanceMap -> com.google.common.reflect.TypeToInstanceMap:
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    java.lang.Object putInstance(java.lang.Class,java.lang.Object) -> putInstance
    java.lang.Object getInstance(com.google.common.reflect.TypeToken) -> getInstance
    java.lang.Object putInstance(com.google.common.reflect.TypeToken,java.lang.Object) -> putInstance
com.google.common.reflect.TypeToken -> com.google.common.reflect.TypeToken:
    java.lang.reflect.Type runtimeType -> a
    com.google.common.reflect.TypeResolver typeResolver -> b
    com.google.common.reflect.TypeToken of(java.lang.Class) -> of
    com.google.common.reflect.TypeToken of(java.lang.reflect.Type) -> of
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getType() -> getType
    com.google.common.reflect.TypeToken where(com.google.common.reflect.TypeParameter,com.google.common.reflect.TypeToken) -> where
    com.google.common.reflect.TypeToken where(com.google.common.reflect.TypeParameter,java.lang.Class) -> where
    com.google.common.reflect.TypeToken resolveType(java.lang.reflect.Type) -> resolveType
    com.google.common.reflect.TypeToken resolveSupertype(java.lang.reflect.Type) -> a
    com.google.common.reflect.TypeToken getGenericSuperclass() -> b
    com.google.common.reflect.TypeToken boundAsSuperclass(java.lang.reflect.Type) -> b
    com.google.common.collect.ImmutableList getGenericInterfaces() -> c
    com.google.common.collect.ImmutableList boundsAsInterfaces(java.lang.reflect.Type[]) -> a
    com.google.common.reflect.TypeToken$TypeSet getTypes() -> getTypes
    com.google.common.reflect.TypeToken getSupertype(java.lang.Class) -> getSupertype
    com.google.common.reflect.TypeToken getSubtype(java.lang.Class) -> getSubtype
    boolean isAssignableFrom(com.google.common.reflect.TypeToken) -> isAssignableFrom
    boolean isAssignableFrom(java.lang.reflect.Type) -> isAssignableFrom
    boolean isArray() -> isArray
    com.google.common.reflect.TypeToken getComponentType() -> getComponentType
    com.google.common.reflect.Invokable method(java.lang.reflect.Method) -> method
    com.google.common.reflect.Invokable constructor(java.lang.reflect.Constructor) -> constructor
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.Object writeReplace() -> writeReplace
    com.google.common.reflect.TypeToken rejectTypeVariables() -> d
    boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type) -> a
    boolean isAssignableFromAny(java.lang.reflect.Type[],java.lang.reflect.Type) -> a
    boolean isAssignableToWildcardType(java.lang.reflect.Type,java.lang.reflect.WildcardType) -> a
    java.lang.reflect.Type supertypeBound(java.lang.reflect.WildcardType) -> a
    java.lang.reflect.Type subtypeBound(java.lang.reflect.Type) -> c
    java.lang.reflect.Type subtypeBound(java.lang.reflect.WildcardType) -> b
    java.lang.Class getRawType(java.lang.reflect.Type) -> d
    com.google.common.collect.ImmutableSet getRawTypes(java.lang.reflect.Type) -> e
    com.google.common.collect.ImmutableSet getRawTypes(java.lang.reflect.Type[]) -> b
    com.google.common.reflect.TypeToken toGenericType(java.lang.Class) -> a
    com.google.common.reflect.TypeToken getSupertypeFromUpperBounds(java.lang.Class,java.lang.reflect.Type[]) -> a
    java.lang.reflect.Type[] access$000(com.google.common.reflect.TypeToken,java.lang.reflect.Type[]) -> a
    com.google.common.collect.ImmutableSet access$200(com.google.common.reflect.TypeToken) -> a
    java.lang.reflect.Type access$400(com.google.common.reflect.TypeToken) -> b
com.google.common.reflect.TypeToken$1 -> wo:
    com.google.common.reflect.TypeToken this$0 -> a
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
com.google.common.reflect.TypeToken$2 -> wp:
    com.google.common.reflect.TypeToken this$0 -> a
    java.lang.reflect.Type getGenericReturnType() -> d
    java.lang.reflect.Type[] getGenericParameterTypes() -> a
    java.lang.reflect.Type[] getGenericExceptionTypes() -> b
    com.google.common.reflect.TypeToken getOwnerType() -> getOwnerType
com.google.common.reflect.TypeToken$ClassSet -> wq:
    com.google.common.collect.ImmutableSet classes -> c
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> a
    java.util.Set delegate() -> delegate
    com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    java.util.Set rawTypes() -> rawTypes
    com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    java.lang.Object readResolve() -> readResolve
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.reflect.TypeToken$InterfaceSet -> wr:
    com.google.common.reflect.TypeToken$TypeSet allTypes -> c
    com.google.common.collect.ImmutableSet interfaces -> d
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> a
    java.util.Set delegate() -> delegate
    com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    java.util.Set rawTypes() -> rawTypes
    com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    java.lang.Object readResolve() -> readResolve
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.reflect.TypeToken$InterfaceSet$1 -> ws:
    com.google.common.reflect.TypeToken$InterfaceSet this$1 -> a
    boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$SimpleTypeToken -> wt:
    long serialVersionUID -> serialVersionUID
com.google.common.reflect.TypeToken$TypeCollector -> wu:
    com.google.common.reflect.TypeToken$TypeCollector FOR_GENERIC_TYPE -> a
    com.google.common.reflect.TypeToken$TypeCollector FOR_RAW_TYPE -> b
    com.google.common.reflect.TypeToken$TypeCollector classesOnly() -> a
    com.google.common.collect.ImmutableList collectTypes(java.lang.Object) -> a
    com.google.common.collect.ImmutableList collectTypes(java.lang.Iterable) -> a
    int collectTypes(java.lang.Object,java.util.Map) -> a
    java.lang.Class getRawType(java.lang.Object) -> b
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    java.lang.Object getSuperclass(java.lang.Object) -> d
com.google.common.reflect.TypeToken$TypeCollector$1 -> wv:
    java.lang.Object getSuperclass(java.lang.Object) -> d
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    java.lang.Class getRawType(java.lang.Object) -> b
com.google.common.reflect.TypeToken$TypeCollector$2 -> ww:
    java.lang.Object getSuperclass(java.lang.Object) -> d
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    java.lang.Class getRawType(java.lang.Object) -> b
com.google.common.reflect.TypeToken$TypeCollector$3 -> wx:
    com.google.common.reflect.TypeToken$TypeCollector this$0 -> c
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    com.google.common.collect.ImmutableList collectTypes(java.lang.Iterable) -> a
com.google.common.reflect.TypeToken$TypeCollector$4 -> wy:
    java.util.Comparator val$valueComparator -> a
    java.util.Map val$map -> b
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.common.reflect.TypeToken$TypeCollector$ForwardingTypeCollector -> wz:
    com.google.common.reflect.TypeToken$TypeCollector delegate -> c
    java.lang.Class getRawType(java.lang.Object) -> b
    java.lang.Iterable getInterfaces(java.lang.Object) -> c
    java.lang.Object getSuperclass(java.lang.Object) -> d
com.google.common.reflect.TypeToken$TypeFilter -> wA:
    com.google.common.reflect.TypeToken$TypeFilter IGNORE_TYPE_VARIABLE_OR_WILDCARD -> a
    com.google.common.reflect.TypeToken$TypeFilter INTERFACE_ONLY -> b
    com.google.common.reflect.TypeToken$TypeFilter[] $VALUES -> c
    com.google.common.reflect.TypeToken$TypeFilter[] values() -> values
    com.google.common.reflect.TypeToken$TypeFilter valueOf(java.lang.String) -> valueOf
com.google.common.reflect.TypeToken$TypeFilter$1 -> wB:
    boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$TypeFilter$2 -> wC:
    boolean apply(java.lang.Object) -> apply
com.google.common.reflect.TypeToken$TypeSet -> com.google.common.reflect.TypeToken$TypeSet:
    com.google.common.collect.ImmutableSet types -> a
    long serialVersionUID -> serialVersionUID
    com.google.common.reflect.TypeToken this$0 -> b
    com.google.common.reflect.TypeToken$TypeSet interfaces() -> interfaces
    com.google.common.reflect.TypeToken$TypeSet classes() -> classes
    java.util.Set delegate() -> delegate
    java.util.Set rawTypes() -> rawTypes
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.reflect.Types -> wD:
    com.google.common.base.Function TYPE_TO_STRING -> a
    com.google.common.base.Joiner COMMA_JOINER -> b
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> a
    java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[]) -> a
    java.lang.reflect.ParameterizedType newParameterizedType(java.lang.Class,java.lang.reflect.Type[]) -> a
    java.lang.reflect.TypeVariable newTypeVariable(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.reflect.Type[]) -> a
    java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> e
    java.lang.String toString(java.lang.reflect.Type) -> b
    java.lang.reflect.Type getComponentType(java.lang.reflect.Type) -> c
    java.lang.reflect.Type subtypeOfComponentType(java.lang.reflect.Type[]) -> a
    boolean containsTypeVariable(java.lang.reflect.Type) -> d
    boolean containsTypeVariable(java.lang.reflect.Type[]) -> b
    java.lang.Class getArrayClass(java.lang.Class) -> a
    void access$100(java.lang.reflect.Type[],java.lang.String) -> a
    java.lang.reflect.Type[] access$200(java.util.Collection) -> a
    com.google.common.base.Function access$300() -> a
    com.google.common.base.Joiner access$400() -> b
    java.lang.Iterable access$500(java.lang.Iterable) -> a
com.google.common.reflect.Types$1 -> wE:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.reflect.Types$ClassOwnership -> wF:
    com.google.common.reflect.Types$ClassOwnership OWNED_BY_ENCLOSING_CLASS -> a
    com.google.common.reflect.Types$ClassOwnership LOCAL_CLASS_HAS_NO_OWNER -> b
    com.google.common.reflect.Types$ClassOwnership JVM_BEHAVIOR -> c
    com.google.common.reflect.Types$ClassOwnership[] $VALUES -> d
    com.google.common.reflect.Types$ClassOwnership[] values() -> values
    com.google.common.reflect.Types$ClassOwnership valueOf(java.lang.String) -> valueOf
    java.lang.Class getOwnerType(java.lang.Class) -> a
com.google.common.reflect.Types$ClassOwnership$1 -> wG:
    java.lang.Class getOwnerType(java.lang.Class) -> a
com.google.common.reflect.Types$ClassOwnership$1LocalClass -> wH:
com.google.common.reflect.Types$ClassOwnership$2 -> wI:
    java.lang.Class getOwnerType(java.lang.Class) -> a
com.google.common.reflect.Types$ClassOwnership$3 -> wJ:
com.google.common.reflect.Types$GenericArrayTypeImpl -> wK:
    java.lang.reflect.Type componentType -> a
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$JavaVersion -> wL:
    com.google.common.reflect.Types$JavaVersion JAVA6 -> a
    com.google.common.reflect.Types$JavaVersion JAVA7 -> b
    com.google.common.reflect.Types$JavaVersion CURRENT -> c
    com.google.common.reflect.Types$JavaVersion[] $VALUES -> d
    com.google.common.reflect.Types$JavaVersion[] values() -> values
    com.google.common.reflect.Types$JavaVersion valueOf(java.lang.String) -> valueOf
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> a
    java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> b
    com.google.common.collect.ImmutableList usedInGenericType(java.lang.reflect.Type[]) -> a
com.google.common.reflect.Types$JavaVersion$1 -> wM:
com.google.common.reflect.Types$JavaVersion$2 -> wN:
    java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> b
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> a
com.google.common.reflect.Types$JavaVersion$3 -> wO:
    java.lang.reflect.Type newArrayType(java.lang.reflect.Type) -> a
    java.lang.reflect.Type usedInGenericType(java.lang.reflect.Type) -> b
com.google.common.reflect.Types$ParameterizedTypeImpl -> wP:
    java.lang.reflect.Type ownerType -> a
    com.google.common.collect.ImmutableList argumentsList -> b
    java.lang.Class rawType -> c
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$TypeVariableImpl -> wQ:
    java.lang.reflect.GenericDeclaration genericDeclaration -> a
    java.lang.String name -> b
    com.google.common.collect.ImmutableList bounds -> c
    java.lang.reflect.Type[] getBounds() -> getBounds
    java.lang.reflect.GenericDeclaration getGenericDeclaration() -> getGenericDeclaration
    java.lang.String getName() -> getName
    java.lang.String toString() -> toString
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.common.reflect.Types$WildcardTypeImpl -> wR:
    com.google.common.collect.ImmutableList lowerBounds -> a
    com.google.common.collect.ImmutableList upperBounds -> b
    long serialVersionUID -> serialVersionUID
    java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.common.util.concurrent.AbstractCheckedFuture -> com.google.common.util.concurrent.AbstractCheckedFuture:
    java.lang.Exception mapException(java.lang.Exception) -> mapException
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.AbstractExecutionThreadService -> com.google.common.util.concurrent.AbstractExecutionThreadService:
    java.util.logging.Logger logger -> a
    com.google.common.util.concurrent.Service delegate -> b
    void startUp() -> startUp
    void run() -> run
    void shutDown() -> shutDown
    void triggerShutdown() -> triggerShutdown
    java.util.concurrent.Executor executor() -> executor
    java.lang.String toString() -> toString
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.Throwable failureCause() -> failureCause
    java.lang.String serviceName() -> serviceName
    java.util.logging.Logger access$000() -> a
com.google.common.util.concurrent.AbstractExecutionThreadService$1 -> wS:
    com.google.common.util.concurrent.AbstractExecutionThreadService this$0 -> a
    void doStart() -> doStart
    void doStop() -> doStop
com.google.common.util.concurrent.AbstractExecutionThreadService$1$1 -> wT:
    com.google.common.util.concurrent.AbstractExecutionThreadService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractExecutionThreadService$2 -> wU:
    com.google.common.util.concurrent.AbstractExecutionThreadService this$0 -> a
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractFuture -> com.google.common.util.concurrent.AbstractFuture:
    com.google.common.util.concurrent.AbstractFuture$Sync sync -> a
    com.google.common.util.concurrent.ExecutionList executionList -> b
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object get() -> get
    boolean isDone() -> isDone
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    void interruptTask() -> interruptTask
    boolean wasInterrupted() -> wasInterrupted
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    boolean set(java.lang.Object) -> set
    boolean setException(java.lang.Throwable) -> setException
    java.util.concurrent.CancellationException cancellationExceptionWithCause(java.lang.String,java.lang.Throwable) -> a
com.google.common.util.concurrent.AbstractFuture$Sync -> wV:
    long serialVersionUID -> serialVersionUID
    java.lang.Object value -> a
    java.lang.Throwable exception -> b
    int tryAcquireShared(int) -> tryAcquireShared
    boolean tryReleaseShared(int) -> tryReleaseShared
    java.lang.Object get(long) -> a
    java.lang.Object get() -> a
    java.lang.Object getValue() -> e
    boolean isDone() -> b
    boolean isCancelled() -> c
    boolean wasInterrupted() -> d
    boolean set(java.lang.Object) -> a
    boolean setException(java.lang.Throwable) -> a
    boolean cancel(boolean) -> a
    boolean complete(java.lang.Object,java.lang.Throwable,int) -> a
com.google.common.util.concurrent.AbstractIdleService -> com.google.common.util.concurrent.AbstractIdleService:
    com.google.common.util.concurrent.Service delegate -> a
    void startUp() -> startUp
    void shutDown() -> shutDown
    java.util.concurrent.Executor executor() -> executor
    java.lang.String toString() -> toString
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.Throwable failureCause() -> failureCause
    java.lang.String serviceName() -> serviceName
com.google.common.util.concurrent.AbstractIdleService$1 -> wW:
    com.google.common.util.concurrent.AbstractIdleService this$0 -> a
    void doStart() -> doStart
    void doStop() -> doStop
com.google.common.util.concurrent.AbstractIdleService$1$1 -> wX:
    com.google.common.util.concurrent.AbstractIdleService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractIdleService$1$2 -> wY:
    com.google.common.util.concurrent.AbstractIdleService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractIdleService$2 -> wZ:
    com.google.common.util.concurrent.Service$State val$state -> a
    com.google.common.util.concurrent.AbstractIdleService this$0 -> b
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.AbstractListeningExecutorService -> com.google.common.util.concurrent.AbstractListeningExecutorService:
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    java.util.List invokeAll(java.util.Collection) -> invokeAll
    java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
com.google.common.util.concurrent.AbstractScheduledService -> com.google.common.util.concurrent.AbstractScheduledService:
    java.util.logging.Logger logger -> a
    com.google.common.util.concurrent.AbstractService delegate -> b
    void runOneIteration() -> runOneIteration
    void startUp() -> startUp
    void shutDown() -> shutDown
    com.google.common.util.concurrent.AbstractScheduledService$Scheduler scheduler() -> scheduler
    java.util.concurrent.ScheduledExecutorService executor() -> executor
    java.lang.String serviceName() -> serviceName
    java.lang.String toString() -> toString
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.Throwable failureCause() -> failureCause
    java.util.logging.Logger access$200() -> a
    com.google.common.util.concurrent.AbstractService access$400(com.google.common.util.concurrent.AbstractScheduledService) -> a
com.google.common.util.concurrent.AbstractScheduledService$1 -> xa:
    java.util.concurrent.Future runningTask -> b
    java.util.concurrent.ScheduledExecutorService executorService -> c
    java.util.concurrent.locks.ReentrantLock lock -> d
    java.lang.Runnable task -> e
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> a
    void doStart() -> doStart
    void doStop() -> doStop
    java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.AbstractScheduledService$1) -> a
    java.util.concurrent.Future access$302(com.google.common.util.concurrent.AbstractScheduledService$1,java.util.concurrent.Future) -> a
    java.util.concurrent.ScheduledExecutorService access$500(com.google.common.util.concurrent.AbstractScheduledService$1) -> b
    java.lang.Runnable access$600(com.google.common.util.concurrent.AbstractScheduledService$1) -> c
com.google.common.util.concurrent.AbstractScheduledService$1$1 -> xb:
    com.google.common.util.concurrent.AbstractScheduledService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$1$2 -> xc:
    com.google.common.util.concurrent.AbstractScheduledService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$1$3 -> xd:
    com.google.common.util.concurrent.AbstractScheduledService$1 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractScheduledService$2 -> xe:
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.AbstractScheduledService$3 -> xf:
    java.util.concurrent.ScheduledExecutorService val$executor -> a
    com.google.common.util.concurrent.AbstractScheduledService this$0 -> b
    void starting() -> starting
    void running() -> running
    void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler:
    com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule getNextSchedule() -> getNextSchedule
com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule -> com.google.common.util.concurrent.AbstractScheduledService$CustomScheduler$Schedule:
    long delay -> a
    java.util.concurrent.TimeUnit unit -> b
com.google.common.util.concurrent.AbstractScheduledService$Scheduler -> com.google.common.util.concurrent.AbstractScheduledService$Scheduler:
    com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedDelaySchedule(long,long,java.util.concurrent.TimeUnit) -> newFixedDelaySchedule
    com.google.common.util.concurrent.AbstractScheduledService$Scheduler newFixedRateSchedule(long,long,java.util.concurrent.TimeUnit) -> newFixedRateSchedule
    java.util.concurrent.Future schedule$6e26a758(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> a
com.google.common.util.concurrent.AbstractScheduledService$Scheduler$1 -> xg:
    long val$initialDelay -> a
    long val$delay -> b
    java.util.concurrent.TimeUnit val$unit -> c
    java.util.concurrent.Future schedule$6e26a758(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> a
com.google.common.util.concurrent.AbstractScheduledService$Scheduler$2 -> xh:
    long val$initialDelay -> a
    long val$period -> b
    java.util.concurrent.TimeUnit val$unit -> c
    java.util.concurrent.Future schedule$6e26a758(java.util.concurrent.ScheduledExecutorService,java.lang.Runnable) -> a
com.google.common.util.concurrent.AbstractService -> com.google.common.util.concurrent.AbstractService:
    java.util.logging.Logger logger -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    com.google.common.util.concurrent.AbstractService$Transition startup -> c
    com.google.common.util.concurrent.AbstractService$Transition shutdown -> d
    java.util.List listeners -> e
    java.util.Queue queuedListeners -> f
    com.google.common.util.concurrent.AbstractService$StateSnapshot snapshot -> g
    void doStart() -> doStart
    void doStop() -> doStop
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    void notifyStarted() -> notifyStarted
    void notifyStopped() -> notifyStopped
    void notifyFailed(java.lang.Throwable) -> notifyFailed
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    java.lang.Throwable failureCause() -> failureCause
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.String toString() -> toString
    void executeListeners() -> b
    void running() -> c
    void stopping(com.google.common.util.concurrent.Service$State) -> a
    void terminated(com.google.common.util.concurrent.Service$State) -> b
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> a
    com.google.common.util.concurrent.AbstractService$Transition access$100(com.google.common.util.concurrent.AbstractService) -> a
    com.google.common.util.concurrent.AbstractService$Transition access$200(com.google.common.util.concurrent.AbstractService) -> b
    java.util.logging.Logger access$300() -> a
com.google.common.util.concurrent.AbstractService$1 -> xi:
    com.google.common.util.concurrent.AbstractService this$0 -> a
    void starting() -> starting
    void running() -> running
    void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.AbstractService$2 -> xj:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.AbstractService this$0 -> b
    void run() -> run
com.google.common.util.concurrent.AbstractService$2$1 -> xk:
    com.google.common.util.concurrent.AbstractService$2 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractService$3 -> xl:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.AbstractService this$0 -> b
    void run() -> run
com.google.common.util.concurrent.AbstractService$3$1 -> xm:
    com.google.common.util.concurrent.AbstractService$3 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractService$4 -> xn:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.Service$State val$from -> b
    com.google.common.util.concurrent.AbstractService this$0 -> c
    void run() -> run
com.google.common.util.concurrent.AbstractService$4$1 -> xo:
    com.google.common.util.concurrent.AbstractService$4 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractService$5 -> xp:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.Service$State val$from -> b
    com.google.common.util.concurrent.AbstractService this$0 -> c
    void run() -> run
com.google.common.util.concurrent.AbstractService$5$1 -> xq:
    com.google.common.util.concurrent.AbstractService$5 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractService$6 -> xr:
    com.google.common.util.concurrent.AbstractService$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.Service$State val$from -> b
    java.lang.Throwable val$cause -> c
    com.google.common.util.concurrent.AbstractService this$0 -> d
    void run() -> run
com.google.common.util.concurrent.AbstractService$6$1 -> xs:
    com.google.common.util.concurrent.AbstractService$6 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.AbstractService$7 -> xt:
    int[] $SwitchMap$com$google$common$util$concurrent$Service$State -> a
com.google.common.util.concurrent.AbstractService$ListenerExecutorPair -> xu:
    com.google.common.util.concurrent.Service$Listener listener -> a
    java.util.concurrent.Executor executor -> b
    void execute(java.lang.Runnable) -> a
com.google.common.util.concurrent.AbstractService$StateSnapshot -> xv:
    com.google.common.util.concurrent.Service$State state -> a
    boolean shutdownWhenStartupFinishes -> b
    java.lang.Throwable failure -> c
com.google.common.util.concurrent.AbstractService$Transition -> xw:
    com.google.common.util.concurrent.AbstractService this$0 -> a
    com.google.common.util.concurrent.Service$State get(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
com.google.common.util.concurrent.AsyncFunction -> com.google.common.util.concurrent.AsyncFunction:
    com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.AtomicDouble -> com.google.common.util.concurrent.AtomicDouble:
    long serialVersionUID -> serialVersionUID
    long value -> a
    java.util.concurrent.atomic.AtomicLongFieldUpdater updater -> b
    double get() -> get
    void set(double) -> set
    void lazySet(double) -> lazySet
    double getAndSet(double) -> getAndSet
    boolean compareAndSet(double,double) -> compareAndSet
    boolean weakCompareAndSet(double,double) -> weakCompareAndSet
    double getAndAdd(double) -> getAndAdd
    double addAndGet(double) -> addAndGet
    java.lang.String toString() -> toString
    int intValue() -> intValue
    long longValue() -> longValue
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.util.concurrent.AtomicDoubleArray -> com.google.common.util.concurrent.AtomicDoubleArray:
    long serialVersionUID -> serialVersionUID
    java.util.concurrent.atomic.AtomicLongArray longs -> a
    int length() -> length
    double get(int) -> get
    void set(int,double) -> set
    void lazySet(int,double) -> lazySet
    double getAndSet(int,double) -> getAndSet
    boolean compareAndSet(int,double,double) -> compareAndSet
    boolean weakCompareAndSet(int,double,double) -> weakCompareAndSet
    double getAndAdd(int,double) -> getAndAdd
    double addAndGet(int,double) -> addAndGet
    java.lang.String toString() -> toString
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.google.common.util.concurrent.AtomicLongMap -> com.google.common.util.concurrent.AtomicLongMap:
    java.util.concurrent.ConcurrentHashMap map -> a
    java.util.Map asMap -> b
    com.google.common.util.concurrent.AtomicLongMap create() -> create
    com.google.common.util.concurrent.AtomicLongMap create(java.util.Map) -> create
    long get(java.lang.Object) -> get
    long incrementAndGet(java.lang.Object) -> incrementAndGet
    long decrementAndGet(java.lang.Object) -> decrementAndGet
    long addAndGet(java.lang.Object,long) -> addAndGet
    long getAndIncrement(java.lang.Object) -> getAndIncrement
    long getAndDecrement(java.lang.Object) -> getAndDecrement
    long getAndAdd(java.lang.Object,long) -> getAndAdd
    long put(java.lang.Object,long) -> put
    void putAll(java.util.Map) -> putAll
    long remove(java.lang.Object) -> remove
    void removeAllZeros() -> removeAllZeros
    long sum() -> sum
    java.util.Map asMap() -> asMap
    boolean containsKey(java.lang.Object) -> containsKey
    int size() -> size
    boolean isEmpty() -> isEmpty
    void clear() -> clear
    java.lang.String toString() -> toString
com.google.common.util.concurrent.AtomicLongMap$1 -> xx:
    com.google.common.util.concurrent.AtomicLongMap this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Atomics -> com.google.common.util.concurrent.Atomics:
    java.util.concurrent.atomic.AtomicReference newReference() -> newReference
    java.util.concurrent.atomic.AtomicReference newReference(java.lang.Object) -> newReference
    java.util.concurrent.atomic.AtomicReferenceArray newReferenceArray(int) -> newReferenceArray
    java.util.concurrent.atomic.AtomicReferenceArray newReferenceArray(java.lang.Object[]) -> newReferenceArray
com.google.common.util.concurrent.Callables -> com.google.common.util.concurrent.Callables:
    java.util.concurrent.Callable returning(java.lang.Object) -> returning
com.google.common.util.concurrent.Callables$1 -> xy:
    java.lang.Object val$value -> a
    java.lang.Object call() -> call
com.google.common.util.concurrent.CheckedFuture -> com.google.common.util.concurrent.CheckedFuture:
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.CycleDetectingLockFactory -> com.google.common.util.concurrent.CycleDetectingLockFactory:
    java.util.Map lockGraphNodesPerType -> b
    java.util.logging.Logger logger -> c
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policy policy -> a
    java.lang.ThreadLocal acquiredLocks -> d
    com.google.common.util.concurrent.CycleDetectingLockFactory newInstance(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> newInstance
    java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String) -> newReentrantLock
    java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.String,boolean) -> newReentrantLock
    java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String) -> newReentrantReadWriteLock
    java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.String,boolean) -> newReentrantReadWriteLock
    com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering newInstanceWithExplicitOrdering(java.lang.Class,com.google.common.util.concurrent.CycleDetectingLockFactory$Policy) -> newInstanceWithExplicitOrdering
    java.util.logging.Logger access$100() -> a
    void access$600(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> a
    void access$700(com.google.common.util.concurrent.CycleDetectingLockFactory,com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock) -> b
com.google.common.util.concurrent.CycleDetectingLockFactory$1 -> xz:
    java.lang.Object initialValue() -> initialValue
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingLock -> xA:
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> a
    boolean isAcquiredByCurrentThread() -> b
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantLock -> xB:
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode lockGraphNode -> b
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> a
    boolean isAcquiredByCurrentThread() -> b
    void lock() -> lock
    void lockInterruptibly() -> lockInterruptibly
    boolean tryLock() -> tryLock
    boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock -> xC:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock readWriteLock -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> b
    void lock() -> lock
    void lockInterruptibly() -> lockInterruptibly
    boolean tryLock() -> tryLock
    boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock -> xD:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadLock readLock -> b
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock writeLock -> c
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode lockGraphNode -> d
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> a
    java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock() -> readLock
    java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock() -> writeLock
    com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode getLockGraphNode() -> a
    boolean isAcquiredByCurrentThread() -> b
    java.util.concurrent.locks.Lock writeLock() -> writeLock
    java.util.concurrent.locks.Lock readLock() -> readLock
com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantWriteLock -> xE:
    com.google.common.util.concurrent.CycleDetectingLockFactory$CycleDetectingReentrantReadWriteLock readWriteLock -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory this$0 -> b
    void lock() -> lock
    void lockInterruptibly() -> lockInterruptibly
    boolean tryLock() -> tryLock
    boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    void unlock() -> unlock
com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace -> xF:
    java.lang.StackTraceElement[] EMPTY_STACK_TRACE -> a
    java.util.Set EXCLUDED_CLASS_NAMES -> b
com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode -> xG:
    java.util.Map allowedPriorLocks -> a
    java.util.Map disallowedPriorLocks -> b
    java.lang.String lockName -> c
    java.lang.String getLockName() -> a
    void checkAcquiredLocks(com.google.common.util.concurrent.CycleDetectingLockFactory$Policy,java.util.List) -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace findPathTo(com.google.common.util.concurrent.CycleDetectingLockFactory$LockGraphNode,java.util.Set) -> a
com.google.common.util.concurrent.CycleDetectingLockFactory$OrderedLockGraphNodesCreator -> xH:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policies:
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies THROW -> THROW
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies WARN -> WARN
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies DISABLED -> DISABLED
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] $VALUES -> a
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies[] values() -> values
    com.google.common.util.concurrent.CycleDetectingLockFactory$Policies valueOf(java.lang.String) -> valueOf
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$1 -> xI:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$2 -> xJ:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policies$3 -> xK:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$Policy -> com.google.common.util.concurrent.CycleDetectingLockFactory$Policy:
    void handlePotentialDeadlock(com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException) -> handlePotentialDeadlock
com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException -> com.google.common.util.concurrent.CycleDetectingLockFactory$PotentialDeadlockException:
    com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace conflictingStackTrace -> c
    com.google.common.util.concurrent.CycleDetectingLockFactory$ExampleStackTrace getConflictingStackTrace() -> getConflictingStackTrace
    java.lang.String getMessage() -> getMessage
com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering -> com.google.common.util.concurrent.CycleDetectingLockFactory$WithExplicitOrdering:
    java.util.Map lockGraphNodes -> b
    java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.Enum) -> newReentrantLock
    java.util.concurrent.locks.ReentrantLock newReentrantLock(java.lang.Enum,boolean) -> newReentrantLock
    java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.Enum) -> newReentrantReadWriteLock
    java.util.concurrent.locks.ReentrantReadWriteLock newReentrantReadWriteLock(java.lang.Enum,boolean) -> newReentrantReadWriteLock
com.google.common.util.concurrent.ExecutionError -> com.google.common.util.concurrent.ExecutionError:
    long serialVersionUID -> serialVersionUID
com.google.common.util.concurrent.ExecutionList -> com.google.common.util.concurrent.ExecutionList:
    java.util.logging.Logger log -> a
    java.util.Queue runnables -> b
    boolean executed -> c
    void add(java.lang.Runnable,java.util.concurrent.Executor) -> add
    void execute() -> execute
com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair -> xL:
    java.lang.Runnable runnable -> a
    java.util.concurrent.Executor executor -> b
    void execute() -> a
com.google.common.util.concurrent.FakeTimeLimiter -> com.google.common.util.concurrent.FakeTimeLimiter:
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
com.google.common.util.concurrent.ForwardingBlockingQueue -> com.google.common.util.concurrent.ForwardingBlockingQueue:
    java.util.concurrent.BlockingQueue delegate() -> delegate
    int drainTo(java.util.Collection,int) -> drainTo
    int drainTo(java.util.Collection) -> drainTo
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    void put(java.lang.Object) -> put
    int remainingCapacity() -> remainingCapacity
    java.lang.Object take() -> take
    java.util.Queue delegate() -> delegate
    java.util.Collection delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingCheckedFuture -> com.google.common.util.concurrent.ForwardingCheckedFuture:
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
    com.google.common.util.concurrent.CheckedFuture delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture -> com.google.common.util.concurrent.ForwardingCheckedFuture$SimpleForwardingCheckedFuture:
    com.google.common.util.concurrent.CheckedFuture delegate -> a
    com.google.common.util.concurrent.CheckedFuture delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingExecutorService -> com.google.common.util.concurrent.ForwardingExecutorService:
    java.util.concurrent.ExecutorService delegate() -> delegate
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    java.util.List invokeAll(java.util.Collection) -> invokeAll
    java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    boolean isShutdown() -> isShutdown
    boolean isTerminated() -> isTerminated
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    void execute(java.lang.Runnable) -> execute
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture:
    java.util.concurrent.Future delegate() -> delegate
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture -> com.google.common.util.concurrent.ForwardingFuture$SimpleForwardingFuture:
    java.util.concurrent.Future delegate -> a
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture:
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture -> com.google.common.util.concurrent.ForwardingListenableFuture$SimpleForwardingListenableFuture:
    com.google.common.util.concurrent.ListenableFuture delegate -> a
    com.google.common.util.concurrent.ListenableFuture delegate() -> delegate
    java.util.concurrent.Future delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingListeningExecutorService -> com.google.common.util.concurrent.ForwardingListeningExecutorService:
    com.google.common.util.concurrent.ListeningExecutorService delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    java.util.concurrent.ExecutorService delegate() -> delegate
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.ForwardingService -> com.google.common.util.concurrent.ForwardingService:
    com.google.common.util.concurrent.Service delegate() -> delegate
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    boolean isRunning() -> isRunning
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
    java.lang.Throwable failureCause() -> failureCause
    com.google.common.util.concurrent.Service$State standardStartAndWait() -> standardStartAndWait
    com.google.common.util.concurrent.Service$State standardStopAndWait() -> standardStopAndWait
    java.lang.Object delegate() -> delegate
com.google.common.util.concurrent.FutureCallback -> com.google.common.util.concurrent.FutureCallback:
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
com.google.common.util.concurrent.FutureFallback -> com.google.common.util.concurrent.FutureFallback:
    com.google.common.util.concurrent.ListenableFuture create(java.lang.Throwable) -> create
com.google.common.util.concurrent.Futures -> com.google.common.util.concurrent.Futures:
    com.google.common.util.concurrent.AsyncFunction DEREFERENCER -> a
    com.google.common.collect.Ordering WITH_STRING_PARAM_FIRST -> b
    com.google.common.util.concurrent.CheckedFuture makeChecked(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> makeChecked
    com.google.common.util.concurrent.ListenableFuture immediateFuture(java.lang.Object) -> immediateFuture
    com.google.common.util.concurrent.CheckedFuture immediateCheckedFuture(java.lang.Object) -> immediateCheckedFuture
    com.google.common.util.concurrent.ListenableFuture immediateFailedFuture(java.lang.Throwable) -> immediateFailedFuture
    com.google.common.util.concurrent.ListenableFuture immediateCancelledFuture() -> immediateCancelledFuture
    com.google.common.util.concurrent.CheckedFuture immediateFailedCheckedFuture(java.lang.Exception) -> immediateFailedCheckedFuture
    com.google.common.util.concurrent.ListenableFuture withFallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureFallback) -> withFallback
    com.google.common.util.concurrent.ListenableFuture withFallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureFallback,java.util.concurrent.Executor) -> withFallback
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction) -> transform
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.AsyncFunction,java.util.concurrent.Executor) -> transform
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function) -> transform
    com.google.common.util.concurrent.ListenableFuture transform(com.google.common.util.concurrent.ListenableFuture,com.google.common.base.Function,java.util.concurrent.Executor) -> transform
    java.util.concurrent.Future lazyTransform(java.util.concurrent.Future,com.google.common.base.Function) -> lazyTransform
    com.google.common.util.concurrent.ListenableFuture dereference(com.google.common.util.concurrent.ListenableFuture) -> dereference
    com.google.common.util.concurrent.ListenableFuture allAsList(com.google.common.util.concurrent.ListenableFuture[]) -> allAsList
    com.google.common.util.concurrent.ListenableFuture allAsList(java.lang.Iterable) -> allAsList
    com.google.common.util.concurrent.ListenableFuture successfulAsList(com.google.common.util.concurrent.ListenableFuture[]) -> successfulAsList
    com.google.common.util.concurrent.ListenableFuture successfulAsList(java.lang.Iterable) -> successfulAsList
    void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback) -> addCallback
    void addCallback(com.google.common.util.concurrent.ListenableFuture,com.google.common.util.concurrent.FutureCallback,java.util.concurrent.Executor) -> addCallback
    java.lang.Object get(java.util.concurrent.Future,java.lang.Class) -> get
    java.lang.Object get(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit,java.lang.Class) -> get
    void wrapAndThrowExceptionOrError(java.lang.Throwable,java.lang.Class) -> a
    java.lang.Object getUnchecked(java.util.concurrent.Future) -> getUnchecked
    java.lang.Exception newWithCause(java.lang.Class,java.lang.Throwable) -> a
    java.lang.Object newFromConstructor(java.lang.reflect.Constructor,java.lang.Throwable) -> a
    com.google.common.util.concurrent.ListenableFuture listFuture(com.google.common.collect.ImmutableList,boolean,java.util.concurrent.Executor) -> a
com.google.common.util.concurrent.Futures$1 -> xM:
    com.google.common.base.Function val$function -> a
    com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$2 -> xN:
    java.util.concurrent.Future val$input -> a
    com.google.common.base.Function val$function -> b
    boolean cancel(boolean) -> cancel
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    java.lang.Object applyTransformation(java.lang.Object) -> a
com.google.common.util.concurrent.Futures$3 -> xO:
    com.google.common.util.concurrent.ListenableFuture apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$4 -> xP:
    com.google.common.util.concurrent.ListenableFuture val$future -> a
    com.google.common.util.concurrent.FutureCallback val$callback -> b
    void run() -> run
com.google.common.util.concurrent.Futures$5 -> xQ:
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.Futures$6 -> xR:
    java.lang.Object combine(java.util.List) -> a
com.google.common.util.concurrent.Futures$ChainingListenableFuture -> xS:
    com.google.common.util.concurrent.AsyncFunction function -> a
    com.google.common.util.concurrent.ListenableFuture inputFuture -> b
    com.google.common.util.concurrent.ListenableFuture outputFuture -> c
    java.util.concurrent.CountDownLatch outputCreated -> d
    boolean cancel(boolean) -> cancel
    void cancel(java.util.concurrent.Future,boolean) -> a
    void run() -> run
    com.google.common.util.concurrent.ListenableFuture access$302(com.google.common.util.concurrent.Futures$ChainingListenableFuture,com.google.common.util.concurrent.ListenableFuture) -> a
com.google.common.util.concurrent.Futures$ChainingListenableFuture$1 -> xT:
    com.google.common.util.concurrent.ListenableFuture val$outputFuture -> a
    com.google.common.util.concurrent.Futures$ChainingListenableFuture this$0 -> b
    void run() -> run
com.google.common.util.concurrent.Futures$CombinedFuture -> xU:
    com.google.common.collect.ImmutableCollection futures -> a
    boolean allMustSucceed -> b
    java.util.concurrent.atomic.AtomicInteger remaining -> c
    com.google.common.util.concurrent.Futures$FutureCombiner combiner -> d
    java.util.List values -> e
    void init(java.util.concurrent.Executor) -> a
    void access$400(com.google.common.util.concurrent.Futures$CombinedFuture,int,java.util.concurrent.Future) -> a
com.google.common.util.concurrent.Futures$CombinedFuture$1 -> xV:
    com.google.common.util.concurrent.Futures$CombinedFuture this$0 -> a
    void run() -> run
com.google.common.util.concurrent.Futures$CombinedFuture$2 -> xW:
    int val$index -> a
    com.google.common.util.concurrent.ListenableFuture val$listenable -> b
    com.google.common.util.concurrent.Futures$CombinedFuture this$0 -> c
    void run() -> run
com.google.common.util.concurrent.Futures$FallbackFuture -> xX:
    com.google.common.util.concurrent.ListenableFuture running -> a
    boolean cancel(boolean) -> cancel
    com.google.common.util.concurrent.ListenableFuture access$102(com.google.common.util.concurrent.Futures$FallbackFuture,com.google.common.util.concurrent.ListenableFuture) -> a
    com.google.common.util.concurrent.ListenableFuture access$100(com.google.common.util.concurrent.Futures$FallbackFuture) -> a
com.google.common.util.concurrent.Futures$FallbackFuture$1 -> xY:
    com.google.common.util.concurrent.FutureFallback val$fallback -> a
    com.google.common.util.concurrent.Futures$FallbackFuture this$0 -> b
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
com.google.common.util.concurrent.Futures$FallbackFuture$1$1 -> xZ:
    com.google.common.util.concurrent.Futures$FallbackFuture$1 this$1 -> a
    void onSuccess(java.lang.Object) -> onSuccess
    void onFailure(java.lang.Throwable) -> onFailure
com.google.common.util.concurrent.Futures$FutureCombiner -> ya:
    java.lang.Object combine(java.util.List) -> a
com.google.common.util.concurrent.Futures$ImmediateCancelledFuture -> yb:
    java.util.concurrent.CancellationException thrown -> a
    boolean isCancelled() -> isCancelled
    java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$ImmediateFailedCheckedFuture -> yc:
    java.lang.Exception thrown -> a
    java.lang.Object get() -> get
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.Futures$ImmediateFailedFuture -> yd:
    java.lang.Throwable thrown -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$ImmediateFuture -> ye:
    java.util.logging.Logger log -> a
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    boolean cancel(boolean) -> cancel
    java.lang.Object get() -> get
    java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    boolean isCancelled() -> isCancelled
    boolean isDone() -> isDone
com.google.common.util.concurrent.Futures$ImmediateSuccessfulCheckedFuture -> yf:
    java.lang.Object value -> a
    java.lang.Object get() -> get
    java.lang.Object checkedGet() -> checkedGet
    java.lang.Object checkedGet(long,java.util.concurrent.TimeUnit) -> checkedGet
com.google.common.util.concurrent.Futures$ImmediateSuccessfulFuture -> yg:
    java.lang.Object value -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.Futures$MappingCheckedFuture -> yh:
    com.google.common.base.Function mapper -> a
    java.lang.Exception mapException(java.lang.Exception) -> mapException
com.google.common.util.concurrent.JdkFutureAdapters -> com.google.common.util.concurrent.JdkFutureAdapters:
    com.google.common.util.concurrent.ListenableFuture listenInPoolThread(java.util.concurrent.Future) -> listenInPoolThread
    com.google.common.util.concurrent.ListenableFuture listenInPoolThread(java.util.concurrent.Future,java.util.concurrent.Executor) -> listenInPoolThread
com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter -> yi:
    java.util.concurrent.ThreadFactory threadFactory -> a
    java.util.concurrent.Executor defaultAdapterExecutor -> b
    java.util.concurrent.Executor adapterExecutor -> c
    com.google.common.util.concurrent.ExecutionList executionList -> d
    java.util.concurrent.atomic.AtomicBoolean hasListeners -> e
    java.util.concurrent.Future delegate -> f
    java.util.concurrent.Future delegate() -> delegate
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    java.lang.Object delegate() -> delegate
    java.util.concurrent.Future access$000(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> a
    com.google.common.util.concurrent.ExecutionList access$100(com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter) -> b
com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter$1 -> yj:
    com.google.common.util.concurrent.JdkFutureAdapters$ListenableFutureAdapter this$0 -> a
    void run() -> run
com.google.common.util.concurrent.ListenableFuture -> com.google.common.util.concurrent.ListenableFuture:
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.ListenableFutureTask -> com.google.common.util.concurrent.ListenableFutureTask:
    com.google.common.util.concurrent.ExecutionList executionList -> a
    com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable) -> create
    com.google.common.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object) -> create
    void addListener(java.lang.Runnable,java.util.concurrent.Executor) -> addListener
    void done() -> done
com.google.common.util.concurrent.ListeningExecutorService -> com.google.common.util.concurrent.ListeningExecutorService:
    com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable) -> submit
    com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    java.util.List invokeAll(java.util.Collection) -> invokeAll
    java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
com.google.common.util.concurrent.ListeningScheduledExecutorService -> com.google.common.util.concurrent.ListeningScheduledExecutorService:
com.google.common.util.concurrent.Monitor -> com.google.common.util.concurrent.Monitor:
    boolean fair -> a
    java.util.concurrent.locks.ReentrantLock lock -> b
    java.util.ArrayList activeGuards -> c
    void enter() -> enter
    void enterInterruptibly() -> enterInterruptibly
    boolean enter(long,java.util.concurrent.TimeUnit) -> enter
    boolean enterInterruptibly(long,java.util.concurrent.TimeUnit) -> enterInterruptibly
    boolean tryEnter() -> tryEnter
    void enterWhen(com.google.common.util.concurrent.Monitor$Guard) -> enterWhen
    void enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> enterWhenUninterruptibly
    boolean enterWhen(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterWhen
    boolean enterWhenUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterWhenUninterruptibly
    boolean enterIf(com.google.common.util.concurrent.Monitor$Guard) -> enterIf
    boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> enterIfInterruptibly
    boolean enterIf(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterIf
    boolean enterIfInterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> enterIfInterruptibly
    boolean tryEnterIf(com.google.common.util.concurrent.Monitor$Guard) -> tryEnterIf
    void waitFor(com.google.common.util.concurrent.Monitor$Guard) -> waitFor
    void waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard) -> waitForUninterruptibly
    boolean waitFor(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> waitFor
    boolean waitForUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,java.util.concurrent.TimeUnit) -> waitForUninterruptibly
    void leave() -> leave
    boolean isFair() -> isFair
    boolean isOccupied() -> isOccupied
    boolean isOccupiedByCurrentThread() -> isOccupiedByCurrentThread
    int getOccupiedDepth() -> getOccupiedDepth
    int getQueueLength() -> getQueueLength
    boolean hasQueuedThreads() -> hasQueuedThreads
    boolean hasQueuedThread(java.lang.Thread) -> hasQueuedThread
    boolean hasWaiters(com.google.common.util.concurrent.Monitor$Guard) -> hasWaiters
    int getWaitQueueLength(com.google.common.util.concurrent.Monitor$Guard) -> getWaitQueueLength
    void signalConditionsOfSatisfiedGuards(com.google.common.util.concurrent.Monitor$Guard) -> a
    void incrementWaiters(com.google.common.util.concurrent.Monitor$Guard) -> b
    void decrementWaiters(com.google.common.util.concurrent.Monitor$Guard) -> c
    void waitInterruptibly(com.google.common.util.concurrent.Monitor$Guard,boolean) -> a
    void waitUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,boolean) -> b
    boolean waitInterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,boolean) -> a
    boolean waitUninterruptibly(com.google.common.util.concurrent.Monitor$Guard,long,boolean) -> b
    java.util.concurrent.locks.ReentrantLock access$000(com.google.common.util.concurrent.Monitor) -> a
com.google.common.util.concurrent.Monitor$Guard -> com.google.common.util.concurrent.Monitor$Guard:
    com.google.common.util.concurrent.Monitor monitor -> a
    java.util.concurrent.locks.Condition condition -> b
    int waiterCount -> c
    boolean isSatisfied() -> isSatisfied
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.common.util.concurrent.MoreExecutors -> com.google.common.util.concurrent.MoreExecutors:
    java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingExecutorService
    java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> getExitingScheduledExecutorService
    void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> addDelayedShutdownHook
    java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor) -> getExitingExecutorService
    java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor) -> getExitingScheduledExecutorService
    com.google.common.util.concurrent.ListeningExecutorService sameThreadExecutor() -> sameThreadExecutor
    com.google.common.util.concurrent.ListeningExecutorService listeningDecorator(java.util.concurrent.ExecutorService) -> listeningDecorator
    com.google.common.util.concurrent.ListeningScheduledExecutorService listeningDecorator(java.util.concurrent.ScheduledExecutorService) -> listeningDecorator
    java.lang.Object invokeAnyImpl(com.google.common.util.concurrent.ListeningExecutorService,java.util.Collection,boolean,long) -> a
    com.google.common.util.concurrent.ListenableFuture submitAndAddQueueListener(com.google.common.util.concurrent.ListeningExecutorService,java.util.concurrent.Callable,java.util.concurrent.BlockingQueue) -> a
    java.util.concurrent.ThreadFactory platformThreadFactory() -> platformThreadFactory
    boolean isAppEngine() -> a
    java.lang.Thread newThread(java.lang.String,java.lang.Runnable) -> a
    void access$000(java.util.concurrent.ThreadPoolExecutor) -> a
com.google.common.util.concurrent.MoreExecutors$1 -> yk:
    java.util.concurrent.BlockingQueue val$queue -> a
    com.google.common.util.concurrent.ListenableFuture val$future -> b
    void run() -> run
com.google.common.util.concurrent.MoreExecutors$Application -> yl:
    java.util.concurrent.ExecutorService getExitingExecutorService(java.util.concurrent.ThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> a
    java.util.concurrent.ScheduledExecutorService getExitingScheduledExecutorService(java.util.concurrent.ScheduledThreadPoolExecutor,long,java.util.concurrent.TimeUnit) -> a
    void addDelayedShutdownHook(java.util.concurrent.ExecutorService,long,java.util.concurrent.TimeUnit) -> a
com.google.common.util.concurrent.MoreExecutors$Application$1 -> ym:
    java.util.concurrent.ExecutorService val$service -> a
    long val$terminationTimeout -> b
    java.util.concurrent.TimeUnit val$timeUnit -> c
    com.google.common.util.concurrent.MoreExecutors$Application this$0 -> d
    void run() -> run
com.google.common.util.concurrent.MoreExecutors$ListeningDecorator -> yn:
    java.util.concurrent.ExecutorService delegate -> a
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    boolean isShutdown() -> isShutdown
    boolean isTerminated() -> isTerminated
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    void execute(java.lang.Runnable) -> execute
com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService -> yo:
    java.util.concurrent.locks.Lock lock -> a
    java.util.concurrent.locks.Condition termination -> b
    int runningTasks -> c
    boolean shutdown -> d
    void execute(java.lang.Runnable) -> execute
    boolean isShutdown() -> isShutdown
    void shutdown() -> shutdown
    java.util.List shutdownNow() -> shutdownNow
    boolean isTerminated() -> isTerminated
    boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    void endTask() -> a
com.google.common.util.concurrent.MoreExecutors$ScheduledListeningDecorator -> yp:
    java.util.concurrent.ScheduledExecutorService delegate -> b
    java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
com.google.common.util.concurrent.RateLimiter -> com.google.common.util.concurrent.RateLimiter:
    com.google.common.util.concurrent.RateLimiter$SleepingTicker ticker -> d
    long offsetNanos -> e
    double storedPermits -> a
    double maxPermits -> b
    double stableIntervalMicros -> c
    java.lang.Object mutex -> f
    long nextFreeTicketMicros -> g
    com.google.common.util.concurrent.RateLimiter create(double) -> create
    com.google.common.util.concurrent.RateLimiter create(double,long,java.util.concurrent.TimeUnit) -> create
    void setRate(double) -> setRate
    void doSetRate(double,double) -> a
    double getRate() -> getRate
    void acquire() -> acquire
    void acquire(int) -> acquire
    boolean tryAcquire(long,java.util.concurrent.TimeUnit) -> tryAcquire
    boolean tryAcquire(int) -> tryAcquire
    boolean tryAcquire() -> tryAcquire
    boolean tryAcquire(int,long,java.util.concurrent.TimeUnit) -> tryAcquire
    void checkPermits(int) -> a
    long reserveNextTicket(double,long) -> a
    long storedPermitsToWaitTime(double,double) -> b
    void resync(long) -> a
    long readSafeMicros() -> a
    java.lang.String toString() -> toString
com.google.common.util.concurrent.RateLimiter$Bursty -> yq:
    void doSetRate(double,double) -> a
    long storedPermitsToWaitTime(double,double) -> b
com.google.common.util.concurrent.RateLimiter$SleepingTicker -> yr:
    com.google.common.util.concurrent.RateLimiter$SleepingTicker SYSTEM_TICKER -> a
    void sleepMicrosUninterruptibly(long) -> a
com.google.common.util.concurrent.RateLimiter$SleepingTicker$1 -> ys:
    long read() -> read
    void sleepMicrosUninterruptibly(long) -> a
com.google.common.util.concurrent.RateLimiter$WarmingUp -> yt:
    long warmupPeriodMicros -> d
    double slope -> e
    double halfPermits -> f
    void doSetRate(double,double) -> a
    long storedPermitsToWaitTime(double,double) -> b
    double permitsToTime(double) -> a
com.google.common.util.concurrent.Service -> com.google.common.util.concurrent.Service:
    com.google.common.util.concurrent.ListenableFuture start() -> start
    com.google.common.util.concurrent.Service$State startAndWait() -> startAndWait
    boolean isRunning() -> isRunning
    com.google.common.util.concurrent.Service$State state() -> state
    com.google.common.util.concurrent.ListenableFuture stop() -> stop
    com.google.common.util.concurrent.Service$State stopAndWait() -> stopAndWait
    java.lang.Throwable failureCause() -> failureCause
    void addListener(com.google.common.util.concurrent.Service$Listener,java.util.concurrent.Executor) -> addListener
com.google.common.util.concurrent.Service$Listener -> com.google.common.util.concurrent.Service$Listener:
    void starting() -> starting
    void running() -> running
    void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
com.google.common.util.concurrent.Service$State -> com.google.common.util.concurrent.Service$State:
    com.google.common.util.concurrent.Service$State NEW -> NEW
    com.google.common.util.concurrent.Service$State STARTING -> STARTING
    com.google.common.util.concurrent.Service$State RUNNING -> RUNNING
    com.google.common.util.concurrent.Service$State STOPPING -> STOPPING
    com.google.common.util.concurrent.Service$State TERMINATED -> TERMINATED
    com.google.common.util.concurrent.Service$State FAILED -> FAILED
    com.google.common.util.concurrent.Service$State[] $VALUES -> a
    com.google.common.util.concurrent.Service$State[] values() -> values
    com.google.common.util.concurrent.Service$State valueOf(java.lang.String) -> valueOf
com.google.common.util.concurrent.ServiceManager -> com.google.common.util.concurrent.ServiceManager:
    java.util.logging.Logger logger -> a
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState state -> b
    com.google.common.collect.ImmutableMap services -> c
    void addListener(com.google.common.util.concurrent.ServiceManager$Listener,java.util.concurrent.Executor) -> addListener
    com.google.common.util.concurrent.ServiceManager startAsync() -> startAsync
    void awaitHealthy() -> awaitHealthy
    void awaitHealthy(long,java.util.concurrent.TimeUnit) -> awaitHealthy
    com.google.common.util.concurrent.ServiceManager stopAsync() -> stopAsync
    void awaitStopped() -> awaitStopped
    void awaitStopped(long,java.util.concurrent.TimeUnit) -> awaitStopped
    boolean isHealthy() -> isHealthy
    com.google.common.collect.ImmutableMultimap servicesByState() -> servicesByState
    com.google.common.collect.ImmutableMap startupTimes() -> startupTimes
    java.lang.String toString() -> toString
    java.util.logging.Logger access$100() -> a
com.google.common.util.concurrent.ServiceManager$1 -> yu:
    com.google.common.util.concurrent.ServiceManager this$0 -> a
    java.lang.Object apply(java.lang.Object) -> apply
com.google.common.util.concurrent.ServiceManager$Listener -> com.google.common.util.concurrent.ServiceManager$Listener:
    void healthy() -> healthy
    void stopped() -> stopped
    void failure(com.google.common.util.concurrent.Service) -> failure
com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair -> yv:
    com.google.common.util.concurrent.ServiceManager$Listener listener -> a
    java.util.concurrent.Executor executor -> b
    void execute(java.lang.Runnable) -> a
com.google.common.util.concurrent.ServiceManager$ServiceListener -> yw:
    com.google.common.base.Stopwatch watch -> a
    com.google.common.util.concurrent.Service service -> b
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState state -> c
    void starting() -> starting
    void running() -> running
    void stopping(com.google.common.util.concurrent.Service$State) -> stopping
    void terminated(com.google.common.util.concurrent.Service$State) -> terminated
    void failed(com.google.common.util.concurrent.Service$State,java.lang.Throwable) -> failed
    void finishedStarting(boolean) -> a
    void start() -> a
    void startTimer() -> c
    long startupTimeMillis() -> b
com.google.common.util.concurrent.ServiceManager$ServiceManagerState -> yx:
    com.google.common.util.concurrent.Monitor monitor -> a
    int numberOfServices -> b
    int unstartedServices -> c
    int unstoppedServices -> d
    com.google.common.util.concurrent.Monitor$Guard awaitHealthGuard -> e
    com.google.common.util.concurrent.Monitor$Guard stoppedGuard -> f
    java.util.List listeners -> g
    java.util.Queue queuedListeners -> h
    boolean awaitHealthy(long,java.util.concurrent.TimeUnit) -> a
    boolean awaitStopped(long,java.util.concurrent.TimeUnit) -> b
    void serviceFinishedStarting(com.google.common.util.concurrent.Service,boolean) -> a
    void serviceFailed(com.google.common.util.concurrent.Service) -> a
    void serviceStopped(com.google.common.util.concurrent.Service) -> b
    void access$000(com.google.common.util.concurrent.ServiceManager$ServiceManagerState) -> a
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$1 -> yy:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> d
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$2 -> yz:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> d
    boolean isSatisfied() -> isSatisfied
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$3 -> yA:
    com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> b
    void run() -> run
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$3$1 -> yB:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState$3 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$4 -> yC:
    com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.Service val$service -> b
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> c
    void run() -> run
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$4$1 -> yD:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState$4 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$5 -> yE:
    com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair val$pair -> a
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState this$0 -> b
    void run() -> run
com.google.common.util.concurrent.ServiceManager$ServiceManagerState$5$1 -> yF:
    com.google.common.util.concurrent.ServiceManager$ServiceManagerState$5 this$1 -> a
    void run() -> run
com.google.common.util.concurrent.SettableFuture -> com.google.common.util.concurrent.SettableFuture:
    com.google.common.util.concurrent.SettableFuture create() -> create
    boolean set(java.lang.Object) -> set
    boolean setException(java.lang.Throwable) -> setException
com.google.common.util.concurrent.SimpleTimeLimiter -> com.google.common.util.concurrent.SimpleTimeLimiter:
    java.util.concurrent.ExecutorService executor -> a
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
    java.lang.Exception throwCause(java.lang.Exception,boolean) -> b
    java.util.Set findInterruptibleMethods(java.lang.Class) -> a
    java.lang.Exception access$000(java.lang.Exception,boolean) -> a
com.google.common.util.concurrent.SimpleTimeLimiter$1 -> yG:
    java.lang.Object val$target -> a
    long val$timeoutDuration -> b
    java.util.concurrent.TimeUnit val$timeoutUnit -> c
    java.util.Set val$interruptibleMethods -> d
    com.google.common.util.concurrent.SimpleTimeLimiter this$0 -> e
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.google.common.util.concurrent.SimpleTimeLimiter$1$1 -> yH:
    java.lang.reflect.Method val$method -> a
    java.lang.Object[] val$args -> b
    com.google.common.util.concurrent.SimpleTimeLimiter$1 this$1 -> c
    java.lang.Object call() -> call
com.google.common.util.concurrent.Striped -> com.google.common.util.concurrent.Striped:
    com.google.common.base.Supplier READ_WRITE_LOCK_SUPPLIER -> a
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object getAt(int) -> getAt
    int indexFor(java.lang.Object) -> a
    int size() -> size
    java.lang.Iterable bulkGet(java.lang.Iterable) -> bulkGet
    com.google.common.util.concurrent.Striped lock(int) -> lock
    com.google.common.util.concurrent.Striped lazyWeakLock(int) -> lazyWeakLock
    com.google.common.util.concurrent.Striped semaphore(int,int) -> semaphore
    com.google.common.util.concurrent.Striped lazyWeakSemaphore(int,int) -> lazyWeakSemaphore
    com.google.common.util.concurrent.Striped readWriteLock(int) -> readWriteLock
    com.google.common.util.concurrent.Striped lazyWeakReadWriteLock(int) -> lazyWeakReadWriteLock
com.google.common.util.concurrent.Striped$1 -> yI:
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$2 -> yJ:
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$3 -> yK:
    int val$permits -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$4 -> yL:
    int val$permits -> a
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$5 -> yM:
    java.lang.Object get() -> get
com.google.common.util.concurrent.Striped$CompactStriped -> yN:
    java.lang.Object[] array -> a
    java.lang.Object getAt(int) -> getAt
    int size() -> size
com.google.common.util.concurrent.Striped$LazyStriped -> yO:
    java.util.concurrent.ConcurrentMap cache -> a
    int size -> b
    java.lang.Object getAt(int) -> getAt
    int size() -> size
com.google.common.util.concurrent.Striped$PaddedLock -> yP:
com.google.common.util.concurrent.Striped$PaddedSemaphore -> yQ:
com.google.common.util.concurrent.Striped$PowerOfTwoStriped -> yR:
    int mask -> c
    int indexFor(java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> get
com.google.common.util.concurrent.ThreadFactoryBuilder -> com.google.common.util.concurrent.ThreadFactoryBuilder:
    java.lang.String nameFormat -> a
    java.lang.Boolean daemon -> b
    java.lang.Integer priority -> c
    java.lang.Thread$UncaughtExceptionHandler uncaughtExceptionHandler -> d
    java.util.concurrent.ThreadFactory backingThreadFactory -> e
    com.google.common.util.concurrent.ThreadFactoryBuilder setNameFormat(java.lang.String) -> setNameFormat
    com.google.common.util.concurrent.ThreadFactoryBuilder setDaemon(boolean) -> setDaemon
    com.google.common.util.concurrent.ThreadFactoryBuilder setPriority(int) -> setPriority
    com.google.common.util.concurrent.ThreadFactoryBuilder setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setUncaughtExceptionHandler
    com.google.common.util.concurrent.ThreadFactoryBuilder setThreadFactory(java.util.concurrent.ThreadFactory) -> setThreadFactory
    java.util.concurrent.ThreadFactory build() -> build
com.google.common.util.concurrent.ThreadFactoryBuilder$1 -> yS:
    java.util.concurrent.ThreadFactory val$backingThreadFactory -> a
    java.lang.String val$nameFormat -> b
    java.util.concurrent.atomic.AtomicLong val$count -> c
    java.lang.Boolean val$daemon -> d
    java.lang.Integer val$priority -> e
    java.lang.Thread$UncaughtExceptionHandler val$uncaughtExceptionHandler -> f
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.google.common.util.concurrent.TimeLimiter -> com.google.common.util.concurrent.TimeLimiter:
    java.lang.Object newProxy(java.lang.Object,java.lang.Class,long,java.util.concurrent.TimeUnit) -> newProxy
    java.lang.Object callWithTimeout(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit,boolean) -> callWithTimeout
com.google.common.util.concurrent.UncaughtExceptionHandlers -> com.google.common.util.concurrent.UncaughtExceptionHandlers:
    java.lang.Thread$UncaughtExceptionHandler systemExit() -> systemExit
com.google.common.util.concurrent.UncaughtExceptionHandlers$Exiter -> yT:
    java.util.logging.Logger logger -> a
    java.lang.Runtime runtime -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.common.util.concurrent.UncheckedExecutionException -> com.google.common.util.concurrent.UncheckedExecutionException:
    long serialVersionUID -> serialVersionUID
com.google.common.util.concurrent.UncheckedTimeoutException -> com.google.common.util.concurrent.UncheckedTimeoutException:
    long serialVersionUID -> serialVersionUID
com.google.common.util.concurrent.Uninterruptibles -> com.google.common.util.concurrent.Uninterruptibles:
    void awaitUninterruptibly(java.util.concurrent.CountDownLatch) -> awaitUninterruptibly
    boolean awaitUninterruptibly(java.util.concurrent.CountDownLatch,long,java.util.concurrent.TimeUnit) -> awaitUninterruptibly
    void joinUninterruptibly(java.lang.Thread) -> joinUninterruptibly
    java.lang.Object getUninterruptibly(java.util.concurrent.Future) -> getUninterruptibly
    java.lang.Object getUninterruptibly(java.util.concurrent.Future,long,java.util.concurrent.TimeUnit) -> getUninterruptibly
    void joinUninterruptibly(java.lang.Thread,long,java.util.concurrent.TimeUnit) -> joinUninterruptibly
    java.lang.Object takeUninterruptibly(java.util.concurrent.BlockingQueue) -> takeUninterruptibly
    void putUninterruptibly(java.util.concurrent.BlockingQueue,java.lang.Object) -> putUninterruptibly
    void sleepUninterruptibly(long,java.util.concurrent.TimeUnit) -> sleepUninterruptibly
org.bwgz.android.common.ActivityItem -> org.bwgz.android.common.ActivityItem:
    java.lang.String title -> title
    java.lang.String description -> description
    java.lang.Class activity -> activity
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.Class getActivity() -> getActivity
    void setActivity(java.lang.Class) -> setActivity
    java.lang.String getLineOne() -> getLineOne
    java.lang.String getLineTwo() -> getLineTwo
org.bwgz.android.common.ActivityListActivity -> org.bwgz.android.common.ActivityListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.ActivityListActivity$1 -> org.bwgz.android.common.ActivityListActivity$1:
    org.bwgz.android.common.ActivityListActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.bwgz.android.common.TextActivity -> org.bwgz.android.common.TextActivity:
    java.lang.String TAG -> TAG
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    int getTextResId() -> getTextResId
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.TwoLineItem -> org.bwgz.android.common.TwoLineItem:
    java.lang.String getLineOne() -> getLineOne
    java.lang.String getLineTwo() -> getLineTwo
org.bwgz.android.common.TwoLineListActivity -> org.bwgz.android.common.TwoLineListActivity:
    android.widget.ListView listView -> listView
    java.util.List getList() -> getList
    android.widget.ListView getListView() -> getListView
    void setListView(android.widget.ListView) -> setListView
    android.widget.ArrayAdapter getAdapter() -> getAdapter
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.TwoLineListActivity$1 -> org.bwgz.android.common.TwoLineListActivity$1:
    org.bwgz.android.common.TwoLineListActivity this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.bwgz.android.common.sherlock.ActivityListActivity -> org.bwgz.android.common.sherlock.ActivityListActivity:
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.sherlock.ActivityListActivity$1 -> org.bwgz.android.common.sherlock.ActivityListActivity$1:
    org.bwgz.android.common.sherlock.ActivityListActivity this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.bwgz.android.common.sherlock.TextActivity -> org.bwgz.android.common.sherlock.TextActivity:
    java.lang.String TAG -> TAG
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    long copy(java.io.InputStream,java.io.OutputStream) -> copy
    int getTextResId() -> getTextResId
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.sherlock.TwoLineListActivity -> org.bwgz.android.common.sherlock.TwoLineListActivity:
    android.widget.ListView listView -> listView
    java.util.List getList() -> getList
    android.widget.ListView getListView() -> getListView
    void setListView(android.widget.ListView) -> setListView
    android.widget.ArrayAdapter getAdapter() -> getAdapter
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.common.sherlock.TwoLineListActivity$1 -> org.bwgz.android.common.sherlock.TwoLineListActivity$1:
    org.bwgz.android.common.sherlock.TwoLineListActivity this$0 -> this$0
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.bwgz.android.environment.DisplayActivity -> org.bwgz.android.environment.DisplayActivity:
    org.bwgz.android.environment.DisplayTwoLineList list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.DisplayTwoLineList -> org.bwgz.android.environment.DisplayTwoLineList:
    long serialVersionUID -> serialVersionUID
    java.lang.String getDensityString(int) -> getDensityString
org.bwgz.android.environment.EnvironmentActivity -> org.bwgz.android.environment.EnvironmentActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.EnvironmentTwoLineItem -> org.bwgz.android.environment.EnvironmentTwoLineItem:
    java.lang.String title -> title
    java.lang.String description -> description
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    java.lang.String getDescription() -> getDescription
    void setDescription(java.lang.String) -> setDescription
    java.lang.String getLineOne() -> getLineOne
    java.lang.String getLineTwo() -> getLineTwo
org.bwgz.android.environment.OperatingSystemActivity -> org.bwgz.android.environment.OperatingSystemActivity:
    org.bwgz.android.environment.OperatingSystemTwoLineList list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.OperatingSystemTwoLineList -> org.bwgz.android.environment.OperatingSystemTwoLineList:
    long serialVersionUID -> serialVersionUID
    int ICE_CREAM_SANDWICH_MR1 -> ICE_CREAM_SANDWICH_MR1
    int JELLY_BEAN -> JELLY_BEAN
    int JELLY_BEAN_MR1 -> JELLY_BEAN_MR1
    java.util.HashMap map -> map
    java.lang.String getSDKName(int) -> getSDKName
org.bwgz.android.environment.SystemActivity -> org.bwgz.android.environment.SystemActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.SystemTwoLineList -> org.bwgz.android.environment.SystemTwoLineList:
    long serialVersionUID -> serialVersionUID
org.bwgz.android.environment.sherlock.DisplayActivity -> org.bwgz.android.environment.sherlock.DisplayActivity:
    org.bwgz.android.environment.DisplayTwoLineList list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.sherlock.EnvironmentActivity -> org.bwgz.android.environment.sherlock.EnvironmentActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.sherlock.OperatingSystemActivity -> org.bwgz.android.environment.sherlock.OperatingSystemActivity:
    org.bwgz.android.environment.OperatingSystemTwoLineList list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.android.environment.sherlock.SystemActivity -> org.bwgz.android.environment.sherlock.SystemActivity:
    java.util.List list -> list
    java.util.List getList() -> getList
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.google.api.services.freebase.model.MqlReadResponse -> org.bwgz.google.api.services.freebase.model.MqlReadResponse:
    java.lang.Object cursor -> cursor
    java.lang.Integer cost -> cost
    java.lang.Object result -> result
    java.lang.Object getCursor() -> getCursor
    void setCursor(java.lang.Object) -> setCursor
    java.lang.Integer getCost() -> getCost
    void setCost(java.lang.Integer) -> setCost
    java.lang.Object getResult() -> getResult
    void setResult(java.lang.Object) -> setResult
org.bwgz.google.api.services.freebase.model.ValueType -> org.bwgz.google.api.services.freebase.model.ValueType:
    org.bwgz.google.api.services.freebase.model.ValueType FLOAT -> FLOAT
    org.bwgz.google.api.services.freebase.model.ValueType INT -> INT
    org.bwgz.google.api.services.freebase.model.ValueType BOOL -> BOOL
    org.bwgz.google.api.services.freebase.model.ValueType DATETIME -> DATETIME
    org.bwgz.google.api.services.freebase.model.ValueType URI -> URI
    org.bwgz.google.api.services.freebase.model.ValueType STRING -> STRING
    org.bwgz.google.api.services.freebase.model.ValueType OBJECT -> OBJECT
    org.bwgz.google.api.services.freebase.model.ValueType KEY -> KEY
    org.bwgz.google.api.services.freebase.model.ValueType COMPOUND -> COMPOUND
    java.lang.String key -> key
    org.bwgz.google.api.services.freebase.model.ValueType[] $VALUES -> $VALUES
    org.bwgz.google.api.services.freebase.model.ValueType[] values() -> values
    org.bwgz.google.api.services.freebase.model.ValueType valueOf(java.lang.String) -> valueOf
    java.lang.String getKey() -> getKey
org.bwgz.google.api.services.freebase.util.TopicUtil -> org.bwgz.google.api.services.freebase.util.TopicUtil:
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicValue,java.lang.String) -> getPropertyValue
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicPropertyvalue,int,java.lang.String) -> getPropertyValue
    java.util.List getPropertyValues(com.google.api.services.freebase.model.TopicPropertyvalue) -> getPropertyValues
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicLookup$Property,java.lang.String,int,java.lang.String) -> getPropertyValue
    java.util.List getPropertyValues(com.google.api.services.freebase.model.TopicLookup$Property,java.lang.String) -> getPropertyValues
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicLookup,java.lang.String,int,java.lang.String) -> getPropertyValue
    java.util.List getPropertyValues(com.google.api.services.freebase.model.TopicLookup,java.lang.String) -> getPropertyValues
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicPropertyvalue,int) -> getPropertyValue
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicLookup$Property,java.lang.String,int) -> getPropertyValue
    java.lang.Object getPropertyValue(com.google.api.services.freebase.model.TopicLookup,java.lang.String,int) -> getPropertyValue
    java.lang.Object getFirstPropertyValue(com.google.api.services.freebase.model.TopicLookup,java.lang.String) -> getFirstPropertyValue
    java.lang.String getPropertyValueType(com.google.api.services.freebase.model.TopicPropertyvalue) -> getPropertyValueType
    java.lang.String getPropertyValueType(com.google.api.services.freebase.model.TopicLookup$Property,java.lang.String) -> getPropertyValueType
    java.lang.String getPropertyValueType(com.google.api.services.freebase.model.TopicLookup,java.lang.String) -> getPropertyValueType
org.bwgz.google.freebase.cache.FreebaseCursorCache -> org.bwgz.google.freebase.cache.FreebaseCursorCache:
    org.bwgz.google.freebase.cache.FreebaseCursorCache instance -> instance
    java.util.List cursors -> cursors
    org.bwgz.google.freebase.cache.FreebaseCursorCache getInstance(java.io.InputStream) -> getInstance
    org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor search(java.util.List,int,int,int) -> search
    org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor getCursor(int) -> getCursor
    int getMaxResults() -> getMaxResults
org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor -> org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor:
    int offset -> offset
    int length -> length
    java.lang.String cursor -> cursor
    int getOffset() -> getOffset
    void setOffset(int) -> setOffset
    int getLength() -> getLength
    void setLength(int) -> setLength
    java.lang.String getCursor() -> getCursor
    void setCursor(java.lang.String) -> setCursor
org.bwgz.google.freebase.cache.QuotationMidCacheLoader -> org.bwgz.google.freebase.cache.QuotationMidCacheLoader:
    java.lang.String query -> query
    org.bwgz.google.freebase.cache.FreebaseCursorCache freebaseCursorCache -> freebaseCursorCache
    org.bwgz.google.freebase.client.FreebaseHelper freebaseHelper -> freebaseHelper
    java.lang.String getMid(java.lang.String,int) -> getMid
    java.lang.String getMid(org.bwgz.google.freebase.cache.FreebaseCursorCache$FreebaseCursor,int) -> getMid
    java.lang.String load(java.lang.Integer) -> load
    int getMaxResults() -> getMaxResults
    java.lang.Object load(java.lang.Object) -> load
org.bwgz.google.freebase.cache.QuotationMidCacheLoader$Quotation -> org.bwgz.google.freebase.cache.QuotationMidCacheLoader$Quotation:
    java.lang.String mid -> mid
    java.lang.String getMid() -> getMid
    void setMid(java.lang.String) -> setMid
org.bwgz.google.freebase.client.FreebaseHelper -> org.bwgz.google.freebase.client.FreebaseHelper:
    java.lang.String[] reasons -> reasons
    long KEY_PERIOD -> KEY_PERIOD
    long keyLastUsed -> keyLastUsed
    com.google.api.services.freebase.Freebase freebase -> freebase
    java.lang.String key -> key
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    boolean useKey() -> useKey
    boolean shouldRetryWithKey(com.google.api.client.googleapis.json.GoogleJsonResponseException) -> shouldRetryWithKey
    com.google.api.services.freebase.model.TopicLookup fetchTopic(java.lang.String,java.lang.String,java.lang.String[]) -> fetchTopic
    com.google.api.services.freebase.model.TopicLookup fetchTopic(java.lang.String,java.lang.String[]) -> fetchTopic
    byte[] fetchImage(java.lang.String,long,long) -> fetchImage
    org.bwgz.google.api.services.freebase.model.MqlReadResponse mqlRead(java.lang.String,java.lang.Class,java.lang.reflect.Type,java.lang.String) -> mqlRead
    com.google.api.services.freebase.Freebase getFreebase() -> getFreebase
    void setFreebase(com.google.api.services.freebase.Freebase) -> setFreebase
org.bwgz.google.freebase.client.FreebaseHelper$1 -> org.bwgz.google.freebase.client.FreebaseHelper$1:
    org.bwgz.google.freebase.client.FreebaseHelper this$0 -> this$0
    void initialize(com.google.api.client.http.HttpRequest) -> initialize
org.bwgz.google.freebase.client.HTTPStatusCode -> org.bwgz.google.freebase.client.HTTPStatusCode:
    org.bwgz.google.freebase.client.HTTPStatusCode OK -> OK
    org.bwgz.google.freebase.client.HTTPStatusCode CREATED -> CREATED
    org.bwgz.google.freebase.client.HTTPStatusCode ACCEPTED -> ACCEPTED
    org.bwgz.google.freebase.client.HTTPStatusCode NO_CONTENT -> NO_CONTENT
    org.bwgz.google.freebase.client.HTTPStatusCode MOVED_PERMANENTLY -> MOVED_PERMANENTLY
    org.bwgz.google.freebase.client.HTTPStatusCode SEE_OTHER -> SEE_OTHER
    org.bwgz.google.freebase.client.HTTPStatusCode NOT_MODIFIED -> NOT_MODIFIED
    org.bwgz.google.freebase.client.HTTPStatusCode TEMPORARY_REDIRECT -> TEMPORARY_REDIRECT
    org.bwgz.google.freebase.client.HTTPStatusCode BAD_REQUEST -> BAD_REQUEST
    org.bwgz.google.freebase.client.HTTPStatusCode UNAUTHORIZED -> UNAUTHORIZED
    org.bwgz.google.freebase.client.HTTPStatusCode FORBIDDEN -> FORBIDDEN
    org.bwgz.google.freebase.client.HTTPStatusCode NOT_FOUND -> NOT_FOUND
    org.bwgz.google.freebase.client.HTTPStatusCode NOT_ACCEPTABLE -> NOT_ACCEPTABLE
    org.bwgz.google.freebase.client.HTTPStatusCode CONFLICT -> CONFLICT
    org.bwgz.google.freebase.client.HTTPStatusCode GONE -> GONE
    org.bwgz.google.freebase.client.HTTPStatusCode PRECONDITION_FAILED -> PRECONDITION_FAILED
    org.bwgz.google.freebase.client.HTTPStatusCode UNSUPPORTED_MEDIA_TYPE -> UNSUPPORTED_MEDIA_TYPE
    org.bwgz.google.freebase.client.HTTPStatusCode INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    org.bwgz.google.freebase.client.HTTPStatusCode SERVICE_UNAVAILABLE -> SERVICE_UNAVAILABLE
    int code -> code
    java.lang.String reason -> reason
    org.bwgz.google.freebase.client.HTTPStatusCode$Family family -> family
    org.bwgz.google.freebase.client.HTTPStatusCode[] ENUM$VALUES -> ENUM$VALUES
    org.bwgz.google.freebase.client.HTTPStatusCode$Family getFamily() -> getFamily
    int getStatusCode() -> getStatusCode
    java.lang.String getReasonPhrase() -> getReasonPhrase
    java.lang.String toString() -> toString
    org.bwgz.google.freebase.client.HTTPStatusCode fromStatusCode(int) -> fromStatusCode
    org.bwgz.google.freebase.client.HTTPStatusCode[] values() -> values
    org.bwgz.google.freebase.client.HTTPStatusCode valueOf(java.lang.String) -> valueOf
org.bwgz.google.freebase.client.HTTPStatusCode$Family -> org.bwgz.google.freebase.client.HTTPStatusCode$Family:
    org.bwgz.google.freebase.client.HTTPStatusCode$Family INFORMATIONAL -> INFORMATIONAL
    org.bwgz.google.freebase.client.HTTPStatusCode$Family SUCCESSFUL -> SUCCESSFUL
    org.bwgz.google.freebase.client.HTTPStatusCode$Family REDIRECTION -> REDIRECTION
    org.bwgz.google.freebase.client.HTTPStatusCode$Family CLIENT_ERROR -> CLIENT_ERROR
    org.bwgz.google.freebase.client.HTTPStatusCode$Family SERVER_ERROR -> SERVER_ERROR
    org.bwgz.google.freebase.client.HTTPStatusCode$Family OTHER -> OTHER
    org.bwgz.google.freebase.client.HTTPStatusCode$Family[] ENUM$VALUES -> ENUM$VALUES
    org.bwgz.google.freebase.client.HTTPStatusCode$Family[] values() -> values
    org.bwgz.google.freebase.client.HTTPStatusCode$Family valueOf(java.lang.String) -> valueOf
org.bwgz.quotation.BuildConfig -> org.bwgz.quotation.BuildConfig:
    boolean DEBUG -> DEBUG
org.bwgz.quotation.R -> org.bwgz.quotation.R:
org.bwgz.quotation.R$anim -> org.bwgz.quotation.R$anim:
    int clockwise_refresh -> clockwise_refresh
org.bwgz.quotation.R$attr -> org.bwgz.quotation.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int verticalDivider -> verticalDivider
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
org.bwgz.quotation.R$bool -> org.bwgz.quotation.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
org.bwgz.quotation.R$color -> org.bwgz.quotation.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
org.bwgz.quotation.R$dimen -> org.bwgz.quotation.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
    int widget_margin -> widget_margin
org.bwgz.quotation.R$drawable -> org.bwgz.quotation.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
    int appwidget_bg -> appwidget_bg
    int appwidget_bg_clickable -> appwidget_bg_clickable
    int appwidget_bg_focused -> appwidget_bg_focused
    int appwidget_bg_pressed -> appwidget_bg_pressed
    int appwidget_button_center -> appwidget_button_center
    int appwidget_button_left -> appwidget_button_left
    int appwidget_button_right -> appwidget_button_right
    int appwidget_dark_bg -> appwidget_dark_bg
    int appwidget_dark_bg_clickable -> appwidget_dark_bg_clickable
    int appwidget_dark_bg_focused -> appwidget_dark_bg_focused
    int appwidget_dark_bg_pressed -> appwidget_dark_bg_pressed
    int appwidget_inner_focused_c -> appwidget_inner_focused_c
    int appwidget_inner_focused_l -> appwidget_inner_focused_l
    int appwidget_inner_focused_r -> appwidget_inner_focused_r
    int appwidget_inner_pressed_c -> appwidget_inner_pressed_c
    int appwidget_inner_pressed_l -> appwidget_inner_pressed_l
    int appwidget_inner_pressed_r -> appwidget_inner_pressed_r
    int content_new -> content_new
    int ic_launcher -> ic_launcher
    int light_feather_pen_035160_ -> light_feather_pen_035160_
    int navigation_refresh -> navigation_refresh
    int navigation_refresh_000 -> navigation_refresh_000
    int navigation_refresh_090 -> navigation_refresh_090
    int original_appwidget_bg_clickable -> original_appwidget_bg_clickable
    int person_placeholder -> person_placeholder
    int social_share -> social_share
org.bwgz.quotation.R$id -> org.bwgz.quotation.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int actionbar_new -> actionbar_new
    int actionbar_share -> actionbar_share
    int author -> author
    int description -> description
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int image -> image
    int large_quote_widget -> large_quote_widget
    int listMode -> listMode
    int normal -> normal
    int quote -> quote
    int quote_scroller -> quote_scroller
    int refresher -> refresher
    int settings -> settings
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int small_quote_widget -> small_quote_widget
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
org.bwgz.quotation.R$integer -> org.bwgz.quotation.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
org.bwgz.quotation.R$layout -> org.bwgz.quotation.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_layout -> abs__list_menu_item_layout
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int large_quote_widget -> large_quote_widget
    int quote_activity -> quote_activity
    int refresh_action_view -> refresh_action_view
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
    int small_quote_widget -> small_quote_widget
org.bwgz.quotation.R$menu -> org.bwgz.quotation.R$menu:
    int main_menu -> main_menu
org.bwgz.quotation.R$raw -> org.bwgz.quotation.R$raw:
    int attribution -> attribution
    int legal -> legal
    int termsofuse -> termsofuse
org.bwgz.quotation.R$string -> org.bwgz.quotation.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
    int actionbar_new -> actionbar_new
    int actionbar_share -> actionbar_share
    int app_name -> app_name
    int freebase_api_key -> freebase_api_key
    int large_widget_name -> large_widget_name
    int loading_quote -> loading_quote
    int loading_random_quote -> loading_random_quote
    int menu_attribution -> menu_attribution
    int menu_environment -> menu_environment
    int menu_settings -> menu_settings
    int menu_terms_of_use -> menu_terms_of_use
    int small_widget_name -> small_widget_name
    int unattributed_quote -> unattributed_quote
org.bwgz.quotation.R$style -> org.bwgz.quotation.R$style:
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
org.bwgz.quotation.R$styleable -> org.bwgz.quotation.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
org.bwgz.quotation.R$xml -> org.bwgz.quotation.R$xml:
    int authenticator -> authenticator
    int large_quote_widget -> large_quote_widget
    int settings -> settings
    int small_quote_widget -> small_quote_widget
    int syncadapter -> syncadapter
org.bwgz.quotation.activity.AttributionActivity -> org.bwgz.quotation.activity.AttributionActivity:
    int getTextResId() -> getTextResId
org.bwgz.quotation.activity.LegalActivity -> org.bwgz.quotation.activity.LegalActivity:
    int getTextResId() -> getTextResId
org.bwgz.quotation.activity.QuotationActivity -> org.bwgz.quotation.activity.QuotationActivity:
    java.lang.String TAG -> TAG
    java.lang.String INSTANCE_STATE_URI -> INSTANCE_STATE_URI
    org.bwgz.quotation.activity.QuotationFragment fragment -> fragment
    android.net.Uri uri -> uri
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void loadRandomQuote() -> loadRandomQuote
    void onLoadComplete(android.support.v4.content.Loader,android.database.Cursor) -> onLoadComplete
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
org.bwgz.quotation.activity.QuotationFragment -> org.bwgz.quotation.activity.QuotationFragment:
    java.lang.String TAG -> TAG
    java.lang.String authorsQuery -> authorsQuery
    int LOADER_ID_QUTOATION -> LOADER_ID_QUTOATION
    int LOADER_ID_AUTHOR -> LOADER_ID_AUTHOR
    int[] LOADER_IDS -> LOADER_IDS
    org.bwgz.quotation.activity.QuotationFragment$State state -> state
    org.bwgz.quotation.activity.QuotationFragment$LazyProgessHandler progressHandler -> progressHandler
    android.app.ProgressDialog progressDialog -> progressDialog
    android.net.Uri uri -> uri
    android.net.Uri getUri() -> getUri
    void setUri(android.net.Uri) -> setUri
    void updateQuotation(android.database.Cursor) -> updateQuotation
    java.lang.String generateCitation(java.lang.String,java.lang.String,java.lang.String) -> generateCitation
    void updateAuthors(android.database.Cursor) -> updateAuthors
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,android.database.Cursor) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    org.bwgz.quotation.activity.QuotationFragment$State access$1(org.bwgz.quotation.activity.QuotationFragment) -> access$1
    android.app.ProgressDialog access$2(org.bwgz.quotation.activity.QuotationFragment) -> access$2
org.bwgz.quotation.activity.QuotationFragment$LazyProgess -> org.bwgz.quotation.activity.QuotationFragment$LazyProgess:
    android.os.Handler handler -> handler
    org.bwgz.quotation.activity.QuotationFragment this$0 -> this$0
    void run() -> run
org.bwgz.quotation.activity.QuotationFragment$LazyProgessHandler -> org.bwgz.quotation.activity.QuotationFragment$LazyProgessHandler:
    org.bwgz.quotation.activity.QuotationFragment this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
org.bwgz.quotation.activity.QuotationFragment$State -> org.bwgz.quotation.activity.QuotationFragment$State:
    org.bwgz.quotation.activity.QuotationFragment$State LOADING -> LOADING
    org.bwgz.quotation.activity.QuotationFragment$State LOADED -> LOADED
    org.bwgz.quotation.activity.QuotationFragment$State[] ENUM$VALUES -> ENUM$VALUES
    org.bwgz.quotation.activity.QuotationFragment$State[] values() -> values
    org.bwgz.quotation.activity.QuotationFragment$State valueOf(java.lang.String) -> valueOf
org.bwgz.quotation.activity.SettingsActivity -> org.bwgz.quotation.activity.SettingsActivity:
    void addFragment() -> addFragment
    void addResource() -> addResource
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.quotation.activity.SettingsActivity$SettingsFragment -> org.bwgz.quotation.activity.SettingsActivity$SettingsFragment:
    void onCreate(android.os.Bundle) -> onCreate
org.bwgz.quotation.activity.TermsOfUseActivity -> org.bwgz.quotation.activity.TermsOfUseActivity:
    int getTextResId() -> getTextResId
org.bwgz.quotation.app.QuotationApplication -> org.bwgz.quotation.app.QuotationApplication:
    java.lang.String TAG -> TAG
    java.lang.String APPLICATION_PREFERENCES -> APPLICATION_PREFERENCES
    java.lang.String PREFERENCE_INITIALIZED -> PREFERENCE_INITIALIZED
    void onCreate() -> onCreate
org.bwgz.quotation.content.provider.AccountAuthenticatorService -> org.bwgz.quotation.content.provider.AccountAuthenticatorService:
    android.accounts.AbstractAccountAuthenticator accountAuthenticator -> accountAuthenticator
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
org.bwgz.quotation.content.provider.AccountAuthenticatorService$AccountAuthenticatorImpl -> org.bwgz.quotation.content.provider.AccountAuthenticatorService$AccountAuthenticatorImpl:
    android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String) -> editProperties
    android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle) -> addAccount
    android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle) -> confirmCredentials
    android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> getAuthToken
    java.lang.String getAuthTokenLabel(java.lang.String) -> getAuthTokenLabel
    android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle) -> updateCredentials
    android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[]) -> hasFeatures
org.bwgz.quotation.content.provider.QuotationAccount -> org.bwgz.quotation.content.provider.QuotationAccount:
    java.lang.String NAME -> NAME
    java.lang.String TYPE -> TYPE
org.bwgz.quotation.content.provider.QuotationContentProvider -> org.bwgz.quotation.content.provider.QuotationContentProvider:
    java.lang.String TAG -> TAG
    int QUEUE_CAPACITY -> QUEUE_CAPACITY
    java.util.concurrent.ArrayBlockingQueue queue -> queue
    org.bwgz.quotation.content.provider.RandomUriProducerTask randomUriProducerTask -> randomUriProducerTask
    org.bwgz.quotation.content.provider.QuotationContentProvider$EvictTask evictTask -> evictTask
    android.content.UriMatcher uriMatcher -> uriMatcher
    int QUOTATION -> QUOTATION
    int QUOTATION_ID -> QUOTATION_ID
    int QUOTATION_RANDOM -> QUOTATION_RANDOM
    int PERSON -> PERSON
    int PERSON_ID -> PERSON_ID
    int QUOTATION_PERSON -> QUOTATION_PERSON
    int PERSON_QUOTATION -> PERSON_QUOTATION
    int MAX_EVICTABLE_QUOTATIONS -> MAX_EVICTABLE_QUOTATIONS
    org.bwgz.quotation.content.provider.QuotationSQLiteHelper quotationSQLiteHelper -> quotationSQLiteHelper
    org.bwgz.google.freebase.client.FreebaseHelper freebaseHelper -> freebaseHelper
    void runEvictTask() -> runEvictTask
    void runRandomUriProducerTask() -> runRandomUriProducerTask
    android.net.Uri getRandomQuotationUri() -> getRandomQuotationUri
    boolean onCreate() -> onCreate
    java.lang.String getType(android.net.Uri) -> getType
    java.lang.String getTable(android.net.Uri) -> getTable
    boolean doSync(android.net.Uri) -> doSync
    android.content.ContentProviderResult[] applyBatch(java.util.ArrayList) -> applyBatch
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    java.lang.String access$0() -> access$0
org.bwgz.quotation.content.provider.QuotationContentProvider$EvictTask -> org.bwgz.quotation.content.provider.QuotationContentProvider$EvictTask:
    java.lang.String evictableQuotationsQuery -> evictableQuotationsQuery
    java.lang.String lowerQuotationsQuery -> lowerQuotationsQuery
    java.lang.String emptyAuthorsQuery -> emptyAuthorsQuery
    org.bwgz.quotation.content.provider.QuotationContentProvider this$0 -> this$0
    int getEvictableQuotations() -> getEvictableQuotations
    void run() -> run
org.bwgz.quotation.content.provider.QuotationContract -> org.bwgz.quotation.content.provider.QuotationContract:
    java.lang.String AUTHORITY -> AUTHORITY
    android.net.Uri AUTHORITY_URI -> AUTHORITY_URI
    java.lang.String DATABASE -> DATABASE
org.bwgz.quotation.content.provider.QuotationContract$CacheColumns -> org.bwgz.quotation.content.provider.QuotationContract$CacheColumns:
    java.lang.String EVICTABLE -> EVICTABLE
org.bwgz.quotation.content.provider.QuotationContract$CitationColumns -> org.bwgz.quotation.content.provider.QuotationContract$CitationColumns:
    java.lang.String CITATION_PROVIDER -> CITATION_PROVIDER
    java.lang.String CITATION_STATEMENT -> CITATION_STATEMENT
    java.lang.String CITATION_URI -> CITATION_URI
org.bwgz.quotation.content.provider.QuotationContract$LanguageColumns -> org.bwgz.quotation.content.provider.QuotationContract$LanguageColumns:
    java.lang.String LANGUAGE -> LANGUAGE
org.bwgz.quotation.content.provider.QuotationContract$Person -> org.bwgz.quotation.content.provider.QuotationContract$Person:
    java.lang.String TABLE -> TABLE
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEM_TYPE -> CONTENT_ITEM_TYPE
    android.net.Uri withAppendedId(java.lang.String) -> withAppendedId
    java.lang.String getId(java.lang.String) -> getId
    java.lang.String getId(android.net.Uri) -> getId
org.bwgz.quotation.content.provider.QuotationContract$PersonColumns -> org.bwgz.quotation.content.provider.QuotationContract$PersonColumns:
    java.lang.String NAME -> NAME
    java.lang.String DESCRIPTION -> DESCRIPTION
    java.lang.String IMAGE -> IMAGE
org.bwgz.quotation.content.provider.QuotationContract$Quotation -> org.bwgz.quotation.content.provider.QuotationContract$Quotation:
    java.lang.String TABLE -> TABLE
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEM_TYPE -> CONTENT_ITEM_TYPE
    android.net.Uri withAppendedId(java.lang.String) -> withAppendedId
    java.lang.String getId(java.lang.String) -> getId
    java.lang.String getId(android.net.Uri) -> getId
org.bwgz.quotation.content.provider.QuotationContract$QuotationColumns -> org.bwgz.quotation.content.provider.QuotationContract$QuotationColumns:
    java.lang.String QUOTATION -> QUOTATION
org.bwgz.quotation.content.provider.QuotationContract$QuotationPerson -> org.bwgz.quotation.content.provider.QuotationContract$QuotationPerson:
    java.lang.String TABLE -> TABLE
    android.net.Uri CONTENT_URI -> CONTENT_URI
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_ITEM_TYPE -> CONTENT_ITEM_TYPE
    android.net.Uri withAppendedId(java.lang.String) -> withAppendedId
    java.lang.String getId(java.lang.String) -> getId
    java.lang.String getId(android.net.Uri) -> getId
org.bwgz.quotation.content.provider.QuotationContract$QuotationPersonColumns -> org.bwgz.quotation.content.provider.QuotationContract$QuotationPersonColumns:
    java.lang.String QUOTATION_ID -> QUOTATION_ID
    java.lang.String PERSON_ID -> PERSON_ID
org.bwgz.quotation.content.provider.QuotationContract$StatusColumns -> org.bwgz.quotation.content.provider.QuotationContract$StatusColumns:
    java.lang.String MODIFIED -> MODIFIED
org.bwgz.quotation.content.provider.QuotationSQLiteHelper -> org.bwgz.quotation.content.provider.QuotationSQLiteHelper:
    java.lang.String TAG -> TAG
    java.lang.String QUOTATION_CREATE -> QUOTATION_CREATE
    java.lang.String PERSON_CREATE -> PERSON_CREATE
    java.lang.String QUOTATION_PERSON_CREATE -> QUOTATION_PERSON_CREATE
    java.lang.String[] tables -> tables
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    long insert(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues) -> insert
    long insert(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues,boolean) -> insert
    int update(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[]) -> delete
    java.lang.String access$0() -> access$0
org.bwgz.quotation.content.provider.QuotationSQLiteHelper$InitializeDatabaseTask -> org.bwgz.quotation.content.provider.QuotationSQLiteHelper$InitializeDatabaseTask:
    java.lang.String COMMON_TYPE_DESCRIPTION -> COMMON_TYPE_DESCRIPTION
    java.lang.String PEOPLE_PERSON_QUOTATIONS -> PEOPLE_PERSON_QUOTATIONS
    java.lang.String TYPE_OBJECT_NAME -> TYPE_OBJECT_NAME
    org.bwgz.quotation.content.provider.QuotationSQLiteHelper this$0 -> this$0
    void initialize(android.database.sqlite.SQLiteDatabase) -> initialize
    java.lang.Void doInBackground(android.database.sqlite.SQLiteDatabase[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.bwgz.quotation.content.provider.QuotationSyncAdapter -> org.bwgz.quotation.content.provider.QuotationSyncAdapter:
    java.lang.String TAG -> TAG
    java.lang.String TYPE_OBJECT_NAME -> TYPE_OBJECT_NAME
    java.lang.String COMMON_TOPIC_DESCRIPTION -> COMMON_TOPIC_DESCRIPTION
    java.lang.String COMMON_TOPIC_IMAGE -> COMMON_TOPIC_IMAGE
    java.lang.String PEOPLE_PERSON_QUOTATIONS -> PEOPLE_PERSON_QUOTATIONS
    java.lang.String MEDIA_COMMON_QUOTATION_AUTHOR -> MEDIA_COMMON_QUOTATION_AUTHOR
    java.lang.String[] personFilters -> personFilters
    java.lang.String[] quotationFilters -> quotationFilters
    java.lang.String SYNC_EXTRAS_URI -> SYNC_EXTRAS_URI
    org.bwgz.google.freebase.client.FreebaseHelper freebaseHelper -> freebaseHelper
    android.content.ContentProviderOperation$Builder createQuotationNewInsertBuilder(java.lang.String,java.lang.String,java.lang.String) -> createQuotationNewInsertBuilder
    android.content.ContentProviderOperation$Builder createPersonNewInsertBuilder(java.lang.String,java.lang.String,byte[],java.lang.String,com.google.api.services.freebase.model.TopicValue$Citation,java.lang.String) -> createPersonNewInsertBuilder
    android.content.ContentProviderOperation$Builder createQuotationPersonNewInsertBuilder(java.lang.String,java.lang.String) -> createQuotationPersonNewInsertBuilder
    java.util.ArrayList createQuotationContentProviderOperationList(android.net.Uri) -> createQuotationContentProviderOperationList
    java.util.ArrayList createPersonContentProviderOperationList(android.net.Uri) -> createPersonContentProviderOperationList
    void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult) -> onPerformSync
org.bwgz.quotation.content.provider.QuotationSyncService -> org.bwgz.quotation.content.provider.QuotationSyncService:
    java.lang.String TAG -> TAG
    android.content.AbstractThreadedSyncAdapter syncAdapter -> syncAdapter
    void onCreate() -> onCreate
    android.os.IBinder onBind(android.content.Intent) -> onBind
org.bwgz.quotation.content.provider.RandomUriProducer -> org.bwgz.quotation.content.provider.RandomUriProducer:
    java.lang.String TAG -> TAG
    java.util.Random random -> random
    android.content.Context context -> context
    org.bwgz.google.freebase.cache.QuotationMidCacheLoader midLoader -> midLoader
    com.google.common.cache.LoadingCache midCache -> midCache
    java.lang.String getNextIdFromFreebase() -> getNextIdFromFreebase
    java.lang.String getNextIdFromDatabase() -> getNextIdFromDatabase
    java.lang.String getNextIdFromDatabaseWithRetry(int,long) -> getNextIdFromDatabaseWithRetry
    android.net.Uri getNextUri() -> getNextUri
org.bwgz.quotation.content.provider.RandomUriProducerTask -> org.bwgz.quotation.content.provider.RandomUriProducerTask:
    java.lang.String TAG -> TAG
    android.content.Context context -> context
    org.bwgz.quotation.content.provider.RandomUriProducer producer -> producer
    java.lang.Void doInBackground(java.util.concurrent.ArrayBlockingQueue[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
org.bwgz.quotation.widget.LargeQuoteWidgetProvider -> org.bwgz.quotation.widget.LargeQuoteWidgetProvider:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
org.bwgz.quotation.widget.QuoteWidgetService -> org.bwgz.quotation.widget.QuoteWidgetService:
    java.lang.String TAG -> TAG
    java.lang.String authorsQuery -> authorsQuery
    java.lang.String ACTION_UPDATE_WIDGETS -> ACTION_UPDATE_WIDGETS
    java.lang.String ACTION_REFRESH_WIDGET -> ACTION_REFRESH_WIDGET
    java.lang.String EXTRA_UPDATE_LAYOUT_ID -> EXTRA_UPDATE_LAYOUT_ID
    java.lang.String EXTRA_UPDATE_WIDGET_IDS -> EXTRA_UPDATE_WIDGET_IDS
    java.lang.String getQuotation(int,int,android.net.Uri) -> getQuotation
    java.lang.String getAuthor(android.net.Uri) -> getAuthor
    android.graphics.Bitmap getImage(android.net.Uri) -> getImage
    android.net.Uri getRandomQuotationUri() -> getRandomQuotationUri
    void updateWidget(int,int,android.net.Uri,java.lang.String,java.lang.String,android.graphics.Bitmap) -> updateWidget
    void onUpdate(android.appwidget.AppWidgetManager,int,int) -> onUpdate
    void onUpdate(android.appwidget.AppWidgetManager,int,int[]) -> onUpdate
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onHandleIntent(android.content.Intent) -> onHandleIntent
org.bwgz.quotation.widget.QuoteWidgetService$CursorContentObserver -> org.bwgz.quotation.widget.QuoteWidgetService$CursorContentObserver:
    boolean hasChanged -> hasChanged
    boolean selfChange -> selfChange
    void onChange(boolean) -> onChange
    boolean hasChanged(long) -> hasChanged
    boolean hasChanged() -> hasChanged
    void resetStatus() -> resetStatus
    boolean getSelfChangeState() -> getSelfChangeState
    void setSelfChangeState(boolean) -> setSelfChangeState
org.bwgz.quotation.widget.SmallQuoteWidgetProvider -> org.bwgz.quotation.widget.SmallQuoteWidgetProvider:
    java.lang.String TAG -> TAG
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl -> sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl:
    java.lang.reflect.Type[] actualTypeArguments -> a
    java.lang.Class rawType -> b
    java.lang.reflect.Type ownerType -> c
    void validateConstructorArguments() -> a
    sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl make(java.lang.Class,java.lang.reflect.Type[],java.lang.reflect.Type) -> make
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.Class getRawType() -> getRawType
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.lang.reflect.Type getRawType() -> getRawType
